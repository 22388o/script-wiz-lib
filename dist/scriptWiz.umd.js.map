{"version":3,"sources":["webpack://[name]/webpack/bootstrap","webpack://[name]/./node_modules/buffer/index.js","webpack://[name]/./node_modules/bcrypto/lib/internal/assert.js","webpack://[name]/./node_modules/crypto-js/core.js","webpack://[name]/./node_modules/bcrypto/lib/internal/hmac.js","webpack://[name]/./node_modules/crypto-js/cipher-core.js","webpack://[name]/./node_modules/bcrypto/lib/random-browser.js","webpack://[name]/./node_modules/@script-wiz/wiz-data/index.js","webpack://[name]/./node_modules/bcrypto/lib/bn-browser.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/utils.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/pem.js","webpack://[name]/./node_modules/hash.js/lib/hash/utils.js","webpack://[name]/./node_modules/bcrypto/lib/sha256-browser.js","webpack://[name]/./node_modules/elliptic/node_modules/bn.js/lib/bn.js","webpack://[name]/(webpack)/buildin/global.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/asn1.js","webpack://[name]/./node_modules/crypto-js/evpkdf.js","webpack://[name]/./node_modules/minimalistic-assert/index.js","webpack://[name]/./src/utils/index.ts","webpack://[name]/./node_modules/bcrypto/lib/keccak-browser.js","webpack://[name]/./node_modules/crypto-js/enc-base64.js","webpack://[name]/./node_modules/crypto-js/md5.js","webpack://[name]/./node_modules/bufio/lib/enforce.js","webpack://[name]/./node_modules/bcrypto/lib/js/ecdsa.js","webpack://[name]/./node_modules/hash.js/lib/hash/common.js","webpack://[name]/./node_modules/bcrypto/lib/sha512-browser.js","webpack://[name]/./node_modules/bcrypto/lib/blake2b-browser.js","webpack://[name]/./node_modules/bcrypto/lib/blake2s-browser.js","webpack://[name]/./node_modules/bcrypto/lib/secretbox-browser.js","webpack://[name]/./node_modules/bufio/lib/error.js","webpack://[name]/./node_modules/bcrypto/lib/sha3-browser.js","webpack://[name]/./src/core/crypto.ts","webpack://[name]/./node_modules/crypto-js/x64-core.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/curve/base.js","webpack://[name]/./node_modules/inherits/inherits_browser.js","webpack://[name]/./node_modules/bn.js/lib/bn.js","webpack://[name]/./node_modules/bcrypto/lib/js/elliptic.js","webpack://[name]/./node_modules/bcrypto/lib/cipher-browser.js","webpack://[name]/./node_modules/bcrypto/lib/cshake.js","webpack://[name]/./node_modules/bcrypto/lib/js/sha256.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/util.js","webpack://[name]/./node_modules/bcrypto/lib/shake256.js","webpack://[name]/./node_modules/bufio/lib/encoding.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/base64-browser.js","webpack://[name]/./node_modules/crypto-js/sha1.js","webpack://[name]/./node_modules/crypto-js/hmac.js","webpack://[name]/(webpack)/buildin/module.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/curves.js","webpack://[name]/./node_modules/hash.js/lib/hash.js","webpack://[name]/./node_modules/bcrypto/lib/js/ciphers/aes.js","webpack://[name]/./node_modules/bcrypto/lib/hmac-drbg-browser.js","webpack://[name]/./node_modules/bcrypto/lib/internal/asn1.js","webpack://[name]/./node_modules/bcrypto/lib/js/batch-rng.js","webpack://[name]/./node_modules/bcrypto/lib/shake.js","webpack://[name]/./node_modules/bufio/lib/bufio.js","webpack://[name]/./node_modules/bcrypto/lib/md5-browser.js","webpack://[name]/./node_modules/bcrypto/lib/kmac.js","webpack://[name]/./node_modules/bcrypto/lib/sha384-browser.js","webpack://[name]/./src/opcodes/model/VM.ts","webpack://[name]/./src/opcodes/BITCOIN_SEGWIT.ts","webpack://[name]/./src/index.ts","webpack://[name]/./node_modules/crypto-js/sha256.js","webpack://[name]/./node_modules/crypto-js/sha512.js","webpack://[name]/./node_modules/minimalistic-crypto-utils/lib/utils.js","webpack://[name]/./node_modules/brorand/index.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/curve/index.js","webpack://[name]/./node_modules/hash.js/lib/hash/sha/common.js","webpack://[name]/./node_modules/hash.js/lib/hash/sha/256.js","webpack://[name]/./node_modules/hash.js/lib/hash/sha/512.js","webpack://[name]/./src/taproot/index.ts","webpack://[name]/./src/core/conversion.ts","webpack://[name]/./src/opcodes/common.ts","webpack://[name]/./node_modules/bcrypto/lib/bcrypto.js","webpack://[name]/./node_modules/bcrypto/lib/js/chacha20.js","webpack://[name]/./node_modules/bcrypto/lib/js/poly1305.js","webpack://[name]/./node_modules/bcrypto/lib/js/ciphers/modes.js","webpack://[name]/./node_modules/bcrypto/lib/bcrypt-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/sha512.js","webpack://[name]/./node_modules/bcrypto/lib/js/ciphers/blowfish.js","webpack://[name]/./node_modules/bcrypto/lib/internal/custom-browser.js","webpack://[name]/./node_modules/assert/assert.js","webpack://[name]/./node_modules/process/browser.js","webpack://[name]/./node_modules/bcrypto/lib/salsa20-browser.js","webpack://[name]/./node_modules/bcrypto/lib/poly1305-browser.js","webpack://[name]/./node_modules/bcrypto/lib/x25519-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/ecdh.js","webpack://[name]/./node_modules/bcrypto/lib/chacha20-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/keccak.js","webpack://[name]/./node_modules/bcrypto/lib/dsa-browser.js","webpack://[name]/./node_modules/bcrypto/lib/internal/primes.js","webpack://[name]/./node_modules/bcrypto/lib/eb2k-browser.js","webpack://[name]/./node_modules/bcrypto/lib/ed25519-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/eddsa.js","webpack://[name]/./node_modules/bufio/lib/custom-browser.js","webpack://[name]/./node_modules/bufio/lib/reader.js","webpack://[name]/./node_modules/bufio/lib/writer.js","webpack://[name]/./node_modules/bufio/lib/staticwriter.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/lines.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/openssl.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/pemcrypt.js","webpack://[name]/./node_modules/bcrypto/lib/js/md5.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/pkcs1.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/x509.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/sec1.js","webpack://[name]/./node_modules/bcrypto/lib/js/ripemd160.js","webpack://[name]/./node_modules/bcrypto/lib/js/sha1.js","webpack://[name]/./node_modules/bcrypto/lib/p256-browser.js","webpack://[name]/./node_modules/bcrypto/lib/p384-browser.js","webpack://[name]/./node_modules/bcrypto/lib/p521-browser.js","webpack://[name]/./node_modules/bcrypto/lib/pbkdf2-browser.js","webpack://[name]/./node_modules/bcrypto/lib/sha1-browser.js","webpack://[name]/./node_modules/bcrypto/lib/ripemd160-browser.js","webpack://[name]/./node_modules/bcrypto/lib/sha224-browser.js","webpack://[name]/./node_modules/bcrypto/lib/rsa-browser.js","webpack://[name]/./node_modules/bcrypto/lib/safe.js","webpack://[name]/./src/opcodes/LIQUID_SEGWIT.ts","webpack://[name]/./src/scriptWiz/compileAll.ts","webpack://[name]/./node_modules/base64-js/index.js","webpack://[name]/./node_modules/ieee754/index.js","webpack://[name]/./node_modules/isarray/index.js","webpack://[name]/./node_modules/crypto-js/index.js","webpack://[name]/./node_modules/crypto-js/lib-typedarrays.js","webpack://[name]/./node_modules/crypto-js/enc-utf16.js","webpack://[name]/./node_modules/crypto-js/enc-base64url.js","webpack://[name]/./node_modules/crypto-js/sha224.js","webpack://[name]/./node_modules/crypto-js/sha384.js","webpack://[name]/./node_modules/crypto-js/sha3.js","webpack://[name]/./node_modules/crypto-js/ripemd160.js","webpack://[name]/./node_modules/crypto-js/pbkdf2.js","webpack://[name]/./node_modules/crypto-js/mode-cfb.js","webpack://[name]/./node_modules/crypto-js/mode-ctr.js","webpack://[name]/./node_modules/crypto-js/mode-ctr-gladman.js","webpack://[name]/./node_modules/crypto-js/mode-ofb.js","webpack://[name]/./node_modules/crypto-js/mode-ecb.js","webpack://[name]/./node_modules/crypto-js/pad-ansix923.js","webpack://[name]/./node_modules/crypto-js/pad-iso10126.js","webpack://[name]/./node_modules/crypto-js/pad-iso97971.js","webpack://[name]/./node_modules/crypto-js/pad-zeropadding.js","webpack://[name]/./node_modules/crypto-js/pad-nopadding.js","webpack://[name]/./node_modules/crypto-js/format-hex.js","webpack://[name]/./node_modules/crypto-js/aes.js","webpack://[name]/./node_modules/crypto-js/tripledes.js","webpack://[name]/./node_modules/crypto-js/rc4.js","webpack://[name]/./node_modules/crypto-js/rabbit.js","webpack://[name]/./node_modules/crypto-js/rabbit-legacy.js","webpack://[name]/./node_modules/elliptic/lib/elliptic.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/curve/short.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/curve/mont.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/curve/edwards.js","webpack://[name]/./node_modules/hash.js/lib/hash/sha.js","webpack://[name]/./node_modules/hash.js/lib/hash/sha/1.js","webpack://[name]/./node_modules/hash.js/lib/hash/sha/224.js","webpack://[name]/./node_modules/hash.js/lib/hash/sha/384.js","webpack://[name]/./node_modules/hash.js/lib/hash/ripemd.js","webpack://[name]/./node_modules/hash.js/lib/hash/hmac.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/ec/index.js","webpack://[name]/./node_modules/hmac-drbg/lib/hmac-drbg.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/ec/key.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/ec/signature.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/eddsa/index.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/eddsa/key.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/eddsa/signature.js","webpack://[name]/./node_modules/big-integer/BigInteger.js","webpack://[name]/./src/bech32/segwit_addr.ts","webpack://[name]/./src/bech32/bech32.ts","webpack://[name]/./node_modules/bcrypto/lib/aead-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/aead.js","webpack://[name]/./node_modules/bcrypto/lib/aes-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/aes.js","webpack://[name]/./node_modules/bcrypto/lib/js/ciphers/ghash.js","webpack://[name]/./node_modules/bcrypto/lib/arc4-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/arc4.js","webpack://[name]/./node_modules/bcrypto/lib/js/bcrypt.js","webpack://[name]/./node_modules/bcrypto/lib/js/blake2b.js","webpack://[name]/./node_modules/bcrypto/lib/blake2b160.js","webpack://[name]/./node_modules/bcrypto/lib/blake2b256.js","webpack://[name]/./node_modules/bcrypto/lib/blake2b384.js","webpack://[name]/./node_modules/bcrypto/lib/blake2b512.js","webpack://[name]/./node_modules/bcrypto/lib/js/blake2s.js","webpack://[name]/./node_modules/bcrypto/lib/blake2s128.js","webpack://[name]/./node_modules/bcrypto/lib/blake2s160.js","webpack://[name]/./node_modules/bcrypto/lib/blake2s224.js","webpack://[name]/./node_modules/bcrypto/lib/blake2s256.js","webpack://[name]/./node_modules/bcrypto/lib/js/bn.js","webpack://[name]/./node_modules/bcrypto/lib/box.js","webpack://[name]/./node_modules/object-assign/index.js","webpack://[name]/./node_modules/util/util.js","webpack://[name]/./node_modules/util/support/isBufferBrowser.js","webpack://[name]/./node_modules/util/node_modules/inherits/inherits_browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/secretbox.js","webpack://[name]/./node_modules/bcrypto/lib/js/salsa20.js","webpack://[name]/./node_modules/bcrypto/lib/js/random.js","webpack://[name]/./node_modules/bcrypto/lib/js/x25519.js","webpack://[name]/./node_modules/bcrypto/lib/js/cipher.js","webpack://[name]/./node_modules/bcrypto/lib/js/ciphers/arc2.js","webpack://[name]/./node_modules/bcrypto/lib/js/ciphers/camellia.js","webpack://[name]/./node_modules/bcrypto/lib/js/ciphers/cast5.js","webpack://[name]/./node_modules/bcrypto/lib/js/ciphers/des.js","webpack://[name]/./node_modules/bcrypto/lib/js/ciphers/idea.js","webpack://[name]/./node_modules/bcrypto/lib/js/ciphers/serpent.js","webpack://[name]/./node_modules/bcrypto/lib/js/ciphers/twofish.js","webpack://[name]/./node_modules/bcrypto/lib/cleanse-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/cleanse.js","webpack://[name]/./node_modules/bcrypto/lib/cshake128.js","webpack://[name]/./node_modules/bcrypto/lib/cshake256.js","webpack://[name]/./node_modules/bcrypto/lib/ctr-drbg-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/ctr-drbg.js","webpack://[name]/./node_modules/bcrypto/lib/js/dsa.js","webpack://[name]/./node_modules/bcrypto/lib/js/hmac-drbg.js","webpack://[name]/./node_modules/bcrypto/lib/dsaies.js","webpack://[name]/./node_modules/bcrypto/lib/js/eb2k.js","webpack://[name]/./node_modules/bcrypto/lib/ecies.js","webpack://[name]/./node_modules/bcrypto/lib/js/ed25519.js","webpack://[name]/./node_modules/bcrypto/lib/ed448-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/ed448.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/index.js","webpack://[name]/./node_modules/bufio/lib/struct.js","webpack://[name]/./node_modules/bcrypto/lib/internal/objects.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/base16-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/base16.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/base32-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/base32.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/base58-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/base58.js","webpack://[name]/./node_modules/bcrypto/lib/js/base64.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/bech32-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/bech32.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/cash32-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/cash32.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/pkcs3.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/pkcs5.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/pkcs8.js","webpack://[name]/./node_modules/bcrypto/lib/encoding/rfc3279.js","webpack://[name]/./node_modules/bcrypto/lib/gost94-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/gost94.js","webpack://[name]/./node_modules/bcrypto/lib/hash160-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/hash160.js","webpack://[name]/./node_modules/bcrypto/lib/hash256-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/hash256.js","webpack://[name]/./node_modules/bcrypto/lib/hash-drbg-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/hash-drbg.js","webpack://[name]/./node_modules/bcrypto/lib/hkdf-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/hkdf.js","webpack://[name]/./node_modules/bcrypto/lib/keccak224.js","webpack://[name]/./node_modules/bcrypto/lib/keccak256.js","webpack://[name]/./node_modules/bcrypto/lib/keccak384.js","webpack://[name]/./node_modules/bcrypto/lib/keccak512.js","webpack://[name]/./node_modules/bcrypto/lib/kmac128.js","webpack://[name]/./node_modules/bcrypto/lib/kmac256.js","webpack://[name]/./node_modules/bcrypto/lib/md2-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/md2.js","webpack://[name]/./node_modules/bcrypto/lib/md4-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/md4.js","webpack://[name]/./node_modules/bcrypto/lib/md5sha1-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/md5sha1.js","webpack://[name]/./node_modules/bcrypto/lib/merkle.js","webpack://[name]/./node_modules/bcrypto/lib/mrkl.js","webpack://[name]/./node_modules/bcrypto/lib/murmur3-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/murmur3.js","webpack://[name]/./node_modules/bcrypto/lib/p192-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/p192.js","webpack://[name]/./node_modules/bcrypto/lib/js/schnorr-legacy.js","webpack://[name]/./node_modules/bcrypto/lib/p224-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/p224.js","webpack://[name]/./node_modules/bcrypto/lib/js/p256.js","webpack://[name]/./node_modules/bcrypto/lib/js/p384.js","webpack://[name]/./node_modules/bcrypto/lib/js/sha384.js","webpack://[name]/./node_modules/bcrypto/lib/js/p521.js","webpack://[name]/./node_modules/bcrypto/lib/js/pbkdf2.js","webpack://[name]/./node_modules/bcrypto/lib/pgp.js","webpack://[name]/./node_modules/bcrypto/lib/js/sha224.js","webpack://[name]/./node_modules/bcrypto/lib/internal/pgpdf-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/pgpdf.js","webpack://[name]/./node_modules/bcrypto/lib/js/rsa.js","webpack://[name]/./node_modules/bcrypto/lib/rsaies.js","webpack://[name]/./node_modules/bcrypto/lib/schnorr-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/schnorr.js","webpack://[name]/./node_modules/bcrypto/lib/scrypt-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/scrypt.js","webpack://[name]/./node_modules/timers-browserify/main.js","webpack://[name]/./node_modules/setimmediate/setImmediate.js","webpack://[name]/./node_modules/bcrypto/lib/secp256k1-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/secp256k1.js","webpack://[name]/./node_modules/bcrypto/lib/ssh.js","webpack://[name]/./node_modules/bcrypto/lib/js/sha3.js","webpack://[name]/./node_modules/bcrypto/lib/sha3-224.js","webpack://[name]/./node_modules/bcrypto/lib/sha3-256.js","webpack://[name]/./node_modules/bcrypto/lib/sha3-384.js","webpack://[name]/./node_modules/bcrypto/lib/sha3-512.js","webpack://[name]/./node_modules/bcrypto/lib/shake128.js","webpack://[name]/./node_modules/bcrypto/lib/siphash-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/siphash.js","webpack://[name]/./node_modules/bcrypto/lib/whirlpool-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/whirlpool.js","webpack://[name]/./node_modules/bcrypto/lib/x448-browser.js","webpack://[name]/./node_modules/bcrypto/lib/js/x448.js","webpack://[name]/./src/scriptWiz/index.ts","webpack://[name]/./src/opcodes/index.ts","webpack://[name]/./src/opcodes/BITCOIN_TAPSCRIPT.ts","webpack://[name]/./src/opcodes/LIQUID_TAPSCRIPT.ts","webpack://[name]/./src/scriptWiz/parse.ts","webpack://[name]/./src/scriptWiz/opFunctions.ts","webpack://[name]/./src/core/arithmetics.ts","webpack://[name]/./src/core/bitwise.ts","webpack://[name]/./src/core/arithmetics64.ts","webpack://[name]/./src/core/flow.ts","webpack://[name]/./src/core/locktime.ts","webpack://[name]/./src/core/splices.ts","webpack://[name]/./src/core/stacks.ts","webpack://[name]/./src/core/introspection.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","this","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","type","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","assert","msg","err","captureStackTrace","CryptoJS","crypto","window","self","globalThis","msCrypto","cryptoSecureRandomInt","getRandomValues","Uint32Array","randomBytes","F","subtype","C","C_lib","lib","Base","extend","overrides","mixIn","init","$super","instance","properties","propertyName","clone","WordArray","words","sigBytes","encoder","Hex","stringify","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","ceil","random","nBytes","C_enc","enc","hexChars","bite","parse","hexStr","hexStrLength","Latin1","latin1Chars","latin1Str","latin1StrLength","Utf8","decodeURIComponent","escape","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","doFlush","processedWords","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","_minBufferSize","nBytesReady","_doProcessBlock","splice","C_algo","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","message","_createHmacHelper","HMAC","algo","Hash","hash","inner","outer","h","final","pad","Base64","EvpKDF","Cipher","C_mode","BlockCipherMode","CBC","Pkcs7","CipherParams","OpenSSLFormatter","SerializableCipher","OpenSSLKdf","PasswordBasedCipher","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","xformMode","_xformMode","_key","process","dataUpdate","keySize","ivSize","selectCipherStrategy","cipher","encrypt","decrypt","ciphertext","StreamCipher","iv","Encryptor","Decryptor","_cipher","_iv","xorBlock","block","_prevBlock","processBlock","encryptBlock","thisBlock","decryptBlock","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","padding","unpad","BlockCipher","modeCreator","_mode","__creator","finalProcessedBlocks","cipherParams","formatter","format","OpenSSL","salt","openSSLStr","ciphertextWords","encryptor","cipherCfg","algorithm","_parse","kdf","execute","password","compute","derivedParams","default","hexBoundaries","hexToBytes","hexLE","hexFixBytes","padStart","test","bytesToHex","reverse","map","minPos","maxPos","minNeg","maxNeg","MAX_INTEGER","bytesToBin","bytesToNumber","bytesToString","reduce","u","numberIsValid","numberToBytes","log","numeral","nextValue","WizData","f","v","binToBytes","stringToBytes","input","bin","hex","number","text","fromHex","fromBin","fromNumber","fromText","fromBytes","binFixBytes","utils","BN","minAssert","minUtils","toArray","zero2","encode","getNAF","num","w","bits","naf","bitLength","ws","k","z","mod","andln","isOdd","isubn","iushrn","getJSF","k1","k2","jsf","m8","d1","d2","cmpn","u1","u2","m14","m24","cachedProperty","computer","parseBytes","intFromLE","lines","EMPTY","PEMBlock","headers","Map","armor","it","decode","next","done","hdr","ProcType","version","state","proc","delete","DEKInfo","info","getProcType","toUpperCase","parts","split","word","ch","parseU32","substring","crc","crc24","chunk","line","index","preamble","toPEM","fromPEM","inherits","isSurrogatePair","htonl","zero8","toHex32","endian","join32","split32","rotr32","rotl32","sum32","sum32_3","sum32_4","sum32_5","sum64","ah","al","bh","sum64_hi","bl","sum64_lo","sum64_4_hi","cl","dh","dl","carry","sum64_4_lo","sum64_5_hi","eh","el","sum64_5_lo","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","ctor","superCtor","super_","TempCtor","constructor","base","isBN","negative","red","_init","wordSize","parseHex4Bits","parseHexByte","lowerBound","parseBase","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","off","strip","limbLen","limbPow","total","imuln","_iaddn","dest","_expand","_normSign","zeros","groupSizes","groupBases","smallMulTo","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","toNumber","toBuffer","toArrayLike","ArrayType","reqLength","q","clz32","_countBits","_zeroBits","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","D","g","isEven","yp","xp","im","jm","gcd","_invmp","x1","x2","delta","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","_strip","output","outLen","prev","mod3","one","nOne","lpow","inv","wnd","current","currentLen","mont","Function","bio","objects","ZERO","EMPTY_OID","types","BOOLEAN","INTEGER","BITSTRING","OCTSTRING","NULL","OID","ENUM","UTF8STRING","SEQUENCE","SET","NUMSTRING","PRINTSTRING","T61STRING","IA5STRING","UTCTIME","GENTIME","GENSTRING","classes","UNIVERSAL","APPLICATION","CONTEXT","PRIVATE","Node","Struct","super","flags","opt","extra","bw","br","getBodySize","writeBody","render","readBody","options","error","clean","body","sizeHeader","writeHeader","primitive","AssertionError","peekHeader","cls","seek","readChild","isRaw","raw","readBytes","child","decodeBody","fromArray","Any","node","Null","getSize","typeToClass","Str","writeString","readString","isNumString","isPrintString","isIA5String","Bool","writeU8","readU8","Integer","pb","writeBytes","twosComplement","trimLeft","readUBE","isSafeInteger","writeU64BE","BitString","prefix","rightAlign","OctString","oid","sizeBase128","writeBase128","readBase128","isEqual","attrs","keyAlgs","hashes","curves","part","attrsByVal","sigAlgsByVal","sigToHash","getSignatureHash","hashesByVal","keyAlgsByVal","curvesByVal","Enum","Utf8String","RawSequence","children","RawSet","NumString","PrintString","T61String","IA5String","Time","isTime","isOffset","Date","toISOString","serializeOffset","ms","time","UTCTime","date","two","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","year","mon","day","hour","sec","toSeconds","parseOffset","GenTime","GenString","writeU16BE","writeU24BE","readHeader","field","readSize","optional","EncodingError","shifted","utc","UTC","minutes","zone","typesByVal","1","2","3","4","5","6","10","12","16","17","18","19","20","22","23","24","27","classesByVal","0","TARGET","OPTIONAL","MODE","NORMAL","EXPLICIT","IMPLICIT","Sequence","Set","Choice","choices","Boolean","Unsigned","MD5","iterations","derivedKey","derivedKeyWords","equal","flipbits","opHexToWord","opWordCodes","find","owc","opcodeToWord","opcode","opWordToHex","toHexString","byte","log2","formattedPubkey","pubkey","addedPubkey","currentScope","wizDataList","flow","EMOJI_REGEX","ZERO_64","convert64","MAX_INTEGER_64","MIN_INTEGER_64","NEGATIVE_1_64","_map","base64Chars","triplet","charAt","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","bits1","bits2","bitsCombined","parseLoop","T","_hash","M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","nBitsTotalL","H_i","HmacMD5","enforce","rng","asn1","Schnorr","HmacDRBG","elliptic","xof","pre","id","native","_pre","_curve","_schnorr","curve","precompute","fieldSize","fieldBits","randomScalar","encodeScalar","decodeScalar","pub","publicKeyCreate","publicKeyExport","json","tweak","invert","compress","mulBlind","decodePoint","decodeUniform","pointFromUniform","randomInt","pointToUniform","encodeUniform","pointFromHash","pointToHash","encodeField","point","validate","pointFromX","sign","jmul","keys","P","jpoint","sig","_decodeCompact","nh","_encodeCompact","_decodeDER","_encodeDER","_sign","param","G","_reduce","nonce","drbg","generate","scalarSize","_truncate","R","isInfinity","getX","ki","fermat","ba","bm","_verify","si","jmulAdd","eqR","_recover","pmodn","highOrder","ri","s1","s2","mulAdd","priv","isSmall","schnorr","verify","batch","verifyBatch","Rraw","Sraw","sizeInt","sizeSeq","writeSeq","writeInt","strict","readSeq","readInt","BlockHash","pending","pendingTotal","outSize","hmacStrength","padLength","_delta8","_delta32","_update","digest","_pad","_digest","reason","ripemd160","wizData","RIPEMD160","sha1","SHA1","sha256","SHA256","hash160","dataWithSha256Hashed","sha256v2","hash160v2","hash256","firstSHAHash","ecdsaVerify","secp256k1","ec","hashedMessage","publicKey","signature","startsWith","signatureStringLength","rDataSize","rValue","sDataSize","sValue","rBn","sBn","keyFromPublic","checkSig","wizData2","tweakVerify","wizData3","internalKey","vchTweak","vchTweakedKey","isChecked","tapRoot","publicKeyTweakCheckWithPrefix","shnorrSigVerify","X32WordArray","C_x64","x64","Word","high","low","toX32","x64Words","x64WordsLength","x32Words","x64Word","wordsLength","BaseCurve","conf","zero","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","redN","_maxwellTrick","BasePoint","precomputed","_fixedNafMul","doubles","_getDoubles","I","step","nafW","repr","mixedAdd","points","toP","_wnafMul","nafPoints","_getNAFPoints","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","toJ","ja","jb","encodeCompressed","_encode","compact","getY","power","beta","_getBeta","_hasDoubles","dbl","writable","move","_move","for","modrn","allocate","_toArrayLikeLE","position","_toArrayLikeBE","isNegNum","custom","jsfIndex","uid","Curve","Point","ossl","context","adjustedSize","signBit","scalarBits","three","four","i2","i3","i4","i6","torsion","endo","fromJSON","redInvert","_scale","memoize","isIsomorphic","isIsogenous","normalize","has","sort","windows","_getWindows","steps","getFixedNAF","_safeNAF","coeff","ppoint","pcoeff","_getNAF","_getJNAF","getJNAF","nafw","_scaleShort","_scaleMont","_scaleEdwards","cast","xx","xz","yy","yz","solveX2","solveY2","pake","p1","p2","p3","mulH","subgroup","p0","randomField","jmulAll","_endoWnafMulAdd","imulH","zi","invertAll","scale","normalizeAll","scalar","top","lsb","msb","clamped","iumaskn","redIsHigh","NAF","odds","affinizeAll","wnds","Windows","dbls","Doubles","blinding","blind","unblind","Blinding","randomize","Precomp","_getBlinding","jmulH","jmuln","jmulBlind","jdiv","jdivn","jdivH","_blind","ShortCurve","ShortPoint","ai","zeroA","threeA","smallGap","_finalize","Endo","_getEndomorphism","curveA","curveB","customB","uncube","redDiv","redJacobi","customA","redINeg","u4","redIsOdd","u6","_isomorphism","_findRS","redMuln","MontCurve","r3","EdwardsCurve","u3","_scale0","_scale1","_short","nx","bi","ny","d5","dma","d5a","da5","ypz","ymz","redIMuln","_getEndoRoots","l1","l2","lambda","basis","_getEndoBasis","_getEndoPrecomp","rl","tl","rl1","tl1","rl2","tl2","_egcdSqrt","lhs","rhs","Vector","sqrtn","y1","y2","quo","v1","v2","align","g1","g2","c1","c2","q1","q2","npoints","ncoeffs","_endoBeta","_endoSplit","z2","bza","t0","t1","alpha","redIsSquare","a2x2","abx2","b23","axb","n0","n1","redDivSqrt","gz","z3","u2t1","t2","t3","t4","x3","y3","_svdwf","z4","gz2","x2z","xz2","c0","t5","n2","n3","x0","JPoint","cubeRoots","inf","solveY","coords","solveX","ad6","MontPoint","EdwardsPoint","cpoint","_sswu","_svdw","wrapErrors","_sswui","_svdwi","mulAll","encodeX","decodeEven","decodeSquare","pointFromShort","_mont","_edwards","isComplete","xb","order","redIsEven","divH","form","decodeField","toPretty","zOne","z6","aa","nz","_mixedAdd","_add","_addJA","_addJJ","z1z1","z2z2","hh","hhh","_dbl0","_dbl3","_dblJ","zz","gamma","xmdelta","xpdelta","beta4","beta8","gamma28","zz1","zz2","zzz1","zzz2","inf1","inf2","rn","a24","d0","wa","wb","inject","_solveY0","y0","redPown","XPoint","nu","nv","uu","uz","vv","vz","_elligator2","_invert2","pointFromMont","m1","m2","xpoint","toX","decodeX","ax2","bb","da","cb","x5","z5","x4","hasTorsion","diffAddDbl","smi","twisted","oneA","mOneA","smallD","alt","curveD","d3","ad14","a2d","ad2","redDivn","apd","amd","ci","ci2","cm1","f0","f1","f2","X","Y","X1","rX","X12","nn","nr1","X2","tt","tz","toMont","ad","amd4","_mulD","_mulA","dxy","xy","d24","x6","x12","u5","nt","_alt","u0","pointFromEdwards","_check","_addM1","_addA","_dbl","encodeAdjusted","decodeAdjusted","pointFromY","func","item","P256","P384","P521","SECP256K1","BRAINPOOLP256","BRAINPOOLP384","BRAINPOOLP512","X25519","X448","MONT448","ED25519","ISO448","ED448","cache","fn","r0","mod9","cubeRoot","r1","root","randomBits","method","WeakMap","result","chunks","args","register","Keccak","ZEROES","CSHAKE","rate","pers","bytePad","items","leftEncode","encodeString","zeroPad","hmac","DESC","PADDING","K","_final","want","_transform","writeU32","W","sigma0","Sigma1","Ch","Sigma0","Maj","trimRight","countLeft","oct","countRight","compareLeft","xpos","xlen","ypos","ylen","compareRight","padLeft","padRight","SHAKE","SHAKE256","multi","mac","HI","MAX_SAFE_INTEGER","F32_ARRAY","Float32Array","F328_ARRAY","F64_ARRAY","Float64Array","F648_ARRAY","BIG_ENDIAN","readU64","readU32","check","readU56","readU24","readU48","readU40","readU16","readU64BE","readU32BE","readU56BE","readU24BE","readU48BE","readU40BE","readU16BE","readI64","readI32","isSafe","readI56","readI24","readI48","readI40","readI16","readI8","readI64BE","readI32BE","readI56BE","readI24BE","readI48BE","readI40BE","readI16BE","_readFloatBackwards","_readFloatForwards","_readDoubleBackwards","_readDoubleForwards","readFloat","readDouble","writeU64","write64","writeU56","write56","writeU48","writeU40","writeU24","writeU16","writeU56BE","writeU48BE","writeU40BE","writeU32BE","writeI32","writeI24","writeI32BE","writeI24BE","_writeDoubleForwards","isNumber","_writeDoubleBackwards","_writeFloatForwards","_writeFloatBackwards","sizeVarint","realloc","be","Varint","checkRead","readU","readI","readIBE","writeU","writeUBE","writeI","writeI64","writeI56","writeI48","writeI40","writeI16","writeI8","writeIBE","writeI64BE","writeI56BE","writeI48BE","writeI40BE","writeI16BE","readVarint","writeVarint","readVarint2","writeVarint2","sizeVarint2","sliceBytes","sizeVarBytes","sizeVarlen","sizeVarString","HmacSHA1","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","webpackPolyfill","deprecate","paths","PresetCurve","short","edwards","defineCurve","sha384","sha512","common","sha","ripemd","sha224","TE0","TE1","TE2","TE3","TD0","TD1","TD2","TD3","TD4","RCON","rounds","getRounds","encKey","decKey","destroy","ukey","createEncryptKey","createDecryptKey","opos","ipos","getEncryptKey","s0","s3","getDecryptKey","sizeSize","writeSize","readVersion","sizeVersion","writeVersion","ChaCha20","chacha","counter","overflow","refresh","BufferReader","BufferWriter","StaticWriter","_read","_readn","_readvar","_write","_writen","_writecb","zeroCopy","pool","PREFIX","KMAC","rightEncode","VM_NETWORK","VM_NETWORK_VERSION","opcodesBitcoinSegwit","commonOpcodes","ScriptWiz","isPrime","sqrtN","factor","getFractionalBits","nPrime","gamma0x","gamma0","gamma1x","gamma1","maj","HmacSHA256","X64Word","X64WordArray","X64Word_create","SHA512","H0","H1","H2","H3","H4","H5","H6","H7","H0h","H0l","H1h","H1l","H2h","H2l","H3h","H3l","H4h","H4l","H5h","H5l","H6h","H6l","H7h","H7l","fh","fl","gh","gl","hl","Wil","Wih","Wi","gamma0xh","gamma0xl","gamma0h","gamma0l","gamma1xh","gamma1xl","gamma1h","gamma1l","Wi7","Wi7h","Wi7l","Wi16","Wi16h","Wi16l","t1l","chh","chl","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Ki","Kih","Kil","t1h","t2l","HmacSHA512","Rand","rand","_rand","getBytes","getByte","ch32","maj32","p32","ft_1","s0_256","s1_256","g0_256","g1_256","shaCommon","sha256_K","T1","T2","sha512_K","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","tweakAdd","tweaked","publicKeyTweakAdd","publicKeyTweakCheck","expect","expectKeyWithoutPrefix","expectKeyWithoutPrefixData","tagHash","tag","hashedTag","treeHelper","scripts","treeHelperResultHex","leaftag","forEach","script","scriptLength","scriptData","pubKey","vm","network","LIQUID","console","finalTweaked","op1Hex","co","bech32","segwit_addr","scriptPubKey","isNegate","twosNegateValue64","input64","numToLE64","LE64ToNum","inputBN","inputBnByteLength","binputPos","inputWizData","LE32toLE64","description","AEAD","aes","ARC4","bcrypt","BLAKE2b","BLAKE2b160","BLAKE2b256","BLAKE2b384","BLAKE2b512","BLAKE2s","BLAKE2s128","BLAKE2s160","BLAKE2s224","BLAKE2s256","box","cleanse","CSHAKE128","CSHAKE256","CtrDRBG","dsa","dsaies","eb2k","ecies","ed25519","ed448","GOST94","Hash160","Hash256","HashDRBG","hkdf","Keccak224","Keccak256","Keccak384","Keccak512","KMAC128","KMAC256","MD2","MD4","MD5SHA1","merkle","mrkl","murmur3","p256","p384","p521","pbkdf2","pgp","Poly1305","rsa","rsaies","safe","Salsa20","scrypt","secretbox","ssh","SHA224","SHA384","SHA3","SHA3_224","SHA3_256","SHA3_384","SHA3_512","SHAKE128","siphash","Whirlpool","x25519","x448","Int8Array","Int16Array","stream","derive","_block","qround","Uint16Array","fin","leftover","t6","t7","hibit","_blocks","GHASH","polyTable","Mode","_setAutoPadding","_setAAD","msgLen","tagLen","aad","_setCCM","_getAuthTag","_setAuthTag","Block","blockPos","last","lastSize","ilen","olen","_updateSize","_destroy","Stream","_crypt","RawCipher","RawDecipher","PKCS7Cipher","PKCS7Decipher","ECBCipher","ECBDecipher","CBCCipher","CBCDecipher","overlap","CTSCipher","CTSDecipher","XTS","poly","safeEqual","cy","_shift","XTSCipher","XTSDecipher","CTR","ctr","_increment","CTRCipher","CTRDecipher","CFB","CFBCipher","CFBDecipher","OFB","OFBCipher","OFBDecipher","GCM","_encipher","GCMCipher","GCMDecipher","CBCMAC","CCM","lm","L","Adata","CCMCipher","CCMDecipher","CMAC","flag","EAX","hash1","hash2","mac1","mac2","EAXCipher","EAXDecipher","_prepare","S0","S1","S2","S3","substitute","S","expandstate","expand0state","encipher","decipher","stream2word","blocks","objectAssign","util","hasOwn","pSlice","functionsHaveNames","pToString","arrbuf","DataView","ok","regex","getName","isFunction","truncate","something","rawname","fail","expected","operator","stackStartFunction","_deepEqual","memos","isDate","getTime","isRegExp","source","multiline","lastIndex","ignoreCase","actualIndex","actualVisitedObjects","isPrimitive","getPrototypeOf","aIsArgs","isArguments","bIsArgs","ka","objectKeys","kb","objEquiv","expectedException","isPrototypeOf","_throws","shouldThrow","_tryBlock","userProvidedMessage","isUnexpectedException","isError","generatedMessage","getMessage","stack","fn_name","idx","next_line","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","eid","decodeClamped","ROUND_CONST","bs","count","c3","c4","c5","c6","c7","c8","c9","h0","l0","h1","h2","h3","l3","h4","l4","b32","b33","b14","b15","b46","b47","b28","b29","b20","b21","b34","b35","b16","b17","b48","b49","b40","b41","b22","b36","b37","b18","b19","b10","b11","b42","b43","b24","b25","b38","b39","b30","b31","b12","b13","b44","b45","b26","b27","smallPrimes","smallPrimesProduct","primesA","primesB","isProbablePrime","reps","ra","randomPrime","isSafePrime","BatchRNG","eddsa","_iso","_rng","secret","splitHash","privateKeyExpand","privateKeyConvert","publicKeyFromScalar","iso","signWithScalar","hashNonce","Araw","hashChallenge","key_","prefix_","scalarTweakAdd","scalarTweakMul","sraw","_verifySingle","sh","Ah","Rh","_verifyBatch","sum","ea","deriveWithScalar","pop","checksum","createChecksum","WriteOp","NumberOp","BufferOp","StringOp","FunctionOp","FillOp","ops","op","POOL","trimSpace","pem","DSAParams","DSAPublicKey","DSAPrivateKey","ciphers","cipherInfo","passwd","isEncrypted","setProcType","setDEKInfo","getDEKInfo","unsetProcType","unsetDEKInfo","RSAPublicKey","RSAPrivateKey","dp","dq","qi","Certificate","tbsCertificate","TBSCertificate","signatureAlgorithm","AlgorithmIdentifier","explicit","serialNumber","issuer","RDNSequence","validity","Validity","subject","subjectPublicKeyInfo","SubjectPublicKeyInfo","issuerUniqueID","implicit","subjectUniqueID","extensions","Extensions","parameters","names","rdn","RDN","attributes","Attribute","attr","notBefore","notAfter","Extension","extnID","critical","extnValue","DigestInfo","ECPrivateKey","privateKey","namedCurveOID","ECDSASignature","rh","E","Bh","Dh","Eh","Kh","safeEqualInt","safeSelect","safeLT","safeGT","safeCompare","safeEqualByte","safeLTE","safeGTE","safeMin","safeMax","safeAbs","safeBool","safeCopy","xmask","ymask","opcodesLiquidSegwit","toLEPadByte","padHex","compileData","compileJoin","hexes","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","isLE","mLen","eLen","eMax","eBias","nBits","NaN","rt","LN2","superInit","typedArray","Uint8ClampedArray","Int32Array","typedArrayByteLength","swapEndian","Utf16","Utf16BE","utf16Chars","utf16Str","utf16StrLength","Utf16LE","Base64url","urlSafe","_safe_map","HmacSHA224","HmacSHA384","RHO_OFFSETS","PI_INDEXES","ROUND_CONSTANTS","newY","LFSR","roundConstantMsw","roundConstantLsw","bitPosition","outputLength","_state","nBlockSizeLanes","M2i","M2i1","lane","tMsw","tLsw","Tx","Tx4","Tx1","Tx1Msw","Tx1Lsw","laneIndex","laneMsw","laneLsw","rhoOffset","TPiLane","T0","state0","TLane","Tx1Lane","Tx2Lane","roundConstant","blockSizeBits","outputLengthBytes","outputLengthLanes","hashWords","HmacSHA3","_zl","_zr","_sl","_sr","_hl","_hr","ar","cr","dr","er","hr","zr","sl","sr","f3","f4","f5","rotl","HmacRIPEMD160","PBKDF2","blockIndex","blockIndexWords","blockWords","blockWordsLength","intermediate","intermediateWords","generateKeystreamAndEncrypt","keystream","_counter","CTRGladman","incWord","incCounter","_keystream","ECB","AnsiX923","lastBytePos","Ansix923","Iso10126","Iso97971","ZeroPadding","NoPadding","SBOX","INV_SBOX","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x8","AES","_nRounds","_keyPriorReset","keyWords","ksRows","keySchedule","_keySchedule","ksRow","invKeySchedule","_invKeySchedule","invKsRow","_doCryptBlock","nRounds","PC1","PC2","BIT_SHIFTS","SBOX_P","SBOX_MASK","DES","keyBits","keyBitPos","subKeys","_subKeys","nSubKey","subKey","bitShift","invSubKeys","_invSubKeys","_lBlock","_rBlock","exchangeLR","exchangeRL","lBlock","rBlock","TripleDES","key1","key2","key3","_des1","_des2","_des3","RC4","keySigBytes","_S","keyByteIndex","keyByte","_i","_j","generateKeystreamWord","keystreamWord","RC4Drop","drop","C_","Rabbit","_X","_C","_b","nextState","IV","IV_0","IV_1","i0","i1","gx","ga","gb","RabbitLegacy","tinv","_endoWnafT1","_endoWnafT2","isRed","betas","lambdas","vec","ntinv","prevR","aprxSqrt","len1","ax","endoMul","JSON","obj2point","ys1","dyinv","_precompute","negate","zinv","zinv2","ay","pz2","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","dny","_zeroDbl","_threeDbl","yyyy","yyyy8","ggamma8","jy2","jxd4","jyd8","trpl","mm","ee","yyu4","kbase","pz3","eqXToP","zs","xc","diffAdd","jumlAdd","other","dd","oneC","_mulC","_extDbl","_projDbl","_extAdd","_projAdd","sha1_K","Hmac","KeyPair","Signature","EC","keyPair","keyFromPrivate","fromPrivate","fromPublic","genKeyPair","persEnc","entropy","entropyEnc","ns2","_truncateToN","truncOnly","bkey","getPrivate","ns1","iter","kp","kpX","recoveryParam","canonical","sinv","getPublic","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","predResist","minEntropy","_reseed","reseedInterval","V","nonceEnc","seed","_hmac","kmac","reseed","addEnc","temp","_importPrivate","privEnc","_importPublic","pubEnc","_importDER","Position","place","getLength","initial","octetLen","rmPadding","constructLength","octets","slen","toDER","backHalf","EDDSA","pointClass","encodingLength","keyFromSecret","hashInt","messagePrefix","Rencoded","encodePoint","s_","pubBytes","makeSignature","SG","fromSecret","lastIx","normed","xIsOdd","encodeInt","decodeInt","isPoint","params","_secret","_pub","_pubBytes","privBytes","getSecret","_R","_Rencoded","_Sencoded","Sencoded","toBytes","BASE","MAX_INT","MAX_INT_ARR","smallToArray","supportsNativeBigInt","BigInt","radix","alphabet","caseSensitive","parseValue","BigInteger","SmallInteger","NativeBigInt","isPrecise","arrayToSmall","compareAbs","createArray","l_a","l_b","addAny","addSmall","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","multiplySmall","shiftLeft","multiplySmallAndArray","square","divModSmall","remainder","divisor","quotient","divModAny","comparison","quotientDigit","divisorMostSignificantDigit","divMod1","guess","highx","highy","unshift","divMod2","qSign","mSign","isBasicPrime","isUnit","isDivisibleBy","lesser","millerRabinTest","nPrev","divide","bigInt","modPow","plus","subtractAny","minus","small","multiply","multiplyKaratsuba","ac","bd","abcd","times","_multiplyBySmall","over","_0","_1","_2","isNegative","exp","modInv","isPositive","compareTo","notEquals","neq","greater","greaterOrEquals","geq","lesserOrEquals","leq","logN","toJSNumber","randBetween","lastT","lastR","newT","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","shiftRight","remQuo","roughLOB","integerLogarithm","absBase","alphabetValues","digits","parseBaseFromArray","toBase","valueOf","digit","toBaseString","parseStringValue","decimalPlace","parseNumberValue","minusOne","lcm","isInstance","usedRNG","range","restricted","convertbits","frombits","tobits","maxv","hrp","program","encodings","BECH32","BECH32M","addr","bech32m","dec","CHARSET","GENERATOR","getEncodingConst","polymod","values","chk","hrpExpand","combined","bechString","has_lower","has_upper","verifyChecksum","zero16","aadLen","cipherLen","_pad16","aead","auth","REDUCTION","hi32","lo32","adLen","ctLen","table","double","_absorb","absorb","msw","Blowfish","CIPHERTEXT192","CIPHERTEXT256","NUL","hash192","pass","cdata","_hash192","minor","pbkdf","tmpout","countsalt","stride","amount","sha2pass","sha2salt","keylen","amt","_hash256","TABLE","encode64","decode64","unbase64","logr","record","pbkdfAsync","async","SIGMA","klen","_compress","sum64i","o0","o1","sum64w","ix","iy","xor0","xor1","xor2","xor3","xor4","xor5","xor6","xor7","p251","p448","modes","HAS_BIGINT","_alloc","_iadd","_isub","isSMI","_isubn","_normalize","toBigInt","_mul","utestn","nonzero","as","quon","remn","countBits","_div","iquon","rem","remrn","iremn","imodn","quorem","pown","ucmpn","_rootrem","rootrem","isPower","iandn","iuandn","iorn","iuorn","ixorn","iuxorn","inot","ishl","iushl","ishr","_split","iushr","usetn","more","redLegendre","_cloneNormal","_makeOdd","bmod8","_factor2","_invertp","redFermat","powm","powmn","sqrtm","sqrtpq","sp","sq","mp","mq","isPrimeMR","isPrimeLucas","force2","nm1","nm3","rnm1","rone","jacobi","isSquare","vk","vk1","idiv","nonred","ipow","ipown","isqrt","idivsqrt","divsqrt","isHigh","isLow","legendre","kronecker","iinvert","ifermat","fromBuffer","toDouble","s52","s26","getBase","isInteger","_fromHex","_fromBase","parseHex","fromBigInt","fromBN","fromBool","Barrett","P251","P448","space","of","fromDouble","Prime","pm2","Prime34","pp1d4","SquareRootError","v3","pm3d4","Prime58","sm1","pp3d8","v7","pm5d8","mc","Prime116","powE","powS","sqrn","sqrnmul","x24","x30","x31","x62","x124","x127","core","x16","x32","x128","x48","x96","x120","x126","x7","x256","x512","x9","x11","x22","x44","x88","x176","x220","x223","r4","r5","r6","x192","x240","x246","x10","x20","x40","x50","x100","x200","x222","mb","powInt","powNum","intFrom","intTo","sqrt3mod4","sqrt5mod8sm1","sqrt5mod8","sqrt0","divsqrt3mod4","divsqrt5mod8","symbol","elems","elem","invs","mi","rib","umaskn","makeError","seal","privateKeyGenerate","ourPub","sealed","open","theirPub","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","toObject","assign","test1","getOwnPropertyNames","test2","test3","letter","shouldUseNative","symbols","to","getOwnPropertyDescriptors","descriptors","getOwnPropertyDescriptor","formatRegExp","isString","isNull","isObject","noDeprecation","warned","throwDeprecation","traceDeprecation","trace","debugEnviron","debugs","opts","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","simple","formatPrimitive","visibleKeys","arrayToHash","formatError","RegExp","braces","toUTCString","formatProperty","formatArray","cur","numLinesEst","reduceToSingleString","desc","objectToString","debuglog","NODE_DEBUG","pid","isNullOrUndefined","isSymbol","months","timestamp","getHours","getMinutes","getSeconds","getDate","getMonth","prop","origin","kCustomPromisifiedSymbol","callbackifyOnRejected","newReason","promisify","original","promiseResolve","promiseReject","promise","Promise","resolve","reject","setPrototypeOf","defineProperties","callbackify","callbackified","maybeCb","then","rej","ZERO16","polyKey","salsa","deriveSecret","HAS_CRYPTO","randomValues","poolPos","randomFillSync","randomFill","randomRange","ECDH","ARC2","Camellia","CAST5","EDE","EDE3","IDEA","Serpent","Twofish","CipherBase","modeNames","parseName","crypt","setAutoPadding","setAAD","setCCM","getAuthTag","setAuthTag","Decipher","CTS","rotl16","ekb","S4","Camellia128","set4","feis","set2","Camellia256","k0","schedule","masking","rotate","PERMUTE","SHIFT","kL","kR","inL","inR","outL","outR","pc1","r28shl","pc2","ip","lStart","rStart","keyL","keyR","expand","rip","k3","t32","encryptKey","decryptKey","expandKey","invertKey","di","s4","linear","v0","linearinv","sb0","sb0inv","sb1","sb1inv","sb2","sb2inv","t8","t9","sb3","sb3inv","sb4","sb4inv","sb5","sb5inv","sb6","sb6inv","sb7","sb7inv","subkeys","sk","RS","gfMul","mdsMul","col","mult","rol32","ror32","ia","ib","ic","ta","tb","tc","td","derivation","blkSize","entSize","slab","serialize","chain","increment","pbits","qbits","group","isSane","DSASignature","decodeRS","paramsGenerate","paramsGenerateAsync","privateKeyCreate","powBlind","bx","e1","e2","paramsCreate","toParams","paramsBits","paramsScalarBits","paramsVerify","paramsImport","paramsExport","privateKeyGenerateAsync","privateKeyBits","privateKeyScalarBits","privateKeyVerify","privateKeyImport","isSaneCompute","privateKeyExport","toPublic","publicKeyBits","publicKeyScalarBits","publicKeyVerify","publicKeyImport","signatureImport","encodeRS","signatureExport","signDER","verifyDER","ONE","ourY","keyLen","ivLen","keyPos","ivPos","prevPos","need","base16","base32","base58","cash32","openssl","pemcrypt","pkcs1","pkcs3","pkcs5","pkcs8","rfc3279","sec1","x509","fromOptions","getJSON","fromBase64","COUNTRY","ORGANIZATION","ORGANIZATIONALUNIT","COMMONNAME","SERIALNUMBER","LOCALITY","PROVINCE","STREETADDRESS","POSTALCODE","DH","DSA","DSA_ALT","RSA","ECDSA","BLAKE2B160","BLAKE2B256","BLAKE2B384","BLAKE2B512","BLAKE2S128","BLAKE2S160","BLAKE2S224","BLAKE2S256","MDC2","RIPEMD160_ALT","SM3","WHIRLPOOL","SECP192K1","SECP224K1","FRP256V1","X25519_ALT","X448_ALT","ED1174","ED41417","CURVE383187","M221","E222","M383","E382","M511","E521","sigAlgs","DSASHA1","RSAMD2","RSAMD4","RSAMD5","RSASHA1","RSASHA1_MS","RSAPSS","RSASHA256","RSASHA384","RSASHA512","RSASHA224","MGF1","RSASHA3_256","RSASHA3_384","RSASHA3_512","ECDSASHA1","ECDSASHA224","ECDSASHA256","ECDSASHA384","ECDSASHA512","NONE","_decode","_test","encodeLE","decodeLE","testLE","TABLE_HEX","charset","_decodeSize","encodeHex","decodeHex","testHex","zeroes","b58","b256","TABLE_URL","decodeSize","checkPadding","encodeURL","decodeURL","testURL","POOL65","deserialize","lower","upper","hlen","dlen","convert","dstoff","dstbits","srcoff","srcbits","is","convertBits","convertSize","POOL104","fallback","plen","maxacc","conv","encodedSize","DHParams","pt","PublicKeyInfo","identifier","PrivateKeyInfo","EncryptedPrivateKeyInfo","S_CRYPTOPRO","S_TEST","S_S2015","sigma","_f","_sum","psi","XM","_shuffle","shft","sbox","CRYPTOPRO","TEST","S2015","rmd","TWO","THREE","seedLen","prepend","extract","ikm","prk","op1","op2","op3","md5","md","createTree","alg","leaves","nodes","malleated","createRoot","createBranch","branch","deriveRoot","INTERNAL","LEAF","sentinel","hashEmpty","leaf","hashLeaf","hashInternal","tail","mul32","alo","blo","eqX","subtle","deriveAsync","getHash","importKey","deriveBits","pgpdf","packetTypes","PUBKEY_ENC","SIGNATURE","SYMKEY_ENC","ONEPASS_SIG","PRIVATE_KEY","PUBLIC_KEY","PRIVATE_SUBKEY","COMPRESSED","ENCRYPTED","MARKER","PLAINTEXT","RING_TRUST","USER_ID","PUBLIC_SUBKEY","OLD_COMMENT","ATTRIBUTE","ENCRYPTED_MDC","MDC","ENCRYPTED_AEAD","packetTypesByVal","7","8","9","11","13","14","keyTypes","RSA_ENCRYPT_ONLY","RSA_SIGN_ONLY","ELGAMAL","ELGAMAL_LEGACY","keyTypesByVal","cipherTypes","DES3","BLOWFISH","AES128","AES192","AES256","TWOFISH","CAMELLIA128","CAMELLIA192","CAMELLIA256","cipherTypesByVal","hashTypesByVal","hashToHash","curveTypes","curveTypesByVal","oids","PGPMessage","packets","pkt","PGPPacket","PGPUnknown","PGPPrivateKey","PGPPublicKey","PGPUserID","PGPBody","expires","MPI","kdfHash","kdfAlg","isRSA","isElgamal","fingerprint","decodeID","long","passphrase","encrypted","SecretKey","s2k","S2K","algName","padded","ct","serial","deriveSimple","deriveSalted","deriveIterated","decodeCount","encodeCount","sigTypes","BINARY","TEXT","GENERIC_CERT","PERSONA_CERT","CASUAL_CERT","POSITIVE_CERT","SUBKEY_BINDING","PRIMARY_KEY_BINDING","DIRECT_SIGNATURE","KEY_REVOCATION","SUBKEY_REVOCATION","sigTypesByVal","hashTypes","compressTypes","ZIP","ZLIB","BZIP2","compressTypesByVal","encodeID","todo","digestInfo","HASH160","HASH256","KECCAK224","KECCAK256","KECCAK384","KECCAK512","pm1","qm1","phi","lam","exponent","generateKey","exportKey","modulusLength","publicExponent","ck","jwk","fromPQE","_generateSubtle","generateAsync","fromPQD","fromNED","getDigestInfo","mgf1xor","SALT_LENGTH_AUTO","SALT_LENGTH_HASH","tlen","em","mlen","looking","equals0","valid","signPSS","saltLen","embits","emlen","db","pssEncode","verifyPSS","pssVerify","_verifyPSS","encryptOAEP","label","lhash","decryptOAEP","lvalid","rest","invalid","equals1","veil","vmax","rmax","unveil","createTag","_auxTag","_nonceTag","_challengeTag","hashAux","negated","publicKeyTweakSum","aux","araw","mulConst","SLAB1","SLAB2","SLAB3","salsa20_8","B32","blockmix_salsa8","Yo","blkcpy","blkxor","integerify","smix","Bo","XY","smixAsync","wait","dstOff","srcOff","setImmediate","clear","Timeout","clearFn","_id","_clearFn","scope","setInterval","clearInterval","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","registerImmediate","html","channel","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","handle","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","event","port2","createElement","documentElement","onreadystatechange","removeChild","appendChild","addEventListener","attachEvent","callback","task","typeToCurve","ZERO32","SSHPublicKey","comment","sizeString","sizeBytes","getCurve","SSHPrivateKey","modern","KDFOptions","RawPrivateKey","sname","pubRaw","privRaw","encodeSSH","getCurveName","decodeSSH","useNonce","blob","_siphash","U64","sipround","_siphash64","_siphash64k256","isum","ahi","a16","a00","b00","c48","c32","c16","c00","irotl","siphash32","siphash64","siphash32k256","siphash64k256","sipmod","mhi","mlo","axbhi","axbmid","bxamid","axblo","reduce64","RC","C0","C1","C2","C3","C4","C5","C6","C7","initialStackDataList","inputHexes","main","altFlow","isStackFailed","txData","inputs","outputs","timelock","currentInputIndex","clearStackDataList","stackDataList","parseInput","parseNumber","parseText","parseBin","parseOpcode","parseTxData","compile","inputHex","inputNumber","inputText","inputBin","inputOpCode","parseResult","currentScopeParse","currentScopeParseException","opCodes","parseResultCommit","errorMessage","removeLastSize","removeLastStackData","addDataArray","addData","Opcodes","wordData","wordCode","wordHex","codeData","codeWord","BTC","ver","SEGWIT","opcodesBitcoinTapscript","opcodesLiquidTapscript","opcodes","inputHexParam","inputNumberParam","inputTextParam","inputBinParam","inputOpCodeParam","emptyParseResultData","parseValueInputs","opWord","opFunctions","ex","mainStackDataArray","mainStackDataArrayLength","currentOpCode","oc","flows","flowIf","flowNotIf","flowElse","flowEndIf","flowVerify","stacks","fromAltStack","twoDup","threeDup","twoOver","twoSwap","ifDup","dup","nip","twoRot","rot","stackIndex","willChangedStackDataArray","pick","roll","tuck","splices","concatenate","substrLazy","arithmetics","add1","sub1","notEqual0","lshift","rshift","boolAnd","boolOr","numEqual","numEqualVerify","numNotEqual","lessThan","graterThan","lessThanOrEqual","graterThanOrEqual","withIn","TAPSCRIPT","locktime","checkLockTimeVerify","checkSequenceVerify","introspection","inspectInputOutPoint","inspectInputAsset","inspectInputValue","inspectInputScriptPubKey","inspectInputSequence","inspectInputIssuance","inspectOutputAsset","inspectOutputValue","inspectOutputNonce","inspectOutputScriptPubKey","versionLE","timeLockLE","inspectInputsLength","inspectOutputsLength","arithmetics64","add64","sub64","mul64","div64","neg64","lessThan64","lessThanOrEqual64","greaterThan64","greaterThanOrEqual64","conversion","numberValue","negateValue","absValue","isfalse","addedValue","subValue","mulValue","divValue","lShiftValue","rShiftValue","currentNumber","minValue","maxValue","complement","fBinary","sBinary","fBinaryArray","sBinaryArray","resultBinary","expression","isANeg","modifiedAddedValueBin","isBNeg","subValueBin","modifiedSubValueBin","modifiedMulValueBin","bigA","bigB","lastStackData","newExpression","newFlow","newAltFlow","messageSize","wizData4","wizData5","wizData6","wizDataArray","newWizDataArray","currentItem","txInputs","currentTxInputIndex","txInputLength","currentInputPreviousTxId","previousTxId","currentInputVout","vout","currentInputAssetId","assetId","currentInputAmount","inputAmountLE","currentScriptPubKey","witnessVersion","witnessProgram","witnessProgramLength","pubKeySha256","currentInputSequence","sequence","inputSequenceLE","txOutputs","currentTxOutputIndex","txOutputLength","currentOutputAssetId","currentOutputAmount","outputAmountLE"],"mappings":"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Nwd,OAAQ,KACR/L,KAAM,WACNwhB,MAAO,OAEP31B,EAAG,CAAC,sCACA,sCACA,sCACA,qBAEJuI,EAAG,QACHxE,EAAG,IACHpE,EAAG,CAAC,sCACA,sCACA,sCACA,qBACJ2U,EAAG,IAEH+H,EAAG,KACHyV,EAAG,CACD,CAAC,sCACA,sCACA,sCACA,qBACD,CAAC,sCACA,sCACA,sCACA,sBAEHujB,QAAS,CACP,GACA,CACE,CAAC,sCACA,sCACA,sCACA,qBACD,CAAC,sCACA,sCACA,sCACA,sBAEH,CACE,CAAC,sCACA,sCACA,sCACA,qBACD,CAAC,sCACA,sCACA,sCACA,sBAEH,CACE,CAAC,sCACA,sCACA,sCACA,qBACD,CAAC,sCACA,sCACA,sCACA,2BAyXT+U,QA7WF,cAAsB5O,EACpB,cACEziB,MAAM,CACJwO,GAAI,UACJmN,KAAM,KACNhyC,KAAM,OACNwd,OAAQ,KACR/L,KAAM,WACNwhB,MAAO,OAEP31B,EAAG,CAAC,sCACA,sCACA,sCACA,qBAEJuI,EAAG,CAAC,sCACA,sCACA,sCACA,qBACJxE,EAAG,IACHpE,EAAG,CAAC,sCACA,sCACA,sCACA,qBACJ2U,EAAG,IAEH+H,EAAG,KACHyV,EAAG,CACD,CAAC,sCACA,sCACA,sCACA,qBACD,CAAC,sCACA,sCACA,sCACA,sBAEHujB,QAAS,CACP,GACA,CACE,CAAC,sCACA,sCACA,sCACA,qBACD,CAAC,sCACA,sCACA,sCACA,sBAEH,CACE,CAAC,sCACA,sCACA,sCACA,qBACD,CAAC,sCACA,sCACA,sCACA,sBAEH,CACE,CAAC,sCACA,sCACA,sCACA,qBACD,CAAC,sCACA,sCACA,sCACA,2BA2STgV,QA/RF,cAAsB3O,EACpB,YAAYpU,GACVvO,MAAM,CACJwO,GAAI,UACJmN,KAAM,UACNhyC,KAAM,UACNwd,OAAQ,KACR/L,KAAM,SACN+nB,OAAQ,mCACRyY,SAAS,EACThf,MAAO,SAEP31B,EAAG,CAAC,sCACA,uCACJuI,EAAG,KAEH/J,EAAG,CAAC,sCACA,uCACJmB,EAAG,CAAC,sCACA,uCACJ2U,EAAG,IAEH+H,EAAG,IACHyV,EAAG,CACD,CAAC,sCACA,uCAED,CAAC,sCACA,uCACDwV,GAEF+N,QAAS,CACP,CACE,CAAC,sCACA,uCACD,CAAC,sCACA,wCAEH,CACE,CAAC,sCACA,uCACD,CAAC,sCACA,wCAEH,CACE,CAAC,sCACA,uCACD,CAAC,sCACA,wCAEH,CACE,CAAC,sCACA,uCACD,CAAC,sCACA,wCAEH,CACE,CAAC,sCACA,uCACD,CAAC,sCACA,wCAEH,CACE,CAAC,sCACA,uCACD,CAAC,sCACA,wCAEH,CACE,CAAC,sCACA,uCACD,CAAC,sCACA,wCAEH,CACE,CAAC,sCACA,uCACD,CAAC,sCACA,6CAkNTiV,OArMF,cAAqB5O,EACnB,YAAYpU,GACVvO,MAAM,CACJwO,GAAI,SACJmN,KAAM,KACNhyC,KAAM,UACNwd,OAAQ,KACR/L,KAAM,WACN+nB,OAAQ,WACRyY,SAAS,EACThf,MAAO,OAEP31B,EAAG,CAAC,sCACA,sCACA,sCACA,qBACJuI,EAAG,IAEH/J,EAAG,CAAC,sCACA,sCACA,sCACA,qBACJmB,EAAG,CAAC,sCACA,sCACA,sCACA,qBACJ2U,EAAG,IAEH+H,EAAG,KACHyV,EAAG,CACD,CAAC,sCACA,sCACA,sCACA,qBAED,CAAC,sCACA,sCACA,sCACA,qBACDwV,GAEF+N,QAAS,CACP,CACE,CAAC,sCACA,sCACA,sCACA,qBACD,CAAC,sCACA,sCACA,sCACA,sBAEH,CACE,CAAC,sCACA,sCACA,sCACA,qBACD,CAAC,sCACA,sCACA,sCACA,sBAEH,CACE,CAAC,sCACA,sCACA,sCACA,qBACD,CAAC,sCACA,sCACA,sCACA,sBAEH,CACE,CAAC,sCACA,sCACA,sCACA,qBACD,CAAC,sCACA,sCACA,sCACA,2BAsHTkV,MA1GF,cAAoB7O,EAClB,YAAYpU,GACVvO,MAAM,CACJwO,GAAI,QACJmN,KAAM,QACNhyC,KAAM,UACNwd,OAAQ,KACR/L,KAAM,WACN+nB,OAAQ,WACRyY,SAAS,EACThf,MAAO,OAEP31B,EAAG,CAAC,sCACA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ACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,SAAY,WAAY,UAAY,WACpC,UAAY,WAAY,SAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,EAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,SAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,UAAY,UACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,SAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,YAGhC4mD,EAAM,IAAI5mD,YAAY,CAC1B,WAAY,WAAY,UAAY,UACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,SAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,UAAY,SAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,SAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,SAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,EACpC,UAAY,UAAY,UAAY,WACpC,WAAY,UAAY,WAAY,UACpC,UAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,SAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,aAGhC6mD,EAAM,IAAI7mD,YAAY,CAC1B,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,SAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,UAAY,SAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,SAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,EACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,UAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,SAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,SAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,aAGhC8mD,EAAM,IAAI9mD,YAAY,CAC1B,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,SAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,SAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,UAAY,EACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,UAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,SAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,aAGhC+mD,EAAM,IAAI/mD,YAAY,CAC1B,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,SACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,SAAY,WAAY,SAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,SAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,EACpC,WAAY,UAAY,UAAY,WACpC,UAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,SAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,SAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,aAGhCgnD,EAAM,IAAIr1D,WAAW,CACzB,GAAM,EAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAC1C,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1C,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAC1C,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAC1C,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAC1C,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAC1C,EAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAC1C,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAC1C,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAC1C,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAC1C,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAC1C,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAC1C,IAAM,IAAM,IAAM,EAAM,IAAM,IAAM,IAAM,GAC1C,IAAM,IAAM,GAAM,EAAM,IAAM,IAAM,GAAM,EAC1C,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,EAC1C,IAAM,IAAM,IAAM,EAAM,EAAM,GAAM,IAAM,IAC1C,GAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAC1C,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1C,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAC1C,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAC1C,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAC1C,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAC1C,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAC1C,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAC1C,GAAM,IAAM,IAAM,GAAM,IAAM,EAAM,IAAM,GAC1C,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAC1C,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAC1C,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1C,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAC1C,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAC1C,GAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,GAC1C,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,MAGtCs1D,EAAO,IAAIjnD,YAAY,CAC3B,SAAY,SAAY,SAAY,UACpC,UAAY,UAAY,WAAY,WACpC,UAAY,YA0dd,SAASu/C,EAAQ7rD,EAAM2gB,GACrB,OAAsB,SAAd3gB,EAAK2gB,KACS,MAAd3gB,EAAK2gB,KACS,IAAd3gB,EAAK2gB,KACL3gB,EAAK2gB,GAGf,SAASipC,EAASn+C,EAAK0N,EAAKwH,GAK1B,OAJAlV,EAAIkV,KAASxH,IAAQ,GACrB1N,EAAIkV,KAASxH,IAAQ,GACrB1N,EAAIkV,KAASxH,IAAQ,EACrB1N,EAAIkV,KAASxH,EACNwH,EAOTrlB,EAAOD,QAteP,MACE,YAAYge,EAAO,KACjB3N,EAAQ2N,IAAS,IAAOA,GAExBhb,KAAKgb,KAAOA,EACZhb,KAAKm1D,OAicT,SAAmBn6C,GACjB,OAAQA,GACN,KAAK,IACH,OAAO,GACT,KAAK,IACH,OAAO,GACT,KAAK,IACH,OAAO,GACT,QACE,MAAM,IAAI/a,MAAM,kBA1cJm1D,CAAUp6C,GACxBhb,KAAKvB,IAAM,KACXuB,KAAKq1D,OAAS,KACdr1D,KAAKs1D,OAAS,KAGhB,gBACE,OAAO,GAGT,KAAK72D,GAGH,GAFA4O,EAAO/N,EAAO8B,SAAS3C,IAEnBA,EAAIiB,SAAYM,KAAKgb,OAAS,EAChC,MAAM,IAAI/a,MAAM,qBAOlB,OALAD,KAAKu1D,UACLv1D,KAAKvB,IAAMa,EAAOa,KAAK1B,GACvBuB,KAAKq1D,OAAS,KACdr1D,KAAKs1D,OAAS,KAEPt1D,KAGT,mBACE,IAAKA,KAAKvB,IACR,MAAM,IAAIwB,MAAM,8BAElB,MAAMu1D,EAAOx1D,KAAKvB,IAElB,GAAI+2D,EAAK91D,SAAYM,KAAKgb,OAAS,EACjC,MAAM,IAAI/a,MAAM,qBAElB,MAAMxB,EAAM,IAAIwP,YAAY,IAE5BxP,EAAI,GAAK+uD,EAAQgI,EAAM,GACvB/2D,EAAI,GAAK+uD,EAAQgI,EAAM,GACvB/2D,EAAI,GAAK+uD,EAAQgI,EAAM,GACvB/2D,EAAI,GAAK+uD,EAAQgI,EAAM,IAEvB,IAAIx2D,EAAI,EACJ9B,EAAI,EAER,GAAkB,MAAd8C,KAAKgb,KAAc,CACrB,OAAS,CACP,MAAMqZ,EAAM51B,EAAIO,EAAI,GAepB,GAbAP,EAAIO,EAAI,GAAKP,EAAIO,GACe,WAA3B21D,EAAKtgC,IAAQ,GAAM,KACQ,SAA3BugC,EAAKvgC,IAAS,EAAK,KACQ,MAA3BogC,EAAKpgC,IAAS,EAAK,KACQ,IAA3BqgC,EAAKrgC,IAAQ,GAAM,KACpB6gC,EAAKh4D,GAETuB,EAAIO,EAAI,GAAKP,EAAIO,EAAI,GAAKP,EAAIO,EAAI,GAClCP,EAAIO,EAAI,GAAKP,EAAIO,EAAI,GAAKP,EAAIO,EAAI,GAClCP,EAAIO,EAAI,GAAKP,EAAIO,EAAI,GAAKP,EAAIO,EAAI,GAElC9B,GAAK,EAEK,KAANA,EACF,MAEF8B,GAAK,EAGP,OAAOP,EAMT,GAHAA,EAAIO,EAAI,GAAKwuD,EAAQgI,EAAM,IAC3B/2D,EAAIO,EAAI,GAAKwuD,EAAQgI,EAAM,IAET,MAAdx1D,KAAKgb,KAAc,CACrB,OAAS,CACP,MAAMqZ,EAAM51B,EAAIO,EAAI,GAepB,GAbAP,EAAIO,EAAI,GAAKP,EAAIO,GACe,WAA3B21D,EAAKtgC,IAAQ,GAAM,KACQ,SAA3BugC,EAAKvgC,IAAS,EAAK,KACQ,MAA3BogC,EAAKpgC,IAAS,EAAK,KACQ,IAA3BqgC,EAAKrgC,IAAQ,GAAM,KACpB6gC,EAAKh4D,GAETuB,EAAIO,EAAI,GAAKP,EAAIO,EAAI,GAAKP,EAAIO,EAAI,GAClCP,EAAIO,EAAI,GAAKP,EAAIO,EAAI,GAAKP,EAAIO,EAAI,GAClCP,EAAIO,EAAI,GAAKP,EAAIO,EAAI,GAAKP,EAAIO,EAAI,GAElC9B,GAAK,EAEK,IAANA,EACF,MAEFuB,EAAIO,EAAI,IAAMP,EAAIO,EAAI,GAAKP,EAAIO,EAAI,GACnCP,EAAIO,EAAI,IAAMP,EAAIO,EAAI,GAAKP,EAAIO,EAAI,IACnCA,GAAK,EAGP,OAAOP,EAMT,GAHAA,EAAIO,EAAI,GAAKwuD,EAAQgI,EAAM,IAC3B/2D,EAAIO,EAAI,GAAKwuD,EAAQgI,EAAM,IAET,MAAdx1D,KAAKgb,KAAc,CACrB,OAAS,CACP,IAAIqZ,EAAM51B,EAAIO,EAAI,GAelB,GAbAP,EAAIO,EAAI,GAAKP,EAAIO,GACe,WAA3B21D,EAAKtgC,IAAQ,GAAM,KACQ,SAA3BugC,EAAKvgC,IAAS,EAAK,KACQ,MAA3BogC,EAAKpgC,IAAS,EAAK,KACQ,IAA3BqgC,EAAKrgC,IAAQ,GAAM,KACpB6gC,EAAKh4D,GAETuB,EAAIO,EAAI,GAAKP,EAAIO,EAAI,GAAKP,EAAIO,EAAI,GAClCP,EAAIO,EAAI,IAAMP,EAAIO,EAAI,GAAKP,EAAIO,EAAI,GACnCP,EAAIO,EAAI,IAAMP,EAAIO,EAAI,GAAKP,EAAIO,EAAI,IAEnC9B,GAAK,EAEK,IAANA,EACF,MAEFm3B,EAAM51B,EAAIO,EAAI,IAEdP,EAAIO,EAAI,IAAMP,EAAIO,EAAI,GACU,WAA3B21D,EAAKtgC,IAAQ,GAAM,KACQ,SAA3BugC,EAAKvgC,IAAQ,GAAM,KACQ,MAA3BogC,EAAKpgC,IAAS,EAAK,KACQ,IAA3BqgC,EAAKrgC,IAAS,EAAK,KAExB51B,EAAIO,EAAI,IAAMP,EAAIO,EAAK,GAAKP,EAAIO,EAAI,IACpCP,EAAIO,EAAI,IAAMP,EAAIO,EAAK,GAAKP,EAAIO,EAAI,IACpCP,EAAIO,EAAI,IAAMP,EAAIO,EAAK,GAAKP,EAAIO,EAAI,IAEpCA,GAAK,EAGP,OAAOP,EAGT,MAAM,IAAIwB,MAAM,iBAGlB,mBAEE,MAAMxB,EAAMuB,KAAKy1D,mBAEjB,IAAIz2D,EAAI,EAGR,IAAK,IAAI9B,EAAI,EAAG8G,EAAI,EAAIhE,KAAKm1D,OAAQj4D,EAAI8G,EAAG9G,GAAK,EAAG8G,GAAK,EAAG,CAC1D,IAAIqwB,EAAM51B,EAAIO,EAAI9B,EAAI,GAEtBuB,EAAIO,EAAI9B,EAAI,GAAKuB,EAAIO,EAAIgF,EAAI,GAC7BvF,EAAIO,EAAIgF,EAAI,GAAKqwB,EAEjBA,EAAM51B,EAAIO,EAAI9B,EAAI,GAClBuB,EAAIO,EAAI9B,EAAI,GAAKuB,EAAIO,EAAIgF,EAAI,GAC7BvF,EAAIO,EAAIgF,EAAI,GAAKqwB,EAEjBA,EAAM51B,EAAIO,EAAI9B,EAAI,GAClBuB,EAAIO,EAAI9B,EAAI,GAAKuB,EAAIO,EAAIgF,EAAI,GAC7BvF,EAAIO,EAAIgF,EAAI,GAAKqwB,EAEjBA,EAAM51B,EAAIO,EAAI9B,EAAI,GAClBuB,EAAIO,EAAI9B,EAAI,GAAKuB,EAAIO,EAAIgF,EAAI,GAC7BvF,EAAIO,EAAIgF,EAAI,GAAKqwB,EAKnB,IAAK,IAAIn3B,EAAI,EAAGA,EAAI8C,KAAKm1D,OAAQj4D,IAC/B8B,GAAK,EAELP,EAAIO,EAAI,GAAK61D,EAAsC,IAAlCH,EAAKj2D,EAAIO,EAAI,KAAO,GAAM,MAC9B81D,EAAsC,IAAlCJ,EAAKj2D,EAAIO,EAAI,KAAO,GAAM,MAC9B+1D,EAAsC,IAAlCL,EAAKj2D,EAAIO,EAAI,KAAQ,EAAK,MAC9Bg2D,EAAsC,IAAlCN,EAAKj2D,EAAIO,EAAI,KAAQ,EAAK,MAE3CP,EAAIO,EAAI,GAAK61D,EAAsC,IAAlCH,EAAKj2D,EAAIO,EAAI,KAAO,GAAM,MAC9B81D,EAAsC,IAAlCJ,EAAKj2D,EAAIO,EAAI,KAAO,GAAM,MAC9B+1D,EAAsC,IAAlCL,EAAKj2D,EAAIO,EAAI,KAAQ,EAAK,MAC9Bg2D,EAAsC,IAAlCN,EAAKj2D,EAAIO,EAAI,KAAQ,EAAK,MAE3CP,EAAIO,EAAI,GAAK61D,EAAsC,IAAlCH,EAAKj2D,EAAIO,EAAI,KAAO,GAAM,MAC9B81D,EAAsC,IAAlCJ,EAAKj2D,EAAIO,EAAI,KAAO,GAAM,MAC9B+1D,EAAsC,IAAlCL,EAAKj2D,EAAIO,EAAI,KAAQ,EAAK,MAC9Bg2D,EAAsC,IAAlCN,EAAKj2D,EAAIO,EAAI,KAAQ,EAAK,MAE3CP,EAAIO,EAAI,GAAK61D,EAAsC,IAAlCH,EAAKj2D,EAAIO,EAAI,KAAO,GAAM,MAC9B81D,EAAsC,IAAlCJ,EAAKj2D,EAAIO,EAAI,KAAO,GAAM,MAC9B+1D,EAAsC,IAAlCL,EAAKj2D,EAAIO,EAAI,KAAQ,EAAK,MAC9Bg2D,EAAsC,IAAlCN,EAAKj2D,EAAIO,EAAI,KAAQ,EAAK,MAG7C,OAAOP,EAGT,gBAGE,OAFKuB,KAAKq1D,SACRr1D,KAAKq1D,OAASr1D,KAAKy1D,oBACdz1D,KAAKq1D,OAGd,gBAGE,OAFKr1D,KAAKs1D,SACRt1D,KAAKs1D,OAASt1D,KAAK01D,oBACd11D,KAAKs1D,OAGd,QAAQjgC,EAAQsgC,EAAMh8C,EAAOi8C,GAC3B,MAAMn3D,EAAMuB,KAAK61D,gBAIjB,IAQIhY,EAAIC,EAAIa,EAAIC,EARZkX,EAAKtI,EAAQ7zC,EAAOi8C,EAAQ,GAAKn3D,EAAI,GACrCisC,EAAK8iB,EAAQ7zC,EAAOi8C,EAAQ,GAAKn3D,EAAI,GACrCksC,EAAK6iB,EAAQ7zC,EAAOi8C,EAAQ,GAAKn3D,EAAI,GACrCs3D,EAAKvI,EAAQ7zC,EAAOi8C,EAAO,IAAMn3D,EAAI,GAGrCT,EAAIgC,KAAKm1D,SAAW,EACpBn2D,EAAI,EAGR,KACE6+C,EAAK4W,EAAKqB,IAAO,GAAM,KAClBpB,EAAKhqB,IAAO,GAAM,KAClBiqB,EAAKhqB,IAAQ,EAAK,KAClBiqB,EAAKmB,IAAQ,EAAK,KAClBt3D,EAAIO,EAAI,GAEb8+C,EAAK2W,EAAK/pB,IAAO,GAAM,KAClBgqB,EAAK/pB,IAAO,GAAM,KAClBgqB,EAAKoB,IAAQ,EAAK,KAClBnB,EAAKkB,IAAQ,EAAK,KAClBr3D,EAAIO,EAAI,GAEb2/C,EAAK8V,EAAK9pB,IAAO,GAAM,KAClB+pB,EAAKqB,IAAO,GAAM,KAClBpB,EAAKmB,IAAQ,EAAK,KAClBlB,EAAKlqB,IAAQ,EAAK,KAClBjsC,EAAIO,EAAI,GAEb4/C,EAAK6V,EAAKsB,IAAO,GAAM,KAClBrB,EAAKoB,IAAO,GAAM,KAClBnB,EAAKjqB,IAAQ,EAAK,KAClBkqB,EAAKjqB,IAAQ,EAAK,KAClBlsC,EAAIO,EAAI,GAEbA,GAAK,EACLhB,GAAK,EAEK,IAANA,GAGJ83D,EAAKrB,EAAK5W,IAAO,GAAM,KAClB6W,EAAK5W,IAAO,GAAM,KAClB6W,EAAKhW,IAAQ,EAAK,KAClBiW,EAAKhW,IAAQ,EAAK,KAClBngD,EAAIO,EAAI,GAEb0rC,EAAK+pB,EAAK3W,IAAO,GAAM,KAClB4W,EAAK/V,IAAO,GAAM,KAClBgW,EAAK/V,IAAQ,EAAK,KAClBgW,EAAK/W,IAAQ,EAAK,KAClBp/C,EAAIO,EAAI,GAEb2rC,EAAK8pB,EAAK9V,IAAO,GAAM,KAClB+V,EAAK9V,IAAO,GAAM,KAClB+V,EAAK9W,IAAQ,EAAK,KAClB+W,EAAK9W,IAAQ,EAAK,KAClBr/C,EAAIO,EAAI,GAEb+2D,EAAKtB,EAAK7V,IAAO,GAAM,KAClB8V,EAAK7W,IAAO,GAAM,KAClB8W,EAAK7W,IAAQ,EAAK,KAClB8W,EAAKjW,IAAQ,EAAK,KAClBlgD,EAAIO,EAAI,GAkCf,OA7BA82D,EAAgC,WAA1BnB,EAAK9W,IAAO,GAAM,KACQ,SAA1B+W,EAAK9W,IAAO,GAAM,KACQ,MAA1B2W,EAAK9V,IAAQ,EAAK,KACQ,IAA1B+V,EAAK9V,IAAQ,EAAK,KACnBngD,EAAIO,EAAI,GAEb0rC,EAAgC,WAA1BiqB,EAAK7W,IAAO,GAAM,KACQ,SAA1B8W,EAAKjW,IAAO,GAAM,KACQ,MAA1B8V,EAAK7V,IAAQ,EAAK,KACQ,IAA1B8V,EAAK7W,IAAQ,EAAK,KACnBp/C,EAAIO,EAAI,GAEb2rC,EAAgC,WAA1BgqB,EAAKhW,IAAO,GAAM,KACQ,SAA1BiW,EAAKhW,IAAO,GAAM,KACQ,MAA1B6V,EAAK5W,IAAQ,EAAK,KACQ,IAA1B6W,EAAK5W,IAAQ,EAAK,KACnBr/C,EAAIO,EAAI,GAEb+2D,EAAgC,WAA1BpB,EAAK/V,IAAO,GAAM,KACQ,SAA1BgW,EAAK/W,IAAO,GAAM,KACQ,MAA1B4W,EAAK3W,IAAQ,EAAK,KACQ,IAA1B4W,EAAK/V,IAAQ,EAAK,KACnBlgD,EAAIO,EAAI,GAEbusD,EAASl2B,EAAQygC,EAAIH,EAAO,GAC5BpK,EAASl2B,EAAQqV,EAAIirB,EAAO,GAC5BpK,EAASl2B,EAAQsV,EAAIgrB,EAAO,GAC5BpK,EAASl2B,EAAQ0gC,EAAIJ,EAAO,IAErB31D,KAGT,QAAQq1B,EAAQsgC,EAAMh8C,EAAOi8C,GAC3B,MAAMn3D,EAAMuB,KAAKg2D,gBAIjB,IAQInY,EAAIC,EAAIa,EAAIC,EARZkX,EAAKtI,EAAQ7zC,EAAOi8C,EAAQ,GAAKn3D,EAAI,GACrCisC,EAAK8iB,EAAQ7zC,EAAOi8C,EAAQ,GAAKn3D,EAAI,GACrCksC,EAAK6iB,EAAQ7zC,EAAOi8C,EAAQ,GAAKn3D,EAAI,GACrCs3D,EAAKvI,EAAQ7zC,EAAOi8C,EAAO,IAAMn3D,EAAI,GAGrCT,EAAIgC,KAAKm1D,SAAW,EACpBn2D,EAAI,EAGR,KACE6+C,EAAKgX,EAAKiB,IAAO,GAAM,KAClBhB,EAAKiB,IAAO,GAAM,KAClBhB,EAAKpqB,IAAQ,EAAK,KAClBqqB,EAAKtqB,IAAQ,EAAK,KAClBjsC,EAAIO,EAAI,GAEb8+C,EAAK+W,EAAKnqB,IAAO,GAAM,KAClBoqB,EAAKgB,IAAO,GAAM,KAClBf,EAAKgB,IAAQ,EAAK,KAClBf,EAAKrqB,IAAQ,EAAK,KAClBlsC,EAAIO,EAAI,GAEb2/C,EAAKkW,EAAKlqB,IAAO,GAAM,KAClBmqB,EAAKpqB,IAAO,GAAM,KAClBqqB,EAAKe,IAAQ,EAAK,KAClBd,EAAKe,IAAQ,EAAK,KAClBt3D,EAAIO,EAAI,GAEb4/C,EAAKiW,EAAKkB,IAAO,GAAM,KAClBjB,EAAKnqB,IAAO,GAAM,KAClBoqB,EAAKrqB,IAAQ,EAAK,KAClBsqB,EAAKc,IAAQ,EAAK,KAClBr3D,EAAIO,EAAI,GAEbA,GAAK,EACLhB,GAAK,EAEK,IAANA,GAGJ83D,EAAKjB,EAAKhX,IAAO,GAAM,KAClBiX,EAAKlW,IAAO,GAAM,KAClBmW,EAAKpW,IAAQ,EAAK,KAClBqW,EAAKlX,IAAQ,EAAK,KAClBr/C,EAAIO,EAAI,GAEb0rC,EAAKmqB,EAAK/W,IAAO,GAAM,KAClBgX,EAAKjX,IAAO,GAAM,KAClBkX,EAAKnW,IAAQ,EAAK,KAClBoW,EAAKrW,IAAQ,EAAK,KAClBlgD,EAAIO,EAAI,GAEb2rC,EAAKkqB,EAAKlW,IAAO,GAAM,KAClBmW,EAAKhX,IAAO,GAAM,KAClBiX,EAAKlX,IAAQ,EAAK,KAClBmX,EAAKpW,IAAQ,EAAK,KAClBngD,EAAIO,EAAI,GAEb+2D,EAAKlB,EAAKjW,IAAO,GAAM,KAClBkW,EAAKnW,IAAO,GAAM,KAClBoW,EAAKjX,IAAQ,EAAK,KAClBkX,EAAKnX,IAAQ,EAAK,KAClBp/C,EAAIO,EAAI,GAkCf,OA7BA82D,EAAMb,EAAKpX,IAAO,GAAM,MAAS,GAC3BoX,EAAKrW,IAAO,GAAM,MAAS,GAC3BqW,EAAKtW,IAAQ,EAAK,MAAU,EAC5BsW,EAAKnX,IAAQ,EAAK,MAAU,EAC7Br/C,EAAIO,EAAI,GAEb0rC,EAAMuqB,EAAKnX,IAAO,GAAM,MAAS,GAC3BmX,EAAKpX,IAAO,GAAM,MAAS,GAC3BoX,EAAKrW,IAAQ,EAAK,MAAU,EAC5BqW,EAAKtW,IAAQ,EAAK,MAAU,EAC7BlgD,EAAIO,EAAI,GAEb2rC,EAAMsqB,EAAKtW,IAAO,GAAM,MAAS,GAC3BsW,EAAKnX,IAAO,GAAM,MAAS,GAC3BmX,EAAKpX,IAAQ,EAAK,MAAU,EAC5BoX,EAAKrW,IAAQ,EAAK,MAAU,EAC7BngD,EAAIO,EAAI,GAEb+2D,EAAMd,EAAKrW,IAAO,GAAM,MAAS,GAC3BqW,EAAKtW,IAAO,GAAM,MAAS,GAC3BsW,EAAKnX,IAAQ,EAAK,MAAU,EAC5BmX,EAAKpX,IAAQ,EAAK,MAAU,EAC7Bp/C,EAAIO,EAAI,GAEbusD,EAASl2B,EAAQygC,EAAIH,EAAO,GAC5BpK,EAASl2B,EAAQqV,EAAIirB,EAAO,GAC5BpK,EAASl2B,EAAQsV,EAAIgrB,EAAO,GAC5BpK,EAASl2B,EAAQ0gC,EAAIJ,EAAO,IAErB31D,KAGT,UACE,GAAIA,KAAKvB,IACP,IAAK,IAAIvB,EAAI,EAAGA,EAAI8C,KAAKvB,IAAIiB,OAAQxC,IACnC8C,KAAKvB,IAAIvB,GAAK,EAGlB,GAAI8C,KAAKq1D,OACP,IAAK,IAAIn4D,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKq1D,OAAOn4D,GAAK,EAGrB,GAAI8C,KAAKs1D,OACP,IAAK,IAAIp4D,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKs1D,OAAOp4D,GAAK,EAOrB,OAJA8C,KAAKvB,IAAM,KACXuB,KAAKq1D,OAAS,KACdr1D,KAAKs1D,OAAS,KAEPt1D,S;;;;;GClhCX/C,EAAOD,QAAU,EAAQ,M,8BCRzB;;;;;;AAQA,MAAMqQ,EAAS,EAAQ,IACjBkN,EAAK,EAAQ,GAMnB,SAASskB,EAASl9B,EAAMiG,EAAK6jC,GAK3B,GAJAp+B,EAAO/N,EAAO8B,SAASO,IACvB0L,EAAQzF,IAAQ,IAAOA,GACvByF,EAAyB,kBAAXo+B,GAEV7jC,GAAOjG,EAAKjC,OACd,MAAM,IAAIO,MAAM,iBAElB,MAAM2+B,EAAQj9B,EAAKiG,GACbuB,EAAgB,IAARy1B,EAKd,GAHAh3B,GAAO,EAGgB,IAAV,IAARg3B,GAEH,MAAO,CAACz1B,EAAOvB,GAIjB,GAAI6jC,GAAoB,IAAVtiC,EACZ,MAAM,IAAIlJ,MAAM,sBAGlB,IAAI6B,EAAO,EAEX,IAAK,IAAI5E,EAAI,EAAGA,EAAIiM,EAAOjM,IAAK,CAC9BmQ,EAAOzF,EAAMjG,EAAKjC,QAElB,MAAMwe,EAAKvc,EAAKiG,GAIhB,GAFAA,GAAO,EAEH9F,GAAS,GAAK,GAChB,MAAM,IAAI7B,MAAM,qBAKlB,GAHA6B,GAAQ,IACRA,GAAQoc,EAEJutB,GAAmB,IAAT3pC,EACZ,MAAM,IAAI7B,MAAM,8BAGpB,GAAIwrC,GAAU3pC,EAAO,IACnB,MAAM,IAAI7B,MAAM,uBAElB,MAAO,CAAC6B,EAAM8F,GAsBhB,SAAS+jC,EAAQhqC,EAAMiG,EAAK6jC,GAAS,GAKnC,GAJAp+B,EAAO/N,EAAO8B,SAASO,IACvB0L,EAAQzF,IAAQ,IAAOA,GACvByF,EAAyB,kBAAXo+B,GAEV7jC,GAAOjG,EAAKjC,QAAwB,IAAdiC,EAAKiG,GAC7B,MAAM,IAAI3H,MAAM,wBAIlB,IAAI6B,EAGJ,GALA8F,GAAO,GAGN9F,EAAM8F,GAAOi3B,EAASl9B,EAAMiG,EAAK6jC,GAE9B7jC,EAAM9F,EAAOH,EAAKjC,OACpB,MAAM,IAAIO,MAAM,+BAElB,GAAIwrC,EAAQ,CAEV,GAAa,IAAT3pC,EACF,MAAM,IAAI7B,MAAM,wBAGlB,GAAgB,IAAZ0B,EAAKiG,GACP,MAAM,IAAI3H,MAAM,8BAGlB,GAAI6B,EAAO,GACS,IAAdH,EAAKiG,IAA4C,IAAV,IAAhBjG,EAAKiG,EAAM,IACpC,MAAM,IAAI3H,MAAM,8BAKtB,KAAO6B,EAAO,GAAmB,IAAdH,EAAKiG,IACtBA,GAAO,EACP9F,GAAQ,EAIV,GAAIA,EAAO,KACT,MAAM,IAAI7B,MAAM,yBAMlB,MAAO,CAJKsa,EAAG2C,OAAOvb,EAAKV,MAAM2G,EAAKA,EAAM9F,IAE5C8F,GAAO9F,GAoBT,SAASm0D,EAASn0D,GAGhB,OAFAuL,EAAQvL,IAAS,IAAOA,GAEpBA,GAAQ,IACH,EAELA,GAAQ,IACH,GAETuL,EAAOvL,GAAQ,OAER,GA6BT,SAASo0D,EAAUv0D,EAAMiG,EAAK9F,GAsB5B,OArBAuL,EAAO/N,EAAO8B,SAASO,IACvB0L,EAAQzF,IAAQ,IAAOA,GACvByF,EAAQvL,IAAS,IAAOA,GAEpBA,GAAQ,IAEVH,EAAKiG,KAAS9F,EACLA,GAAQ,KAEjBH,EAAKiG,KAAS,IACdjG,EAAKiG,KAAS9F,IAGduL,EAAOvL,GAAQ,OACfH,EAAKiG,KAAS,IACdjG,EAAKiG,KAAS9F,GAAQ,EACtBH,EAAKiG,KAAgB,IAAP9F,GAGhBuL,EAAOzF,GAAOjG,EAAKjC,QAEZkI,EAiET5K,EAAQ6hC,SAAWA,EACnB7hC,EAAQ0uC,QAnNR,SAAiB/pC,EAAMiG,EAAK6jC,GAAS,GAKnC,GAJAp+B,EAAO/N,EAAO8B,SAASO,IACvB0L,EAAQzF,IAAQ,IAAOA,GACvByF,EAAyB,kBAAXo+B,GAEV7jC,GAAOjG,EAAKjC,QAAwB,KAAdiC,EAAKiG,GAC7B,MAAM,IAAI3H,MAAM,yBAIlB,IAAI6B,EAGJ,GALA8F,GAAO,GAGN9F,EAAM8F,GAAOi3B,EAASl9B,EAAMiG,EAAK6jC,GAE9BA,GAAU7jC,EAAM9F,IAASH,EAAKjC,OAChC,MAAM,IAAIO,MAAM,mBAElB,OAAO2H,GAoMT5K,EAAQ2uC,QAAUA,EAClB3uC,EAAQm5D,YAjJR,SAAqBx0D,EAAMiG,EAAK2V,EAASkuB,GAAS,GAMhD,IAAI3wB,EAGJ,GARAzN,EAAO/N,EAAO8B,SAASO,IACvB0L,EAAQzF,IAAQ,IAAOA,GACvByF,GAAkB,IAAVkQ,KAAoBA,GAC5BlQ,EAAyB,kBAAXo+B,IAGb3wB,EAAKlT,GAAO+jC,EAAQhqC,EAAMiG,EAAK6jC,GAEN,IAAtB3wB,EAAIoB,KAAKqB,GACX,MAAM,IAAItd,MAAM,oBAElB,OAAO2H,GAsIT5K,EAAQi5D,SAAWA,EACnBj5D,EAAQsuC,QAtHR,SAAiBxpC,GACf,OAAO,EAAIm0D,EAASn0D,GAAQA,GAsH9B9E,EAAQquC,QAnHR,SAAiBvwB,GACfzN,EAAOyN,aAAeP,GAGtB,MAAMS,EAAOF,EAAII,YAEjB,IAAIpZ,EAAQkZ,EAAO,IAAO,EAQ1B,OANIA,EAAO,GAAoB,IAAP,EAAPA,KACflZ,GAAQgZ,EAAI8J,MAAM5J,EAAO,IAEd,IAATA,IACFlZ,EAAO,GAEF,EAAIm0D,EAASn0D,GAAQA,GAsG9B9E,EAAQo5D,YAnGR,SAAqB74C,GAEnB,OADAlQ,GAAkB,IAAVkQ,KAAoBA,GACrB,GAkGTvgB,EAAQk5D,UAAYA,EACpBl5D,EAAQuuC,SAvER,SAAkB5pC,EAAMiG,EAAK9F,GAM3B,OALAuL,EAAO/N,EAAO8B,SAASO,IACvB0L,EAAQzF,IAAQ,IAAOA,GAEvBjG,EAAKiG,KAAS,GAEPsuD,EAAUv0D,EAAMiG,EAAK9F,IAkE9B9E,EAAQwuC,SA/DR,SAAkB7pC,EAAMiG,EAAKkT,GAC3BzN,EAAO/N,EAAO8B,SAASO,IACvB0L,EAAQzF,IAAQ,IAAOA,GACvByF,EAAOyN,aAAeP,GAGtB,MAAMS,EAAOF,EAAII,YAEjB,IAAIpZ,EAAQkZ,EAAO,IAAO,EACtBxH,EAAM,EAwBV,OAtBIwH,EAAO,GAAoB,IAAP,EAAPA,KACfxH,EAAMsH,EAAI8J,MAAM5J,EAAO,IAEZ,IAATA,IACFlZ,EAAO,GAETH,EAAKiG,KAAS,EAEdA,EAAMsuD,EAAUv0D,EAAMiG,EAAK4L,EAAM1R,GAE7B0R,IACF7R,EAAKiG,KAAS,GAEH,IAAToT,EACFF,EAAIF,SAASrZ,KAAKI,EAAMiG,GAExBjG,EAAKiG,GAAO,EAIdyF,GAFAzF,GAAO9F,IAEOH,EAAKjC,QAEZkI,GA+BT5K,EAAQq5D,aA5BR,SAAsB10D,EAAMiG,EAAK2V,GAU/B,OATAlQ,EAAO/N,EAAO8B,SAASO,IACvB0L,EAAQzF,IAAQ,IAAOA,GACvByF,GAAkB,IAAVkQ,KAAoBA,GAC5BlQ,EAAOzF,EAAM,GAAKjG,EAAKjC,QAEvBiC,EAAKiG,KAAS,EACdjG,EAAKiG,KAAS,EACdjG,EAAKiG,KAAS2V,EAEP3V,K,sDC3QT;;;;;;;;;;;;;;;AAiBA,MAAMyF,EAAS,EAAQ,GACjBkN,EAAK,EAAQ,GACb+7C,EAAW,EAAQ,IACnBvpB,EAAS,EAAQ,IA2FvB9vC,EAAOD,QArFP,MACE,YAAY4pC,EAAOhsB,EAASnc,IAAOA,IACjCuB,KAAK4mC,MAAQA,EACb5mC,KAAK4a,OAASA,EACd5a,KAAKmT,KAAO,IAAI45B,EAChB/sC,KAAKu2D,OAAS,IAAID,EAClBt2D,KAAKvB,IAAMa,EAAOkH,MAAM,GAAI,GAC5BxG,KAAKsV,GAAKhW,EAAOkH,MAAM,EAAG,GAC1BxG,KAAKwpD,MAAQ,CAAC,IAAIjvC,EAAG,GAAI,IAAIA,EAAG,IAGlC,KAAK0wB,GACH59B,EAAOvE,MAAM1J,QAAQ6rC,IAErBjrC,KAAKmT,KAAKvE,OAEV,IAAK,MAAOtB,EAAKs7B,EAAKnqC,KAAQwsC,EAC5BjrC,KAAKmT,KAAKX,OAAOu6B,EAAOV,OAAO/+B,IAC/BtN,KAAKmT,KAAKX,OAAOo2B,GACjB5oC,KAAKmT,KAAKX,OAAOxS,KAAK4a,OAAOnc,IAO/B,OAJAuB,KAAKvB,IAAMuB,KAAKmT,KAAKI,QACrBvT,KAAKwpD,MAAM,GAAK,IAAIjvC,EAAG,GACvBva,KAAKwpD,MAAM,GAAK,IAAIjvC,EAAG,GAEhBva,KAGT,QAAQw2D,GACN,MAAM10D,EAA+B,EAAxB9B,KAAK4mC,MAAM6C,WAClB9nC,EAAOrC,EAAOkH,MAAM1E,EAAM,GAC1BigB,EAAOpgB,EAAKV,MAAM,EAAGjB,KAAK4mC,MAAM6C,YAChCznB,EAAQrgB,EAAKV,MAAMjB,KAAK4mC,MAAM6C,YAKpC,OAHAzpC,KAAKu2D,OAAO3nD,KAAK5O,KAAKvB,IAAKuB,KAAKsV,GAAIkhD,GACpCx2D,KAAKu2D,OAAOrhD,QAAQvT,GAEb,CACL3B,KAAK4mC,MAAMM,aAAanlB,GACxB/hB,KAAK4mC,MAAMM,aAAallB,IAI5B,QAAQw0C,GACN,IAAIC,EAAW,EAEf,OAAS,CAEPz2D,KAAKsV,GAAG,GAAKmhD,EACbz2D,KAAKsV,GAAG,GAAKmhD,IAAa,EAC1Bz2D,KAAKsV,GAAG,GAAKmhD,IAAa,GAC1Bz2D,KAAKsV,GAAG,GAAKmhD,IAAa,GAE1BA,GAAY,EAEZ,MAAO/rB,EAAIC,GAAM3qC,KAAKkV,QAAQshD,GAE9B,KAAI9rB,EAAGjnB,UAAYinB,EAAGzoB,IAAIjiB,KAAK4mC,MAAMjoC,IAAM,MAGvCgsC,EAAGlnB,UAAYknB,EAAG1oB,IAAIjiB,KAAK4mC,MAAMjoC,IAAM,GAA3C,CAGAqB,KAAKwpD,MAAM,GAAK9e,EAChB1qC,KAAKwpD,MAAM,GAAK7e,EAEhB,QAIJ,SAASlsB,GAMP,OALApR,EAAQoR,IAAU,IAAOA,GAEb,EAARA,GACFze,KAAK02D,QAAQj4C,IAAU,GAElBze,KAAKwpD,MAAc,EAAR/qC,O,sDCvGtB;;;;;;;;;;;;AAcA,MAAM6rC,EAAS,EAAQ,IAMvB,MAAMoC,UAAcpC,EAMlB,cACEvyB,QAGF,MAAM12B,GACJ,OAAO02B,MAAMxkB,MAAM,GAAMlS,GAG3B,cACE,OAAO,IAAIqrD,EAGb,YAAY1xC,EAAM3Z,GAChB,OAAO02B,MAAMizB,KAAKhwC,EAAM,GAAM3Z,GAGhC,cAAcM,EAAMqZ,EAAM3Z,GACxB,OAAO02B,MAAMsU,OAAO1qC,EAAMqZ,EAAM,GAAM3Z,GAGxC,YAAY0gB,EAAMC,EAAOhH,EAAM3Z,GAC7B,OAAO02B,MAAM+xB,KAAK/nC,EAAMC,EAAOhH,EAAM,GAAM3Z,GAG7C,aAAamG,EAAGC,EAAG4T,EAAGL,EAAM3Z,GAC1B,OAAO02B,MAAM60B,MAAMplD,EAAGC,EAAG4T,EAAGL,EAAM,GAAM3Z,GAG1C,WAAWM,EAAMlD,EAAKuc,EAAM3Z,GAC1B,OAAO02B,MAAM80B,IAAIlrD,EAAMlD,EAAKuc,EAAM,GAAM3Z,IAQ5CqrD,EAAMlmB,OAAS8jB,EAAO9jB,OACtBkmB,EAAMnmB,GAAK,WACXmmB,EAAM5qD,KAAO,GACb4qD,EAAM1xC,KAAO,IACb0xC,EAAM76C,UAAY,IAClB66C,EAAM5c,KAAOxwC,EAAOkH,MAAM,GAAI,GAC9BkmD,EAAMl6B,IAAM,IAAIk6B,EAMhBzvD,EAAOD,QAAU0vD,I,sDC3EjB;;;;;;AAQA,MAAMrZ,EAAS,EAAQ,IACjBxyC,EAAW,EAAQ,IACnBklC,EAAU,EAAQ,IAClBhH,EAAgB,EAAQ,IACxB43B,EAAe,EAAQ,IACvBC,EAAe,EAAQ,IACvBC,EAAe,EAAQ,IACvB/+B,EAAS,EAAQ,KAwBvB,SAASg/B,EAAMrO,EAAM3mD,GACnB,OAAO,SAASH,EAAM2gB,GAIpB,GAHAyjB,EAAQzmC,EAAO8B,SAASO,GAAO,OAAQ,UACvCokC,EAASzjB,IAAQ,IAAOA,EAAK,MAAO,WAEhCA,EAAMxgB,EAAOH,EAAKjC,OACpB,MAAM,IAAIq/B,EAAczc,EAAK,sBAE/B,OAAOmmC,EAAK9mD,EAAM2gB,IAItB,SAASy0C,EAAOtO,GACd,OAAO,SAAS9mD,EAAM2gB,EAAKjhB,GAKzB,GAJA0kC,EAAQzmC,EAAO8B,SAASO,GAAO,OAAQ,UACvCokC,EAASzjB,IAAQ,IAAOA,EAAK,MAAO,WACpCyjB,EAAS1kC,IAAQ,IAAOA,EAAK,MAAO,WAEhCihB,EAAMjhB,EAAMM,EAAKjC,OACnB,MAAM,IAAIq/B,EAAczc,EAAK,sBAE/B,OAAOmmC,EAAK9mD,EAAM2gB,EAAKjhB,IAI3B,SAAS21D,EAASvO,GAChB,OAAO,SAAS9mD,EAAM2gB,GAGpB,OAFAyjB,EAAQzmC,EAAO8B,SAASO,GAAO,OAAQ,UACvCokC,EAASzjB,IAAQ,IAAOA,EAAK,MAAO,WAC7BmmC,EAAK9mD,EAAM2gB,IAItB,SAAS20C,EAAOxO,EAAM3mD,GACpB,OAAO,SAASH,EAAMmZ,EAAKwH,GAIzB,GAHAyjB,EAAQzmC,EAAO8B,SAASO,GAAO,OAAQ,UACvCokC,EAASzjB,IAAQ,IAAOA,EAAK,MAAO,WAEhCA,EAAMxgB,EAAOH,EAAKjC,OACpB,MAAM,IAAIq/B,EAAczc,EAAK,uBAE/B,OAAOmmC,EAAK9mD,EAAMmZ,EAAKwH,IAI3B,SAAS40C,EAAQzO,GACf,OAAO,SAAS9mD,EAAMmZ,EAAKwH,EAAKjhB,GAK9B,GAJA0kC,EAAQzmC,EAAO8B,SAASO,GAAO,OAAQ,UACvCokC,EAASzjB,IAAQ,IAAOA,EAAK,MAAO,WACpCyjB,EAAS1kC,IAAQ,IAAOA,EAAK,MAAO,WAEhCihB,EAAMjhB,EAAMM,EAAKjC,OACnB,MAAM,IAAIq/B,EAAczc,EAAK,uBAE/B,OAAOmmC,EAAK9mD,EAAMmZ,EAAKwH,EAAKjhB,IAIhC,SAAS81D,EAAS1O,EAAM3mD,GACtB,OAAO,SAASH,EAAMmZ,EAAKwH,GAIzB,GAHAyjB,EAAQzmC,EAAO8B,SAASO,GAAO,OAAQ,UACvCokC,EAASzjB,IAAQ,IAAOA,EAAK,MAAO,WAEhCA,EAAMxgB,EAAKgZ,GAAOnZ,EAAKjC,OACzB,MAAM,IAAIq/B,EAAczc,EAAK,uBAE/B,OAAOmmC,EAAK9mD,EAAMmZ,EAAKwH,IAxF3BtlB,EAAQq2C,OAASA,EACjBr2C,EAAQ6D,SAAWA,EACnB7D,EAAQ+hC,cAAgBA,EACxB/hC,EAAQ25D,aAAeA,EACvB35D,EAAQ45D,aAAeA,EACvB55D,EAAQ65D,aAAeA,EACvB75D,EAAQ86B,OAASA,EAEjB96B,EAAQ2G,KAAO,SAAchC,EAAMy1D,GACjC,OAAO,IAAIT,EAAah1D,EAAMy1D,IAGhCp6D,EAAQgE,MAAQ,SAAec,GAC7B,OAAe,MAARA,EACH,IAAI+0D,EAAa/0D,GACjB,IAAI80D,GAGV55D,EAAQq6D,KAAO,SAAcv1D,GAC3B,OAAO+0D,EAAaQ,KAAKv1D,IAyE3B9E,EAAQs0D,MAAQyF,EAAOl2D,EAASywD,OAChCt0D,EAAQuwD,QAAUuJ,EAAMj2D,EAAS0sD,QAAS,GAC1CvwD,EAAQ0wD,QAAUoJ,EAAMj2D,EAAS6sD,QAAS,GAC1C1wD,EAAQ4wD,QAAUkJ,EAAMj2D,EAAS+sD,QAAS,GAC1C5wD,EAAQ6wD,QAAUiJ,EAAMj2D,EAASgtD,QAAS,GAC1C7wD,EAAQwwD,QAAUsJ,EAAMj2D,EAAS2sD,QAAS,GAC1CxwD,EAAQ2wD,QAAUmJ,EAAMj2D,EAAS8sD,QAAS,GAC1C3wD,EAAQ8wD,QAAUgJ,EAAMj2D,EAASitD,QAAS,GAC1C9wD,EAAQw9B,OAASs8B,EAAMj2D,EAAS25B,OAAQ,GAExCx9B,EAAQ89B,QAAUi8B,EAAOl2D,EAASi6B,SAClC99B,EAAQ+wD,UAAY+I,EAAMj2D,EAASktD,UAAW,GAC9C/wD,EAAQixD,UAAY6I,EAAMj2D,EAASotD,UAAW,GAC9CjxD,EAAQmxD,UAAY2I,EAAMj2D,EAASstD,UAAW,GAC9CnxD,EAAQoxD,UAAY0I,EAAMj2D,EAASutD,UAAW,GAC9CpxD,EAAQgxD,UAAY8I,EAAMj2D,EAASmtD,UAAW,GAC9ChxD,EAAQkxD,UAAY4I,EAAMj2D,EAASqtD,UAAW,GAC9ClxD,EAAQqxD,UAAYyI,EAAMj2D,EAASwtD,UAAW,GAE9CrxD,EAAQu0D,MAAQwF,EAAOl2D,EAAS0wD,OAChCv0D,EAAQsxD,QAAUwI,EAAMj2D,EAASytD,QAAS,GAC1CtxD,EAAQyxD,QAAUqI,EAAMj2D,EAAS4tD,QAAS,GAC1CzxD,EAAQ2xD,QAAUmI,EAAMj2D,EAAS8tD,QAAS,GAC1C3xD,EAAQ4xD,QAAUkI,EAAMj2D,EAAS+tD,QAAS,GAC1C5xD,EAAQuxD,QAAUuI,EAAMj2D,EAAS0tD,QAAS,GAC1CvxD,EAAQ0xD,QAAUoI,EAAMj2D,EAAS6tD,QAAS,GAC1C1xD,EAAQ6xD,QAAUiI,EAAMj2D,EAASguD,QAAS,GAC1C7xD,EAAQ8xD,OAASgI,EAAMj2D,EAASiuD,OAAQ,GAExC9xD,EAAQw0D,QAAUuF,EAAOl2D,EAAS2wD,SAClCx0D,EAAQ+xD,UAAY+H,EAAMj2D,EAASkuD,UAAW,GAC9C/xD,EAAQiyD,UAAY6H,EAAMj2D,EAASouD,UAAW,GAC9CjyD,EAAQmyD,UAAY2H,EAAMj2D,EAASsuD,UAAW,GAC9CnyD,EAAQoyD,UAAY0H,EAAMj2D,EAASuuD,UAAW,GAC9CpyD,EAAQgyD,UAAY8H,EAAMj2D,EAASmuD,UAAW,GAC9ChyD,EAAQkyD,UAAY4H,EAAMj2D,EAASquD,UAAW,GAC9ClyD,EAAQqyD,UAAYyH,EAAMj2D,EAASwuD,UAAW,GAE9CryD,EAAQ0yD,UAAYoH,EAAMj2D,EAAS6uD,UAAW,GAC9C1yD,EAAQgO,YAAc8rD,EAAMj2D,EAASmK,YAAa,GAClDhO,EAAQ2yD,WAAamH,EAAMj2D,EAAS8uD,WAAY,GAChD3yD,EAAQkO,aAAe4rD,EAAMj2D,EAASqK,aAAc,GAEpDlO,EAAQy0D,OAASyF,EAAQr2D,EAAS4wD,QAClCz0D,EAAQ4yD,SAAWqH,EAAOp2D,EAAS+uD,SAAU,GAC7C5yD,EAAQ8yD,SAAWmH,EAAOp2D,EAASivD,SAAU,GAC7C9yD,EAAQgzD,SAAWiH,EAAOp2D,EAASmvD,SAAU,GAC7ChzD,EAAQizD,SAAWgH,EAAOp2D,EAASovD,SAAU,GAC7CjzD,EAAQuuD,SAAW0L,EAAOp2D,EAAS0qD,SAAU,GAC7CvuD,EAAQkzD,SAAW+G,EAAOp2D,EAASqvD,SAAU,GAC7ClzD,EAAQmzD,SAAW8G,EAAOp2D,EAASsvD,SAAU,GAC7CnzD,EAAQu9B,QAAU08B,EAAOp2D,EAAS05B,QAAS,GAE3Cv9B,EAAQ00D,SAAWwF,EAAQr2D,EAAS6wD,UACpC10D,EAAQg+B,WAAai8B,EAAOp2D,EAASm6B,WAAY,GACjDh+B,EAAQozD,WAAa6G,EAAOp2D,EAASuvD,WAAY,GACjDpzD,EAAQqzD,WAAa4G,EAAOp2D,EAASwvD,WAAY,GACjDrzD,EAAQszD,WAAa2G,EAAOp2D,EAASyvD,WAAY,GACjDtzD,EAAQuzD,WAAa0G,EAAOp2D,EAAS0vD,WAAY,GACjDvzD,EAAQ0hC,WAAau4B,EAAOp2D,EAAS69B,WAAY,GACjD1hC,EAAQyhC,WAAaw4B,EAAOp2D,EAAS49B,WAAY,GAEjDzhC,EAAQ20D,OAASuF,EAAQr2D,EAAS8wD,QAClC30D,EAAQ40D,SAAWqF,EAAOp2D,EAAS+wD,SAAU,GAC7C50D,EAAQ60D,SAAWoF,EAAOp2D,EAASgxD,SAAU,GAC7C70D,EAAQ80D,SAAWmF,EAAOp2D,EAASixD,SAAU,GAC7C90D,EAAQ+0D,SAAWkF,EAAOp2D,EAASkxD,SAAU,GAC7C/0D,EAAQwzD,SAAWyG,EAAOp2D,EAAS2vD,SAAU,GAC7CxzD,EAAQyzD,SAAWwG,EAAOp2D,EAAS4vD,SAAU,GAC7CzzD,EAAQg1D,SAAWiF,EAAOp2D,EAASmxD,SAAU,GAC7Ch1D,EAAQi1D,QAAUgF,EAAOp2D,EAASoxD,QAAS,GAE3Cj1D,EAAQk1D,SAAWgF,EAAQr2D,EAASqxD,UACpCl1D,EAAQm1D,WAAa8E,EAAOp2D,EAASsxD,WAAY,GACjDn1D,EAAQo1D,WAAa6E,EAAOp2D,EAASuxD,WAAY,GACjDp1D,EAAQq1D,WAAa4E,EAAOp2D,EAASwxD,WAAY,GACjDr1D,EAAQs1D,WAAa2E,EAAOp2D,EAASyxD,WAAY,GACjDt1D,EAAQ0zD,WAAauG,EAAOp2D,EAAS6vD,WAAY,GACjD1zD,EAAQ2zD,WAAasG,EAAOp2D,EAAS8vD,WAAY,GACjD3zD,EAAQu1D,WAAa0E,EAAOp2D,EAAS0xD,WAAY,GAEjDv1D,EAAQ2M,WAAastD,EAAOp2D,EAAS8I,WAAY,GACjD3M,EAAQqP,aAAe4qD,EAAOp2D,EAASwL,aAAc,GACrDrP,EAAQ6M,YAAcotD,EAAOp2D,EAASgJ,YAAa,GACnD7M,EAAQuP,cAAgB0qD,EAAOp2D,EAAS0L,cAAe,GAEvDvP,EAAQw1D,WAAawE,EAASn2D,EAAS2xD,YACvCx1D,EAAQy1D,YAAc0E,EAASt2D,EAAS4xD,YAAa5xD,EAASowD,YAC9Dj0D,EAAQi0D,WAAapwD,EAASowD,WAC9Bj0D,EAAQ01D,YAAcsE,EAASn2D,EAAS6xD,aACxC11D,EAAQ21D,aAAewE,EAASt2D,EAAS8xD,aAAc9xD,EAAS+xD,aAChE51D,EAAQ41D,YAAc/xD,EAAS+xD,YAE/B51D,EAAQ61D,WAAahyD,EAASgyD,WAC9B71D,EAAQu8B,UAAY14B,EAAS04B,UAC7Bv8B,EAAQ29B,WAAa95B,EAAS85B,WAC9B39B,EAAQk9B,WAAar5B,EAASq5B,WAC9Bl9B,EAAQi9B,YAAcp5B,EAASo5B,YAE/Bj9B,EAAQk0D,QAAUrwD,EAASqwD,QAC3Bl0D,EAAQuE,KAAOV,EAASU,KACxBvE,EAAQ0K,OAAS7G,EAAS6G,OAE1B1K,EAAQ81D,aAAejyD,EAASiyD,aAChC91D,EAAQ+1D,WAAalyD,EAASkyD,WAC9B/1D,EAAQg2D,cAAgBnyD,EAASmyD,gB;;;;;GC9MjC/1D,EAAOD,QAAU,EAAQ,M,8BCRzB;;;;;;;;;;;;;AAeA,MAAMqQ,EAAS,EAAQ,GACjBm9C,EAAS,EAAQ,IACjBx3C,EAAO,EAAQ,GAMfskD,EAASh4D,EAAOa,KAAK,OAAQ,UAC7Byc,EAAQtd,EAAOkH,MAAM,GAM3B,MAAM+wD,UAAa/M,EACjB,cACEzyB,QAGF,KAAK/c,EAAMvc,EAAKisD,GASd,OARW,MAAPjsD,IACFA,EAAMme,GAERvP,EAAO/N,EAAO8B,SAAS3C,IAEvBs5B,MAAMnpB,KAAKoM,EAAMs8C,EAAQ5M,GACzB3yB,MAAM4yB,QAAQ,CAAClsD,GAAMuB,KAAKyqD,KAAO,GAE1BzqD,KAGT,MAAMqB,GACJ,GAAW,MAAPA,EAAa,CAEfA,EAAM,IADOrB,KAAKyqD,KAAO,EACN,EAKrB,OAFA1yB,MAAMy/B,YAAkB,EAANn2D,GAEX02B,MAAMxkB,MAAMlS,GAGrB,cACE,OAAO,IAAIk2D,EAGb,YAAYv8C,EAAMvc,EAAKisD,EAAMrpD,GACf,MAAR2Z,IACFA,EAAO,KAET3N,EAAQ2N,IAAS,IAAOA,GACxB3N,EAAgB,MAAT2N,GAAyB,MAATA,GAIvB,OAAO,IAAIhI,EAAKukD,GAFH,KAAc,EAAPv8C,GAES,EAAG,CAACA,EAAMvc,EAAKisD,GAAO,CAACrpD,IAGtD,cAAcM,EAAMqZ,EAAMvc,EAAKisD,EAAMrpD,GACnC,OAAOk2D,EAAK/kC,IAAI5jB,KAAKoM,EAAMvc,EAAKisD,GAAMl4C,OAAO7Q,GAAM4R,MAAMlS,GAG3D,YAAY0gB,EAAMC,EAAOhH,EAAMvc,EAAKisD,EAAMrpD,GAC5B,MAAR2Z,IACFA,EAAO,KAEE,MAAP3Z,IACFA,EAAM,GAEI,IAARA,IACFgM,EAAQ2N,IAAS,IAAOA,GACxB3Z,EAAM2Z,IAAS,GAGjB3N,EAAQhM,IAAQ,IAAOA,GACvBgM,EAAO/N,EAAO8B,SAAS2gB,IAASA,EAAKriB,SAAW2B,GAChDgM,EAAO/N,EAAO8B,SAAS4gB,IAAUA,EAAMtiB,SAAW2B,GAElD,MAAM,IAACmxB,GAAO+kC,EAMd,OAJA/kC,EAAI5jB,KAAKoM,EAAMvc,EAAKisD,GACpBl4B,EAAIhgB,OAAOuP,GACXyQ,EAAIhgB,OAAOwP,GAEJwQ,EAAIjf,MAAMlS,GAGnB,aAAamG,EAAGC,EAAG4T,EAAGL,EAAMvc,EAAKisD,EAAMrpD,GACrC,MAAM,IAACmxB,GAAO+kC,EASd,OAPA/kC,EAAI5jB,KAAKoM,EAAMvc,EAAKisD,GACpBl4B,EAAIhgB,OAAOhL,GACXgrB,EAAIhgB,OAAO/K,GAEP4T,GACFmX,EAAIhgB,OAAO6I,GAENmX,EAAIjf,MAAMlS,GAGnB,WAAWM,EAAMsV,EAAM+D,EAAMvc,EAAKisD,EAAMrpD,GACtC,OAAOk2D,EAAKvM,KAAKhwC,EAAMvc,EAAKisD,EAAMrpD,GAAKuN,KAAKqI,GAAMzE,OAAO7Q,GAAM4R,SAQnEgkD,EAAK/wB,OAASgkB,EAAOhkB,OACrB+wB,EAAKhxB,GAAK,UACVgxB,EAAKz1D,KAAO,GACZy1D,EAAKv8C,KAAO,IACZu8C,EAAK1lD,UAAY,IACjB0lD,EAAKznB,KAAOxwC,EAAOkH,MAAM,GAAI,GAC7B+wD,EAAK/kC,IAAM,IAAI+kC,EAMft6D,EAAOD,QAAUu6D,I;;;;;GCjIjBt6D,EAAOD,QAAU,EAAQ,M,uHCRzB,SAAYy6D,GACV,YACA,kBAFF,CAAY,EAAAA,aAAA,EAAAA,WAAU,KAKtB,SAAYC,GACV,cACA,iBAFF,CAAY,EAAAA,qBAAA,EAAAA,mBAAkB,M,4UCJ9B,YAEa,EAAAC,qBAAoB,KAC5B,EAAAC,eAAa,I,oKCJlB,YAOmH,yEAP1G,EAAAzqB,aAOgG,wEAPrF,EAAAD,YAGpB,YAIqC,0EAJxB,EAAAuqB,cAIoC,kFAJxB,EAAAC,sBACzB,aAGS,yEAHA,EAAAG,aACT,YAEgG,uEAFvF,EAAAhpB,Y,gBCLP,IAagBphC,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAY3C,SAAUhI,GAEP,IAAI4I,EAAIZ,EACJa,EAAQD,EAAEE,IACVW,EAAYZ,EAAMY,UAClBmD,EAAS/D,EAAM+D,OACfD,EAAS/D,EAAE4E,KAGXmxB,EAAI,GACJ+mB,EAAI,IAGP,WACG,SAAS2M,EAAQn5D,GAEb,IADA,IAAIo5D,EAAQtyD,EAAKkuB,KAAKh1B,GACbq5D,EAAS,EAAGA,GAAUD,EAAOC,IAClC,KAAMr5D,EAAIq5D,GACN,OAAO,EAIf,OAAO,EAGX,SAASC,EAAkBt5D,GACvB,OAAwB,YAAfA,GAAS,EAAJA,IAAyB,EAK3C,IAFA,IAAIA,EAAI,EACJu5D,EAAS,EACNA,EAAS,IACRJ,EAAQn5D,KACJu5D,EAAS,IACT9zB,EAAE8zB,GAAUD,EAAkBxyD,EAAK+E,IAAI7L,EAAG,MAE9CwsD,EAAE+M,GAAUD,EAAkBxyD,EAAK+E,IAAI7L,EAAG,EAAI,IAE9Cu5D,KAGJv5D,IA5BR,GAiCA,IAAI6sD,EAAI,GAKJze,EAAS36B,EAAO26B,OAAS16B,EAAO5D,OAAO,CACvC8D,SAAU,WACNvS,KAAKgkC,MAAQ,IAAI90B,EAAUN,KAAKw1B,EAAEnjC,MAAM,KAG5CiR,gBAAiB,SAAU+xB,EAAG//B,GAe1B,IAbA,IAAIkgC,EAAIpkC,KAAKgkC,MAAM70B,MAGf5H,EAAI68B,EAAE,GACNrhC,EAAIqhC,EAAE,GACN7mC,EAAI6mC,EAAE,GACN5mC,EAAI4mC,EAAE,GACNv9B,EAAIu9B,EAAE,GACN7qB,EAAI6qB,EAAE,GACNtT,EAAIsT,EAAE,GACN9wB,EAAI8wB,EAAE,GAGDlnC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,GAAIA,EAAI,GACJsuD,EAAEtuD,GAAqB,EAAhB+mC,EAAE//B,EAAShH,OACf,CACH,IAAIi7D,EAAU3M,EAAEtuD,EAAI,IAChBk7D,GAAYD,GAAW,GAAOA,IAAY,IAC9BA,GAAW,GAAOA,IAAY,IAC9BA,IAAY,EAExBE,EAAU7M,EAAEtuD,EAAI,GAChBo7D,GAAYD,GAAW,GAAOA,IAAY,KAC9BA,GAAW,GAAOA,IAAY,IAC9BA,IAAY,GAE5B7M,EAAEtuD,GAAKk7D,EAAS5M,EAAEtuD,EAAI,GAAKo7D,EAAS9M,EAAEtuD,EAAI,IAG9C,IACIq7D,EAAOhxD,EAAIxE,EAAMwE,EAAIhK,EAAMwF,EAAIxF,EAE/BkuD,GAAWlkD,GAAK,GAAOA,IAAM,IAAQA,GAAK,GAAOA,IAAM,KAASA,GAAK,GAAOA,IAAM,IAGlFu2C,EAAKxqC,IAFMzM,GAAK,GAAOA,IAAM,IAAQA,GAAK,GAAOA,IAAM,KAASA,GAAK,EAAOA,IAAM,MAJ3EA,EAAI0S,GAAO1S,EAAIiqB,GAMCq6B,EAAEjuD,GAAKsuD,EAAEtuD,GAGpCoW,EAAIwd,EACJA,EAAIvX,EACJA,EAAI1S,EACJA,EAAKrJ,EAAIsgD,EAAM,EACftgD,EAAID,EACJA,EAAIwF,EACJA,EAAIwE,EACJA,EAAKu2C,GATI2N,EAAS8M,GASF,EAIpBn0B,EAAE,GAAMA,EAAE,GAAK78B,EAAK,EACpB68B,EAAE,GAAMA,EAAE,GAAKrhC,EAAK,EACpBqhC,EAAE,GAAMA,EAAE,GAAK7mC,EAAK,EACpB6mC,EAAE,GAAMA,EAAE,GAAK5mC,EAAK,EACpB4mC,EAAE,GAAMA,EAAE,GAAKv9B,EAAK,EACpBu9B,EAAE,GAAMA,EAAE,GAAK7qB,EAAK,EACpB6qB,EAAE,GAAMA,EAAE,GAAKtT,EAAK,EACpBsT,EAAE,GAAMA,EAAE,GAAK9wB,EAAK,GAGxBX,YAAa,WAET,IAAIhR,EAAO3B,KAAKqR,MACZM,EAAYhQ,EAAKwN,MAEjBs2B,EAAgC,EAAnBzlC,KAAKsR,YAClBo0B,EAA4B,EAAhB/jC,EAAKyN,SAYrB,OATAuC,EAAU+zB,IAAc,IAAM,KAAS,GAAKA,EAAY,GACxD/zB,EAA4C,IAA/B+zB,EAAY,KAAQ,GAAM,IAAWjgC,EAAK6F,MAAMm6B,EAAa,YAC1E9zB,EAA4C,IAA/B+zB,EAAY,KAAQ,GAAM,IAAWD,EAClD9jC,EAAKyN,SAA8B,EAAnBuC,EAAUjS,OAG1BM,KAAKwR,WAGExR,KAAKgkC,OAGhB/0B,MAAO,WACH,IAAIA,EAAQoD,EAAOpD,MAAM5R,KAAK2C,MAG9B,OAFAiP,EAAM+0B,MAAQhkC,KAAKgkC,MAAM/0B,QAElBA,KAkBfZ,EAAE0+B,OAAS16B,EAAOO,cAAcm6B,GAgBhC1+B,EAAEmqD,WAAanmD,EAAOU,kBAAkBg6B,GAjL5C,CAkLEtnC,MAGKgI,EAASs/B,S,gBCpMf,IAagBt/B,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,IAY9D,WAEG,IAAIY,EAAIZ,EAEJ4E,EADQhE,EAAEE,IACK8D,OACf48B,EAAQ5gC,EAAE6gC,IACVupB,EAAUxpB,EAAME,KAChBupB,EAAezpB,EAAM//B,UACrBkD,EAAS/D,EAAE4E,KAEf,SAAS0lD,IACL,OAAOF,EAAQj6D,OAAO6H,MAAMoyD,EAASzwD,WAIzC,IAAImjD,EAAI,CACJwN,EAAe,WAAY,YAAaA,EAAe,WAAY,WACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,UAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,UAAY,YACnEA,EAAe,UAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,WACnEA,EAAe,WAAY,WAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,WACnEA,EAAe,UAAY,YAAaA,EAAe,UAAY,YACnEA,EAAe,UAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,WACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,UAAY,YAAaA,EAAe,UAAY,WACnEA,EAAe,UAAY,YAAaA,EAAe,UAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,WACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,WACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,UAAY,WACnEA,EAAe,UAAY,YAAaA,EAAe,UAAY,YACnEA,EAAe,UAAY,YAAaA,EAAe,UAAY,YACnEA,EAAe,UAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,WACnEA,EAAe,WAAY,WAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,WACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,UAAY,YAAaA,EAAe,UAAY,YACnEA,EAAe,UAAY,YAAaA,EAAe,UAAY,WACnEA,EAAe,UAAY,WAAaA,EAAe,UAAY,YACnEA,EAAe,WAAY,WAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,WAAaA,EAAe,WAAY,aAInEnN,EAAI,IACP,WACG,IAAK,IAAItuD,EAAI,EAAGA,EAAI,GAAIA,IACpBsuD,EAAEtuD,GAAKy7D,IAFf,GASA,IAAIC,EAASxmD,EAAOwmD,OAASvmD,EAAO5D,OAAO,CACvC8D,SAAU,WACNvS,KAAKgkC,MAAQ,IAAI00B,EAAa9pD,KAAK,CAC/B,IAAI6pD,EAAQ7pD,KAAK,WAAY,YAAa,IAAI6pD,EAAQ7pD,KAAK,WAAY,YACvE,IAAI6pD,EAAQ7pD,KAAK,WAAY,YAAa,IAAI6pD,EAAQ7pD,KAAK,WAAY,YACvE,IAAI6pD,EAAQ7pD,KAAK,WAAY,YAAa,IAAI6pD,EAAQ7pD,KAAK,WAAY,WACvE,IAAI6pD,EAAQ7pD,KAAK,UAAY,YAAa,IAAI6pD,EAAQ7pD,KAAK,WAAY,cAI/EsD,gBAAiB,SAAU+xB,EAAG//B,GAiD1B,IA/CA,IAAIkgC,EAAIpkC,KAAKgkC,MAAM70B,MAEf0pD,EAAKz0B,EAAE,GACP00B,EAAK10B,EAAE,GACP20B,EAAK30B,EAAE,GACP40B,EAAK50B,EAAE,GACP60B,EAAK70B,EAAE,GACP80B,EAAK90B,EAAE,GACP+0B,EAAK/0B,EAAE,GACPg1B,EAAKh1B,EAAE,GAEPi1B,EAAMR,EAAGzpB,KACTkqB,EAAMT,EAAGxpB,IACTkqB,EAAMT,EAAG1pB,KACToqB,EAAMV,EAAGzpB,IACToqB,EAAMV,EAAG3pB,KACTsqB,EAAMX,EAAG1pB,IACTsqB,EAAMX,EAAG5pB,KACTwqB,EAAMZ,EAAG3pB,IACTwqB,EAAMZ,EAAG7pB,KACT0qB,EAAMb,EAAG5pB,IACT0qB,EAAMb,EAAG9pB,KACT4qB,EAAMd,EAAG7pB,IACT4qB,EAAMd,EAAG/pB,KACT8qB,EAAMf,EAAG9pB,IACT8qB,EAAMf,EAAGhqB,KACTgrB,EAAMhB,EAAG/pB,IAGTzvB,EAAKy5C,EACLx5C,EAAKy5C,EACLx5C,EAAKy5C,EACLv5C,EAAKw5C,EACLt7C,EAAKu7C,EACLt5C,EAAKu5C,EACLt5C,EAAKu5C,EACLt5C,EAAKu5C,EACLn5C,EAAKo5C,EACLn5C,EAAKo5C,EACLO,EAAKN,EACLO,EAAKN,EACLO,EAAKN,EACLO,EAAKN,EACLhY,EAAKiY,EACLM,EAAKL,EAGAl9D,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIw9D,EACAC,EAGAC,EAAKpP,EAAEtuD,GAGX,GAAIA,EAAI,GACJy9D,EAAMC,EAAGxrB,KAA+B,EAAxBnL,EAAE//B,EAAa,EAAJhH,GAC3Bw9D,EAAME,EAAGvrB,IAA+B,EAAxBpL,EAAE//B,EAAa,EAAJhH,EAAQ,OAChC,CAEH,IAAIi7D,EAAW3M,EAAEtuD,EAAI,IACjB29D,EAAW1C,EAAQ/oB,KACnB0rB,EAAW3C,EAAQ9oB,IACnB0rB,GAAaF,IAAa,EAAMC,GAAY,KAASD,IAAa,EAAMC,GAAY,IAAQD,IAAa,EACzGG,GAAaF,IAAa,EAAMD,GAAY,KAASC,IAAa,EAAMD,GAAY,KAASC,IAAa,EAAMD,GAAY,IAG5HxC,GAAW7M,EAAEtuD,EAAI,GACjB+9D,GAAW5C,GAAQjpB,KACnB8rB,GAAW7C,GAAQhpB,IACnB8rB,IAAaF,KAAa,GAAOC,IAAY,KAASD,IAAY,EAAMC,KAAa,IAAQD,KAAa,EAC1GG,IAAaF,KAAa,GAAOD,IAAY,KAASC,IAAY,EAAMD,KAAa,KAASC,KAAa,EAAMD,IAAY,IAG7HI,GAAO7P,EAAEtuD,EAAI,GACbo+D,GAAOD,GAAIjsB,KACXmsB,GAAOF,GAAIhsB,IAEXmsB,GAAQhQ,EAAEtuD,EAAI,IACdu+D,GAAQD,GAAKpsB,KACbssB,GAAQF,GAAKnsB,IAOjBsrB,GAFAA,GAFAA,EAAMI,EAAUO,KADhBZ,EAAMM,EAAUO,MACiB,EAAMP,IAAY,EAAK,EAAI,IAEhDG,KADZT,GAAYU,MACoB,EAAMA,KAAY,EAAK,EAAI,IAE/CK,KADZf,GAAYgB,MACkB,EAAMA,KAAU,EAAK,EAAI,GAEvDd,EAAGxrB,KAAOurB,EACVC,EAAGvrB,IAAOqrB,EAGd,IAqBIiB,GArBAC,GAAQn7C,EAAK45C,GAAQ55C,EAAK85C,EAC1BsB,GAAQn7C,EAAK45C,GAAQ55C,EAAK85C,EAC1BsB,GAAQl8C,EAAKE,EAAOF,EAAK1B,EAAO4B,EAAK5B,EACrC69C,GAAQl8C,EAAKG,EAAOH,EAAKM,EAAOH,EAAKG,EAErC67C,IAAYp8C,IAAO,GAAOC,GAAM,IAASD,GAAM,GAAQC,IAAO,IAAQD,GAAM,GAAOC,IAAO,GAC1Fo8C,IAAYp8C,IAAO,GAAOD,GAAM,IAASC,GAAM,GAAQD,IAAO,IAAQC,GAAM,GAAOD,IAAO,GAC1Fs8C,IAAYz7C,IAAO,GAAOC,GAAM,KAASD,IAAO,GAAOC,GAAM,KAASD,GAAM,GAAOC,IAAO,GAC1Fy7C,IAAYz7C,IAAO,GAAOD,GAAM,KAASC,IAAO,GAAOD,GAAM,KAASC,GAAM,GAAOD,IAAO,GAG1F27C,GAAMjR,EAAEjuD,GACRm/D,GAAMD,GAAGhtB,KACTktB,GAAMF,GAAG/sB,IAGTktB,GAAMra,EAAKga,KADXP,GAAMlB,EAAK0B,MACoB,EAAM1B,IAAO,EAAK,EAAI,GASrD+B,GAAMP,GAAUF,GAIpB7Z,EAAKqY,EACLE,EAAKD,EACLD,EAAKF,EACLG,EAAKF,EACLD,EAAK55C,EACL65C,EAAK55C,EAELD,EAAML,GAdFm8C,IAFAA,IAFAA,GAAMA,GAAMX,KADZD,IAAYE,MACgB,EAAMA,KAAQ,EAAK,EAAI,IAEvCQ,KADZV,IAAYW,MACgB,EAAMA,KAAQ,EAAK,EAAI,IAEvC3B,IADZgB,IAAYjB,KACgB,EAAMA,IAAQ,EAAK,EAAI,MAavDh6C,EAAML,EAAKs7C,GAAO,KACQ,EAAMt7C,IAAO,EAAK,EAAI,GAAM,EACtDD,EAAKlC,EACLmC,EAAKF,EACLjC,EAAK4B,EACLK,EAAKH,EACLF,EAAKF,EACLI,EAAKH,EAELD,EAAM28C,IAlBIP,GAAUF,IAASU,KAAQ,EAAMP,KAAY,EAAK,EAAI,MAiBhEp8C,EAAM87C,GAAMa,GAAO,KACQ,EAAMb,KAAQ,EAAK,EAAI,GAAM,EAI5DrC,EAAMT,EAAGxpB,IAAQiqB,EAAMz5C,EACvBg5C,EAAGzpB,KAAQiqB,EAAMz5C,GAAO05C,IAAQ,EAAMz5C,IAAO,EAAK,EAAI,GACtD25C,EAAMV,EAAGzpB,IAAQmqB,EAAMx5C,EACvB84C,EAAG1pB,KAAQmqB,EAAMz5C,GAAO05C,IAAQ,EAAMx5C,IAAO,EAAK,EAAI,GACtD05C,EAAMX,EAAG1pB,IAAQqqB,EAAMv5C,EACvB44C,EAAG3pB,KAAQqqB,EAAMv7C,GAAOw7C,IAAQ,EAAMv5C,IAAO,EAAK,EAAI,GACtDy5C,EAAMZ,EAAG3pB,IAAQuqB,EAAMv5C,EACvB24C,EAAG5pB,KAAQuqB,EAAMv5C,GAAOw5C,IAAQ,EAAMv5C,IAAO,EAAK,EAAI,GACtDy5C,EAAMb,EAAG5pB,IAAQyqB,EAAMp5C,EACvBu4C,EAAG7pB,KAAQyqB,EAAMp5C,GAAOq5C,IAAQ,EAAMp5C,IAAO,EAAK,EAAI,GACtDs5C,EAAMd,EAAG7pB,IAAQ2qB,EAAMM,EACvBpB,EAAG9pB,KAAQ2qB,EAAMM,GAAOL,IAAQ,EAAMM,IAAO,EAAK,EAAI,GACtDJ,EAAMf,EAAG9pB,IAAQ6qB,EAAMM,EACvBrB,EAAG/pB,KAAQ6qB,EAAMM,GAAOL,IAAQ,EAAMM,IAAO,EAAK,EAAI,GACtDJ,EAAMhB,EAAG/pB,IAAQ+qB,EAAMK,EACvBrB,EAAGhqB,KAAQ+qB,EAAMjY,GAAOkY,IAAQ,EAAMK,IAAO,EAAK,EAAI,IAG1D9nD,YAAa,WAET,IAAIhR,EAAO3B,KAAKqR,MACZM,EAAYhQ,EAAKwN,MAEjBs2B,EAAgC,EAAnBzlC,KAAKsR,YAClBo0B,EAA4B,EAAhB/jC,EAAKyN,SAerB,OAZAuC,EAAU+zB,IAAc,IAAM,KAAS,GAAKA,EAAY,GACxD/zB,EAA8C,IAAjC+zB,EAAY,MAAS,IAAO,IAAWjgC,KAAK6F,MAAMm6B,EAAa,YAC5E9zB,EAA8C,IAAjC+zB,EAAY,MAAS,IAAO,IAAWD,EACpD9jC,EAAKyN,SAA8B,EAAnBuC,EAAUjS,OAG1BM,KAAKwR,WAGMxR,KAAKgkC,MAAMsL,SAM1BrgC,MAAO,WACH,IAAIA,EAAQoD,EAAOpD,MAAM5R,KAAK2C,MAG9B,OAFAiP,EAAM+0B,MAAQhkC,KAAKgkC,MAAM/0B,QAElBA,GAGX4C,UAAW,KAiBfxD,EAAEuqD,OAASvmD,EAAOO,cAAcgmD,GAgBhCvqD,EAAEouD,WAAapqD,EAAOU,kBAAkB6lD,GAhT5C,GAoTOnrD,EAASmrD,S,6BCjUjB,IAAIt+C,EAAQtd,EAkCZ,SAAS2d,EAAMsD,GACb,OAAoB,IAAhBA,EAAKve,OACA,IAAMue,EAENA,EAIX,SAAS/U,EAAMoE,GAEb,IADA,IAAI3H,EAAM,GACDzI,EAAI,EAAGA,EAAIoQ,EAAI5N,OAAQxC,IAC9ByI,GAAOgV,EAAMrN,EAAIpQ,GAAG6E,SAAS,KAC/B,OAAO4D,EAdT2U,EAAMI,QA9BN,SAAiBpN,EAAK6C,GACpB,GAAIrH,MAAM1J,QAAQkO,GAChB,OAAOA,EAAIrM,QACb,IAAKqM,EACH,MAAO,GACT,IAAI3H,EAAM,GACV,GAAmB,iBAAR2H,EAAkB,CAC3B,IAAK,IAAIpQ,EAAI,EAAGA,EAAIoQ,EAAI5N,OAAQxC,IAC9ByI,EAAIzI,GAAc,EAAToQ,EAAIpQ,GACf,OAAOyI,EAET,GAAY,QAARwK,EAAe,EACjB7C,EAAMA,EAAIN,QAAQ,eAAgB,KAC1BtN,OAAS,GAAM,IACrB4N,EAAM,IAAMA,GACd,IAASpQ,EAAI,EAAGA,EAAIoQ,EAAI5N,OAAQxC,GAAK,EACnCyI,EAAIb,KAAKP,SAAS+I,EAAIpQ,GAAKoQ,EAAIpQ,EAAI,GAAI,UAEzC,IAASA,EAAI,EAAGA,EAAIoQ,EAAI5N,OAAQxC,IAAK,CACnC,IAAIK,EAAI+P,EAAIvI,WAAW7H,GACnBmI,EAAK9H,GAAK,EACV+H,EAAS,IAAJ/H,EACL8H,EACFM,EAAIb,KAAKO,EAAIC,GAEbK,EAAIb,KAAKQ,GAGf,OAAOK,GAUT2U,EAAMK,MAAQA,EAQdL,EAAMpR,MAAQA,EAEdoR,EAAMM,OAAS,SAAgBtX,EAAK6M,GAClC,MAAY,QAARA,EACKjH,EAAM5F,GAENA,I,gBCxDX,IAAItF,EASJ,SAAS0+D,EAAKC,GACZ38D,KAAK28D,KAAOA,EAmBd,GA3BA1/D,EAAOD,QAAU,SAAcqE,GAI7B,OAHKrD,IACHA,EAAI,IAAI0+D,EAAK,OAER1+D,EAAEwrC,SAASnoC,IAMpBpE,EAAOD,QAAQ0/D,KAAOA,EAEtBA,EAAK59D,UAAU0qC,SAAW,SAAkBnoC,GAC1C,OAAOrB,KAAK48D,MAAMv7D,IAIpBq7D,EAAK59D,UAAU89D,MAAQ,SAAej+D,GACpC,GAAIqB,KAAK28D,KAAKE,SACZ,OAAO78D,KAAK28D,KAAKE,SAASl+D,GAG5B,IADA,IAAIgH,EAAM,IAAI/F,WAAWjB,GAChBzB,EAAI,EAAGA,EAAIyI,EAAIjG,OAAQxC,IAC9ByI,EAAIzI,GAAK8C,KAAK28D,KAAKG,UACrB,OAAOn3D,GAGW,iBAATiI,KACLA,KAAKF,QAAUE,KAAKF,OAAOM,gBAE7B0uD,EAAK59D,UAAU89D,MAAQ,SAAej+D,GACpC,IAAI2E,EAAM,IAAI1D,WAAWjB,GAEzB,OADAiP,KAAKF,OAAOM,gBAAgB1K,GACrBA,GAEAsK,KAAKE,UAAYF,KAAKE,SAASE,gBAExC0uD,EAAK59D,UAAU89D,MAAQ,SAAej+D,GACpC,IAAI2E,EAAM,IAAI1D,WAAWjB,GAEzB,OADAiP,KAAKE,SAASE,gBAAgB1K,GACvBA,GAIkB,iBAAXqK,SAEhB+uD,EAAK59D,UAAU89D,MAAQ,WACrB,MAAM,IAAI38D,MAAM,8BAKpB,IACE,IAAIyN,EAAS,EAAQ,KACrB,GAAkC,mBAAvBA,EAAOQ,YAChB,MAAM,IAAIjO,MAAM,iBAElBy8D,EAAK59D,UAAU89D,MAAQ,SAAej+D,GACpC,OAAO+O,EAAOQ,YAAYvP,IAE5B,MAAOkI,M,6BC5DX,IAAI+/B,EAAQ5pC,EAEZ4pC,EAAMvlB,KAAO,EAAQ,IACrBulB,EAAMotB,MAAQ,EAAQ,KACtBptB,EAAM5Q,KAAO,EAAQ,KACrB4Q,EAAMqtB,QAAU,EAAQ,M,6BCLxB,IACI50C,EADQ,EAAQ,IACDA,OAYnB,SAAS09C,EAAKv1D,EAAGC,EAAG4T,GAClB,OAAQ7T,EAAIC,GAAQD,EAAK6T,EAI3B,SAAS2hD,EAAMx1D,EAAGC,EAAG4T,GACnB,OAAQ7T,EAAIC,EAAMD,EAAI6T,EAAM5T,EAAI4T,EAIlC,SAAS4hD,EAAIz1D,EAAGC,EAAG4T,GACjB,OAAO7T,EAAIC,EAAI4T,EAbjBre,EAAQkgE,KARR,SAAcj+D,EAAGuI,EAAGC,EAAG4T,GACrB,OAAU,IAANpc,EACK89D,EAAKv1D,EAAGC,EAAG4T,GACV,IAANpc,GAAiB,IAANA,EACNg+D,EAAIz1D,EAAGC,EAAG4T,GACT,IAANpc,EACK+9D,EAAMx1D,EAAGC,EAAG4T,QADrB,GAQFre,EAAQ+/D,KAAOA,EAKf//D,EAAQggE,MAAQA,EAKhBhgE,EAAQigE,IAAMA,EAKdjgE,EAAQmgE,OAHR,SAAgB31D,GACd,OAAO6X,EAAO7X,EAAG,GAAK6X,EAAO7X,EAAG,IAAM6X,EAAO7X,EAAG,KAOlDxK,EAAQogE,OAHR,SAAgB51D,GACd,OAAO6X,EAAO7X,EAAG,GAAK6X,EAAO7X,EAAG,IAAM6X,EAAO7X,EAAG,KAOlDxK,EAAQqgE,OAHR,SAAgB71D,GACd,OAAO6X,EAAO7X,EAAG,GAAK6X,EAAO7X,EAAG,IAAOA,IAAM,GAO/CxK,EAAQsgE,OAHR,SAAgB91D,GACd,OAAO6X,EAAO7X,EAAG,IAAM6X,EAAO7X,EAAG,IAAOA,IAAM,K,6BC5ChD,IAAI8S,EAAQ,EAAQ,IAChB+5C,EAAS,EAAQ,IACjBkJ,EAAY,EAAQ,IACpBlwD,EAAS,EAAQ,IAEjBkS,EAAQjF,EAAMiF,MACdE,EAAUnF,EAAMmF,QAChBC,EAAUpF,EAAMoF,QAChBq9C,EAAOQ,EAAUR,KACjBC,EAAQO,EAAUP,MAClBG,EAASI,EAAUJ,OACnBC,EAASG,EAAUH,OACnBC,EAASE,EAAUF,OACnBC,EAASC,EAAUD,OAEnB1xB,EAAYyoB,EAAOzoB,UAEnB4xB,EAAW,CACb,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,UAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,YAGtC,SAASzwB,IACP,KAAM/sC,gBAAgB+sC,GACpB,OAAO,IAAIA,EAEbnB,EAAUvuC,KAAK2C,MACfA,KAAKsT,EAAI,CACP,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,YAEtCtT,KAAKob,EAAIoiD,EACTx9D,KAAKwrD,EAAI,IAAI1iD,MAAM,IAErBwR,EAAMuE,SAASkuB,EAAQnB,GACvB3uC,EAAOD,QAAU+vC,EAEjBA,EAAOl7B,UAAY,IACnBk7B,EAAOhB,QAAU,IACjBgB,EAAOf,aAAe,IACtBe,EAAOd,UAAY,GAEnBc,EAAOjuC,UAAUstC,QAAU,SAAiB9+B,EAAKhL,GAG/C,IAFA,IAAIkpD,EAAIxrD,KAAKwrD,EAEJtuD,EAAI,EAAGA,EAAI,GAAIA,IACtBsuD,EAAEtuD,GAAKoQ,EAAIhL,EAAQpF,GACrB,KAAOA,EAAIsuD,EAAE9rD,OAAQxC,IACnBsuD,EAAEtuD,GAAKuiB,EAAQ69C,EAAO9R,EAAEtuD,EAAI,IAAKsuD,EAAEtuD,EAAI,GAAImgE,EAAO7R,EAAEtuD,EAAI,KAAMsuD,EAAEtuD,EAAI,KAEtE,IAAIqK,EAAIvH,KAAKsT,EAAE,GACXvQ,EAAI/C,KAAKsT,EAAE,GACX/V,EAAIyC,KAAKsT,EAAE,GACX9V,EAAIwC,KAAKsT,EAAE,GACXzM,EAAI7G,KAAKsT,EAAE,GACXiG,EAAIvZ,KAAKsT,EAAE,GACXwd,EAAI9wB,KAAKsT,EAAE,GACXA,EAAItT,KAAKsT,EAAE,GAGf,IADAjG,EAAOrN,KAAKob,EAAE1b,SAAW8rD,EAAE9rD,QACtBxC,EAAI,EAAGA,EAAIsuD,EAAE9rD,OAAQxC,IAAK,CAC7B,IAAIugE,EAAK/9C,EAAQpM,EAAG8pD,EAAOv2D,GAAIk2D,EAAKl2D,EAAG0S,EAAGuX,GAAI9wB,KAAKob,EAAEle,GAAIsuD,EAAEtuD,IACvDwgE,EAAKn+C,EAAM49C,EAAO51D,GAAIy1D,EAAMz1D,EAAGxE,EAAGxF,IACtC+V,EAAIwd,EACJA,EAAIvX,EACJA,EAAI1S,EACJA,EAAI0Y,EAAM/hB,EAAGigE,GACbjgE,EAAID,EACJA,EAAIwF,EACJA,EAAIwE,EACJA,EAAIgY,EAAMk+C,EAAIC,GAGhB19D,KAAKsT,EAAE,GAAKiM,EAAMvf,KAAKsT,EAAE,GAAI/L,GAC7BvH,KAAKsT,EAAE,GAAKiM,EAAMvf,KAAKsT,EAAE,GAAIvQ,GAC7B/C,KAAKsT,EAAE,GAAKiM,EAAMvf,KAAKsT,EAAE,GAAI/V,GAC7ByC,KAAKsT,EAAE,GAAKiM,EAAMvf,KAAKsT,EAAE,GAAI9V,GAC7BwC,KAAKsT,EAAE,GAAKiM,EAAMvf,KAAKsT,EAAE,GAAIzM,GAC7B7G,KAAKsT,EAAE,GAAKiM,EAAMvf,KAAKsT,EAAE,GAAIiG,GAC7BvZ,KAAKsT,EAAE,GAAKiM,EAAMvf,KAAKsT,EAAE,GAAIwd,GAC7B9wB,KAAKsT,EAAE,GAAKiM,EAAMvf,KAAKsT,EAAE,GAAIA,IAG/By5B,EAAOjuC,UAAUytC,QAAU,SAAgBp8B,GACzC,MAAY,QAARA,EACKmK,EAAM2E,QAAQjf,KAAKsT,EAAG,OAEtBgH,EAAM8E,QAAQpf,KAAKsT,EAAG,S,6BCrGjC,IAAIgH,EAAQ,EAAQ,IAChB+5C,EAAS,EAAQ,IACjBhnD,EAAS,EAAQ,IAEjBuT,EAAYtG,EAAMsG,UAClBC,EAAYvG,EAAMuG,UAClBC,EAAWxG,EAAMwG,SACjBC,EAAWzG,EAAMyG,SACjBpB,EAAQrF,EAAMqF,MACdI,EAAWzF,EAAMyF,SACjBE,EAAW3F,EAAM2F,SACjBC,EAAa5F,EAAM4F,WACnBK,EAAajG,EAAMiG,WACnBC,EAAalG,EAAMkG,WACnBG,EAAarG,EAAMqG,WAEnBirB,EAAYyoB,EAAOzoB,UAEnB+xB,EAAW,CACb,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,UACpC,UAAY,UAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,YAGtC,SAAS/E,IACP,KAAM54D,gBAAgB44D,GACpB,OAAO,IAAIA,EAEbhtB,EAAUvuC,KAAK2C,MACfA,KAAKsT,EAAI,CACP,WAAY,WACZ,WAAY,WACZ,WAAY,WACZ,WAAY,WACZ,WAAY,WACZ,WAAY,UACZ,UAAY,WACZ,WAAY,WACdtT,KAAKob,EAAIuiD,EACT39D,KAAKwrD,EAAI,IAAI1iD,MAAM,KAyIrB,SAAS80D,EAAQC,EAAIC,EAAIC,EAAIC,EAAIC,GAC/B,IAAIjgE,EAAK6/D,EAAKE,GAASF,EAAMI,EAG7B,OAFIjgE,EAAI,IACNA,GAAK,YACAA,EAGT,SAASkgE,EAAQL,EAAIC,EAAIC,EAAIC,EAAIC,EAAIE,GACnC,IAAIngE,EAAK8/D,EAAKE,GAASF,EAAMK,EAG7B,OAFIngE,EAAI,IACNA,GAAK,YACAA,EAGT,SAASogE,EAASP,EAAIC,EAAIC,EAAIC,EAAIC,GAChC,IAAIjgE,EAAK6/D,EAAKE,EAAOF,EAAKI,EAAOF,EAAKE,EAGtC,OAFIjgE,EAAI,IACNA,GAAK,YACAA,EAGT,SAASqgE,EAASR,EAAIC,EAAIC,EAAIC,EAAIC,EAAIE,GACpC,IAAIngE,EAAK8/D,EAAKE,EAAOF,EAAKK,EAAOH,EAAKG,EAGtC,OAFIngE,EAAI,IACNA,GAAK,YACAA,EAGT,SAASsgE,EAAUT,EAAIC,GACrB,IAII9/D,EAJQ4iB,EAAUi9C,EAAIC,EAAI,IAClBl9C,EAAUk9C,EAAID,EAAI,GAClBj9C,EAAUk9C,EAAID,EAAI,GAK9B,OAFI7/D,EAAI,IACNA,GAAK,YACAA,EAGT,SAASugE,EAAUV,EAAIC,GACrB,IAII9/D,EAJQ6iB,EAAUg9C,EAAIC,EAAI,IAClBj9C,EAAUi9C,EAAID,EAAI,GAClBh9C,EAAUi9C,EAAID,EAAI,GAK9B,OAFI7/D,EAAI,IACNA,GAAK,YACAA,EAGT,SAASwgE,EAAUX,EAAIC,GACrB,IAII9/D,EAJQ4iB,EAAUi9C,EAAIC,EAAI,IAClBl9C,EAAUi9C,EAAIC,EAAI,IAClBl9C,EAAUk9C,EAAID,EAAI,GAK9B,OAFI7/D,EAAI,IACNA,GAAK,YACAA,EAGT,SAASygE,EAAUZ,EAAIC,GACrB,IAII9/D,EAJQ6iB,EAAUg9C,EAAIC,EAAI,IAClBj9C,EAAUg9C,EAAIC,EAAI,IAClBj9C,EAAUi9C,EAAID,EAAI,GAK9B,OAFI7/D,EAAI,IACNA,GAAK,YACAA,EAGT,SAAS0gE,EAAUb,EAAIC,GACrB,IAII9/D,EAJQ4iB,EAAUi9C,EAAIC,EAAI,GAClBl9C,EAAUi9C,EAAIC,EAAI,GAClBh9C,EAAS+8C,EAAIC,EAAI,GAK7B,OAFI9/D,EAAI,IACNA,GAAK,YACAA,EAGT,SAAS2gE,EAAUd,EAAIC,GACrB,IAII9/D,EAJQ6iB,EAAUg9C,EAAIC,EAAI,GAClBj9C,EAAUg9C,EAAIC,EAAI,GAClB/8C,EAAS88C,EAAIC,EAAI,GAK7B,OAFI9/D,EAAI,IACNA,GAAK,YACAA,EAGT,SAAS4gE,EAAUf,EAAIC,GACrB,IAII9/D,EAJQ4iB,EAAUi9C,EAAIC,EAAI,IAClBl9C,EAAUk9C,EAAID,EAAI,IAClB/8C,EAAS+8C,EAAIC,EAAI,GAK7B,OAFI9/D,EAAI,IACNA,GAAK,YACAA,EAGT,SAAS6gE,EAAUhB,EAAIC,GACrB,IAII9/D,EAJQ6iB,EAAUg9C,EAAIC,EAAI,IAClBj9C,EAAUi9C,EAAID,EAAI,IAClB98C,EAAS88C,EAAIC,EAAI,GAK7B,OAFI9/D,EAAI,IACNA,GAAK,YACAA,EAxPTsc,EAAMuE,SAAS+5C,EAAQhtB,GACvB3uC,EAAOD,QAAU47D,EAEjBA,EAAO/mD,UAAY,KACnB+mD,EAAO7sB,QAAU,IACjB6sB,EAAO5sB,aAAe,IACtB4sB,EAAO3sB,UAAY,IAEnB2sB,EAAO95D,UAAUggE,cAAgB,SAAuBxxD,EAAKhL,GAI3D,IAHA,IAAIkpD,EAAIxrD,KAAKwrD,EAGJtuD,EAAI,EAAGA,EAAI,GAAIA,IACtBsuD,EAAEtuD,GAAKoQ,EAAIhL,EAAQpF,GACrB,KAAOA,EAAIsuD,EAAE9rD,OAAQxC,GAAK,EAAG,CAC3B,IAAI6hE,EAAQH,EAAUpT,EAAEtuD,EAAI,GAAIsuD,EAAEtuD,EAAI,IAClC8hE,EAAQH,EAAUrT,EAAEtuD,EAAI,GAAIsuD,EAAEtuD,EAAI,IAClC+hE,EAAQzT,EAAEtuD,EAAI,IACdgiE,EAAQ1T,EAAEtuD,EAAI,IACdiiE,EAAQT,EAAUlT,EAAEtuD,EAAI,IAAKsuD,EAAEtuD,EAAI,KACnCkiE,EAAQT,EAAUnT,EAAEtuD,EAAI,IAAKsuD,EAAEtuD,EAAI,KACnCmiE,EAAQ7T,EAAEtuD,EAAI,IACdoiE,EAAQ9T,EAAEtuD,EAAI,IAElBsuD,EAAEtuD,GAAKgjB,EACL6+C,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,GACT9T,EAAEtuD,EAAI,GAAKqjB,EACTw+C,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,KAIb1G,EAAO95D,UAAUstC,QAAU,SAAiB9+B,EAAKhL,GAC/CtC,KAAK8+D,cAAcxxD,EAAKhL,GAExB,IAAIkpD,EAAIxrD,KAAKwrD,EAET5rC,EAAK5f,KAAKsT,EAAE,GACZuM,EAAK7f,KAAKsT,EAAE,GACZwM,EAAK9f,KAAKsT,EAAE,GACZ0M,EAAKhgB,KAAKsT,EAAE,GACZ4K,EAAKle,KAAKsT,EAAE,GACZ6M,EAAKngB,KAAKsT,EAAE,GACZ8M,EAAKpgB,KAAKsT,EAAE,GACZ+M,EAAKrgB,KAAKsT,EAAE,GACZmN,EAAKzgB,KAAKsT,EAAE,GACZoN,EAAK1gB,KAAKsT,EAAE,GACZ+mD,EAAKr6D,KAAKsT,EAAE,IACZgnD,EAAKt6D,KAAKsT,EAAE,IACZinD,EAAKv6D,KAAKsT,EAAE,IACZknD,EAAKx6D,KAAKsT,EAAE,IACZ4uC,EAAKliD,KAAKsT,EAAE,IACZmnD,EAAKz6D,KAAKsT,EAAE,IAEhBjG,EAAOrN,KAAKob,EAAE1b,SAAW8rD,EAAE9rD,QAC3B,IAAK,IAAIxC,EAAI,EAAGA,EAAIsuD,EAAE9rD,OAAQxC,GAAK,EAAG,CACpC,IAAI6hE,EAAQ7c,EACR8c,EAAQvE,EACRwE,EAAQT,EAAU/9C,EAAIC,GACtBw+C,EAAQT,EAAUh+C,EAAIC,GACtBy+C,EAAQvB,EAAQn9C,EAAIC,EAAI25C,EAAIC,EAAIC,GAChC6E,EAAQlB,EAAQz9C,EAAIC,EAAI25C,EAAIC,EAAIC,EAAIC,GACpC6E,EAAQr/D,KAAKob,EAAEle,GACfoiE,EAAQt/D,KAAKob,EAAEle,EAAI,GACnBqiE,EAAQ/T,EAAEtuD,GACVsiE,EAAQhU,EAAEtuD,EAAI,GAEduiE,EAAQj/C,EACVu+C,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,GACLE,EAAQ/+C,EACVo+C,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,GAETT,EAAQT,EAAU1+C,EAAIC,GACtBm/C,EAAQT,EAAU3+C,EAAIC,GACtBo/C,EAAQb,EAASx+C,EAAIC,EAAIC,EAAIE,EAAI9B,GACjCghD,EAAQb,EAASz+C,EAAIC,EAAIC,EAAIE,EAAI9B,EAAIiC,GAErC,IAAIw/C,EAAQ5/C,EAASg/C,EAAOC,EAAOC,EAAOC,GACtCU,EAAQ3/C,EAAS8+C,EAAOC,EAAOC,EAAOC,GAE1Chd,EAAKqY,EACLE,EAAKD,EAELD,EAAKF,EACLG,EAAKF,EAELD,EAAK55C,EACL65C,EAAK55C,EAELD,EAAKV,EAASK,EAAIC,EAAIo/C,EAAOC,GAC7Bh/C,EAAKT,EAASI,EAAIA,EAAIo/C,EAAOC,GAE7Bt/C,EAAKlC,EACLmC,EAAKF,EAELjC,EAAK4B,EACLK,EAAKH,EAELF,EAAKF,EACLI,EAAKH,EAELD,EAAKG,EAAS0/C,EAAOC,EAAOC,EAAOC,GACnC//C,EAAKI,EAASw/C,EAAOC,EAAOC,EAAOC,GAGrCjgD,EAAM3f,KAAKsT,EAAG,EAAGsM,EAAIC,GACrBF,EAAM3f,KAAKsT,EAAG,EAAGwM,EAAIE,GACrBL,EAAM3f,KAAKsT,EAAG,EAAG4K,EAAIiC,GACrBR,EAAM3f,KAAKsT,EAAG,EAAG8M,EAAIC,GACrBV,EAAM3f,KAAKsT,EAAG,EAAGmN,EAAIC,GACrBf,EAAM3f,KAAKsT,EAAG,GAAI+mD,EAAIC,GACtB36C,EAAM3f,KAAKsT,EAAG,GAAIinD,EAAIC,GACtB76C,EAAM3f,KAAKsT,EAAG,GAAI4uC,EAAIuY,IAGxB7B,EAAO95D,UAAUytC,QAAU,SAAgBp8B,GACzC,MAAY,QAARA,EACKmK,EAAM2E,QAAQjf,KAAKsT,EAAG,OAEtBgH,EAAM8E,QAAQpf,KAAKsT,EAAG,S,izBCpNjC,cACA,QACA,QACA,QAEA,YACA,WACA,QAOa,EAAAusD,SAAW,SAACv9B,EAAiBiF,GACxC,GAA4B,KAAxBjF,EAAOn5B,MAAMzJ,OACf,KAAM,sCAGR,IAAMogE,EAAU,UAAQ9lD,QAAQ,UAAQ+wB,QAAQg1B,kBAAkBzgE,EAAOa,KAAKmiC,EAAOzoB,IAAK,OAAQva,EAAOa,KAAKonC,EAAM1tB,IAAK,QAAQ9X,SAAS,QAE1I,OAAO,IAAAi+D,qBAAoB19B,EAAQiF,EAAOu4B,IAG/B,EAAAE,oBAAsB,SAAC19B,EAAiBiF,EAAgB04B,GACnE,GAA4B,KAAxB39B,EAAOn5B,MAAMzJ,OACf,KAAM,sCAKR,OAFiB,UAAQqrC,QAAQi1B,oBAAoB1gE,EAAOa,KAAKmiC,EAAOzoB,IAAK,OAAQva,EAAOa,KAAKonC,EAAM1tB,IAAK,OAAQva,EAAOa,KAAK8/D,EAAOpmD,IAAK,QAAQ,GAG3I,UAAQG,QAAQ,KAAOimD,EAAOpmD,KAGhC,UAAQG,QAAQ,KAAOimD,EAAOpmD,MAG1B,EAAAi1B,8BAAgC,SAACxM,EAAiBiF,EAAgB04B,GAC7E,GAA4B,KAAxB39B,EAAOn5B,MAAMzJ,OACf,KAAM,sCAGR,IAAMwgE,EAAyBD,EAAO92D,MAAMlI,MAAM,EAAGg/D,EAAO92D,MAAMzJ,QAC5DygE,EAA6B,UAAQ/lD,UAAU8lD,GAErD,OAAO,UAAQn1B,QAAQi1B,oBACrB1gE,EAAOa,KAAKmiC,EAAOzoB,IAAK,OACxBva,EAAOa,KAAKonC,EAAM1tB,IAAK,OACvBva,EAAOa,KAAKggE,EAA2BtmD,IAAK,OACxB,IAApBomD,EAAO92D,MAAM,KAIJ,EAAAi3D,QAAU,SAACC,EAAa1+D,GACnC,IAAI2+D,GAAY,IAAAxzB,QAAO,UAAQ3yB,SAASkmD,IAAMt+D,WAM9C,OAFAu+D,GAFAA,EAAYA,EAAU54D,OAAO44D,IAEP54D,QAAO,IAAAw6B,aAAYvgC,EAAKwH,SAEvC,IAAA2jC,QAAO,UAAQ9yB,QAAQsmD,IAAYv+D,YAG/B,EAAAw+D,WAAa,SAACC,EAAoBjjD,GAC7C,IAAIkjD,EAAsB,GACpBC,EAAsB,OAAZnjD,EAAmB,mBAAqB,UAgBxD,OAbAijD,EAAQG,SAAQ,SAACC,GACf,IAAMC,EAAe,UAAQ3mD,WAAW0mD,EAAO/mD,IAAIna,OAAS,GAAGma,IAEzDinD,EAAavjD,EAAUsjD,EAAeD,EAAO/mD,IAE7CvG,GAAI,IAAA8sD,SAAQM,EAAS,UAAQ1mD,QAAQ8mD,IAE3CL,GAAuBntD,KAMlBmtD,GAcI,EAAA5xB,QAAU,SAACkyB,EAAiBP,EAAoBQ,G,MACrDzjD,EAAUyjD,EAAGC,UAAY,EAAAxJ,WAAWyJ,OAAS,KAAO,KACpDb,EAAMW,EAAGC,UAAY,EAAAxJ,WAAWyJ,OAAS,oBAAsB,WAE/D5tD,GAAY,IAAAitD,YAAWC,EAASjjD,GAEtC4jD,QAAQhoD,IAAI,kBAAmB7F,GAE/B,IAAMi0B,GAAQ,IAAA64B,SAAQC,EAAK,UAAQrmD,QAAQ+mD,EAAOlnD,IAAMvG,IAExD6tD,QAAQhoD,IAAI,mBAAoBouB,GAEhC,IAAMu4B,GAAU,IAAAD,UAASkB,EAAQ,UAAQ/mD,QAAQutB,IAEjD45B,QAAQhoD,IAAI,sBAAuB2mD,EAAQjmD,KAE3C,IAAMunD,EAAetB,EAAQjmD,IAAIrV,OAAO,GAExC28D,QAAQhoD,IAAI,gBAAiBioD,GAE7B,IAAMC,EAAuD,QAA9C,IAAAzJ,cAAc/1B,MAAK,SAACy/B,GAAO,MAAY,SAAZA,EAAGrjD,eAAgB,eAAEpE,IAAIrV,OAAO,GAEpE+8D,EAASC,EAAY5mD,OAAO,KAAM,EAAG,UAAQZ,QAAQonD,GAAcj4D,QAAU,GAE7Es4D,EAAe,UAAQznD,QAAQqnD,EAAS,UAAQnnD,WAAWknD,EAAa1hE,OAAS,GAAGma,IAAMunD,GAIhG,OAFAD,QAAQhoD,IAAI,iBAAkBsoD,EAAa5nD,KAEpC,CAAE4nD,aAAcA,EAAcl6B,MAAOu4B,EAASyB,OAAM,M,kPC5H7D,cACA,WAEa,EAAA1+B,UAAY,SAAC6J,GACxB,IAAMg1B,EAAqC,MAA1Bh1B,EAAQ9yB,IAAIwpB,OAAO,GAEhCzpB,EAAQ,IAAI,UAAG+yB,EAAQ9yB,IAAK,GAEhC,GAAK8nD,EAIE,CACDh1B,EAAQ5yB,SAAQH,EAAQ,IAAI,UAAG+yB,EAAQ5yB,QAAU,IAErD,IAIM6nD,EAJchoD,EAAM6K,MAAMQ,MAEIV,OAAO,IAEDviB,SAAS,EAAG,IAEtD,OAAO,UAAQkY,QAAQ0nD,GAZvB,IAAMC,EAAUjoD,EAAM5X,SAAS,EAAG,IAElC,OAAO,UAAQkY,QAAQ2nD,IAcd,EAAAC,UAAY,SAACn1B,GAGxB,GAFwBA,EAAQvjC,MAAMzJ,OAEhB,EAAG,KAAM,2CAE/B,OAAO,IAAAmjC,WAAU6J,IAGN,EAAAo1B,UAAY,SAACp1B,GAGxB,GAA0B,IAFPA,EAAQvjC,MAEZzJ,OAAc,KAAM,yCAEnC,IAAMqiE,EAAU,IAAI,UAAGr1B,EAAQ9yB,IAAK,GAE9BooD,EAAoBD,EAAQvhE,aAElC,GAA8B,MAA1BksC,EAAQ9yB,IAAIwpB,OAAO,GAAY,CACjC,IAAM6+B,EAAYF,EAAQp9C,SAAS,IAAIH,MAEjC09C,EAAe,UAAQjoD,QAAQgoD,EAAUlgE,SAAS,EAA4B,EAAzBkgE,EAAUzhE,eAErE,OAAI0hE,EAAapoD,OACR,UAAQI,YAAkC,EAAvBgoD,EAAapoD,QAGlCooD,EAGT,OAAO,UAAQjoD,QAAQ8nD,EAAQhgE,SAAS,EAAuB,EAApBigE,KAGhC,EAAAG,WAAa,SAACz1B,GACzB,GAA6B,IAAzBA,EAAQvjC,MAAMzJ,OAAc,KAAM,yCAEtC,OAAO,IAAAmiE,WAAUn1B,K,qGC1DN,EAAAkrB,cAA0B,CAKrC,CACE35C,KAAM,OACN+jB,OAAQ,EACRnoB,IAAK,OACLwb,OAAQ,EACR+sC,YAAa,0HAEf,CACEnkD,KAAM,WACN+jB,OAAQ,EACRnoB,IAAK,OACLwb,OAAQ,EACR+sC,YAAa,0HAOf,CAAEnkD,KAAM,OAAQ+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,EAAG+sC,YAAa,0CACjE,CAAEnkD,KAAM,UAAW+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,EAAG+sC,YAAa,0CACpE,CAAEnkD,KAAM,OAAQ+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,EAAG+sC,YAAa,0CACjE,CAAEnkD,KAAM,OAAQ+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,EAAG+sC,YAAa,0CACjE,CAAEnkD,KAAM,OAAQ+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,EAAG+sC,YAAa,0CACjE,CAAEnkD,KAAM,OAAQ+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,EAAG+sC,YAAa,0CACjE,CAAEnkD,KAAM,OAAQ+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,EAAG+sC,YAAa,0CACjE,CAAEnkD,KAAM,OAAQ+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,EAAG+sC,YAAa,0CACjE,CAAEnkD,KAAM,OAAQ+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,EAAG+sC,YAAa,0CACjE,CAAEnkD,KAAM,OAAQ+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,EAAG+sC,YAAa,0CACjE,CAAEnkD,KAAM,QAAS+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,GAAI+sC,YAAa,2CACnE,CAAEnkD,KAAM,QAAS+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,GAAI+sC,YAAa,2CACnE,CAAEnkD,KAAM,QAAS+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,GAAI+sC,YAAa,2CACnE,CAAEnkD,KAAM,QAAS+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,GAAI+sC,YAAa,2CACnE,CAAEnkD,KAAM,QAAS+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,GAAI+sC,YAAa,2CACnE,CAAEnkD,KAAM,QAAS+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,GAAI+sC,YAAa,2CACnE,CAAEnkD,KAAM,QAAS+jB,OAAQ,GAAInoB,IAAK,OAAQwb,OAAQ,GAAI+sC,YAAa,2CAMnE,CAAEnkD,KAAM,SAAU+jB,OAAQ,GAAInoB,IAAK,OAAQuoD,YAAa,0BACxD,CACEnkD,KAAM,QACN+jB,OAAQ,GACRnoB,IAAK,OACLuoD,YAAa,iJAEf,CACEnkD,KAAM,WACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,gJAEf,CACEnkD,KAAM,UACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YACE,uOAEJ,CACEnkD,KAAM,WACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YACE,6KAEJ,CAAEnkD,KAAM,YAAa+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,kGAC5D,CACEnkD,KAAM,YACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YACE,+iBAOJ,CAAEnkD,KAAM,gBAAiB+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,iFAChE,CAAEnkD,KAAM,kBAAmB+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,iFAClE,CAAEnkD,KAAM,WAAY+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,6CAC3D,CAAEnkD,KAAM,UAAW+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,sCAC1D,CAAEnkD,KAAM,UAAW+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,yCAC1D,CAAEnkD,KAAM,WAAY+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,uEAC3D,CAAEnkD,KAAM,UAAW+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,qEAC1D,CAAEnkD,KAAM,WAAY+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,qCAC3D,CAAEnkD,KAAM,WAAY+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,kDAC3D,CAAEnkD,KAAM,WAAY+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,kDAC3D,CAAEnkD,KAAM,UAAW+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,+BAC1D,CAAEnkD,KAAM,SAAU+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,kCACzD,CAAEnkD,KAAM,SAAU+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,yCACzD,CAAEnkD,KAAM,UAAW+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,mDAC1D,CAAEnkD,KAAM,UAAW+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,sDAC1D,CAAEnkD,KAAM,UAAW+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,qDAC1D,CAAEnkD,KAAM,SAAU+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,oDACzD,CAAEnkD,KAAM,UAAW+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,+CAC1D,CAAEnkD,KAAM,UAAW+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,0FAM1D,CAAEnkD,KAAM,UAAW+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,kFAM1D,CAAEnkD,KAAM,WAAY+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,2DAC3D,CAAEnkD,KAAM,iBAAkB+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,mDAMjE,CAAEnkD,KAAM,UAAW+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,4BAC1D,CAAEnkD,KAAM,UAAW+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,mCAG1D,CAAEnkD,KAAM,YAAa+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,qCAC5D,CAAEnkD,KAAM,SAAU+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,+BACzD,CAAEnkD,KAAM,SAAU+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,0EACzD,CAAEnkD,KAAM,eAAgB+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,6CAC/D,CAAEnkD,KAAM,SAAU+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,oBACzD,CAAEnkD,KAAM,SAAU+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,2BAIzD,CAAEnkD,KAAM,aAAc+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,8DAC7D,CAAEnkD,KAAM,YAAa+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,qDAC5D,CAAEnkD,KAAM,cAAe+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,oDAC9D,CAAEnkD,KAAM,oBAAqB+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,sDACpE,CAAEnkD,KAAM,iBAAkB+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,wDACjE,CAAEnkD,KAAM,cAAe+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,+CAC9D,CAAEnkD,KAAM,iBAAkB+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,kDACjE,CAAEnkD,KAAM,qBAAsB+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,2DACrE,CAAEnkD,KAAM,wBAAyB+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,gEACxE,CAAEnkD,KAAM,SAAU+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,mCACzD,CAAEnkD,KAAM,SAAU+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,kCACzD,CAAEnkD,KAAM,YAAa+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,+EAM5D,CAAEnkD,KAAM,eAAgB+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,yCAC/D,CAAEnkD,KAAM,UAAW+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,oCAC1D,CAAEnkD,KAAM,YAAa+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,sCAC5D,CAAEnkD,KAAM,aAAc+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,2EAC7D,CAAEnkD,KAAM,aAAc+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,+CAE7D,CAAEnkD,KAAM,cAAe+jB,OAAQ,IAAKnoB,IAAK,QACzC,CAAEoE,KAAM,oBAAqB+jB,OAAQ,IAAKnoB,IAAK,QAS/C,CAAEoE,KAAM,yBAA0B+jB,OAAQ,IAAKnoB,IAAK,QAEpD,CAAEoE,KAAM,yBAA0B+jB,OAAQ,IAAKnoB,IAAK,U;;;;;GCrKtD7c,EAAQqlE,KAAO,EAAQ,KACvBrlE,EAAQslE,IAAM,EAAQ,KACtBtlE,EAAQulE,KAAO,EAAQ,KACvBvlE,EAAQwlE,OAAS,EAAQ,IACzBxlE,EAAQylE,QAAU,EAAQ,IAC1BzlE,EAAQ0lE,WAAa,EAAQ,KAC7B1lE,EAAQ2lE,WAAa,EAAQ,KAC7B3lE,EAAQ4lE,WAAa,EAAQ,KAC7B5lE,EAAQ6lE,WAAa,EAAQ,KAC7B7lE,EAAQ8lE,QAAU,EAAQ,IAC1B9lE,EAAQ+lE,WAAa,EAAQ,KAC7B/lE,EAAQgmE,WAAa,EAAQ,KAC7BhmE,EAAQimE,WAAa,EAAQ,KAC7BjmE,EAAQkmE,WAAa,EAAQ,KAC7BlmE,EAAQud,GAAK,EAAQ,GACrBvd,EAAQmmE,IAAM,EAAQ,KACtBnmE,EAAQs5D,SAAW,EAAQ,IAC3Bt5D,EAAQiY,OAAS,EAAQ,IACzBjY,EAAQomE,QAAU,EAAQ,KAC1BpmE,EAAQwtD,OAAS,EAAQ,IACzBxtD,EAAQqmE,UAAY,EAAQ,KAC5BrmE,EAAQsmE,UAAY,EAAQ,KAC5BtmE,EAAQumE,QAAU,EAAQ,KAC1BvmE,EAAQwmE,IAAM,EAAQ,IACtBxmE,EAAQymE,OAAS,EAAQ,KACzBzmE,EAAQ0mE,KAAO,EAAQ,IACvB1mE,EAAQ2mE,MAAQ,EAAQ,KACxB3mE,EAAQ4mE,QAAU,EAAQ,IAC1B5mE,EAAQ6mE,MAAQ,EAAQ,KACxB7mE,EAAQ6D,SAAW,EAAQ,KAC3B7D,EAAQ8mE,OAAS,EAAQ,KACzB9mE,EAAQ+mE,QAAU,EAAQ,KAC1B/mE,EAAQgnE,QAAU,EAAQ,KAC1BhnE,EAAQinE,SAAW,EAAQ,KAC3BjnE,EAAQknE,KAAO,EAAQ,KACvBlnE,EAAQmpC,SAAW,EAAQ,IAC3BnpC,EAAQstD,OAAS,EAAQ,IACzBttD,EAAQmnE,UAAY,EAAQ,KAC5BnnE,EAAQonE,UAAY,EAAQ,KAC5BpnE,EAAQqnE,UAAY,EAAQ,KAC5BrnE,EAAQsnE,UAAY,EAAQ,KAC5BtnE,EAAQu6D,KAAO,EAAQ,IACvBv6D,EAAQunE,QAAU,EAAQ,KAC1BvnE,EAAQwnE,QAAU,EAAQ,KAC1BxnE,EAAQynE,IAAM,EAAQ,KACtBznE,EAAQ0nE,IAAM,EAAQ,KACtB1nE,EAAQqkC,IAAM,EAAQ,IACtBrkC,EAAQ2nE,QAAU,EAAQ,KAC1B3nE,EAAQ4nE,OAAS,EAAQ,KACzB5nE,EAAQ6nE,KAAO,EAAQ,KACvB7nE,EAAQ8nE,QAAU,EAAQ,KAC1B9nE,EAAQk3B,KAAO,EAAQ,KACvBl3B,EAAQi3B,KAAO,EAAQ,KACvBj3B,EAAQ+nE,KAAO,EAAQ,KACvB/nE,EAAQgoE,KAAO,EAAQ,KACvBhoE,EAAQioE,KAAO,EAAQ,KACvBjoE,EAAQkoE,OAAS,EAAQ,KACzBloE,EAAQmoE,IAAM,EAAQ,KACtBnoE,EAAQooE,SAAW,EAAQ,IAC3BpoE,EAAQgT,OAAS,EAAQ,GACzBhT,EAAQ2vC,UAAY,EAAQ,KAC5B3vC,EAAQqoE,IAAM,EAAQ,KACtBroE,EAAQsoE,OAAS,EAAQ,KACzBtoE,EAAQuoE,KAAO,EAAQ,KACvBvoE,EAAQwoE,QAAU,EAAQ,IAC1BxoE,EAAQ+tC,QAAU,EAAQ,KAC1B/tC,EAAQyoE,OAAS,EAAQ,KACzBzoE,EAAQuwC,UAAY,EAAQ,KAC5BvwC,EAAQ0oE,UAAY,EAAQ,IAC5B1oE,EAAQ2oE,IAAM,EAAQ,KACtB3oE,EAAQ6vC,KAAO,EAAQ,KACvB7vC,EAAQ4oE,OAAS,EAAQ,KACzB5oE,EAAQ+vC,OAAS,EAAQ,IACzB/vC,EAAQ6oE,OAAS,EAAQ,IACzB7oE,EAAQ47D,OAAS,EAAQ,IACzB57D,EAAQ8oE,KAAO,EAAQ,IACvB9oE,EAAQ+oE,SAAW,EAAQ,KAC3B/oE,EAAQgpE,SAAW,EAAQ,KAC3BhpE,EAAQipE,SAAW,EAAQ,KAC3BjpE,EAAQkpE,SAAW,EAAQ,KAC3BlpE,EAAQ0vD,MAAQ,EAAQ,IACxB1vD,EAAQmpE,SAAW,EAAQ,KAC3BnpE,EAAQ2vD,SAAW,EAAQ,IAC3B3vD,EAAQopE,QAAU,EAAQ,KAC1BppE,EAAQqpE,UAAY,EAAQ,KAC5BrpE,EAAQspE,OAAS,EAAQ,IACzBtpE,EAAQupE,KAAO,EAAQ,KAEvBvpE,EAAQugB,QAAU,QAClBvgB,EAAQwpC,OAASxpC,EAAQ+vC,OAAOvG,Q,8BCjGhC;;;;;;;;;;;AAaA,MAAMn5B,EAAS,EAAQ,GAMjBigD,EAA8D,IAAjD,IAAIkZ,UAAU,IAAIC,WAAW,CAAC,IAAIjlE,QAAQ,GAM7D,MAAM80D,EAMJ,cACEt2D,KAAKwd,MAAQ,IAAIvP,YAAY,IAC7BjO,KAAK0mE,OAAS,IAAIz4D,YAAY,IAC9BjO,KAAKmJ,MAAQ,IAAIvJ,WAAWI,KAAK0mE,OAAOllE,QACxCxB,KAAK4H,KAAO,EAER0lD,IACFttD,KAAKmJ,MAAQ7J,EAAOkH,MAAM,KAU9B,KAAK/H,EAAK6qC,EAAOktB,GAQf,GAPe,MAAXA,IACFA,EAAU,GAEZnpD,EAAO/N,EAAO8B,SAAS3C,IACvB4O,EAAO/N,EAAO8B,SAASkoC,IACvBj8B,EAAOlJ,OAAO42B,cAAcy7B,IAET,KAAf/3D,EAAIiB,QAAgC,KAAfjB,EAAIiB,OAC3B,MAAM,IAAIC,WAAW,qBAqBvB,GAnBI2pC,EAAM5pC,QAAU,KAClBjB,EAAM63D,EAASqQ,OAAOloE,EAAK6qC,EAAMroC,MAAM,EAAG,KAC1CqoC,EAAQA,EAAMroC,MAAM,KAGtBjB,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK/e,EAAIiB,OAAS,GAAK,UAAa,UAC/CM,KAAKwd,MAAM,GAAK/e,EAAIiB,OAAS,GAAK,WAAa,WAC/CM,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAKgwC,EAAQ/uD,EAAK,GAC7BuB,KAAKwd,MAAM,GAAKgwC,EAAQ/uD,EAAK,GAC7BuB,KAAKwd,MAAM,GAAKgwC,EAAQ/uD,EAAK,GAC7BuB,KAAKwd,MAAM,GAAKgwC,EAAQ/uD,EAAK,IAC7BuB,KAAKwd,MAAM,GAAKgwC,EAAQ/uD,EAAK,GAAKA,EAAIiB,QACtCM,KAAKwd,MAAM,GAAKgwC,EAAQ/uD,EAAK,GAAKA,EAAIiB,QACtCM,KAAKwd,MAAM,IAAMgwC,EAAQ/uD,EAAK,GAAKA,EAAIiB,QACvCM,KAAKwd,MAAM,IAAMgwC,EAAQ/uD,EAAK,GAAKA,EAAIiB,QACvCM,KAAKwd,MAAM,IAAMg5C,IAAY,EAER,IAAjBltB,EAAM5pC,OACRM,KAAKwd,MAAM,IAAOg5C,EAAU,aAAiB,EAC7Cx2D,KAAKwd,MAAM,IAAMgwC,EAAQlkB,EAAO,GAChCtpC,KAAKwd,MAAM,IAAMgwC,EAAQlkB,EAAO,QAC3B,GAAqB,KAAjBA,EAAM5pC,OACfM,KAAKwd,MAAM,IAAMgwC,EAAQlkB,EAAO,GAChCtpC,KAAKwd,MAAM,IAAMgwC,EAAQlkB,EAAO,GAChCtpC,KAAKwd,MAAM,IAAMgwC,EAAQlkB,EAAO,OAC3B,IAAqB,KAAjBA,EAAM5pC,OAMf,MAAM,IAAIC,WAAW,uBALrBK,KAAKwd,MAAM,IAAMgwC,EAAQlkB,EAAO,GAChCtpC,KAAKwd,MAAM,IAAMgwC,EAAQlkB,EAAO,GAChCtpC,KAAKwd,MAAM,IAAMgwC,EAAQlkB,EAAO,GAChCtpC,KAAKwd,MAAM,IAAMgwC,EAAQlkB,EAAO,IAOlC,OAFAtpC,KAAK4H,IAAM,EAEJ5H,KAST,QAAQ2B,GAGN,GAFA0L,EAAO/N,EAAO8B,SAASO,KAEL,IAAd3B,KAAK4H,IACP,MAAM,IAAI3H,MAAM,+BAElB,IAAK,IAAI/C,EAAI,EAAGA,EAAIyE,EAAKjC,OAAQxC,IACP,IAAR,GAAX8C,KAAK4H,OACR5H,KAAK4mE,SACL5mE,KAAK4H,IAAM,GAGbjG,EAAKzE,IAAM8C,KAAKmJ,MAAMnJ,KAAK4H,OAG7B,OAAOjG,EAOT,SACE,IAAK,IAAIzE,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAK0mE,OAAOxpE,GAAK8C,KAAKwd,MAAMtgB,GAE9B,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACtB2pE,EAAO7mE,KAAK0mE,OAAQ,EAAG,EAAG,EAAG,IAC7BG,EAAO7mE,KAAK0mE,OAAQ,EAAG,EAAG,EAAG,IAC7BG,EAAO7mE,KAAK0mE,OAAQ,EAAG,EAAG,GAAI,IAC9BG,EAAO7mE,KAAK0mE,OAAQ,EAAG,EAAG,GAAI,IAC9BG,EAAO7mE,KAAK0mE,OAAQ,EAAG,EAAG,GAAI,IAC9BG,EAAO7mE,KAAK0mE,OAAQ,EAAG,EAAG,GAAI,IAC9BG,EAAO7mE,KAAK0mE,OAAQ,EAAG,EAAG,EAAG,IAC7BG,EAAO7mE,KAAK0mE,OAAQ,EAAG,EAAG,EAAG,IAG/B,IAAK,IAAIxpE,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAK0mE,OAAOxpE,IAAM8C,KAAKwd,MAAMtgB,GAE/B,GAAIowD,EACF,IAAK,IAAIpwD,EAAI,EAAGA,EAAI,GAAIA,IACtBquD,EAASvrD,KAAKmJ,MAAOnJ,KAAK0mE,OAAOxpE,GAAQ,EAAJA,GAGzC8C,KAAKwd,MAAM,KAAO,EAEK,IAAnBxd,KAAKwd,MAAM,MACbxd,KAAKwd,MAAM,KAAO,GAOtB,UACE,IAAK,IAAItgB,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKwd,MAAMtgB,GAAK,EAChB8C,KAAK0mE,OAAOxpE,GAAK,EAGnB,GAAIowD,EACF,IAAK,IAAIpwD,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKmJ,MAAMjM,GAAK,EAKpB,OAFA8C,KAAK4H,KAAO,EAEL5H,KAUT,cAAcvB,EAAK6qC,GAIjB,GAHAj8B,EAAO/N,EAAO8B,SAAS3C,IACvB4O,EAAO/N,EAAO8B,SAASkoC,IAEJ,KAAf7qC,EAAIiB,QAAgC,KAAfjB,EAAIiB,OAC3B,MAAM,IAAIC,WAAW,qBAEvB,GAAqB,KAAjB2pC,EAAM5pC,OACR,MAAM,IAAIC,WAAW,uBAEvB,MAAM6d,EAAQ,IAAIvP,YAAY,IAE9BuP,EAAM,GAAK,WACXA,EAAM,GAAK/e,EAAIiB,OAAS,GAAK,UAAa,UAC1C8d,EAAM,GAAK/e,EAAIiB,OAAS,GAAK,WAAa,WAC1C8d,EAAM,GAAK,WACXA,EAAM,GAAKgwC,EAAQ/uD,EAAK,GACxB+e,EAAM,GAAKgwC,EAAQ/uD,EAAK,GACxB+e,EAAM,GAAKgwC,EAAQ/uD,EAAK,GACxB+e,EAAM,GAAKgwC,EAAQ/uD,EAAK,IACxB+e,EAAM,GAAKgwC,EAAQ/uD,EAAK,GAAKA,EAAIiB,QACjC8d,EAAM,GAAKgwC,EAAQ/uD,EAAK,GAAKA,EAAIiB,QACjC8d,EAAM,IAAMgwC,EAAQ/uD,EAAK,GAAKA,EAAIiB,QAClC8d,EAAM,IAAMgwC,EAAQ/uD,EAAK,GAAKA,EAAIiB,QAClC8d,EAAM,IAAMgwC,EAAQlkB,EAAO,GAC3B9rB,EAAM,IAAMgwC,EAAQlkB,EAAO,GAC3B9rB,EAAM,IAAMgwC,EAAQlkB,EAAO,GAC3B9rB,EAAM,IAAMgwC,EAAQlkB,EAAO,IAE3B,IAAK,IAAIpsC,EAAI,EAAGA,EAAI,GAAIA,IACtB2pE,EAAOrpD,EAAO,EAAG,EAAG,EAAG,IACvBqpD,EAAOrpD,EAAO,EAAG,EAAG,EAAG,IACvBqpD,EAAOrpD,EAAO,EAAG,EAAG,GAAI,IACxBqpD,EAAOrpD,EAAO,EAAG,EAAG,GAAI,IACxBqpD,EAAOrpD,EAAO,EAAG,EAAG,GAAI,IACxBqpD,EAAOrpD,EAAO,EAAG,EAAG,GAAI,IACxBqpD,EAAOrpD,EAAO,EAAG,EAAG,EAAG,IACvBqpD,EAAOrpD,EAAO,EAAG,EAAG,EAAG,IAGzB,MAAMvU,EAAM3J,EAAOkH,MAAM,IAWzB,OATA+kD,EAAStiD,EAAKuU,EAAM,GAAI,GACxB+tC,EAAStiD,EAAKuU,EAAM,GAAI,GACxB+tC,EAAStiD,EAAKuU,EAAM,GAAI,GACxB+tC,EAAStiD,EAAKuU,EAAM,GAAI,IACxB+tC,EAAStiD,EAAKuU,EAAM,IAAK,IACzB+tC,EAAStiD,EAAKuU,EAAM,IAAK,IACzB+tC,EAAStiD,EAAKuU,EAAM,IAAK,IACzB+tC,EAAStiD,EAAKuU,EAAM,IAAK,IAElBvU,GAcX,SAAS49D,EAAOr/D,EAAGD,EAAGxE,EAAGxF,EAAGC,GAC1BgK,EAAED,IAAMC,EAAEzE,GACVyE,EAAEhK,GAAK8hB,EAAO9X,EAAEhK,GAAKgK,EAAED,GAAI,IAE3BC,EAAEjK,IAAMiK,EAAEhK,GACVgK,EAAEzE,GAAKuc,EAAO9X,EAAEzE,GAAKyE,EAAEjK,GAAI,IAE3BiK,EAAED,IAAMC,EAAEzE,GACVyE,EAAEhK,GAAK8hB,EAAO9X,EAAEhK,GAAKgK,EAAED,GAAI,GAE3BC,EAAEjK,IAAMiK,EAAEhK,GACVgK,EAAEzE,GAAKuc,EAAO9X,EAAEzE,GAAKyE,EAAEjK,GAAI,GAG7B,SAAS+hB,EAAOvE,EAAGhY,GACjB,OAAQgY,GAAKhY,EAAMgY,IAAO,GAAKhY,EAGjC,SAASyqD,EAAQ7rD,EAAM2gB,GACrB,OAAQ3gB,EAAK2gB,KACS,IAAd3gB,EAAK2gB,KACS,MAAd3gB,EAAK2gB,KACO,SAAZ3gB,EAAK2gB,GAGf,SAASipC,EAASn+C,EAAK0N,EAAKwH,GAQ1B,OAPAlV,EAAIkV,KAASxH,EACbA,KAAS,EACT1N,EAAIkV,KAASxH,EACbA,KAAS,EACT1N,EAAIkV,KAASxH,EACbA,KAAS,EACT1N,EAAIkV,KAASxH,EACNwH,EAvCTg0C,EAAS9vB,OAAS,EA8ClBvpC,EAAOD,QAAUs5D,I,sDCjSjB;;;;;;;;;;;;;;;;AAkBA,MAAMjpD,EAAS,EAAQ,GAMvB,MAAM+3D,EAMJ,cACEplE,KAAKhC,EAAI,IAAI8oE,YAAY,IACzB9mE,KAAKsT,EAAI,IAAIwzD,YAAY,IACzB9mE,KAAKwT,IAAM,IAAIszD,YAAY,GAC3B9mE,KAAKwB,OAASlC,EAAOkH,MAAM,IAC3BxG,KAAK+mE,KAAO,EACZ/mE,KAAKgnE,SAAW,EAQlB,KAAKvoE,GACH4O,EAAO/N,EAAO8B,SAAS3C,IAAQA,EAAIiB,QAAU,IAG7C,MAAMm+C,EAAKiQ,EAAQrvD,EAAK,GAClBq/C,EAAKgQ,EAAQrvD,EAAK,GAClBkgD,EAAKmP,EAAQrvD,EAAK,GAClBmgD,EAAKkP,EAAQrvD,EAAK,GAClBogD,EAAKiP,EAAQrvD,EAAK,GAClB6gD,EAAKwO,EAAQrvD,EAAK,IAClBwoE,EAAKnZ,EAAQrvD,EAAK,IAClByoE,EAAKpZ,EAAQrvD,EAAK,IAExBuB,KAAKhC,EAAE,GAAU,KAAL6/C,EACZ79C,KAAKhC,EAAE,GAAiC,MAA1B6/C,IAAO,GAAOC,GAAM,GAClC99C,KAAKhC,EAAE,GAAiC,MAA1B8/C,IAAO,GAAOa,GAAM,GAClC3+C,KAAKhC,EAAE,GAAgC,MAAzB2gD,IAAO,EAAMC,GAAM,GACjC5+C,KAAKhC,EAAE,GAAiC,KAA1B4gD,IAAO,EAAMC,GAAM,IACjC7+C,KAAKhC,EAAE,GAAM6gD,IAAO,EAAK,KACzB7+C,KAAKhC,EAAE,GAAiC,MAA1B6gD,IAAO,GAAOS,GAAM,GAClCt/C,KAAKhC,EAAE,GAAiC,MAA1BshD,IAAO,GAAO2nB,GAAM,GAClCjnE,KAAKhC,EAAE,GAAgC,MAAzBipE,IAAO,EAAMC,GAAM,GACjClnE,KAAKhC,EAAE,GAAMkpE,IAAO,EAAK,IAGzB,IAAK,IAAIhqE,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKsT,EAAEpW,GAAK,EAGd,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IACrB8C,KAAKwT,IAAItW,GAAK4wD,EAAQrvD,EAAK,GAAM,EAAIvB,GAKvC,OAHA8C,KAAK+mE,IAAM,EACX/mE,KAAKgnE,SAAW,EAEThnE,KAWT,QAAQ2B,EAAMwH,EAAO7L,GACnB,MAAM6pE,EAAQnnE,KAAK+mE,IAAM,EAAI,KACvBvpE,EAAI,IAAIyQ,YAAY,IAE1B,KAAO9E,GAAS,IAAI,CAElB,MAAM00C,EAAKiQ,EAAQnsD,EAAMrE,EAAI,GACvBwgD,EAAKgQ,EAAQnsD,EAAMrE,EAAI,GACvBqhD,EAAKmP,EAAQnsD,EAAMrE,EAAI,GACvBshD,EAAKkP,EAAQnsD,EAAMrE,EAAI,GACvBuhD,EAAKiP,EAAQnsD,EAAMrE,EAAI,GACvBgiD,EAAKwO,EAAQnsD,EAAMrE,EAAI,IACvB2pE,EAAKnZ,EAAQnsD,EAAMrE,EAAI,IACvB4pE,EAAKpZ,EAAQnsD,EAAMrE,EAAI,IAE7B0C,KAAKsT,EAAE,IAAW,KAALuqC,EACb79C,KAAKsT,EAAE,IAAkC,MAA1BuqC,IAAO,GAAOC,GAAM,GACnC99C,KAAKsT,EAAE,IAAkC,MAA1BwqC,IAAO,GAAOa,GAAM,GACnC3+C,KAAKsT,EAAE,IAAiC,MAAzBqrC,IAAO,EAAMC,GAAM,GAClC5+C,KAAKsT,EAAE,IAAkC,MAA1BsrC,IAAO,EAAMC,GAAM,IAClC7+C,KAAKsT,EAAE,IAAQurC,IAAO,EAAM,KAC5B7+C,KAAKsT,EAAE,IAAkC,MAA1BurC,IAAO,GAAOS,GAAM,GACnCt/C,KAAKsT,EAAE,IAAkC,MAA1BgsC,IAAO,GAAO2nB,GAAM,GACnCjnE,KAAKsT,EAAE,IAAiC,MAAzB2zD,IAAO,EAAMC,GAAM,GAClClnE,KAAKsT,EAAE,IAAQ4zD,IAAO,EAAMC,EAG5B,IAAI5pE,EAAI,EAER,IAAK,IAAIL,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3BM,EAAEN,GAAKK,EAEP,IAAK,IAAIyG,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIuD,EAAIvH,KAAKsT,EAAEtP,GAGbuD,GADEvD,GAAK9G,EACF8C,KAAKhC,EAAEd,EAAI8G,GAEX,EAAIhE,KAAKhC,EAAEd,EAAI,GAAK8G,GAE3BxG,EAAEN,IAAMqK,EAKE,IAANvD,IACFzG,EAAIC,EAAEN,KAAO,GACbM,EAAEN,IAAM,MAIZK,GAAKC,EAAEN,KAAO,GACdM,EAAEN,IAAM,KAGVK,GAAKA,GAAK,GAAKA,EACfA,GAAKC,EAAE,GACPA,EAAE,GAAU,KAAJD,EACRA,KAAU,GACVC,EAAE,IAAMD,EAER,IAAK,IAAIL,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKsT,EAAEpW,GAAKM,EAAEN,GAEhBI,GAAK,GACL6L,GAAS,IAUb,OAAOxH,GAGL,GAFA0L,EAAO/N,EAAO8B,SAASO,KAEL,IAAd3B,KAAK+mE,IACP,MAAM,IAAI9mE,MAAM,+BAElB,IAAIkJ,EAAQxH,EAAKjC,OACbpC,EAAI,EAGR,GAAI0C,KAAKgnE,SAAU,CACjB,IAAI3b,EAAO,GAAKrrD,KAAKgnE,SAEjB3b,EAAOliD,IACTkiD,EAAOliD,GAET,IAAK,IAAIjM,EAAI,EAAGA,EAAImuD,EAAMnuD,IACxB8C,KAAKwB,OAAOxB,KAAKgnE,SAAW9pE,GAAKyE,EAAKrE,EAAIJ,GAO5C,GALAiM,GAASkiD,EACT/tD,GAAK+tD,EAELrrD,KAAKgnE,UAAY3b,EAEbrrD,KAAKgnE,SAAW,GAClB,OAAOhnE,KAETA,KAAKonE,QAAQpnE,KAAKwB,OAAQ,GAAI,GAC9BxB,KAAKgnE,SAAW,EAIlB,GAAI79D,GAAS,GAAI,CACf,MAAMkiD,GAAe,GAARliD,EAEbnJ,KAAKonE,QAAQzlE,EAAM0pD,EAAM/tD,GAEzBA,GAAK+tD,EACLliD,GAASkiD,EAIX,GAAIliD,EAAO,CACT,IAAK,IAAIjM,EAAI,EAAGA,EAAIiM,EAAOjM,IACzB8C,KAAKwB,OAAOxB,KAAKgnE,SAAW9pE,GAAKyE,EAAKrE,EAAIJ,GAC5C8C,KAAKgnE,UAAY79D,EAGnB,OAAOnJ,KAQT,QACE,IAAkB,IAAdA,KAAK+mE,IACP,MAAM,IAAI9mE,MAAM,+BAElB,MAAM4sD,EAAMvtD,EAAOkH,MAAM,IACnBsqB,EAAI,IAAIg2C,YAAY,IAG1B,GAAI9mE,KAAKgnE,SAAU,CACjB,IAAI9pE,EAAI8C,KAAKgnE,SAIb,IAFAhnE,KAAKwB,OAAOtE,KAAO,EAEZA,EAAI,GAAIA,IACb8C,KAAKwB,OAAOtE,GAAK,EAEnB8C,KAAK+mE,IAAM,EACX/mE,KAAKonE,QAAQpnE,KAAKwB,OAAQ,GAAI,GAIhC,IAAIjE,EAAIyC,KAAKsT,EAAE,KAAO,GAEtBtT,KAAKsT,EAAE,IAAM,KAEb,IAAK,IAAIpW,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKsT,EAAEpW,IAAMK,EACbA,EAAIyC,KAAKsT,EAAEpW,KAAO,GAClB8C,KAAKsT,EAAEpW,IAAM,KAGf8C,KAAKsT,EAAE,IAAU,EAAJ/V,EACbA,EAAIyC,KAAKsT,EAAE,KAAO,GAClBtT,KAAKsT,EAAE,IAAM,KACbtT,KAAKsT,EAAE,IAAM/V,EACbA,EAAIyC,KAAKsT,EAAE,KAAO,GAClBtT,KAAKsT,EAAE,IAAM,KACbtT,KAAKsT,EAAE,IAAM/V,EAGbuzB,EAAE,GAAK9wB,KAAKsT,EAAE,GAAK,EACnB/V,EAAIuzB,EAAE,KAAO,GACbA,EAAE,IAAM,KAER,IAAK,IAAI5zB,EAAI,EAAGA,EAAI,GAAIA,IACtB4zB,EAAE5zB,GAAK8C,KAAKsT,EAAEpW,GAAKK,EACnBA,EAAIuzB,EAAE5zB,KAAO,GACb4zB,EAAE5zB,IAAM,KAIV,IAAI4xB,GAAY,EAAJvxB,GAAS,EAErB,IAAK,IAAIL,EAAI,EAAGA,EAAI,GAAIA,IACtB4zB,EAAE5zB,IAAM4xB,EAEVA,GAAQA,EAER,IAAK,IAAI5xB,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKsT,EAAEpW,GAAM8C,KAAKsT,EAAEpW,GAAK4xB,EAAQgC,EAAE5zB,GAGrC8C,KAAKsT,EAAE,GAAyC,OAAlCtT,KAAKsT,EAAE,GAAOtT,KAAKsT,EAAE,IAAM,IACzCtT,KAAKsT,EAAE,GAA+C,OAAxCtT,KAAKsT,EAAE,KAAO,EAAMtT,KAAKsT,EAAE,IAAM,IAC/CtT,KAAKsT,EAAE,GAA8C,OAAvCtT,KAAKsT,EAAE,KAAO,EAAMtT,KAAKsT,EAAE,IAAM,GAC/CtT,KAAKsT,EAAE,GAA8C,OAAvCtT,KAAKsT,EAAE,KAAO,EAAMtT,KAAKsT,EAAE,IAAM,GAC/CtT,KAAKsT,EAAE,GACqC,OAD9BtT,KAAKsT,EAAE,KAAO,GACvBtT,KAAKsT,EAAE,IAAM,EAAMtT,KAAKsT,EAAE,IAAM,IACrCtT,KAAKsT,EAAE,GAA+C,OAAxCtT,KAAKsT,EAAE,KAAO,EAAMtT,KAAKsT,EAAE,IAAM,IAC/CtT,KAAKsT,EAAE,GAA8C,OAAvCtT,KAAKsT,EAAE,KAAO,EAAMtT,KAAKsT,EAAE,IAAM,GAC/CtT,KAAKsT,EAAE,GAA8C,OAAvCtT,KAAKsT,EAAE,KAAO,EAAMtT,KAAKsT,EAAE,IAAM,GAG/C,IAAIiG,EAAIvZ,KAAKsT,EAAE,GAAKtT,KAAKwT,IAAI,GAE7BxT,KAAKsT,EAAE,GAAKiG,EAEZ,IAAK,IAAIrc,EAAI,EAAGA,EAAI,EAAGA,IACrBqc,EAAIvZ,KAAKsT,EAAEpW,GAAK8C,KAAKwT,IAAItW,IAAMqc,IAAM,IACrCvZ,KAAKsT,EAAEpW,GAAKqc,EAGd,IAAK,IAAIrc,EAAI,EAAGA,EAAI,EAAGA,IACrBizD,EAAStD,EAAK7sD,KAAKsT,EAAEpW,GAAQ,EAAJA,GAK3B,OAFA8C,KAAKu1D,UAEE1I,EAOT,UACE,IAAK,IAAI3vD,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKhC,EAAEd,GAAK,EACZ8C,KAAKsT,EAAEpW,GAAK,EAGd,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IACrB8C,KAAKwT,IAAItW,GAAK,EAEhB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKwB,OAAOtE,GAAK,EAEnB8C,KAAK+mE,KAAO,EACZ/mE,KAAKgnE,SAAW,EASlB,OAAO3G,GACLhzD,EAAO/N,EAAO8B,SAASi/D,IACvBhzD,EAAsB,KAAfgzD,EAAI3gE,QAEX,MAAMmtD,EAAM7sD,KAAKuT,QAEjB,IAAI8H,EAAI,EAER,IAAK,IAAIne,EAAI,EAAGA,EAAI,GAAIA,IACtBme,GAAKwxC,EAAI3vD,GAAKmjE,EAAInjE,GAEpB,OAASme,EAAI,IAAO,IAAQ,GAchC,SAASyyC,EAAQnsD,EAAM2gB,GACrB,OAAO3gB,EAAK2gB,KAAqB,IAAZ3gB,EAAK2gB,GAG5B,SAAS6tC,EAAS/iD,EAAK0N,EAAKwH,GAG1B,OAFAlV,EAAIkV,KAASxH,EACb1N,EAAIkV,KAASxH,IAAQ,EACdwH,EAbT8iD,EAAS5+B,OAAS,EAoBlBvpC,EAAOD,QAAUooE,I,sDCzXjB;;;;;;;;;AAWA,MAAM/3D,EAAS,EAAQ,GACjBg6D,EAAQ,EAAQ,KAMhBzqD,EAAQtd,EAAOkH,MAAM,GAGrB8gE,EAAY,IAAIr5D,YAAY,CAChC,GACA,IACA,KACA,EACA,IACA,EACA,EACA,EACA,SAOF,MAAMs5D,EACJ,YAAY/0C,GACVnlB,EAAOmlB,GAA8B,mBAAhBA,EAAItd,SACzB7H,EAAgC,iBAAlBmlB,EAAI3gB,WAElB7R,KAAKwyB,IAAMA,EAGb,gBACE,OAAOxyB,KAAKwyB,IAAI3gB,UAGlB,KAAKpT,EAAK6W,GACR,MAAM,IAAIrV,MAAM,oBAGlB,OAAO0B,GACL,MAAM,IAAI1B,MAAM,oBAGlB,MAAMo1B,EAAQ1b,GACZ,MAAM,IAAI1Z,MAAM,oBAGlB,QACE,MAAM,IAAIA,MAAM,oBAGlB,UACE,MAAM,IAAIA,MAAM,oBAGlB,eAAeqW,GAKb,OAJAjJ,EAA0B,kBAAZiJ,GAEdtW,KAAKwnE,gBAAgBlxD,GAEdtW,KAGT,OAAO2B,GAGL,OAFA0L,EAAO/N,EAAO8B,SAASO,IACvB3B,KAAKynE,QAAQ9lE,GACN3B,KAGT,OAAO0nE,EAAQC,EAAQC,GAOrB,OANAv6D,EAAQq6D,IAAW,IAAOA,GAC1Br6D,EAAQs6D,IAAW,IAAOA,GAC1Bt6D,EAAc,MAAPu6D,GAAetoE,EAAO8B,SAASwmE,IAEtC5nE,KAAK6nE,QAAQH,EAAQC,EAAQC,GAEtB5nE,KAGT,aACE,OAAOA,KAAK8nE,cAGd,WAAWzH,GAGT,OAFAhzD,EAAO/N,EAAO8B,SAASi/D,IACvBrgE,KAAK+nE,YAAY1H,GACVrgE,KAGT,gBAAgBsW,GACd,MAAM,IAAIrW,MAAM,kBAGlB,QAAQ0B,GACN,MAAM,IAAI1B,MAAM,gCAGlB,QAAQynE,EAAQC,EAAQC,GACtB,MAAM,IAAI3nE,MAAM,kBAGlB,cACE,MAAM,IAAIA,MAAM,gCAGlB,YAAYogE,GACV,MAAM,IAAIpgE,MAAM,iCAQpB,MAAM+nE,UAAcT,EAClB,YAAY/0C,EAAKjc,GACfwhB,MAAMvF,GAENxyB,KAAKsW,SAAU,EACftW,KAAKuW,MAAQA,EACbvW,KAAK4V,MAAQtW,EAAOkH,MAAMxG,KAAK6R,WAC/B7R,KAAKioE,UAAY,EACjBjoE,KAAKkoE,KAAO,KACZloE,KAAKmoE,SAAW,EAEZ5xD,IACFvW,KAAKkoE,KAAO5oE,EAAOkH,MAAMxG,KAAK6R,YAGlC,KAAKpT,EAAK6W,GAcR,OAbU,MAANA,IACFA,EAAKsH,GAEPvP,EAAO/N,EAAO8B,SAAS3C,IACvB4O,EAAO/N,EAAO8B,SAASkU,IAEvBtV,KAAKwyB,IAAI5jB,KAAKnQ,GAEduB,KAAKioE,SAAW,EAChBjoE,KAAKmoE,SAAW,EAEhBnoE,KAAKyhB,MAAMhjB,EAAK6W,GAETtV,KAGT,YAAYooE,GACV,GAAIpoE,KAAKioE,SAAWG,EAAOpoE,KAAK6R,UAC9B,OAAO,EAET,IAAIw2D,EAAO,EAeX,OAbIroE,KAAKuW,QACP8xD,GAAQroE,KAAKmoE,UAEXnoE,KAAKioE,SAAW,IAClBG,GAAQpoE,KAAK6R,UAAY7R,KAAKioE,SAC9BI,GAAQroE,KAAK6R,WAGXu2D,GAAQpoE,KAAK6R,YACfw2D,GAAQD,EAAQA,EAAOpoE,KAAK6R,WAE9BxE,EAAOg7D,GAAQroE,KAAK6R,WAEbw2D,EAGT,OAAO1uD,GAGL,GAFAtM,EAAO/N,EAAO8B,SAASuY,KAEA,IAAnB3Z,KAAKioE,SACP,MAAM,IAAIhoE,MAAM,8BAElB,MAAMooE,EAAOroE,KAAKsoE,YAAY3uD,EAAMja,QAC9B21B,EAAS/1B,EAAOkH,MAAM6hE,GAE5B,GAAIroE,KAAKioE,SAAWtuD,EAAMja,OAASM,KAAK6R,UAEtC,OADA7R,KAAKioE,UAAYtuD,EAAMpY,KAAKvB,KAAK4V,MAAO5V,KAAKioE,SAAU,EAAGtuD,EAAMja,QACzD21B,EAGT,IAAI+yC,EAAOzuD,EAAMja,OACbk2D,EAAO,EACPD,EAAO,EAKX,GAHI31D,KAAKuW,QACPo/C,GAAQ31D,KAAKkoE,KAAK3mE,KAAK8zB,EAAQsgC,EAAM,EAAG31D,KAAKmoE,WAE3CnoE,KAAKioE,SAAW,EAAG,CACrB,MAAM5c,EAAOrrD,KAAK6R,UAAY7R,KAAKioE,SAEnCrS,GAAQj8C,EAAMpY,KAAKvB,KAAK4V,MAAO5V,KAAKioE,SAAUrS,EAAMA,EAAOvK,GAC3D+c,GAAQ/c,EAERrrD,KAAKosC,QAAQ/W,EAAQsgC,EAAM31D,KAAK4V,MAAO,GAEvC+/C,GAAQ31D,KAAK6R,UAEb7R,KAAKioE,SAAW,EAGlB,KAAOG,GAAQpoE,KAAK6R,WAClB7R,KAAKosC,QAAQ/W,EAAQsgC,EAAMh8C,EAAOi8C,GAElCA,GAAQ51D,KAAK6R,UACbu2D,GAAQpoE,KAAK6R,UACb8jD,GAAQ31D,KAAK6R,UAQf,OALIu2D,EAAO,IACTpoE,KAAKioE,SAAWtuD,EAAMpY,KAAKvB,KAAK4V,MAAO,EAAGggD,EAAMA,EAAOwS,IAEzD/6D,EAAOsoD,IAAS0S,GAEZroE,KAAKuW,OACPvW,KAAKmoE,SAAW9yC,EAAO9zB,KAAKvB,KAAKkoE,KAAM,EAAGG,EAAOroE,KAAK6R,UAAWw2D,GAC1DhzC,EAAOp0B,MAAM,EAAGonE,EAAOroE,KAAK6R,YAG9BwjB,EAGT,MAAMA,EAAQ1b,GAKZ,GAJAtM,EAAO/N,EAAO8B,SAASi0B,IACvBhoB,EAAO/N,EAAO8B,SAASuY,IACvBtM,EAAOgoB,EAAO31B,SAAWia,EAAMja,SAER,IAAnBM,KAAKioE,SACP,MAAM,IAAIhoE,MAAM,8BAElB,GAAID,KAAKuW,OAA2B,IAAlBvW,KAAKioE,SACrB,MAAM,IAAIhoE,MAAM,iCAElB,GAAK0Z,EAAMja,OAASM,KAAK6R,WAAe,EACtC,MAAM,IAAI5R,MAAM,+CAElB,MAAM6B,EAAO9B,KAAK6R,UAElB,IAAIxQ,EAAMsY,EAAMja,OACZkI,EAAM,EAEV,KAAOvG,EAAM,GACXrB,KAAKosC,QAAQ/W,EAAQztB,EAAK+R,EAAO/R,GACjCA,GAAO9F,EACPT,GAAOS,EAGT,OAAOuzB,EAGT,QACE,IAAuB,IAAnBr1B,KAAKioE,SACP,MAAM,IAAIhoE,MAAM,8BAElB,IACE,OAAOD,KAAKorD,SACZ,QACAprD,KAAKu1D,WAIT,UACEv1D,KAAKwyB,IAAI+iC,UAETv1D,KAAKioE,UAAY,EACjBjoE,KAAKmoE,SAAW,EAEhB,IAAK,IAAIjrE,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAK4V,MAAM1Y,GAAK,EAElB,GAAI8C,KAAKuW,MACP,IAAK,IAAIrZ,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKkoE,KAAKhrE,GAAK,EAKnB,OAFA8C,KAAKuoE,WAEEvoE,KAGT,MAAMvB,EAAK6W,GACT,MAAM,IAAIrV,MAAM,oBAGlB,QAAQo1B,EAAQsgC,EAAMh8C,EAAOi8C,GAC3B,MAAM,IAAI31D,MAAM,oBAGlB,SACE,MAAM,IAAIA,MAAM,oBAGlB,WACE,MAAM,IAAIA,MAAM,qBAQpB,MAAMuoE,UAAejB,EACnB,YAAY/0C,GACVuF,MAAMvF,GACNxyB,KAAK4H,KAAO,EAGd,KAAKnJ,EAAK6W,GAaR,OAZU,MAANA,IACFA,EAAKsH,GAEPvP,EAAO/N,EAAO8B,SAAS3C,IACvB4O,EAAO/N,EAAO8B,SAASkU,IAEvBtV,KAAKwyB,IAAI5jB,KAAKnQ,GAEduB,KAAK4H,IAAM,EAEX5H,KAAKyhB,MAAMhjB,EAAK6W,GAETtV,KAGT,OAAO2Z,GAGL,GAFAtM,EAAO/N,EAAO8B,SAASuY,KAEL,IAAd3Z,KAAK4H,IACP,MAAM,IAAI3H,MAAM,8BAElB,MAAMo1B,EAAS/1B,EAAOkH,MAAMmT,EAAMja,QAIlC,OAFAM,KAAKyoE,OAAOpzC,EAAQ1b,GAEb0b,EAGT,MAAMA,EAAQ1b,GAKZ,GAJAtM,EAAO/N,EAAO8B,SAASi0B,IACvBhoB,EAAO/N,EAAO8B,SAASuY,IACvBtM,EAAOgoB,EAAO31B,SAAWia,EAAMja,SAEb,IAAdM,KAAK4H,IACP,MAAM,IAAI3H,MAAM,8BAIlB,OAFAD,KAAKyoE,OAAOpzC,EAAQ1b,GAEb0b,EAGT,QACE,IAAkB,IAAdr1B,KAAK4H,IACP,MAAM,IAAI3H,MAAM,8BAElB,IACE,OAAOD,KAAKorD,SACZ,QACAprD,KAAKu1D,WAIT,UAOE,OANAv1D,KAAKwyB,IAAI+iC,UAETv1D,KAAK4H,KAAO,EAEZ5H,KAAKuoE,WAEEvoE,KAGT,MAAMvB,EAAK6W,GACT,MAAM,IAAIrV,MAAM,oBAGlB,OAAOo1B,EAAQ1b,GACb,MAAM,IAAI1Z,MAAM,oBAGlB,SACE,MAAM,IAAIA,MAAM,oBAGlB,WACE,MAAM,IAAIA,MAAM,qBAQpB,MAAMyoE,UAAkBV,EACtB,YAAYx1C,GACVuF,MAAMvF,GAAK,GAGb,MAAM/zB,EAAK6W,GACTjI,EAAqB,IAAdiI,EAAG5V,QAGZ,QAAQ21B,EAAQsgC,EAAMh8C,EAAOi8C,GAC3B51D,KAAKwyB,IAAItd,QAAQmgB,EAAQsgC,EAAMh8C,EAAOi8C,GAGxC,SACE,GAAsB,IAAlB51D,KAAKioE,SACP,MAAM,IAAIhoE,MAAM,iCAElB,OAAOX,EAAOkH,MAAM,GAGtB,aASF,MAAMmiE,UAAoBX,EACxB,YAAYx1C,GACVuF,MAAMvF,GAAK,GAGb,MAAM/zB,EAAK6W,GACTjI,EAAqB,IAAdiI,EAAG5V,QAGZ,QAAQ21B,EAAQsgC,EAAMh8C,EAAOi8C,GAC3B51D,KAAKwyB,IAAIrd,QAAQkgB,EAAQsgC,EAAMh8C,EAAOi8C,GAGxC,SACE,GAAsB,IAAlB51D,KAAKioE,SACP,MAAM,IAAIhoE,MAAM,iCAElB,OAAOX,EAAOkH,MAAM,GAGtB,aASF,MAAMoiE,UAAoBZ,EACxB,YAAYx1C,GACVuF,MAAMvF,GAAK,GAGb,SACE,IAAKxyB,KAAKsW,QAAS,CACjB,GAAsB,IAAlBtW,KAAKioE,SACP,MAAM,IAAIhoE,MAAM,iCAElB,OAAOX,EAAOkH,MAAM,GAGtB,MAAMub,EAAO/hB,KAAK6R,UAAY7R,KAAKioE,SAC7BryD,EAAQtW,EAAOa,KAAKH,KAAK4V,OAE/B,IAAK,IAAI1Y,EAAI8C,KAAKioE,SAAU/qE,EAAI8C,KAAK6R,UAAW3U,IAC9C0Y,EAAM1Y,GAAK6kB,EAIb,OAFA/hB,KAAKosC,QAAQx2B,EAAO,EAAGA,EAAO,GAEvBA,EAGT,gBAAgBU,GACdtW,KAAKsW,QAAUA,GAQnB,MAAMuyD,UAAsBb,EAC1B,YAAYx1C,GACVuF,MAAMvF,GAAK,GAGb,SACE,GAAsB,IAAlBxyB,KAAKioE,SACP,MAAM,IAAIhoE,MAAM,iCAElB,IAAKD,KAAKsW,QACR,OAAOhX,EAAOkH,MAAM,GAEtB,GAAsB,IAAlBxG,KAAKmoE,SACP,MAAM,IAAIloE,MAAM,0BAElBoN,EAAOrN,KAAKmoE,WAAanoE,KAAKkoE,KAAKxoE,QACnC2N,EAAOrN,KAAKmoE,WAAanoE,KAAK6R,WAE9B,MAAM+D,EAAQtW,EAAOa,KAAKH,KAAKkoE,MAE/B,IAAInmD,EAAOnM,EAAMA,EAAMlW,OAAS,GAC5BiG,EAAM,EAGVA,GAASoc,EAAO,IAAO,GAAM,EAG7Bpc,GAAQoc,EAAO/hB,KAAK6R,UAAY,IAAO,GAGvCkQ,IAASpc,EAGT,MAAMpD,EAAMvC,KAAK6R,UAAYkQ,EAE7B,IAAK,IAAI7kB,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAAK,CAIvCyI,GAASzI,EAAIqF,IAAS,IAHXqT,EAAM1Y,GAGmB6kB,GAAQ,IAAO,GAGrD,IAAKpc,EACH,MAAM,IAAI1F,MAAM,0BAElB,OAAO2V,EAAM3U,MAAM,EAAGsB,GAGxB,gBAAgB+T,GACd,GAAsB,IAAlBtW,KAAKmoE,UAAoC,IAAlBnoE,KAAKioE,SAC9B,MAAM,IAAIhoE,MAAM,4BAElBD,KAAKsW,QAAUA,EACftW,KAAKuW,MAAQD,GAQjB,MAAMwyD,UAAkBF,EACtB,YAAYp2C,GACVuF,MAAMvF,GAGR,MAAM/zB,EAAK6W,GACTjI,EAAqB,IAAdiI,EAAG5V,QAGZ,QAAQ21B,EAAQsgC,EAAMh8C,EAAOi8C,GAC3B51D,KAAKwyB,IAAItd,QAAQmgB,EAAQsgC,EAAMh8C,EAAOi8C,GAGxC,aASF,MAAMmT,UAAoBF,EACxB,YAAYr2C,GACVuF,MAAMvF,GAGR,MAAM/zB,EAAK6W,GACTjI,EAAqB,IAAdiI,EAAG5V,QAGZ,QAAQ21B,EAAQsgC,EAAMh8C,EAAOi8C,GAC3B51D,KAAKwyB,IAAIrd,QAAQkgB,EAAQsgC,EAAMh8C,EAAOi8C,GAGxC,aASF,MAAMoT,UAAkBJ,EACtB,YAAYp2C,GACVuF,MAAMvF,GAENxyB,KAAKu1B,KAAOj2B,EAAOkH,MAAMxG,KAAK6R,WAGhC,MAAMpT,EAAK6W,GACTjI,EAAOiI,EAAG5V,SAAWM,KAAK6R,WAC1ByD,EAAG/T,KAAKvB,KAAKu1B,KAAM,GAGrB,QAAQF,EAAQsgC,EAAMh8C,EAAOi8C,GAC3B,IAAK,IAAI14D,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKu1B,KAAKr4B,IAAMyc,EAAMi8C,EAAO14D,GAE/B8C,KAAKwyB,IAAItd,QAAQmgB,EAAQsgC,EAAM31D,KAAKu1B,KAAM,GAE1CF,EAAO9zB,KAAKvB,KAAKu1B,KAAM,EAAGogC,EAAMA,EAAO31D,KAAK6R,WAG9C,WACE,IAAK,IAAI3U,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKu1B,KAAKr4B,GAAK,GAQrB,MAAM+rE,UAAoBJ,EACxB,YAAYr2C,GACVuF,MAAMvF,GAENxyB,KAAKu1B,KAAOj2B,EAAOkH,MAAMxG,KAAK6R,WAC9B7R,KAAKq0B,IAAM/0B,EAAOkH,MAAMxG,KAAK6R,WAG/B,MAAMpT,EAAK6W,GACTjI,EAAOiI,EAAG5V,SAAWM,KAAK6R,WAC1ByD,EAAG/T,KAAKvB,KAAKu1B,KAAM,GAGrB,QAAQF,EAAQsgC,EAAMh8C,EAAOi8C,GAC3B,GAAIsT,EAAQ7zC,EAAQsgC,EAAMh8C,EAAOi8C,GAAO,CACtC51D,KAAKu1B,KAAKh0B,KAAKvB,KAAKq0B,IAAK,GAEzB1a,EAAMpY,KAAKvB,KAAKu1B,KAAM,EAAGqgC,EAAMA,EAAO51D,KAAK6R,WAE3C7R,KAAKwyB,IAAIrd,QAAQkgB,EAAQsgC,EAAMh8C,EAAOi8C,GAEtC,IAAK,IAAI14D,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClCm4B,EAAOsgC,EAAOz4D,IAAM8C,KAAKq0B,IAAIn3B,OAC1B,CACL8C,KAAKwyB,IAAIrd,QAAQkgB,EAAQsgC,EAAMh8C,EAAOi8C,GAEtC,IAAK,IAAI14D,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClCm4B,EAAOsgC,EAAOz4D,IAAM8C,KAAKu1B,KAAKr4B,GAEhCyc,EAAMpY,KAAKvB,KAAKu1B,KAAM,EAAGqgC,EAAMA,EAAO51D,KAAK6R,YAI/C,WACE,IAAK,IAAI3U,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKu1B,KAAKr4B,GAAK,EACf8C,KAAKq0B,IAAIn3B,GAAK,GASpB,MAAMisE,UAAkBnB,EACtB,YAAYx1C,GACVuF,MAAMvF,GAAK,GAEXxyB,KAAKu1B,KAAOj2B,EAAOkH,MAAMxG,KAAK6R,WAGhC,MAAMpT,EAAK6W,GACTjI,EAAOiI,EAAG5V,SAAWM,KAAK6R,WAC1ByD,EAAG/T,KAAKvB,KAAKu1B,KAAM,GAGrB,QAAQF,EAAQsgC,EAAMh8C,EAAOi8C,GAC3B,IAAK,IAAI14D,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKu1B,KAAKr4B,IAAMyc,EAAMi8C,EAAO14D,GAE/B8C,KAAKwyB,IAAItd,QAAQmgB,EAAQsgC,EAAM31D,KAAKu1B,KAAM,GAE1CF,EAAO9zB,KAAKvB,KAAKu1B,KAAM,EAAGogC,EAAMA,EAAO31D,KAAK6R,WAG9C,SACE,IAAK7R,KAAKsW,QAAS,CACjB,GAAsB,IAAlBtW,KAAKioE,SACP,MAAM,IAAIhoE,MAAM,iCAElB,OAAOX,EAAOkH,MAAM,GAGtB,GAAsB,IAAlBxG,KAAKmoE,SACP,MAAM,IAAIloE,MAAM,0BAElB,IAAK,IAAI/C,EAAI,EAAGA,EAAI8C,KAAKioE,SAAU/qE,IACjC8C,KAAKu1B,KAAKr4B,IAAM8C,KAAK4V,MAAM1Y,GAE7B8C,KAAKwyB,IAAItd,QAAQlV,KAAKu1B,KAAM,EAAGv1B,KAAKu1B,KAAM,GAE1C,MAAM2yC,EAAOloE,KAAKkoE,KAAKjnE,MAAM,EAAGjB,KAAKioE,UAErC,OAAO3oE,EAAOoI,OAAO,CAAC1H,KAAKu1B,KAAM2yC,IAGnC,WACE,IAAK,IAAIhrE,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKu1B,KAAKr4B,GAAK,EAGnB,gBAAgBoZ,GACd,GAAsB,IAAlBtW,KAAKmoE,UAAoC,IAAlBnoE,KAAKioE,SAC9B,MAAM,IAAIhoE,MAAM,4BAElBD,KAAKsW,QAAUA,EACftW,KAAKuW,MAAQD,GAQjB,MAAM8yD,UAAoBpB,EACxB,YAAYx1C,GACVuF,MAAMvF,GAAK,GAEXxyB,KAAKu1B,KAAOj2B,EAAOkH,MAAMxG,KAAK6R,WAC9B7R,KAAKq0B,IAAM/0B,EAAOkH,MAAMxG,KAAK6R,WAG/B,MAAMpT,EAAK6W,GACTjI,EAAOiI,EAAG5V,SAAWM,KAAK6R,WAC1ByD,EAAG/T,KAAKvB,KAAKu1B,KAAM,GAGrB,QAAQF,EAAQsgC,EAAMh8C,EAAOi8C,GAC3B,GAAIsT,EAAQ7zC,EAAQsgC,EAAMh8C,EAAOi8C,GAAO,CACtC51D,KAAKu1B,KAAKh0B,KAAKvB,KAAKq0B,IAAK,GAEzB1a,EAAMpY,KAAKvB,KAAKu1B,KAAM,EAAGqgC,EAAMA,EAAO51D,KAAK6R,WAE3C7R,KAAKwyB,IAAIrd,QAAQkgB,EAAQsgC,EAAMh8C,EAAOi8C,GAEtC,IAAK,IAAI14D,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClCm4B,EAAOsgC,EAAOz4D,IAAM8C,KAAKq0B,IAAIn3B,OAC1B,CACL8C,KAAKwyB,IAAIrd,QAAQkgB,EAAQsgC,EAAMh8C,EAAOi8C,GAEtC,IAAK,IAAI14D,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClCm4B,EAAOsgC,EAAOz4D,IAAM8C,KAAKu1B,KAAKr4B,GAEhCyc,EAAMpY,KAAKvB,KAAKu1B,KAAM,EAAGqgC,EAAMA,EAAO51D,KAAK6R,YAI/C,SACE,IAAK7R,KAAKsW,QAAS,CACjB,GAAsB,IAAlBtW,KAAKioE,SACP,MAAM,IAAIhoE,MAAM,iCAElB,OAAOX,EAAOkH,MAAM,GAGtB,GAAsB,IAAlBxG,KAAKmoE,SACP,MAAM,IAAIloE,MAAM,0BAElB,MAAMo0B,EAAM/0B,EAAOkH,MAAMxG,KAAK6R,WAE9B7R,KAAKwyB,IAAIrd,QAAQnV,KAAKu1B,KAAM,EAAGv1B,KAAKu1B,KAAM,GAI1C,IAAK,IAAIr4B,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClCm3B,EAAIn3B,GAAK8C,KAAKkoE,KAAKhrE,GAAK8C,KAAKu1B,KAAKr4B,GAEpC,IAAK,IAAIA,EAAI,EAAGA,EAAI8C,KAAKioE,SAAU/qE,IACjC8C,KAAKkoE,KAAKhrE,GAAK8C,KAAK4V,MAAM1Y,GAC1B8C,KAAK4V,MAAM1Y,IAAM8C,KAAKu1B,KAAKr4B,GAG7B,IAAK,IAAIA,EAAI8C,KAAKioE,SAAU/qE,EAAI8C,KAAK6R,UAAW3U,IAC9C8C,KAAKkoE,KAAKhrE,GAAK8C,KAAKu1B,KAAKr4B,GAE3B8C,KAAKwyB,IAAIrd,QAAQnV,KAAKkoE,KAAM,EAAGloE,KAAKkoE,KAAM,GAE1C,IAAK,IAAIhrE,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKkoE,KAAKhrE,IAAMm3B,EAAIn3B,GAEtB,MAAM0Y,EAAQ5V,KAAK4V,MAAM3U,MAAM,EAAGjB,KAAKioE,UAEvC,OAAO3oE,EAAOoI,OAAO,CAAC1H,KAAKkoE,KAAMtyD,IAGnC,WACE,IAAK,IAAI1Y,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKu1B,KAAKr4B,GAAK,EACf8C,KAAKq0B,IAAIn3B,GAAK,EAIlB,gBAAgBoZ,GACd,GAAsB,IAAlBtW,KAAKmoE,UAAoC,IAAlBnoE,KAAKioE,SAC9B,MAAM,IAAIhoE,MAAM,4BAElBD,KAAKsW,QAAUA,EACftW,KAAKuW,MAAQD,GAQjB,MAAM+yD,UAAYrB,EAChB,YAAYx1C,EAAKtd,GACf6iB,MAAMvF,GAAK,GAEXxyB,KAAKkV,QAAUA,EACflV,KAAKspE,KAAOhC,EAAUtnE,KAAK6R,YAAc,GACzC7R,KAAKunC,MAAQjoC,EAAOkH,MAAMxG,KAAK6R,WAC/B7R,KAAKu1B,KAAOj2B,EAAOkH,MAAMxG,KAAK6R,WAGhC,KAAKpT,EAAK6W,GACRjI,EAAO/N,EAAO8B,SAAS3C,IACvB4O,EAAO/N,EAAO8B,SAASkU,IACvBjI,EAAO5O,EAAIiB,OAAS,GAA0B,IAAP,EAAbjB,EAAIiB,SAC9B2N,EAAOiI,EAAG5V,SAAWM,KAAK6R,WAE1B,MAAM/P,EAAOrD,EAAIiB,SAAW,EACtBkc,EAAKnd,EAAIwC,MAAM,EAAGa,GAClB+Z,EAAKpd,EAAIwC,MAAMa,GAErB,GAAIynE,EAAU3tD,EAAIC,EAAI/Z,GACpB,MAAM,IAAI7B,MAAM,uBAUlB,OARAD,KAAKwyB,IAAI5jB,KAAKiN,GACd7b,KAAKwyB,IAAItd,QAAQlV,KAAKunC,MAAO,EAAGjyB,EAAI,GAEpCtV,KAAKwyB,IAAI5jB,KAAKgN,GAEd5b,KAAKioE,SAAW,EAChBjoE,KAAKmoE,SAAW,EAETnoE,KAGT,SACE,IAAIwpE,EAAK,EAEJxpE,KAAKkV,SACRlV,KAAKunC,MAAMhmC,KAAKvB,KAAKu1B,KAAM,GAE7B,IAAK,IAAIr4B,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAAK,CACvC,MAAMK,EAAIyC,KAAKunC,MAAMrqC,IAAM,EAE3B8C,KAAKunC,MAAMrqC,KAAO,EAClB8C,KAAKunC,MAAMrqC,IAAMssE,EAEjBA,EAAKjsE,EAGPisE,EAAW,KAALA,EAENxpE,KAAKunC,MAAM,IAAOvnC,KAAKspE,MAAQ,GAAME,EACrCxpE,KAAKunC,MAAM,IAAOvnC,KAAKspE,MAAS,EAAKE,EACrCxpE,KAAKunC,MAAM,IAAOvnC,KAAKspE,MAAS,EAAKE,EAGvC,QAAQn0C,EAAQsgC,EAAMh8C,EAAOi8C,GAC3B,IAAK,IAAI14D,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClCm4B,EAAOsgC,EAAOz4D,GAAKyc,EAAMi8C,EAAO14D,GAAK8C,KAAKunC,MAAMrqC,GAE9C8C,KAAKkV,QACPlV,KAAKwyB,IAAItd,QAAQmgB,EAAQsgC,EAAMtgC,EAAQsgC,GAEvC31D,KAAKwyB,IAAIrd,QAAQkgB,EAAQsgC,EAAMtgC,EAAQsgC,GAEzC,IAAK,IAAIz4D,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClCm4B,EAAOsgC,EAAOz4D,IAAM8C,KAAKunC,MAAMrqC,GAEjC8C,KAAKypE,SAGP,WACE,IAAK,IAAIvsE,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKunC,MAAMrqC,GAAK,EAChB8C,KAAKu1B,KAAKr4B,GAAK,EAInB,gBAAgBoZ,GACd,GAAsB,IAAlBtW,KAAKmoE,UAAoC,IAAlBnoE,KAAKioE,SAC9B,MAAM,IAAIhoE,MAAM,4BAElBD,KAAKsW,QAAUA,EACftW,KAAKuW,MAAQD,GAQjB,MAAMozD,UAAkBL,EACtB,YAAY72C,GACVuF,MAAMvF,GAAK,GAGb,SACE,IAAKxyB,KAAKsW,QAAS,CACjB,GAAsB,IAAlBtW,KAAKioE,SACP,MAAM,IAAIhoE,MAAM,iCAElB,OAAOX,EAAOkH,MAAM,GAGtB,GAAsB,IAAlBxG,KAAKmoE,SACP,MAAM,IAAIloE,MAAM,0BAElB,GAAsB,IAAlBD,KAAKioE,SACP,OAAO3oE,EAAOa,KAAKH,KAAKkoE,MAG1B,MAAMj/D,EAAM3J,EAAOkH,MAAMxG,KAAKioE,UAE9B,IAAK,IAAI/qE,EAAI,EAAGA,EAAI8C,KAAKioE,SAAU/qE,IACjC+L,EAAI/L,GAAK8C,KAAKkoE,KAAKhrE,GAEnB8C,KAAKkoE,KAAKhrE,GAAK8C,KAAK4V,MAAM1Y,GAG5B,IAAK,IAAIA,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKkoE,KAAKhrE,IAAM8C,KAAKunC,MAAMrqC,GAE7B8C,KAAKwyB,IAAItd,QAAQlV,KAAKkoE,KAAM,EAAGloE,KAAKkoE,KAAM,GAE1C,IAAK,IAAIhrE,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKkoE,KAAKhrE,IAAM8C,KAAKunC,MAAMrqC,GAE7B,OAAOoC,EAAOoI,OAAO,CAAC1H,KAAKkoE,KAAMj/D,KAQrC,MAAM0gE,UAAoBN,EACxB,YAAY72C,GACVuF,MAAMvF,GAAK,GAGb,SACE,IAAKxyB,KAAKsW,QAAS,CACjB,GAAsB,IAAlBtW,KAAKioE,SACP,MAAM,IAAIhoE,MAAM,iCAElB,OAAOX,EAAOkH,MAAM,GAGtB,GAAsB,IAAlBxG,KAAKmoE,SACP,MAAM,IAAIloE,MAAM,0BAElB,GAAsB,IAAlBD,KAAKioE,SACP,OAAO3oE,EAAOa,KAAKH,KAAKkoE,MAK1B,IAAK,IAAIhrE,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKkoE,KAAKhrE,IAAM8C,KAAKu1B,KAAKr4B,GAE5B8C,KAAKwyB,IAAItd,QAAQlV,KAAKkoE,KAAM,EAAGloE,KAAKkoE,KAAM,GAE1C,IAAK,IAAIhrE,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKkoE,KAAKhrE,IAAM8C,KAAKu1B,KAAKr4B,GAK5B,IAAK,IAAIA,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKkoE,KAAKhrE,IAAM8C,KAAKunC,MAAMrqC,GAE7B8C,KAAKwyB,IAAIrd,QAAQnV,KAAKkoE,KAAM,EAAGloE,KAAKkoE,KAAM,GAE1C,IAAK,IAAIhrE,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKkoE,KAAKhrE,IAAM8C,KAAKunC,MAAMrqC,GAE7B,MAAM+L,EAAM3J,EAAOkH,MAAMxG,KAAKioE,UAE9B,IAAK,IAAI/qE,EAAI,EAAGA,EAAI8C,KAAKioE,SAAU/qE,IACjC+L,EAAI/L,GAAK8C,KAAKkoE,KAAKhrE,GAEnB8C,KAAKkoE,KAAKhrE,GAAK8C,KAAK4V,MAAM1Y,GAI5B,IAAK,IAAIA,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKkoE,KAAKhrE,IAAM8C,KAAKu1B,KAAKr4B,GAE5B8C,KAAKwyB,IAAIrd,QAAQnV,KAAKkoE,KAAM,EAAGloE,KAAKkoE,KAAM,GAE1C,IAAK,IAAIhrE,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKkoE,KAAKhrE,IAAM8C,KAAKu1B,KAAKr4B,GAE5B,OAAOoC,EAAOoI,OAAO,CAAC1H,KAAKkoE,KAAMj/D,KAQrC,MAAM2gE,UAAYpB,EAChB,YAAYh2C,GACVuF,MAAMvF,GAENxyB,KAAKwd,MAAQle,EAAOkH,MAAMxG,KAAK6R,WAC/B7R,KAAK6pE,IAAMvqE,EAAOkH,MAAMxG,KAAK6R,WAG/B,MAAMpT,EAAK6W,GACTjI,EAAOiI,EAAG5V,SAAWM,KAAK6R,WAE1ByD,EAAG/T,KAAKvB,KAAK6pE,IAAK,GAGpB,aACE,IAAK,IAAI3sE,EAAI8C,KAAK6pE,IAAInqE,OAAS,EAAGxC,GAAK,IACrC8C,KAAK6pE,IAAI3sE,IAAM,EAEK,IAAhB8C,KAAK6pE,IAAI3sE,IAH2BA,MAQ5C,OAAOm4B,EAAQ1b,GACb,MAAMmV,EAAO9uB,KAAK6R,UAAY,EAE9B,IAAK,IAAI3U,EAAI,EAAGA,EAAIyc,EAAMja,OAAQxC,IACN,IAArB8C,KAAK4H,IAAMknB,KACd9uB,KAAKwyB,IAAItd,QAAQlV,KAAKwd,MAAO,EAAGxd,KAAK6pE,IAAK,GAC1C7pE,KAAK8pE,aACL9pE,KAAK4H,IAAM,GAGbytB,EAAOn4B,GAAKyc,EAAMzc,GAAK8C,KAAKwd,MAAMxd,KAAK4H,OAI3C,SACE,OAAOtI,EAAOkH,MAAM,GAGtB,WACE,IAAK,IAAItJ,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKwd,MAAMtgB,GAAK,EAChB8C,KAAK6pE,IAAI3sE,GAAK,GASpB,MAAM6sE,UAAkBH,EACtB,YAAYp3C,GACVuF,MAAMvF,IAQV,MAAMw3C,UAAoBJ,EACxB,YAAYp3C,GACVuF,MAAMvF,IAQV,MAAMy3C,UAAYzB,EAChB,YAAYh2C,GACVuF,MAAMvF,GAENxyB,KAAKwd,MAAQle,EAAOkH,MAAMxG,KAAK6R,WAC/B7R,KAAKu1B,KAAOj2B,EAAOkH,MAAMxG,KAAK6R,WAGhC,MAAMpT,EAAK6W,GACTjI,EAAOiI,EAAG5V,SAAWM,KAAK6R,WAE1ByD,EAAG/T,KAAKvB,KAAKu1B,KAAM,GAGrB,SACE,OAAOj2B,EAAOkH,MAAM,GAGtB,WACE,IAAK,IAAItJ,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKwd,MAAMtgB,GAAK,EAChB8C,KAAKu1B,KAAKr4B,GAAK,GASrB,MAAMgtE,UAAkBD,EACtB,YAAYz3C,GACVuF,MAAMvF,GAGR,OAAO6C,EAAQ1b,GACb,MAAMmV,EAAO9uB,KAAK6R,UAAY,EAE9B,IAAK,IAAI3U,EAAI,EAAGA,EAAIyc,EAAMja,OAAQxC,IACN,IAArB8C,KAAK4H,IAAMknB,KACd9uB,KAAKwyB,IAAItd,QAAQlV,KAAKwd,MAAO,EAAGxd,KAAKu1B,KAAM,GAC3Cv1B,KAAK4H,IAAM,GAGbytB,EAAOn4B,GAAKyc,EAAMzc,GAAK8C,KAAKwd,MAAMxd,KAAK4H,KAEvC5H,KAAKu1B,KAAKv1B,KAAK4H,KAAOytB,EAAOn4B,GAE7B8C,KAAK4H,KAAO,GASlB,MAAMuiE,UAAoBF,EACxB,YAAYz3C,GACVuF,MAAMvF,GAGR,OAAO6C,EAAQ1b,GACb,MAAMmV,EAAO9uB,KAAK6R,UAAY,EAE9B,IAAK,IAAI3U,EAAI,EAAGA,EAAIyc,EAAMja,OAAQxC,IACN,IAArB8C,KAAK4H,IAAMknB,KACd9uB,KAAKwyB,IAAItd,QAAQlV,KAAKwd,MAAO,EAAGxd,KAAKu1B,KAAM,GAC3Cv1B,KAAK4H,IAAM,GAGb5H,KAAKu1B,KAAKv1B,KAAK4H,KAAO+R,EAAMzc,GAE5Bm4B,EAAOn4B,GAAKyc,EAAMzc,GAAK8C,KAAKwd,MAAMxd,KAAK4H,KAEvC5H,KAAK4H,KAAO,GASlB,MAAMwiE,UAAY5B,EAChB,YAAYh2C,GACVuF,MAAMvF,GAENxyB,KAAKwd,MAAQle,EAAOkH,MAAMxG,KAAK6R,WAGjC,MAAMpT,EAAK6W,GACTjI,EAAO/N,EAAO8B,SAASkU,IACvBjI,EAAOiI,EAAG5V,SAAWM,KAAK6R,WAE1ByD,EAAG/T,KAAKvB,KAAKwd,MAAO,GAGtB,OAAO6X,EAAQ1b,GACb,MAAMmV,EAAO9uB,KAAK6R,UAAY,EAE9B,IAAK,IAAI3U,EAAI,EAAGA,EAAIyc,EAAMja,OAAQxC,IACN,IAArB8C,KAAK4H,IAAMknB,KACd9uB,KAAKwyB,IAAItd,QAAQlV,KAAKwd,MAAO,EAAGxd,KAAKwd,MAAO,GAC5Cxd,KAAK4H,IAAM,GAGbytB,EAAOn4B,GAAKyc,EAAMzc,GAAK8C,KAAKwd,MAAMxd,KAAK4H,OAI3C,SACE,OAAOtI,EAAOkH,MAAM,GAGtB,WACE,IAAK,IAAItJ,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKwd,MAAMtgB,GAAK,GAQtB,MAAMmtE,UAAkBD,EACtB,YAAY53C,GACVuF,MAAMvF,IAQV,MAAM83C,UAAoBF,EACxB,YAAY53C,GACVuF,MAAMvF,IAQV,MAAM+3C,UAAY/B,EAChB,YAAYh2C,EAAKtd,GACf7H,EAAyB,KAAlBmlB,EAAI3gB,WAEXkmB,MAAMvF,GAENxyB,KAAKkV,QAAUA,EACflV,KAAKmT,KAAO,IAAIk0D,EAChBrnE,KAAK6pE,IAAMvqE,EAAOkH,MAAM,IACxBxG,KAAKwd,MAAQle,EAAOkH,MAAM,IAC1BxG,KAAKvB,IAAMa,EAAOkH,MAAM,IACxBxG,KAAK8uB,KAAOxvB,EAAOkH,MAAM,IACzBxG,KAAKqgE,IAAM,KACXrgE,KAAK6sD,IAAM,KAGb,MAAMpuD,EAAK6W,GACT,IAAK,IAAIpY,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAK6pE,IAAI3sE,GAAK,EACd8C,KAAKvB,IAAIvB,GAAK,EACd8C,KAAK8uB,KAAK5xB,GAAK,EA4BjB,OAzBA8C,KAAKwqE,UAAUxqE,KAAKvB,IAAKuB,KAAKvB,KAE9BuB,KAAKmT,KAAKvE,KAAK5O,KAAKvB,KAGF,KAAd6W,EAAG5V,SACLM,KAAKmT,KAAKX,OAAO8C,GACjBA,EAAKtV,KAAKmT,KAAKI,QACfvT,KAAKmT,KAAKvE,KAAK5O,KAAKvB,MAGtB6W,EAAG/T,KAAKvB,KAAK6pE,IAAK,GAEA,KAAdv0D,EAAG5V,SACLM,KAAK6pE,IAAI,IAAM,EACf7pE,KAAK6pE,IAAI,IAAM,EACf7pE,KAAK6pE,IAAI,IAAM,EACf7pE,KAAK6pE,IAAI,IAAM,GAGjB7pE,KAAKwqE,UAAUxqE,KAAK8uB,KAAM9uB,KAAK8uB,MAE/B9uB,KAAKqgE,IAAM,KACXrgE,KAAK6sD,IAAM,KAEJ7sD,KAGT,aACE,IAAIwpE,EAAK,EACLtsE,EAAI,EAER,KAAOA,KACLssE,GAAMxpE,KAAK6pE,IAAI,GAAK3sE,GACpB8C,KAAK6pE,IAAI,GAAK3sE,GAAKssE,EACnBA,IAAO,EAIX,UAAUn0C,EAAQ1b,GAChB,IAAK,IAAIzc,EAAI,EAAGA,EAAIyc,EAAMja,OAAQxC,IACR,IAAR,GAAX8C,KAAK4H,OACR5H,KAAKwyB,IAAItd,QAAQlV,KAAKwd,MAAO,EAAGxd,KAAK6pE,IAAK,GAC1C7pE,KAAK8pE,aACL9pE,KAAK4H,IAAM,GAGbytB,EAAOn4B,GAAKyc,EAAMzc,GAAK8C,KAAKwd,MAAMxd,KAAK4H,OAI3C,OAAOytB,EAAQ1b,GACT3Z,KAAKkV,SACPlV,KAAKwqE,UAAUn1C,EAAQ1b,GACvB3Z,KAAKmT,KAAKX,OAAO6iB,KAEjBr1B,KAAKmT,KAAKX,OAAOmH,GACjB3Z,KAAKwqE,UAAUn1C,EAAQ1b,IAI3B,SACE,MAAMkzC,EAAM7sD,KAAKmT,KAAKI,QAEtB,IAAK,IAAIrW,EAAI,EAAGA,EAAI,GAAIA,IACtB2vD,EAAI3vD,IAAM8C,KAAK8uB,KAAK5xB,GAEtB,GAAI8C,KAAKkV,QAEP,OADAlV,KAAK6sD,IAAMA,EACJvtD,EAAOkH,MAAM,GAGtB,IAAKxG,KAAKqgE,IACR,MAAM,IAAIpgE,MAAM,oBAElB,IAAKspE,EAAU1c,EAAK7sD,KAAKqgE,IAAKrgE,KAAKqgE,IAAI3gE,QACrC,MAAM,IAAIO,MAAM,gBAElB,OAAOX,EAAOkH,MAAM,GAGtB,WACExG,KAAKmT,KAAKoiD,UAEV,IAAK,IAAIr4D,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAK6pE,IAAI3sE,GAAK,EACd8C,KAAKwd,MAAMtgB,GAAK,EAChB8C,KAAKvB,IAAIvB,GAAK,EACd8C,KAAK8uB,KAAK5xB,GAAK,EAGjB,GAAI8C,KAAKqgE,IAAK,CACZ,IAAK,IAAInjE,EAAI,EAAGA,EAAI8C,KAAKqgE,IAAI3gE,OAAQxC,IACnC8C,KAAKqgE,IAAInjE,GAAK,EAEhB8C,KAAKqgE,IAAM,MAIf,QAAQ1+D,GACN,IAAkB,IAAd3B,KAAK4H,IACP,MAAM,IAAI3H,MAAM,8BAIlB,OAFAD,KAAKmT,KAAKy0D,IAAIjmE,GAEP3B,KAGT,cACE,IAAKA,KAAKkV,QACR,MAAM,IAAIjV,MAAM,6BAElB,IAAKD,KAAK6sD,IACR,MAAM,IAAI5sD,MAAM,4BAElB,OAAOX,EAAOa,KAAKH,KAAK6sD,KAG1B,YAAYwT,GACV,GAAIrgE,KAAKkV,QACP,MAAM,IAAIjV,MAAM,+BAElB,IAAkB,IAAdD,KAAK4H,IACP,MAAM,IAAI3H,MAAM,8BAElB,GAAmB,IAAfogE,EAAI3gE,QAA+B,IAAf2gE,EAAI3gE,SACpB2gE,EAAI3gE,OAAS,IAAM2gE,EAAI3gE,OAAS,IACtC,MAAM,IAAIC,WAAW,qBAKvB,OAFAK,KAAKqgE,IAAM/gE,EAAOa,KAAKkgE,GAEhBrgE,MAQX,MAAMyqE,UAAkBF,EACtB,YAAY/3C,GACVuF,MAAMvF,GAAK,IAQf,MAAMk4C,UAAoBH,EACxB,YAAY/3C,GACVuF,MAAMvF,GAAK,IAQf,MAAMm4C,EACJ,YAAYn4C,GACVxyB,KAAKwyB,IAAMA,EACXxyB,KAAK8B,KAAO0wB,EAAI3gB,UAChB7R,KAAK6sD,IAAMvtD,EAAOkH,MAAMxG,KAAK8B,MAC7B9B,KAAK4H,KAAO,EAGd,OAGE,OAFA5H,KAAK6sD,IAAI1lD,KAAK,GACdnH,KAAK4H,IAAM,EACJ5H,KAGT,OAAO2B,GAGL,GAFA0L,EAAO/N,EAAO8B,SAASO,KAEL,IAAd3B,KAAK4H,IACP,MAAM,IAAI3H,MAAM,+BAElB,IAAK,IAAI/C,EAAI,EAAGA,EAAIyE,EAAKjC,OAAQxC,IAC/B8C,KAAK6sD,IAAI7sD,KAAK4H,QAAUjG,EAAKzE,GAEzB8C,KAAK4H,MAAQ5H,KAAK8B,OACpB9B,KAAKwyB,IAAItd,QAAQlV,KAAK6sD,IAAK,EAAG7sD,KAAK6sD,IAAK,GACxC7sD,KAAK4H,IAAM,GAKjB,MACM5H,KAAK4H,IAAM,IACb5H,KAAKwyB,IAAItd,QAAQlV,KAAK6sD,IAAK,EAAG7sD,KAAK6sD,IAAK,GACxC7sD,KAAK4H,IAAM,GAIf,QACE,IAAkB,IAAd5H,KAAK4H,IACP,MAAM,IAAI3H,MAAM,+BAKlB,OAHAD,KAAKwT,MACLxT,KAAK4H,KAAO,EAELtI,EAAOa,KAAKH,KAAK6sD,MAS5B,MAAM+d,UAAYpC,EAChB,YAAYh2C,EAAKtd,GACf7H,EAAyB,KAAlBmlB,EAAI3gB,WAEXkmB,MAAMvF,GAENxyB,KAAKkV,QAAUA,EACflV,KAAKmT,KAAO,IAAIw3D,EAAOn4C,GACvBxyB,KAAKwd,MAAQle,EAAOkH,MAAM,IAC1BxG,KAAK6pE,IAAMvqE,EAAOkH,MAAM,IACxBxG,KAAK2nE,OAAS,EACd3nE,KAAKsV,GAAK,KACVtV,KAAK6sD,IAAM,KACX7sD,KAAKqgE,IAAM,KAGb,aACE,IAAK,IAAInjE,EAAI,GAAIA,GAAK,IACpB8C,KAAK6pE,IAAI3sE,IAAM,EAEK,IAAhB8C,KAAK6pE,IAAI3sE,IAHUA,MAQ3B,UAAUm4B,EAAQ1b,GAChB,IAAK,IAAIzc,EAAI,EAAGA,EAAIyc,EAAMja,OAAQxC,IACR,IAAR,GAAX8C,KAAK4H,OACR5H,KAAKwyB,IAAItd,QAAQlV,KAAKwd,MAAO,EAAGxd,KAAK6pE,IAAK,GAC1C7pE,KAAK8pE,aACL9pE,KAAK4H,IAAM,GAGbytB,EAAOn4B,GAAKyc,EAAMzc,GAAK8C,KAAKwd,MAAMxd,KAAK4H,OAI3C,MAAMnJ,EAAK6W,GAET,GAAIA,EAAG5V,OAAS,EACd,MAAM,IAAIC,WAAW,yBAEnB2V,EAAG5V,OAAS,KACd4V,EAAKA,EAAGrU,MAAM,EAAG,KAEnBjB,KAAKsV,GAAKhW,EAAOa,KAAKmV,GACtBtV,KAAK4H,KAAO,EACZ5H,KAAK2nE,OAAS,EACd3nE,KAAK6sD,IAAM,KACX7sD,KAAKqgE,IAAM,KAGb,QAAQqH,EAAQC,EAAQC,GACtB,IAAK5nE,KAAKsV,GACR,MAAM,IAAIrV,MAAM,8BAGlB,IAAI4qE,EAAKnD,EACLoD,EAAIrlE,KAAKsK,MAAM,GAAKtK,KAAKye,MAAM2mD,IAAO,GAEtCC,EAAI,IACNA,EAAI,GAEN,MAAM7mC,EAAI0jC,EACJ77C,EAAI,GAAKg/C,EACTC,EAAkC,GAAzBnD,GAAOA,EAAIloE,OAAS,GAC7BkW,EAAQtW,EAAOkH,MAAM,IAE3B,GAAIy9B,EAAI,GAAKA,EAAI,IAAkB,IAAP,EAAJA,GACtB,MAAM,IAAItkC,WAAW,uBAGvBiW,EAAM,GAAK,GAAKm1D,GAAc9mC,EAAI,GAAK,EAAf,GAAqB6mC,EAAI,GAGjD9qE,KAAKsV,GAAG/T,KAAKqU,EAAO,EAAG,EAAGnQ,KAAKC,IAAIomB,EAAG9rB,KAAKsV,GAAG5V,SAG9C,IAAK,IAAIxC,EAAI,GAAIA,GAAK,EAAI4uB,EAAG5uB,IAC3B0Y,EAAM1Y,GAAU,IAAL2tE,EACXA,KAAQ,EAQV,GALAx9D,EAAc,IAAPw9D,GAEP7qE,KAAKmT,KAAKvE,OACV5O,KAAKmT,KAAKX,OAAOoD,GAEbm1D,EAAO,CACT,GAAInD,EAAIloE,OAAS,MAAQ,CACvB,MAAMkE,EAAMtE,EAAOkH,MAAM,GAEzB5C,EAAI,GAAKgkE,EAAIloE,SAAW,EACxBkE,EAAI,GAAKgkE,EAAIloE,SAAW,EAExBM,KAAKmT,KAAKX,OAAO5O,OACZ,MAAIgkE,EAAIloE,OAAS,YAYtB,MAAM,IAAIC,WAAW,uBAZa,CAClC,MAAMiE,EAAMtE,EAAOkH,MAAM,GAEzB5C,EAAI,GAAK,IACTA,EAAI,GAAK,IACTA,EAAI,GAAKgkE,EAAIloE,SAAW,GACxBkE,EAAI,GAAKgkE,EAAIloE,SAAW,GACxBkE,EAAI,GAAKgkE,EAAIloE,SAAW,EACxBkE,EAAI,GAAKgkE,EAAIloE,SAAW,EAExBM,KAAKmT,KAAKX,OAAO5O,IAKnB5D,KAAKmT,KAAKX,OAAOo1D,GACjB5nE,KAAKmT,KAAKK,MAGZoC,EAAM,IAAM,EACZA,EAAM,IAAM,EAEZ,IAAK,IAAI1Y,EAAI,GAAIA,GAAK,EAAI4uB,EAAG5uB,IAC3B0Y,EAAM1Y,GAAK,EAEb0Y,EAAMrU,KAAKvB,KAAK6pE,IAAK,GAErB7pE,KAAK4H,IAAM,EACX5H,KAAK2nE,OAAS1jC,EACdjkC,KAAKsV,GAAK,KAGZ,OAAO+f,EAAQ1b,GACT3Z,KAAKkV,SACPlV,KAAKmT,KAAKX,OAAOmH,GACjB3Z,KAAKwqE,UAAUn1C,EAAQ1b,KAEvB3Z,KAAKwqE,UAAUn1C,EAAQ1b,GACvB3Z,KAAKmT,KAAKX,OAAO6iB,IAIrB,SACE,MAAMw3B,EAAM7sD,KAAKmT,KAAKI,QAGtB,IAAIrW,EAAI,IAA0B,GAAL,EAAd8C,KAAK6pE,IAAI,KAExB,KAAO3sE,EAAI,IACT8C,KAAK6pE,IAAI3sE,KAAO,EAKlB,GAHA8C,KAAK4H,IAAM,EACX5H,KAAKwqE,UAAU3d,EAAKA,GAEhB7sD,KAAKkV,QAEP,OADAlV,KAAK6sD,IAAMA,EAAI5rD,MAAM,EAAGjB,KAAK2nE,QACtBroE,EAAOkH,MAAM,GAGtB,IAAKxG,KAAKqgE,IACR,MAAM,IAAIpgE,MAAM,oBAElB,IAAKspE,EAAU1c,EAAK7sD,KAAKqgE,IAAKrgE,KAAK2nE,QACjC,MAAM,IAAI1nE,MAAM,gBAElB,OAAOX,EAAOkH,MAAM,GAGtB,WACE,IAAK,IAAItJ,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKwd,MAAMtgB,GAAK,EAChB8C,KAAK6pE,IAAI3sE,GAAK,EAGhB8C,KAAK2nE,OAAS,EACd3nE,KAAKsV,GAAK,KACVtV,KAAKqgE,IAAM,KAGb,cACE,IAAKrgE,KAAKkV,QACR,MAAM,IAAIjV,MAAM,6BAElB,IAAKD,KAAK6sD,IACR,MAAM,IAAI5sD,MAAM,4BAElB,OAAOX,EAAOa,KAAKH,KAAK6sD,KAG1B,YAAYwT,GACV,GAAIrgE,KAAKkV,QACP,MAAM,IAAIjV,MAAM,+BAElB,IAAkB,IAAdD,KAAK4H,IACP,MAAM,IAAI3H,MAAM,8BAElB,GAAoB,IAAhBD,KAAK2nE,QAAgBtH,EAAI3gE,SAAWM,KAAK2nE,OAC3C,MAAM,IAAIhoE,WAAW,qBAIvB,OAFAK,KAAKqgE,IAAM/gE,EAAOa,KAAKkgE,GAEhBrgE,MAQX,MAAMgrE,UAAkBJ,EACtB,YAAYp4C,GACVuF,MAAMvF,GAAK,IAQf,MAAMy4C,UAAoBL,EACxB,YAAYp4C,GACVuF,MAAMvF,GAAK,IASf,MAAM04C,EACJ,YAAY14C,GACVxyB,KAAKwyB,IAAMA,EACXxyB,KAAKspE,KAAOhC,EAAU90C,EAAI3gB,YAAc,GACxC7R,KAAK8B,KAAO0wB,EAAI3gB,UAChB7R,KAAK6sD,IAAMvtD,EAAOkH,MAAMxG,KAAK8B,MAC7B9B,KAAK4H,KAAO,EAGd,KAAKujE,GASH,OARAnrE,KAAK6sD,IAAI1lD,KAAK,GACdnH,KAAK4H,IAAM,EAEC,MAARujE,IACFnrE,KAAK6sD,IAAI7sD,KAAK8B,KAAO,IAAMqpE,EAC3BnrE,KAAK4H,IAAM5H,KAAK8B,MAGX9B,KAGT,MAAMoN,EAAKD,GACT,IAAIq8D,EAAK,EAET,IAAK,IAAItsE,EAAI8C,KAAK8B,KAAO,EAAG5E,GAAK,EAAGA,IAAK,CACvC,MAAMK,EAAI4P,EAAIjQ,IAAM,EAEpBkQ,EAAIlQ,GAAMiQ,EAAIjQ,IAAM,EAAKssE,EAEzBA,EAAKjsE,EAGPisE,EAAW,KAALA,EAENp8D,EAAIpN,KAAK8B,KAAO,IAAO9B,KAAKspE,MAAQ,GAAME,EAC1Cp8D,EAAIpN,KAAK8B,KAAO,IAAO9B,KAAKspE,MAAS,EAAKE,EAC1Cp8D,EAAIpN,KAAK8B,KAAO,IAAO9B,KAAKspE,MAAS,EAAKE,EAG5C,OAAO7nE,GAGL,GAFA0L,EAAO/N,EAAO8B,SAASO,KAEL,IAAd3B,KAAK4H,IACP,MAAM,IAAI3H,MAAM,+BAElB,IAAK,IAAI/C,EAAI,EAAGA,EAAIyE,EAAKjC,OAAQxC,IAC3B8C,KAAK4H,MAAQ5H,KAAK8B,OACpB9B,KAAKwyB,IAAItd,QAAQlV,KAAK6sD,IAAK,EAAG7sD,KAAK6sD,IAAK,GACxC7sD,KAAK4H,IAAM,GAGb5H,KAAK6sD,IAAI7sD,KAAK4H,QAAUjG,EAAKzE,GAIjC,QACE,IAAkB,IAAd8C,KAAK4H,IACP,MAAM,IAAI3H,MAAM,+BAElB,MAAMmb,EAAI9b,EAAOkH,MAAMxG,KAAK8B,MAE5B9B,KAAKwyB,IAAItd,QAAQkG,EAAG,EAAGA,EAAG,GAE1Bpb,KAAK2vB,MAAMvU,EAAGA,GAEVpb,KAAK4H,IAAM5H,KAAK8B,OAClB9B,KAAK6sD,IAAI7sD,KAAK4H,MAAQ,IACtB5H,KAAK2vB,MAAMvU,EAAGA,IAGhB,IAAK,IAAIle,EAAI,EAAGA,EAAI8C,KAAK8B,KAAM5E,IAC7B8C,KAAK6sD,IAAI3vD,IAAMke,EAAEle,GAMnB,OAJA8C,KAAKwyB,IAAItd,QAAQlV,KAAK6sD,IAAK,EAAG7sD,KAAK6sD,IAAK,GAExC7sD,KAAK4H,KAAO,EAELtI,EAAOa,KAAKH,KAAK6sD,MAQ5B,MAAMue,UAAY5C,EAChB,YAAYh2C,EAAKtd,GACf6iB,MAAMvF,GAENxyB,KAAKkV,QAAUA,EACflV,KAAKqrE,MAAQ,IAAIH,EAAK14C,GACtBxyB,KAAKsrE,MAAQ,IAAIJ,EAAK14C,GACtBxyB,KAAKwd,MAAQle,EAAOkH,MAAMxG,KAAK6R,WAC/B7R,KAAK6pE,IAAMvqE,EAAOkH,MAAMxG,KAAK6R,WAC7B7R,KAAK8uB,KAAOxvB,EAAOkH,MAAMxG,KAAK6R,WAC9B7R,KAAK6sD,IAAM,KACX7sD,KAAKqgE,IAAM,KAGb,aACE,IAAInjE,EAAI8C,KAAK6R,UACT23D,EAAK,EAET,KAAOtsE,KACLssE,GAAMxpE,KAAK6pE,IAAI3sE,GACf8C,KAAK6pE,IAAI3sE,GAAKssE,EACdA,IAAO,EAIX,UAAUn0C,EAAQ1b,GAChB,MAAMmV,EAAO9uB,KAAK6R,UAAY,EAE9B,IAAK,IAAI3U,EAAI,EAAGA,EAAIyc,EAAMja,OAAQxC,IACN,IAArB8C,KAAK4H,IAAMknB,KACd9uB,KAAKwyB,IAAItd,QAAQlV,KAAKwd,MAAO,EAAGxd,KAAK6pE,IAAK,GAC1C7pE,KAAK8pE,aACL9pE,KAAK4H,IAAM,GAGbytB,EAAOn4B,GAAKyc,EAAMzc,GAAK8C,KAAKwd,MAAMxd,KAAK4H,OAI3C,MAAMnJ,EAAK6W,GACTjI,EAAOiI,EAAG5V,OAAS,GAEnBM,KAAKqrE,MAAMz8D,KAAK,GAChB5O,KAAKqrE,MAAM74D,OAAO8C,GAElBtV,KAAK8uB,KAAO9uB,KAAKqrE,MAAM93D,QACvBvT,KAAK8uB,KAAKvtB,KAAKvB,KAAK6pE,IAAK,GAEzB7pE,KAAKqrE,MAAMz8D,KAAK,GAChB5O,KAAKsrE,MAAM18D,KAAK,GAEhB5O,KAAK6sD,IAAM,KACX7sD,KAAKqgE,IAAM,KAGb,OAAOhrC,EAAQ1b,GACT3Z,KAAKkV,SACPlV,KAAKwqE,UAAUn1C,EAAQ1b,GACvB3Z,KAAKsrE,MAAM94D,OAAO6iB,KAElBr1B,KAAKsrE,MAAM94D,OAAOmH,GAClB3Z,KAAKwqE,UAAUn1C,EAAQ1b,IAI3B,SACE,MAAMkzC,EAAMvtD,EAAOkH,MAAMxG,KAAK6R,WACxB05D,EAAOvrE,KAAKqrE,MAAM93D,QAClBi4D,EAAOxrE,KAAKsrE,MAAM/3D,QAExB,IAAK,IAAIrW,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC2vD,EAAI3vD,GAAKquE,EAAKruE,GAAKsuE,EAAKtuE,GAAK8C,KAAK8uB,KAAK5xB,GAEzC,GAAI8C,KAAKkV,QAEP,OADAlV,KAAK6sD,IAAMA,EACJvtD,EAAOkH,MAAM,GAGtB,IAAKxG,KAAKqgE,IACR,MAAM,IAAIpgE,MAAM,oBAElB,IAAKspE,EAAU1c,EAAK7sD,KAAKqgE,IAAKrgE,KAAKqgE,IAAI3gE,QACrC,MAAM,IAAIO,MAAM,gBAElB,OAAOX,EAAOkH,MAAM,GAGtB,WACE,IAAK,IAAItJ,EAAI,EAAGA,EAAI8C,KAAK6R,UAAW3U,IAClC8C,KAAKwd,MAAMtgB,GAAK,EAChB8C,KAAK6pE,IAAI3sE,GAAK,EACd8C,KAAK8uB,KAAK5xB,GAAK,EAGjB8C,KAAKqgE,IAAM,KAGb,QAAQ1+D,GACN,IAAkB,IAAd3B,KAAK4H,IACP,MAAM,IAAI3H,MAAM,8BAIlB,OAFAD,KAAKqrE,MAAM74D,OAAO7Q,GAEX3B,KAGT,cACE,IAAKA,KAAKkV,QACR,MAAM,IAAIjV,MAAM,6BAElB,IAAKD,KAAK6sD,IACR,MAAM,IAAI5sD,MAAM,4BAElB,OAAOX,EAAOa,KAAKH,KAAK6sD,KAG1B,YAAYwT,GACV,GAAIrgE,KAAKkV,QACP,MAAM,IAAIjV,MAAM,+BAElB,IAAkB,IAAdD,KAAK4H,IACP,MAAM,IAAI3H,MAAM,8BAElB,GAAmB,IAAfogE,EAAI3gE,QAAgB2gE,EAAI3gE,OAASM,KAAK6R,UACxC,MAAM,IAAIlS,WAAW,qBAIvB,OAFAK,KAAKqgE,IAAM/gE,EAAOa,KAAKkgE,GAEhBrgE,MAQX,MAAMyrE,UAAkBL,EACtB,YAAY54C,GACVuF,MAAMvF,GAAK,IAQf,MAAMk5C,UAAoBN,EACxB,YAAY54C,GACVuF,MAAMvF,GAAK,IAwCf,SAAS02C,EAAQ7zC,EAAQsgC,EAAMh8C,EAAOi8C,GACpC,OAAOvgC,EAAO7zB,SAAWmY,EAAMnY,QACxB6zB,EAAO90B,aAAeoZ,EAAMpZ,YAC5Bo1D,IAASC,EAGlB,SAAS2T,EAAU/hE,EAAGC,EAAGpG,GACvB,IAAIga,EAAI,EAER,IAAK,IAAIne,EAAI,EAAGA,EAAImE,EAAKnE,IACvBme,GAAK7T,EAAEtK,GAAKuK,EAAEvK,GAEhB,OAAQme,EAAI,IAAO,GAOrBre,EAAQuqE,KAAOA,EACfvqE,EAAQgrE,MAAQA,EAChBhrE,EAAQwrE,OAASA,EACjBxrE,EAAQ0rE,UAAYA,EACpB1rE,EAAQ2rE,YAAcA,EACtB3rE,EAAQ4rE,YAAcA,EACtB5rE,EAAQ6rE,cAAgBA,EACxB7rE,EAAQ8rE,UAAYA,EACpB9rE,EAAQ+rE,YAAcA,EACtB/rE,EAAQgsE,UAAYA,EACpBhsE,EAAQisE,YAAcA,EACtBjsE,EAAQmsE,UAAYA,EACpBnsE,EAAQosE,YAAcA,EACtBpsE,EAAQqsE,IAAMA,EACdrsE,EAAQ0sE,UAAYA,EACpB1sE,EAAQ2sE,YAAcA,EACtB3sE,EAAQ4sE,IAAMA,EACd5sE,EAAQ+sE,UAAYA,EACpB/sE,EAAQgtE,YAAcA,EACtBhtE,EAAQitE,IAAMA,EACdjtE,EAAQktE,UAAYA,EACpBltE,EAAQmtE,YAAcA,EACtBntE,EAAQotE,IAAMA,EACdptE,EAAQqtE,UAAYA,EACpBrtE,EAAQstE,YAAcA,EACtBttE,EAAQutE,IAAMA,EACdvtE,EAAQytE,UAAYA,EACpBztE,EAAQ0tE,YAAcA,EACtB1tE,EAAQ2tE,OAASA,EACjB3tE,EAAQ4tE,IAAMA,EACd5tE,EAAQguE,UAAYA,EACpBhuE,EAAQiuE,YAAcA,EACtBjuE,EAAQkuE,KAAOA,EACfluE,EAAQouE,IAAMA,EACdpuE,EAAQyuE,UAAYA,EACpBzuE,EAAQ0uE,YAAcA,EACtB1uE,EAAQe,IAvFR,SAAaN,EAAMyX,GAAU,GAI3B,OAHA7H,EAAuB,iBAAT5P,GACd4P,EAA0B,kBAAZ6H,GAENzX,GACN,IAAK,MACH,OAAOyX,EAAUwzD,EAAYC,EAC/B,IAAK,MACH,OAAOzzD,EAAU4zD,EAAYC,EAC/B,IAAK,MACH,OAAO7zD,EAAU8zD,EAAYC,EAC/B,IAAK,MACH,OAAO/zD,EAAUi0D,EAAYC,EAC/B,IAAK,MACH,OAAOl0D,EAAUw0D,EAAYC,EAC/B,IAAK,MACH,OAAOz0D,EAAU60D,EAAYC,EAC/B,IAAK,MACH,OAAO90D,EAAUg1D,EAAYC,EAC/B,IAAK,MACH,OAAOj1D,EAAUm1D,EAAYC,EAC/B,IAAK,MACH,OAAOp1D,EAAUu1D,EAAYC,EAC/B,IAAK,MACH,OAAOx1D,EAAU81D,EAAYC,EAC/B,IAAK,MACH,OAAO/1D,EAAUu2D,EAAYC,EAC/B,QACE,MAAM,IAAIzrE,MAAM,iBAAiBxC,U;;;;;GCn7DvCR,EAAOD,QAAU,EAAQ,M,8BCRzB;;;;;;;;;;;;;;;AAmBA,MAAMqQ,EAAS,EAAQ,GACjB2F,EAAO,EAAQ,GAOfi4C,EAAO3rD,EAAOkH,MAAM,GAAI,GACxB0kD,EAAU5rD,EAAOkH,MAAM,IAAK,GAElC0kD,EAAQ,GAAK,IAEb,MAAMC,EAAI,IAAIl9C,YAAY,CACxB,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,UACpC,UAAY,UAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,aAOtC,MAAM2qD,EACJ,cACE54D,KAAKwd,MAAQ,IAAIvP,YAAY,IAC7BjO,KAAKsN,IAAM,IAAIW,YAAY,KAC3BjO,KAAK4V,MAAQtW,EAAOkH,MAAM,KAC1BxG,KAAK8B,MA1DS,EA6DhB,OAkBE,OAjBA9B,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,IAAM,WACjBxd,KAAKwd,MAAM,IAAM,UACjBxd,KAAKwd,MAAM,IAAM,UACjBxd,KAAKwd,MAAM,IAAM,WACjBxd,KAAKwd,MAAM,IAAM,WACjBxd,KAAKwd,MAAM,IAAM,UACjBxd,KAAK8B,KAAO,EACL9B,KAGT,OAAO2B,GAGL,OAFA0L,EAAO/N,EAAO8B,SAASO,IACvB3B,KAAKosC,QAAQzqC,EAAMA,EAAKjC,QACjBM,KAGT,QACE,OAAOA,KAAKorD,OAAO9rD,EAAOkH,MAAM,KAGlC,QAAQ7E,EAAMN,GACZgM,GA7Fc,IA6FPrN,KAAK8B,KAAoB,+BAEhC,IAAI8F,EAAkB,IAAZ5H,KAAK8B,KACXwgB,EAAM,EAIV,GAFAtiB,KAAK8B,MAAQT,EAETuG,EAAM,EAAG,CACX,IAAIyjD,EAAO,IAAMzjD,EAWjB,GATIyjD,EAAOhqD,IACTgqD,EAAOhqD,GAETM,EAAKJ,KAAKvB,KAAK4V,MAAOhO,EAAK0a,EAAKA,EAAM+oC,GAEtCzjD,GAAOyjD,EACPhqD,GAAOgqD,EACP/oC,GAAO+oC,EAEHzjD,EAAM,IACR,OAEF5H,KAAKsrD,WAAWtrD,KAAK4V,MAAO,GAG9B,KAAOvU,GAAO,KACZrB,KAAKsrD,WAAW3pD,EAAM2gB,GACtBA,GAAO,IACPjhB,GAAO,IAGLA,EAAM,GACRM,EAAKJ,KAAKvB,KAAK4V,MAAO,EAAG0M,EAAKA,EAAMjhB,GAUxC,OAAO4H,GACLoE,GAxIc,IAwIPrN,KAAK8B,KAAoB,+BAEhC,MAAM8F,EAAkB,IAAZ5H,KAAK8B,KACXT,EAAkB,EAAZrB,KAAK8B,KAEjBypD,EAASN,EAAO5pD,GAAO,EAAI,cAAkB,EAAG,GAChDkqD,EAASN,EAAM5pD,IAAQ,EAAG,IAE1BrB,KAAKosC,QAAQ8e,EAAS,GAAM,IAAMtjD,EAAO,MACzC5H,KAAKosC,QAAQ6e,EAAM,IAEnB,IAAK,IAAI/tD,EAAI,EAAGA,EAAI,GAAIA,IACtBquD,EAAStiD,EAAKjJ,KAAKwd,MAAMtgB,GAAQ,EAAJA,GAC7B8C,KAAKwd,MAAMtgB,GAAK,EAGlB,IAAK,IAAIA,EAAI,EAAGA,EAAI,IAAKA,IACvB8C,KAAKsN,IAAIpQ,GAAK,EAEhB,IAAK,IAAIA,EAAI,EAAGA,EAAI,IAAKA,IACvB8C,KAAK4V,MAAM1Y,GAAK,EAIlB,OAFA8C,KAAK8B,MA9JS,EAgKPmH,EAGT,SAASsV,EAAO3W,GACd,MAAM4jD,EAAIxrD,KAAKsN,IAEf,IAAIpQ,EAAI,EAER,KAAOA,EAAI,GAAIA,IACbsuD,EAAEtuD,IAoVeolB,EApVK1a,EAAU,EAAJ1K,EAqVV,UADPyE,EApVI4c,GAqVN+D,KACS,MAAd3gB,EAAK2gB,KACS,IAAd3gB,EAAK2gB,KACL3gB,EAAK2gB,IAtVX,IAkVJ,IAAiB3gB,EAAM2gB,EAlVZplB,EAAI,IAAKA,GAAK,EAAG,CACtB,MAAM6hE,EAAQH,EAAUpT,EAAEtuD,EAAI,GAAIsuD,EAAEtuD,EAAI,IAClC8hE,EAAQH,EAAUrT,EAAEtuD,EAAI,GAAIsuD,EAAEtuD,EAAI,IAClC+hE,EAAQzT,EAAEtuD,EAAI,IACdgiE,EAAQ1T,EAAEtuD,EAAI,IACdiiE,EAAQT,EAAUlT,EAAEtuD,EAAI,IAAKsuD,EAAEtuD,EAAI,KACnCkiE,EAAQT,EAAUnT,EAAEtuD,EAAI,IAAKsuD,EAAEtuD,EAAI,KACnCmiE,EAAQ7T,EAAEtuD,EAAI,IACdoiE,EAAQ9T,EAAEtuD,EAAI,IAEpBsuD,EAAEtuD,EAAI,GAAKgjB,EAAW6+C,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,GAE7B9T,EAAEtuD,EAAI,GAAKqjB,EAAWw+C,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,IAIjC,WAAW/gD,EAAO3W,GAChB,MAAM4jD,EAAIxrD,KAAKsN,IAEftN,KAAK2rE,SAASptD,EAAO3W,GAErB,IAAIgY,EAAK5f,KAAKwd,MAAM,GAChBqC,EAAK7f,KAAKwd,MAAM,GAChBsC,EAAK9f,KAAKwd,MAAM,GAChBwC,EAAKhgB,KAAKwd,MAAM,GAChBU,EAAKle,KAAKwd,MAAM,GAChB2C,EAAKngB,KAAKwd,MAAM,GAChB4C,EAAKpgB,KAAKwd,MAAM,GAChB6C,EAAKrgB,KAAKwd,MAAM,GAChBiD,EAAKzgB,KAAKwd,MAAM,GAChBkD,EAAK1gB,KAAKwd,MAAM,GAChB68C,EAAKr6D,KAAKwd,MAAM,IAChB88C,EAAKt6D,KAAKwd,MAAM,IAChB+8C,EAAKv6D,KAAKwd,MAAM,IAChBg9C,EAAKx6D,KAAKwd,MAAM,IAChB0kC,EAAKliD,KAAKwd,MAAM,IAChBi9C,EAAKz6D,KAAKwd,MAAM,IAEpB,IAAK,IAAItgB,EAAI,EAAGA,EAAIsuD,EAAE9rD,OAAQxC,GAAK,EAAG,CACpC,IAAI6hE,EAAQ7c,EACR8c,EAAQvE,EACRwE,EAAQT,EAAU/9C,EAAIC,GACtBw+C,EAAQT,EAAUh+C,EAAIC,GAE1B,MAAMy+C,EAAQvB,EAAQn9C,EAAIC,EAAI25C,EAAIC,EAAIC,EAAIC,GACpC4E,EAAQlB,EAAQz9C,EAAIC,EAAI25C,EAAIC,EAAIC,EAAIC,GACpC6E,EAAQlU,EAAEjuD,EAAI,GACdoiE,EAAQnU,EAAEjuD,EAAI,GACdqiE,EAAQ/T,EAAEtuD,EAAI,GACdsiE,EAAQhU,EAAEtuD,EAAI,GAEduiE,EAAQj/C,EAAWu+C,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,GAE1BE,EAAQ/+C,EAAWo+C,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,GAEhCT,EAAQT,EAAU1+C,EAAIC,GACtBm/C,EAAQT,EAAU3+C,EAAIC,GACtBo/C,EAAQb,EAASx+C,EAAIC,EAAIC,EAAIE,EAAI9B,EAAIiC,GACrC++C,EAAQb,EAASz+C,EAAIC,EAAIC,EAAIE,EAAI9B,EAAIiC,GAErC,MAAMw/C,EAAQ5/C,EAASg/C,EAAOC,EAAOC,EAAOC,GACtCU,EAAQ3/C,EAAS8+C,EAAOC,EAAOC,EAAOC,GAE5Chd,EAAKqY,EACLE,EAAKD,EAELD,EAAKF,EACLG,EAAKF,EAELD,EAAK55C,EACL65C,EAAK55C,EAELD,EAAKV,EAASK,EAAIC,EAAIo/C,EAAOC,GAC7Bh/C,EAAKT,EAASI,EAAIA,EAAIo/C,EAAOC,GAE7Bt/C,EAAKlC,EACLmC,EAAKF,EAELjC,EAAK4B,EACLK,EAAKH,EAELF,EAAKF,EACLI,EAAKH,EAELD,EAAKG,EAAS0/C,EAAOC,EAAOC,EAAOC,GACnC//C,EAAKI,EAASw/C,EAAOC,EAAOC,EAAOC,GAGrCjgD,EAAM3f,KAAKwd,MAAO,EAAGoC,EAAIC,GACzBF,EAAM3f,KAAKwd,MAAO,EAAGsC,EAAIE,GACzBL,EAAM3f,KAAKwd,MAAO,EAAGU,EAAIiC,GACzBR,EAAM3f,KAAKwd,MAAO,EAAG4C,EAAIC,GACzBV,EAAM3f,KAAKwd,MAAO,EAAGiD,EAAIC,GACzBf,EAAM3f,KAAKwd,MAAO,GAAI68C,EAAIC,GAC1B36C,EAAM3f,KAAKwd,MAAO,GAAI+8C,EAAIC,GAC1B76C,EAAM3f,KAAKwd,MAAO,GAAI0kC,EAAIuY,GAG5B,cACE,OAAO,IAAI7B,EAGb,cACE,OAAO,IAAI5lD,EAAK4lD,EAAQ,KAG1B,cAAcj3D,GACZ,OAAOi3D,EAAOpmC,IAAI5jB,OAAO4D,OAAO7Q,GAAM4R,QAGxC,YAAYwO,EAAMC,GAGhB,OAFA3U,EAAO/N,EAAO8B,SAAS2gB,IAAyB,KAAhBA,EAAKriB,QACrC2N,EAAO/N,EAAO8B,SAAS4gB,IAA2B,KAAjBA,EAAMtiB,QAChCk5D,EAAOpmC,IAAI5jB,OAAO4D,OAAOuP,GAAMvP,OAAOwP,GAAOzO,QAGtD,aAAa/L,EAAGC,EAAG4T,GACjB,MAAM,IAACmX,GAAOomC,EASd,OAPApmC,EAAI5jB,OACJ4jB,EAAIhgB,OAAOhL,GACXgrB,EAAIhgB,OAAO/K,GAEP4T,GACFmX,EAAIhgB,OAAO6I,GAENmX,EAAIjf,QAGb,WAAW5R,EAAMlD,GACf,OAAOm6D,EAAO5N,OAAOp8C,KAAKnQ,GAAK+T,OAAO7Q,GAAM4R,SAoBhD,SAASoM,EAAM/b,EAAKgE,EAAKgY,EAAIC,GAC3B,MAAMC,EAAKlc,EAAIgE,EAAM,GAGftC,EAAMua,EAFDjc,EAAIgE,EAAM,KAEI,EACnBvC,GAAMC,EAAKua,GAAMD,EAAKE,EAE5Blc,EAAIgE,EAAM,GAAKvC,IAAO,EACtBzB,EAAIgE,EAAM,GAAKtC,EAGjB,SAASya,EAASH,EAAIC,EAAIC,EAAIE,GAG5B,OAFYH,EAAKG,IAAQ,EACRH,GAAMD,EAAKE,IACd,EAGhB,SAASG,EAASL,EAAIC,EAAIC,EAAIE,GAE5B,OADWH,EAAKG,IACF,EAGhB,SAASE,EAAWN,EAAIC,EAAIC,EAAIE,EAAI9B,EAAIiC,EAAIC,EAAIC,GAC9C,IAAIC,EAAQ,EACRhb,EAAKua,EAETva,EAAMA,EAAK0a,IAAQ,EACnBM,GAAUhb,EAAKua,EAEfva,EAAMA,EAAK6a,IAAQ,EACnBG,GAAUhb,EAAK6a,EAEf7a,EAAMA,EAAK+a,IAAQ,EACnBC,GAAUhb,EAAK+a,EAIf,OAFWT,EAAKE,EAAK5B,EAAKkC,EAAKE,IAEjB,EAGhB,SAASC,EAAWX,EAAIC,EAAIC,EAAIE,EAAI9B,EAAIiC,EAAIC,EAAIC,GAE9C,OADWR,EAAKG,EAAKG,EAAKE,IACZ,EAGhB,SAASG,EAAWZ,EAAIC,EAAIC,EAAIE,EAAI9B,EAAIiC,EAAIC,EAAIC,EAAII,EAAIC,GACtD,IAAIJ,EAAQ,EACRhb,EAAKua,EAETva,EAAMA,EAAK0a,IAAQ,EACnBM,GAAUhb,EAAKua,EAEfva,EAAMA,EAAK6a,IAAQ,EACnBG,GAAUhb,EAAK6a,EAEf7a,EAAMA,EAAK+a,IAAQ,EACnBC,GAAUhb,EAAK+a,EAEf/a,EAAMA,EAAKob,IAAQ,EACnBJ,GAAUhb,EAAKob,EAIf,OAFWd,EAAKE,EAAK5B,EAAKkC,EAAKK,EAAKH,IAEtB,EAGhB,SAASK,EAAWf,EAAIC,EAAIC,EAAIE,EAAI9B,EAAIiC,EAAIC,EAAIC,EAAII,EAAIC,GAEtD,OADWb,EAAKG,EAAKG,EAAKE,EAAKK,IACjB,EAGhB,SAASE,EAAUhB,EAAIC,EAAI/E,GAEzB,OADW+E,GAAO,GAAK/E,EAAS8E,IAAO9E,KAC1B,EAGf,SAAS+F,EAAUjB,EAAIC,EAAI/E,GAEzB,OADW8E,GAAO,GAAK9E,EAAS+E,IAAO/E,KAC1B,EAGf,SAASgG,EAASlB,EAAIC,EAAI/E,GACxB,OAAO8E,IAAO9E,EAGhB,SAASiG,EAASnB,EAAIC,EAAI/E,GAExB,OADW8E,GAAO,GAAK9E,EAAS+E,IAAO/E,KAC1B,EAGf,SAAS8iD,EAAQC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIE,GAEnC,OADWN,EAAKE,GAASF,EAAMI,KAClB,EAGf,SAASC,EAAQL,EAAIC,EAAIC,EAAIC,EAAIC,EAAIE,GAEnC,OADWL,EAAKE,GAASF,EAAMK,KAClB,EAGf,SAASC,EAASP,EAAIC,EAAIC,EAAIC,EAAIC,EAAIE,GAEpC,OADWN,EAAKE,EAAOF,EAAKI,EAAOF,EAAKE,KAC3B,EAGf,SAASI,EAASR,EAAIC,EAAIC,EAAIC,EAAIC,EAAIE,GAEpC,OADWL,EAAKE,EAAOF,EAAKK,EAAOH,EAAKG,KAC3B,EAGf,SAASG,EAAUT,EAAIC,GAKrB,OAJcl9C,EAAUi9C,EAAIC,EAAI,IAClBl9C,EAAUk9C,EAAID,EAAI,GAClBj9C,EAAUk9C,EAAID,EAAI,MAEnB,EAGf,SAASU,EAAUV,EAAIC,GAKrB,OAJcj9C,EAAUg9C,EAAIC,EAAI,IAClBj9C,EAAUi9C,EAAID,EAAI,GAClBh9C,EAAUi9C,EAAID,EAAI,MAEnB,EAGf,SAASW,EAAUX,EAAIC,GAKrB,OAJcl9C,EAAUi9C,EAAIC,EAAI,IAClBl9C,EAAUi9C,EAAIC,EAAI,IAClBl9C,EAAUk9C,EAAID,EAAI,MAEnB,EAGf,SAASY,EAAUZ,EAAIC,GAKrB,OAJcj9C,EAAUg9C,EAAIC,EAAI,IAClBj9C,EAAUg9C,EAAIC,EAAI,IAClBj9C,EAAUi9C,EAAID,EAAI,MAEnB,EAGf,SAASa,EAAUb,EAAIC,GAKrB,OAJcl9C,EAAUi9C,EAAIC,EAAI,GAClBl9C,EAAUi9C,EAAIC,EAAI,GAClBh9C,EAAS+8C,EAAIC,EAAI,MAElB,EAGf,SAASa,EAAUd,EAAIC,GAKrB,OAJcj9C,EAAUg9C,EAAIC,EAAI,GAClBj9C,EAAUg9C,EAAIC,EAAI,GAClB/8C,EAAS88C,EAAIC,EAAI,MAElB,EAGf,SAASc,EAAUf,EAAIC,GAKrB,OAJcl9C,EAAUi9C,EAAIC,EAAI,IAClBl9C,EAAUk9C,EAAID,EAAI,IAClB/8C,EAAS+8C,EAAIC,EAAI,MAElB,EAGf,SAASe,EAAUhB,EAAIC,GAKrB,OAJcj9C,EAAUg9C,EAAIC,EAAI,IAClBj9C,EAAUi9C,EAAID,EAAI,IAClB98C,EAAS88C,EAAIC,EAAI,MAElB,EAUf,SAASvS,EAAS5pD,EAAMmZ,EAAKwH,GAK3B,OAJA3gB,EAAK2gB,KAASxH,IAAQ,GACtBnZ,EAAK2gB,KAASxH,IAAQ,GACtBnZ,EAAK2gB,KAASxH,IAAQ,EACtBnZ,EAAK2gB,KAASxH,EACPwH,EAtMTs2C,EAAOpyB,OAAS,EAChBoyB,EAAOryB,GAAK,SACZqyB,EAAO92D,KAAO,GACd82D,EAAO59C,KAAO,IACd49C,EAAO/mD,UAAY,IACnB+mD,EAAO9oB,KAAOxwC,EAAOkH,MAAM,GAAI,GAC/BoyD,EAAOpmC,IAAM,IAAIomC,EAuMjB37D,EAAOD,QAAU47D,I,sDC1iBjB;;;;;;;;;;;;;;;AAmBA,MAAMvrD,EAAS,EAAQ,GAMjBu+D,EAAK,IAAI39D,YAAY,CACzB,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,QAAY,UAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,SACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,aAGhC49D,EAAK,IAAI59D,YAAY,CACzB,WAAY,WAAY,WAAY,WACpC,SAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,UAAY,UAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,SAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,UAAY,WAAY,WACpC,UAAY,WAAY,SAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,UACpC,WAAY,UAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,aAGhC69D,EAAK,IAAI79D,YAAY,CACzB,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,SAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,SAAY,WAAY,SACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,UAAY,SAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,UAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,QAAY,UACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,aAGhC89D,EAAK,IAAI99D,YAAY,CACzB,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,SACpC,WAAY,SAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,SAAY,SACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,UACpC,WAAY,WAAY,SAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,SACpC,UAAY,WAAY,UAAY,WACpC,WAAY,UAAY,SAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,SAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,SAAY,SAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,YAGhCy6B,EAAI,IAAIz6B,YAAY,CACxB,UAAY,WAAY,UAAY,SACpC,WAAY,UAAY,UAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,aAmPd,SAAS+9D,EAAWC,EAAGzkE,GACrB,OAASykE,EAAE,GAAIzkE,IAAM,GAAM,KAClBykE,EAAE,GAAIzkE,IAAM,GAAM,KAClBykE,EAAE,GAAIzkE,IAAO,EAAK,MAClBykE,EAAE,GAAIzkE,IAAO,EAAK,KAG7B,SAASjG,EAAK6L,EAAKD,GACjB,IAAK,IAAIjQ,EAAI,EAAGA,EAAIiQ,EAAIzN,OAAQxC,IAC9BkQ,EAAIlQ,GAAKiQ,EAAIjQ,GAGjB,SAASkmE,EAAQ9/D,GACf,IAAK,IAAIpG,EAAI,EAAGA,EAAIoG,EAAI5D,OAAQxC,IAC9BoG,EAAIpG,GAAK,EAGb,SAASswD,EAAQ7rD,EAAM2gB,GACrB,OAAsB,SAAd3gB,EAAK2gB,KACS,MAAd3gB,EAAK2gB,KACS,IAAd3gB,EAAK2gB,KACL3gB,EAAK2gB,GAGf,SAASipC,EAASn+C,EAAK0N,EAAKwH,GAK1B,OAJAlV,EAAIkV,KAASxH,IAAQ,GACrB1N,EAAIkV,KAASxH,IAAQ,GACrB1N,EAAIkV,KAASxH,IAAQ,EACrB1N,EAAIkV,KAASxH,EACNwH,EAOTrlB,EAAOD,QAhRP,MACE,cACEgD,KAAKisE,EAAI,CACP,IAAIh+D,YAAY29D,EAAGlsE,QACnB,IAAIuO,YAAY49D,EAAGnsE,QACnB,IAAIuO,YAAY69D,EAAGpsE,QACnB,IAAIuO,YAAY89D,EAAGrsE,SAErBM,KAAK0oC,EAAI,IAAIz6B,YAAYy6B,EAAEhpC,QAC3BM,KAAK4V,MAAQ,IAAI3H,YAAY,GAC7BjO,KAAKsiB,IAAM,EAGb,gBACE,OAAO,EAGT,KAAK7jB,EAAKwY,GAsBR,OArBA5J,EAAO/N,EAAO8B,SAAS3C,IACvB4O,EAAO5O,EAAIiB,QAAU,GAAKjB,EAAIiB,QAAU,IAE5B,MAARuX,IACF5J,EAAO/N,EAAO8B,SAAS6V,IACvB5J,EAAO4J,EAAKvX,QAAU,OAGxB6B,EAAKvB,KAAKisE,EAAE,GAAIL,GAChBrqE,EAAKvB,KAAKisE,EAAE,GAAIJ,GAChBtqE,EAAKvB,KAAKisE,EAAE,GAAIH,GAChBvqE,EAAKvB,KAAKisE,EAAE,GAAIF,GAChBxqE,EAAKvB,KAAK0oC,EAAGA,GAEb1oC,KAAKsiB,IAAM,EAEPrL,GAAQA,EAAKvX,OAAS,EACxBM,KAAKksE,YAAYztE,EAAKwY,GAEtBjX,KAAKmsE,aAAa1tE,GAEbuB,KAGT,QAAQq1B,EAAQsgC,EAAMh8C,EAAOi8C,GAC3B,MAAMp4D,EAAIwC,KAAK4V,MAUf,OARApY,EAAE,GAAKgwD,EAAQ7zC,EAAOi8C,EAAO,GAC7Bp4D,EAAE,GAAKgwD,EAAQ7zC,EAAOi8C,EAAO,GAE7B51D,KAAKosE,SAAS5uE,EAAG,GAEjB+tD,EAASl2B,EAAQ73B,EAAE,GAAIm4D,EAAO,GAC9BpK,EAASl2B,EAAQ73B,EAAE,GAAIm4D,EAAO,GAEvB31D,KAGT,QAAQq1B,EAAQsgC,EAAMh8C,EAAOi8C,GAC3B,MAAMp4D,EAAIwC,KAAK4V,MAUf,OARApY,EAAE,GAAKgwD,EAAQ7zC,EAAOi8C,EAAO,GAC7Bp4D,EAAE,GAAKgwD,EAAQ7zC,EAAOi8C,EAAO,GAE7B51D,KAAKqsE,SAAS7uE,EAAG,GAEjB+tD,EAASl2B,EAAQ73B,EAAE,GAAIm4D,EAAO,GAC9BpK,EAASl2B,EAAQ73B,EAAE,GAAIm4D,EAAO,GAEvB31D,KAGT,UAUE,OATAojE,EAAQpjE,KAAKisE,EAAE,IACf7I,EAAQpjE,KAAKisE,EAAE,IACf7I,EAAQpjE,KAAKisE,EAAE,IACf7I,EAAQpjE,KAAKisE,EAAE,IACf7I,EAAQpjE,KAAK0oC,GACb06B,EAAQpjE,KAAK4V,OAEb5V,KAAKsiB,IAAM,EAEJtiB,KAGT,SAASwH,EAAG8a,GACV,MAAM2pD,EAAIjsE,KAAKisE,EACTvjC,EAAI1oC,KAAK0oC,EAEf,IAAIvrC,EAAIqK,EAAE8a,EAAM,GAAKomB,EAAE,GACnB1qC,EAAIwJ,EAAE8a,EAAM,GAEhBtkB,GAAKguE,EAAWC,EAAG9uE,GAAKurC,EAAE,GAC1BvrC,GAAK6uE,EAAWC,EAAGjuE,GAAK0qC,EAAE,GAC1B1qC,GAAKguE,EAAWC,EAAG9uE,GAAKurC,EAAE,GAC1BvrC,GAAK6uE,EAAWC,EAAGjuE,GAAK0qC,EAAE,GAC1B1qC,GAAKguE,EAAWC,EAAG9uE,GAAKurC,EAAE,GAC1BvrC,GAAK6uE,EAAWC,EAAGjuE,GAAK0qC,EAAE,GAC1B1qC,GAAKguE,EAAWC,EAAG9uE,GAAKurC,EAAE,GAC1BvrC,GAAK6uE,EAAWC,EAAGjuE,GAAK0qC,EAAE,GAC1B1qC,GAAKguE,EAAWC,EAAG9uE,GAAKurC,EAAE,GAC1BvrC,GAAK6uE,EAAWC,EAAGjuE,GAAK0qC,EAAE,IAC1B1qC,GAAKguE,EAAWC,EAAG9uE,GAAKurC,EAAE,IAC1BvrC,GAAK6uE,EAAWC,EAAGjuE,GAAK0qC,EAAE,IAC1B1qC,GAAKguE,EAAWC,EAAG9uE,GAAKurC,EAAE,IAC1BvrC,GAAK6uE,EAAWC,EAAGjuE,GAAK0qC,EAAE,IAC1B1qC,GAAKguE,EAAWC,EAAG9uE,GAAKurC,EAAE,IAC1BvrC,GAAK6uE,EAAWC,EAAGjuE,GAAK0qC,EAAE,IAE1BlhC,EAAE8a,EAAM,GAAKtkB,EAAI0qC,EAAE,IACnBlhC,EAAE8a,EAAM,GAAKnlB,EAGf,SAASqK,EAAG8a,GACV,MAAM2pD,EAAIjsE,KAAKisE,EACTvjC,EAAI1oC,KAAK0oC,EAEf,IAAIvrC,EAAIqK,EAAE8a,EAAM,GAAKomB,EAAE,IACnB1qC,EAAIwJ,EAAE8a,EAAM,GAEhBtkB,GAAKguE,EAAWC,EAAG9uE,GAAKurC,EAAE,IAC1BvrC,GAAK6uE,EAAWC,EAAGjuE,GAAK0qC,EAAE,IAC1B1qC,GAAKguE,EAAWC,EAAG9uE,GAAKurC,EAAE,IAC1BvrC,GAAK6uE,EAAWC,EAAGjuE,GAAK0qC,EAAE,IAC1B1qC,GAAKguE,EAAWC,EAAG9uE,GAAKurC,EAAE,IAC1BvrC,GAAK6uE,EAAWC,EAAGjuE,GAAK0qC,EAAE,IAC1B1qC,GAAKguE,EAAWC,EAAG9uE,GAAKurC,EAAE,IAC1BvrC,GAAK6uE,EAAWC,EAAGjuE,GAAK0qC,EAAE,GAC1B1qC,GAAKguE,EAAWC,EAAG9uE,GAAKurC,EAAE,GAC1BvrC,GAAK6uE,EAAWC,EAAGjuE,GAAK0qC,EAAE,GAC1B1qC,GAAKguE,EAAWC,EAAG9uE,GAAKurC,EAAE,GAC1BvrC,GAAK6uE,EAAWC,EAAGjuE,GAAK0qC,EAAE,GAC1B1qC,GAAKguE,EAAWC,EAAG9uE,GAAKurC,EAAE,GAC1BvrC,GAAK6uE,EAAWC,EAAGjuE,GAAK0qC,EAAE,GAC1B1qC,GAAKguE,EAAWC,EAAG9uE,GAAKurC,EAAE,GAC1BvrC,GAAK6uE,EAAWC,EAAGjuE,GAAK0qC,EAAE,GAE1BlhC,EAAE8a,EAAM,GAAKtkB,EAAI0qC,EAAE,GACnBlhC,EAAE8a,EAAM,GAAKnlB,EAGf,YAAYwE,GACV,GAAoB,IAAhBA,EAAKjC,OAEP,OADAM,KAAKsiB,IAAM,EACJ,EAGT,MAAMrE,EAA6C,SAArCtc,GAAM3B,KAAKsiB,IAAM,GAAK3gB,EAAKjC,QACU,MAArCiC,GAAM3B,KAAKsiB,IAAM,GAAK3gB,EAAKjC,QACU,IAArCiC,GAAM3B,KAAKsiB,IAAM,GAAK3gB,EAAKjC,QACU,EAArCiC,GAAM3B,KAAKsiB,IAAM,GAAK3gB,EAAKjC,QAIzC,OAFAM,KAAKsiB,KAAOtiB,KAAKsiB,IAAM,GAAK3gB,EAAKjC,OAE1Bue,EAGT,aAAaxf,GACX,MAAMjB,EAAI,IAAIyQ,YAAY,GAE1BjO,KAAKsiB,IAAM,EAEX,IAAK,IAAIplB,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAK0oC,EAAExrC,IAAM8C,KAAKssE,YAAY7tE,GAEhCuB,KAAKsiB,IAAM,EAEX,IAAK,IAAIplB,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAC3B8C,KAAKosE,SAAS5uE,EAAG,GAEjBwC,KAAK0oC,EAAExrC,EAAI,GAAKM,EAAE,GAClBwC,KAAK0oC,EAAExrC,EAAI,GAAKM,EAAE,GAGpB,IAAK,IAAIN,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIke,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC5Bpb,KAAKosE,SAAS5uE,EAAG,GAEjBwC,KAAKisE,EAAE/uE,GAAGke,EAAI,GAAK5d,EAAE,GACrBwC,KAAKisE,EAAE/uE,GAAGke,EAAI,GAAK5d,EAAE,GAK3B,YAAYiB,EAAKkD,GACf,MAAMnE,EAAI,IAAIyQ,YAAY,GAE1BjO,KAAKsiB,IAAM,EAEX,IAAK,IAAIplB,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAK0oC,EAAExrC,IAAM8C,KAAKssE,YAAY7tE,GAEhCuB,KAAKsiB,IAAM,EAEX,IAAK,IAAIplB,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAC3BM,EAAE,IAAMwC,KAAKssE,YAAY3qE,GACzBnE,EAAE,IAAMwC,KAAKssE,YAAY3qE,GAEzB3B,KAAKosE,SAAS5uE,EAAG,GAEjBwC,KAAK0oC,EAAExrC,EAAI,GAAKM,EAAE,GAClBwC,KAAK0oC,EAAExrC,EAAI,GAAKM,EAAE,GAGpB,IAAK,IAAIN,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIke,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC5B5d,EAAE,IAAMwC,KAAKssE,YAAY3qE,GACzBnE,EAAE,IAAMwC,KAAKssE,YAAY3qE,GAEzB3B,KAAKosE,SAAS5uE,EAAG,GAEjBwC,KAAKisE,EAAE/uE,GAAGke,EAAI,GAAK5d,EAAE,GACrBwC,KAAKisE,EAAE/uE,GAAGke,EAAI,GAAK5d,EAAE,GAIzBwC,KAAKsiB,IAAM,EAGb,IAAI3gB,GACF,MAAM4qE,EAAS5qE,EAAKjC,SAAW,EAE/B,IAAK,IAAIxC,EAAI,EAAGA,EAAIqvE,EAAQrvE,IAC1B8C,KAAKosE,SAASzqE,EAAU,EAAJzE,GAGxB,IAAIyE,GACF,MAAM4qE,EAAS5qE,EAAKjC,SAAW,EAE/B,IAAK,IAAIxC,EAAI,EAAGA,EAAIqvE,EAAQrvE,IAC1B8C,KAAKqsE,SAAS1qE,EAAU,EAAJzE,O;;;;;GC7gB1BF,EAAQq2C,OAAS,W,8BCRjB,YAEA,IAAIm5B,EAAe,EAAQ;;;;;;GAW3B,SAASllE,EAAQC,EAAGxE,GAClB,GAAIwE,IAAMxE,EACR,OAAO,EAMT,IAHA,IAAIyE,EAAID,EAAE7H,OACN+H,EAAI1E,EAAErD,OAEDxC,EAAI,EAAGmE,EAAMoE,KAAKC,IAAI8B,EAAGC,GAAIvK,EAAImE,IAAOnE,EAC/C,GAAIqK,EAAErK,KAAO6F,EAAE7F,GAAI,CACjBsK,EAAID,EAAErK,GACNuK,EAAI1E,EAAE7F,GACN,MAIJ,OAAIsK,EAAIC,GACE,EAENA,EAAID,EACC,EAEF,EAET,SAASpG,EAAS2B,GAChB,OAAI2D,EAAOpH,QAA4C,mBAA3BoH,EAAOpH,OAAO8B,SACjCsF,EAAOpH,OAAO8B,SAAS2B,KAEjB,MAALA,IAAaA,EAAEsE,WA+B3B,IAAIolE,EAAO,EAAQ,KACfC,EAAS9uE,OAAOkB,UAAUC,eAC1B4tE,EAAS7jE,MAAMhK,UAAUmC,MACzB2rE,EACgC,QAA3B,aAAkBnvE,KAE3B,SAASovE,EAAW1rE,GAClB,OAAOvD,OAAOkB,UAAUiD,SAAS1E,KAAK8D,GAExC,SAASa,EAAO8qE,GACd,OAAI1rE,EAAS0rE,KAGqB,mBAAvBpmE,EAAOrG,cAGgB,mBAAvBA,YAAY2B,OACd3B,YAAY2B,OAAO8qE,KAEvBA,IAGDA,aAAkBC,aAGlBD,EAAOtrE,QAAUsrE,EAAOtrE,kBAAkBnB,gBAShD,IAAIgN,EAASpQ,EAAOD,QAAUgwE,EAO1BC,EAAQ,8BAEZ,SAASC,EAAQzkB,GACf,GAAKgkB,EAAKU,WAAW1kB,GAArB,CAGA,GAAImkB,EACF,OAAOnkB,EAAKhrD,KAEd,IACI2K,EADMqgD,EAAK1mD,WACCqG,MAAM6kE,GACtB,OAAO7kE,GAASA,EAAM,IAyCxB,SAASglE,EAASnuE,EAAGN,GACnB,MAAiB,iBAANM,EACFA,EAAES,OAASf,EAAIM,EAAIA,EAAEgC,MAAM,EAAGtC,GAE9BM,EAGX,SAASiJ,EAAQmlE,GACf,GAAIT,IAAuBH,EAAKU,WAAWE,GACzC,OAAOZ,EAAKvkE,QAAQmlE,GAEtB,IAAIC,EAAUJ,EAAQG,GAEtB,MAAO,aADIC,EAAU,KAAOA,EAAU,IACT,IAmB/B,SAASC,EAAKxsE,EAAQysE,EAAU16D,EAAS26D,EAAUC,GACjD,MAAM,IAAIrgE,EAAO2rB,eAAe,CAC9BlmB,QAASA,EACT/R,OAAQA,EACRysE,SAAUA,EACVC,SAAUA,EACVC,mBAAoBA,IAcxB,SAASV,EAAG7uE,EAAO2U,GACZ3U,GAAOovE,EAAKpvE,GAAO,EAAM2U,EAAS,KAAMzF,EAAO2/D,IAoCtD,SAASW,EAAW5sE,EAAQysE,EAAU/hC,EAAQmiC,GAE5C,GAAI7sE,IAAWysE,EACb,OAAO,EACF,GAAIpsE,EAASL,IAAWK,EAASosE,GACtC,OAAqC,IAA9BlmE,EAAQvG,EAAQysE,GAIlB,GAAIf,EAAKoB,OAAO9sE,IAAW0rE,EAAKoB,OAAOL,GAC5C,OAAOzsE,EAAO+sE,YAAcN,EAASM,UAKhC,GAAIrB,EAAKsB,SAAShtE,IAAW0rE,EAAKsB,SAASP,GAChD,OAAOzsE,EAAOitE,SAAWR,EAASQ,QAC3BjtE,EAAO2F,SAAW8mE,EAAS9mE,QAC3B3F,EAAOktE,YAAcT,EAASS,WAC9BltE,EAAOmtE,YAAcV,EAASU,WAC9BntE,EAAOotE,aAAeX,EAASW,WAIjC,GAAgB,OAAXptE,GAAqC,iBAAXA,GACb,OAAbysE,GAAyC,iBAAbA,EASjC,IAAIxrE,EAAOjB,IAAWiB,EAAOwrE,IACzBX,EAAU9rE,KAAY8rE,EAAUW,MAC9BzsE,aAAkBksD,cAClBlsD,aAAkBqsD,cAC7B,OACoD,IAD7C9lD,EAAQ,IAAI1H,WAAWmB,EAAOS,QACtB,IAAI5B,WAAW4tE,EAAShsE,SAQlC,GAAIJ,EAASL,KAAYK,EAASosE,GACvC,OAAO,EAIP,IAAIY,GAFJR,EAAQA,GAAS,CAAC7sE,OAAQ,GAAIysE,SAAU,KAEhBzsE,OAAOqC,QAAQrC,GACvC,OAAqB,IAAjBqtE,GACEA,IAAgBR,EAAMJ,SAASpqE,QAAQoqE,KAK7CI,EAAM7sE,OAAO+D,KAAK/D,GAClB6sE,EAAMJ,SAAS1oE,KAAK0oE,GAUxB,SAAkBjmE,EAAGxE,EAAG0oC,EAAQ4iC,GAC9B,GAAI9mE,eAAiCxE,EACnC,OAAO,EAET,GAAI0pE,EAAK6B,YAAY/mE,IAAMklE,EAAK6B,YAAYvrE,GAC1C,OAAOwE,IAAMxE,EACf,GAAI0oC,GAAU7tC,OAAO2wE,eAAehnE,KAAO3J,OAAO2wE,eAAexrE,GAC/D,OAAO,EACT,IAAIyrE,EAAUC,EAAYlnE,GACtBmnE,EAAUD,EAAY1rE,GAC1B,GAAKyrE,IAAYE,IAAcF,GAAWE,EACxC,OAAO,EACT,GAAIF,EAGF,OAFAjnE,EAAIolE,EAAOtvE,KAAKkK,GAChBxE,EAAI4pE,EAAOtvE,KAAK0F,GACT4qE,EAAWpmE,EAAGxE,EAAG0oC,GAE1B,IAEIhtC,EAAKvB,EAFLyxE,EAAKC,EAAWrnE,GAChBsnE,EAAKD,EAAW7rE,GAIpB,GAAI4rE,EAAGjvE,SAAWmvE,EAAGnvE,OACnB,OAAO,EAKT,IAHAivE,EAAG55B,OACH85B,EAAG95B,OAEE73C,EAAIyxE,EAAGjvE,OAAS,EAAGxC,GAAK,EAAGA,IAC9B,GAAIyxE,EAAGzxE,KAAO2xE,EAAG3xE,GACf,OAAO,EAIX,IAAKA,EAAIyxE,EAAGjvE,OAAS,EAAGxC,GAAK,EAAGA,IAE9B,GADAuB,EAAMkwE,EAAGzxE,IACJywE,EAAWpmE,EAAE9I,GAAMsE,EAAEtE,GAAMgtC,EAAQ4iC,GACtC,OAAO,EAEX,OAAO,EA/CES,CAAS/tE,EAAQysE,EAAU/hC,EAAQmiC,IApC1C,OAAOniC,EAAS1qC,IAAWysE,EAAWzsE,GAAUysE,EAwCpD,SAASiB,EAAY7vE,GACnB,MAAiD,sBAA1ChB,OAAOkB,UAAUiD,SAAS1E,KAAKuB,GAgFxC,SAASmwE,EAAkBhuE,EAAQysE,GACjC,IAAKzsE,IAAWysE,EACd,OAAO,EAGT,GAAgD,mBAA5C5vE,OAAOkB,UAAUiD,SAAS1E,KAAKmwE,GACjC,OAAOA,EAASr1D,KAAKpX,GAGvB,IACE,GAAIA,aAAkBysE,EACpB,OAAO,EAET,MAAO3mE,IAIT,OAAI5G,MAAM+uE,cAAcxB,KAIa,IAA9BA,EAASnwE,KAAK,GAAI0D,GAa3B,SAASkuE,EAAQC,EAAat5D,EAAO43D,EAAU16D,GAC7C,IAAI/R,EAEJ,GAAqB,mBAAV6U,EACT,MAAM,IAAIxV,UAAU,uCAGE,iBAAbotE,IACT16D,EAAU06D,EACVA,EAAW,MAGbzsE,EAtBF,SAAmB6U,GACjB,IAAI8iB,EACJ,IACE9iB,IACA,MAAO/O,GACP6xB,EAAQ7xB,EAEV,OAAO6xB,EAeEy2C,CAAUv5D,GAEnB9C,GAAW06D,GAAYA,EAAS/vE,KAAO,KAAO+vE,EAAS/vE,KAAO,KAAO,MAC1DqV,EAAU,IAAMA,EAAU,KAEjCo8D,IAAgBnuE,GAClBwsE,EAAKxsE,EAAQysE,EAAU,6BAA+B16D,GAGxD,IAAIs8D,EAAyC,iBAAZt8D,EAE7Bu8D,GAAyBH,GAAenuE,IAAWysE,EASvD,KAV2B0B,GAAezC,EAAK6C,QAAQvuE,IAInDquE,GACAL,EAAkBhuE,EAAQysE,IAC1B6B,IACF9B,EAAKxsE,EAAQysE,EAAU,yBAA2B16D,GAG/Co8D,GAAenuE,GAAUysE,IACzBuB,EAAkBhuE,EAAQysE,KAAgB0B,GAAenuE,EAC5D,MAAMA,EAvVVsM,EAAO2rB,eAAiB,SAAwBP,GAC9Cz4B,KAAKvC,KAAO,iBACZuC,KAAKe,OAAS03B,EAAQ13B,OACtBf,KAAKwtE,SAAW/0C,EAAQ+0C,SACxBxtE,KAAKytE,SAAWh1C,EAAQg1C,SACpBh1C,EAAQ3lB,SACV9S,KAAK8S,QAAU2lB,EAAQ3lB,QACvB9S,KAAKuvE,kBAAmB,IAExBvvE,KAAK8S,QA6CT,SAAoBlF,GAClB,OAAOw/D,EAASllE,EAAQ0F,EAAK7M,QAAS,KAAO,IACtC6M,EAAK6/D,SAAW,IAChBL,EAASllE,EAAQ0F,EAAK4/D,UAAW,KAhDvBgC,CAAWxvE,MAC1BA,KAAKuvE,kBAAmB,GAE1B,IAAI7B,EAAqBj1C,EAAQi1C,oBAAsBH,EACvD,GAAIttE,MAAMuN,kBACRvN,MAAMuN,kBAAkBxN,KAAM0tE,OACzB,CAEL,IAAIngE,EAAM,IAAItN,MACd,GAAIsN,EAAIkiE,MAAO,CACb,IAAIxmE,EAAMsE,EAAIkiE,MAGVC,EAAUxC,EAAQQ,GAClBiC,EAAM1mE,EAAI7F,QAAQ,KAAOssE,GAC7B,GAAIC,GAAO,EAAG,CAGZ,IAAIC,EAAY3mE,EAAI7F,QAAQ,KAAMusE,EAAM,GACxC1mE,EAAMA,EAAImV,UAAUwxD,EAAY,GAGlC5vE,KAAKyvE,MAAQxmE,KAMnBwjE,EAAK5tD,SAASxR,EAAO2rB,eAAgB/4B,OA6CrCoN,EAAOkgE,KAAOA,EAYdlgE,EAAO2/D,GAAKA,EAMZ3/D,EAAOo0B,MAAQ,SAAe1gC,EAAQysE,EAAU16D,GAC1C/R,GAAUysE,GAAUD,EAAKxsE,EAAQysE,EAAU16D,EAAS,KAAMzF,EAAOo0B,QAMvEp0B,EAAOwiE,SAAW,SAAkB9uE,EAAQysE,EAAU16D,GAChD/R,GAAUysE,GACZD,EAAKxsE,EAAQysE,EAAU16D,EAAS,KAAMzF,EAAOwiE,WAOjDxiE,EAAOyiE,UAAY,SAAmB/uE,EAAQysE,EAAU16D,GACjD66D,EAAW5sE,EAAQysE,GAAU,IAChCD,EAAKxsE,EAAQysE,EAAU16D,EAAS,YAAazF,EAAOyiE,YAIxDziE,EAAO0iE,gBAAkB,SAAyBhvE,EAAQysE,EAAU16D,GAC7D66D,EAAW5sE,EAAQysE,GAAU,IAChCD,EAAKxsE,EAAQysE,EAAU16D,EAAS,kBAAmBzF,EAAO0iE,kBAuH9D1iE,EAAO2iE,aAAe,SAAsBjvE,EAAQysE,EAAU16D,GACxD66D,EAAW5sE,EAAQysE,GAAU,IAC/BD,EAAKxsE,EAAQysE,EAAU16D,EAAS,eAAgBzF,EAAO2iE,eAI3D3iE,EAAO4iE,mBACP,SAASA,EAAmBlvE,EAAQysE,EAAU16D,GACxC66D,EAAW5sE,EAAQysE,GAAU,IAC/BD,EAAKxsE,EAAQysE,EAAU16D,EAAS,qBAAsBm9D,IAQ1D5iE,EAAO6iE,YAAc,SAAqBnvE,EAAQysE,EAAU16D,GACtD/R,IAAWysE,GACbD,EAAKxsE,EAAQysE,EAAU16D,EAAS,MAAOzF,EAAO6iE,cAOlD7iE,EAAO8iE,eAAiB,SAAwBpvE,EAAQysE,EAAU16D,GAC5D/R,IAAWysE,GACbD,EAAKxsE,EAAQysE,EAAU16D,EAAS,MAAOzF,EAAO8iE,iBA+ElD9iE,EAAO+iE,OAAS,SAASx6D,EAAmB8iB,EAAmB5lB,GAC7Dm8D,GAAQ,EAAMr5D,EAAO8iB,EAAO5lB,IAI9BzF,EAAOgjE,aAAe,SAASz6D,EAAmB8iB,EAAmB5lB,GACnEm8D,GAAQ,EAAOr5D,EAAO8iB,EAAO5lB,IAG/BzF,EAAOijE,QAAU,SAAS/iE,GAAO,GAAIA,EAAK,MAAMA,GAMhDF,EAAOo+B,OAAS+gC,GAHhB,SAAS/gC,EAAOttC,EAAO2U,GAChB3U,GAAOovE,EAAKpvE,GAAO,EAAM2U,EAAS,KAAM24B,KAEVp+B,EAAQ,CAC3Co0B,MAAOp0B,EAAO6iE,YACdJ,UAAWziE,EAAO0iE,gBAClBF,SAAUxiE,EAAO8iE,eACjBH,aAAc3iE,EAAO4iE,qBAEvB5iE,EAAOo+B,OAAOA,OAASp+B,EAAOo+B,OAE9B,IAAImjC,EAAahxE,OAAO6qC,MAAQ,SAAUtnC,GACxC,IAAIsnC,EAAO,GACX,IAAK,IAAIhqC,KAAO0C,EACVurE,EAAOrvE,KAAK8D,EAAK1C,IAAMgqC,EAAK3jC,KAAKrG,GAEvC,OAAOgqC,K,gCCvfT,IAOI8nC,EACAC,EARA57D,EAAU3X,EAAOD,QAAU,GAU/B,SAASyzE,IACL,MAAM,IAAIxwE,MAAM,mCAEpB,SAASywE,IACL,MAAM,IAAIzwE,MAAM,qCAsBpB,SAAS0wE,EAAWC,GAChB,GAAIL,IAAqBM,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKL,IAAqBE,IAAqBF,IAAqBM,WAEhE,OADAN,EAAmBM,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAOL,EAAiBK,EAAK,GAC/B,MAAM/pE,GACJ,IAEI,OAAO0pE,EAAiBlzE,KAAK,KAAMuzE,EAAK,GAC1C,MAAM/pE,GAEJ,OAAO0pE,EAAiBlzE,KAAK2C,KAAM4wE,EAAK,MAvCnD,WACG,IAEQL,EADsB,mBAAfM,WACYA,WAEAJ,EAEzB,MAAO5pE,GACL0pE,EAAmBE,EAEvB,IAEQD,EADwB,mBAAjBM,aACcA,aAEAJ,EAE3B,MAAO7pE,GACL2pE,EAAqBE,GAjB7B,GAwEA,IAEIK,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAarxE,OACbsxE,EAAQD,EAAarpE,OAAOspE,GAE5BE,GAAc,EAEdF,EAAMtxE,QACN0xE,KAIR,SAASA,IACL,IAAIH,EAAJ,CAGA,IAAII,EAAUV,EAAWQ,GACzBF,GAAW,EAGX,IADA,IAAI5vE,EAAM2vE,EAAMtxE,OACV2B,GAAK,CAGP,IAFA0vE,EAAeC,EACfA,EAAQ,KACCE,EAAa7vE,GACd0vE,GACAA,EAAaG,GAAYI,MAGjCJ,GAAc,EACd7vE,EAAM2vE,EAAMtxE,OAEhBqxE,EAAe,KACfE,GAAW,EAnEf,SAAyBM,GACrB,GAAIf,IAAuBM,aAEvB,OAAOA,aAAaS,GAGxB,IAAKf,IAAuBE,IAAwBF,IAAuBM,aAEvE,OADAN,EAAqBM,aACdA,aAAaS,GAExB,IAEWf,EAAmBe,GAC5B,MAAO1qE,GACL,IAEI,OAAO2pE,EAAmBnzE,KAAK,KAAMk0E,GACvC,MAAO1qE,GAGL,OAAO2pE,EAAmBnzE,KAAK2C,KAAMuxE,KAgD7CC,CAAgBH,IAiBpB,SAASI,EAAKb,EAAKtwE,GACfN,KAAK4wE,IAAMA,EACX5wE,KAAKM,MAAQA,EAYjB,SAASoxE,KA5BT98D,EAAQ+8D,SAAW,SAAUf,GACzB,IAAIxmB,EAAO,IAAIthD,MAAMd,UAAUtI,OAAS,GACxC,GAAIsI,UAAUtI,OAAS,EACnB,IAAK,IAAIxC,EAAI,EAAGA,EAAI8K,UAAUtI,OAAQxC,IAClCktD,EAAKltD,EAAI,GAAK8K,UAAU9K,GAGhC8zE,EAAMlsE,KAAK,IAAI2sE,EAAKb,EAAKxmB,IACJ,IAAjB4mB,EAAMtxE,QAAiBuxE,GACvBN,EAAWS,IASnBK,EAAK3yE,UAAUwyE,IAAM,WACjBtxE,KAAK4wE,IAAIvqE,MAAM,KAAMrG,KAAKM,QAE9BsU,EAAQg9D,MAAQ,UAChBh9D,EAAQi9D,SAAU,EAClBj9D,EAAQk9D,IAAM,GACdl9D,EAAQm9D,KAAO,GACfn9D,EAAQ2I,QAAU,GAClB3I,EAAQo9D,SAAW,GAInBp9D,EAAQq9D,GAAKP,EACb98D,EAAQs9D,YAAcR,EACtB98D,EAAQu9D,KAAOT,EACf98D,EAAQ0N,IAAMovD,EACd98D,EAAQw9D,eAAiBV,EACzB98D,EAAQy9D,mBAAqBX,EAC7B98D,EAAQ09D,KAAOZ,EACf98D,EAAQ29D,gBAAkBb,EAC1B98D,EAAQ49D,oBAAsBd,EAE9B98D,EAAQ69D,UAAY,SAAUh1E,GAAQ,MAAO,IAE7CmX,EAAQ89D,QAAU,SAAUj1E,GACxB,MAAM,IAAIwC,MAAM,qCAGpB2U,EAAQ+9D,IAAM,WAAc,MAAO,KACnC/9D,EAAQg+D,MAAQ,SAAU3vE,GACtB,MAAM,IAAIhD,MAAM,mCAEpB2U,EAAQi+D,MAAQ,WAAa,OAAO,I;;;;;GC/KpC51E,EAAOD,QAAU,EAAQ,M;;;;;GCAzBC,EAAOD,QAAU,EAAQ,K;;;;;GCAzBC,EAAOD,QAAU,EAAQ,M,8BCRzB;;;;;;;;;;;AAaA,MAAMqQ,EAAS,EAAQ,GACjBkN,EAAK,EAAQ,GACb6rB,EAAW,EAAQ,IACnBJ,EAAM,EAAQ,GAmOpB/oC,EAAOD,QA7NP,MACE,YAAYupC,EAAIusC,EAAKxsC,GACnBj5B,EAAqB,iBAAPk5B,GACdl5B,GAAQylE,GAAsB,iBAARA,GAEtB9yE,KAAKumC,GAAKA,EACVvmC,KAAK0B,KAAO,OACZ1B,KAAK8yE,IAAMA,GAAO,KAClB9yE,KAAKymC,KAAOH,GAAO,KACnBtmC,KAAK0mC,OAAS,KACd1mC,KAAK+gD,SAAW,KAChB/gD,KAAKwmC,OAAS,EAGhB,YAGE,OAFKxmC,KAAK0mC,SACR1mC,KAAK0mC,OAASN,EAASQ,MAAM5mC,KAAKumC,KAC7BvmC,KAAK0mC,OAGd,cAME,OALI1mC,KAAK8yE,MAAQ9yE,KAAK+gD,WACpB/gD,KAAK+gD,SAAW3a,EAASQ,MAAM5mC,KAAK8yE,IAAK9yE,KAAKymC,MAC9CzmC,KAAK+gD,SAASla,WAAWb,GACzBhmC,KAAKymC,KAAO,MAEPzmC,KAAK+gD,SAGd,WACE,OAAO/gD,KAAK4mC,MAAME,UAGpB,WACE,OAAO9mC,KAAK4mC,MAAMG,UAGpB,qBACE,MAAMtoC,EAAMunC,EAAI93B,YAAYlO,KAAK4mC,MAAM6C,YACvC,OAAOzpC,KAAK4mC,MAAM/2B,MAAMpR,GAG1B,iBAAiBA,GAEf,OADA4O,EAAO/N,EAAO8B,SAAS3C,IAChBA,EAAIiB,SAAWM,KAAK4mC,MAAM6C,WAGnC,iBAAiBhrC,EAAK8pC,GACpB,MAAMpB,EAAMnnC,KAAKonC,gBAAgB3oC,IAC3B,EAAC+I,EAAC,EAAEC,GAAKzH,KAAKqnC,gBAAgBF,EAAKoB,GAEzC,MAAO,CACL/qC,EAAG8B,EAAOa,KAAK1B,GACf+I,IACAC,KAIJ,iBAAiB6/B,GACfj6B,EAAOi6B,GAAwB,iBAATA,GAEtB,MAAM//B,EAAIgT,EAAG2C,OAAOoqB,EAAK9pC,EAAGwC,KAAK4mC,MAAM1nB,QAEvC,GAAI3X,EAAE/G,aAAeR,KAAK4mC,MAAM6C,WAC9B,MAAM,IAAIxpC,MAAM,wBAElB,OAAOD,KAAK4mC,MAAMK,aAAa1/B,GAGjC,gBAAgB9I,GACd,MAAM8I,EAAIvH,KAAK4mC,MAAMmsC,cAAct0E,GAEnC,GAAIuB,KAAKi0D,SAAWj0D,KAAKi0D,QAAQnjC,EAAEwV,IAAK,CACtC,MAAM3V,EAAI3wB,KAAKi0D,QAAQnjC,EAAE4W,SAASngC,GAGlC,OAFUvH,KAAK4mC,MAAMqhB,iBAAiBt3B,GAE7B/V,SAMX,OAHU5a,KAAK4mC,MAAM9V,EAAE4zB,MACXhd,SAASngC,EAAGy+B,GAEfprB,SAGX,iBAAiBnc,EAAK8pC,GAGpB,GAFAl7B,EAAe,MAARk7B,GAAgC,kBAATA,IAEzBvoC,KAAKi0D,QACR,MAAM,IAAIh0D,MAAM,gCAElB,MAAM0wB,EAAI3wB,KAAK4mC,MAAMe,YAAYlpC,GAC3BiqC,EAAI1oC,KAAKi0D,QAAQ3P,cAAc3zB,GAErC,OAAY,MAAR4X,GACEG,EAAEltB,UAAY+sB,EACTG,EAAE1jB,MAAMpK,SAGZ8tB,EAAE9tB,SAGX,qBAAqBzR,GACnB,MAAM6P,EAAIhZ,KAAK4mC,MAAMgB,cAAcz+B,GAGnC,OAFUnJ,KAAK4mC,MAAMiB,iBAAiB7uB,GAE7B4B,SAGX,mBAAmBnc,EAAKmwB,EAAOoX,EAAI8B,aACjC,MAAMnX,EAAI3wB,KAAK4mC,MAAMe,YAAYlpC,GAC3Bua,EAAIhZ,KAAK4mC,MAAMmB,eAAepX,EAAG/B,GAEvC,OAAO5uB,KAAK4mC,MAAMoB,cAAchvB,EAAG4V,IAAS,GAG9C,kBAAkBzlB,EAAOmtC,GAAO,GAG9B,OAFUt2C,KAAK4mC,MAAMqB,cAAc9+B,EAAOmtC,GAEjC17B,SAGX,gBAAgBnc,EAAKk4C,EAAW3Q,EAAI8B,aAClC,MAAMnX,EAAI3wB,KAAK4mC,MAAMe,YAAYlpC,GACjC,OAAOuB,KAAK4mC,MAAMsB,YAAYvX,EAAGgmB,EAAU3Q,GAG7C,gBAAgBvnC,GAGd,IAAIkyB,EAFJtjB,EAAO/N,EAAO8B,SAAS3C,IAGvB,IACEkyB,EAAI3wB,KAAK4mC,MAAM+d,QAAQlmD,GACvB,MAAOoI,GACP,OAAO,EAGT,OAAO8pB,EAAE0X,WAGX,iBAAiB5pC,GAGf,IAAIkyB,EAFJtjB,EAAO/N,EAAO8B,SAAS3C,IAGvB,IACEkyB,EAAI3wB,KAAK4mC,MAAM+d,QAAQlmD,GACvB,MAAOoI,GACP,OAAO,EAGT,QAAK8pB,EAAE0X,YAGA1X,EAAEma,UAGX,oBAAoBrsC,GAGlB,IAAIkyB,EAFJtjB,EAAO/N,EAAO8B,SAAS3C,IAGvB,IACEkyB,EAAI3wB,KAAK4mC,MAAM+d,QAAQlmD,GACvB,MAAOoI,GACP,OAAO,EAGT,QAAK8pB,EAAE0X,YAGA1X,EAAEw0B,aAGX,gBAAgB1mD,EAAK8pC,GACnB,MAAM,EAAC/gC,EAAC,EAAEC,GAAKzH,KAAK4mC,MAAMe,YAAYlpC,EAAK8pC,GAE3C,MAAO,CACL/gC,EAAGxH,KAAK4mC,MAAMuB,YAAY3gC,EAAEmrB,WAC5BlrB,EAAGzH,KAAK4mC,MAAMuB,YAAY1gC,EAAEkrB,YAIhC,gBAAgB2U,GACdj6B,EAAOi6B,GAAwB,iBAATA,GAEtB,MAAM9/B,EAAI+S,EAAG2C,OAAOoqB,EAAK9/B,EAAGxH,KAAK4mC,MAAM1nB,QAEvC,GAAI1X,EAAEya,IAAIjiB,KAAK4mC,MAAM5nC,IAAM,EACzB,MAAM,IAAIiB,MAAM,kBAElB,GAAc,MAAVqnC,EAAK7/B,EAAW,CAClB,MAAMA,EAAI8S,EAAG2C,OAAOoqB,EAAK7/B,EAAGzH,KAAK4mC,MAAM1nB,QAEvC,GAAIzX,EAAEwa,IAAIjiB,KAAK4mC,MAAM5nC,IAAM,EACzB,MAAM,IAAIiB,MAAM,kBAElB,MAAM0wB,EAAI3wB,KAAK4mC,MAAMwB,MAAM5gC,EAAGC,GAE9B,IAAKkpB,EAAE0X,WACL,MAAM,IAAIpoC,MAAM,kBAElB,OAAO0wB,EAAE/V,SAKX,OAFU5a,KAAK4mC,MAAM0B,WAAW9gC,GAEvBoT,SAGX,OAAOusB,EAAK0D,GACV,MAAMla,EAAI3wB,KAAK4mC,MAAM+d,QAAQxd,GACvB5/B,EAAIvH,KAAK4mC,MAAMmsC,cAAcloC,GAGnC,OAFUla,EAAE+W,SAASngC,EAAGy+B,GAEfprB,a;;;;;GCnOb3d,EAAOD,QAAU,EAAQ,K,8BCRzB;;;;;;;;;;;;;;;;;;;;;;AAwBA,MAAMqQ,EAAS,EAAQ,GACjB2F,EAAO,EAAQ,GAQfggE,EAAc,IAAI/kE,YAAY,CAClC,EAAY,EAAY,MAAY,EACpC,MAAY,WAAY,WAAY,WACpC,MAAY,EAAY,WAAY,EACpC,WAAY,WAAY,MAAY,WACpC,IAAY,EAAY,IAAY,EACpC,WAAY,EAAY,WAAY,EACpC,WAAY,EAAY,IAAY,WACpC,MAAY,WAAY,MAAY,WACpC,MAAY,WAAY,IAAY,WACpC,MAAY,EAAY,WAAY,WACpC,WAAY,WAAY,MAAY,WACpC,WAAY,EAAY,WAAY,aAOtC,MAAMq8C,EACJ,cACEtqD,KAAKwd,MAAQ,IAAIvP,YAAY,IAC7BjO,KAAK4V,MAAQtW,EAAOkH,MAAM,KAC1BxG,KAAKizE,GAAK,IACVjzE,KAAK4H,IA1BS,WA6BhB,KAAKoT,GACS,MAARA,IACFA,EAAO,KAET3N,EAAQ2N,IAAS,IAAOA,GACxB3N,EAAO2N,GAAQ,KACf3N,EAAO2N,GAAQ,KAEf,MAAMyvC,EAAO,KAAc,EAAPzvC,EAOpB,OALA3N,EAAOo9C,GAAQ,GAAqB,IAAR,GAAPA,IAErBzqD,KAAKizE,GAAKxoB,IAAS,EACnBzqD,KAAK4H,IAAM,EAEJ5H,KAGT,OAAO2B,GACL0L,EAAO/N,EAAO8B,SAASO,IACvB0L,IAjDc,WAiDLrN,KAAK4H,KAAkB,+BAEhC,IAAIvG,EAAMM,EAAKjC,OACXkI,EAAM5H,KAAK4H,IACX0a,EAAM,EAIV,GAFAtiB,KAAK4H,KAAO5H,KAAK4H,IAAMvG,GAAOrB,KAAKizE,GAE/BrrE,EAAM,EAAG,CACX,IAAIyjD,EAAOrrD,KAAKizE,GAAKrrE,EAWrB,GATIyjD,EAAOhqD,IACTgqD,EAAOhqD,GAETM,EAAKJ,KAAKvB,KAAK4V,MAAOhO,EAAK0a,EAAKA,EAAM+oC,GAEtCzjD,GAAOyjD,EACPhqD,GAAOgqD,EACP/oC,GAAO+oC,EAEHzjD,EAAM5H,KAAKizE,GACb,OAAOjzE,KAETA,KAAKsrD,WAAWtrD,KAAK4V,MAAO,GAG9B,KAAOvU,GAAOrB,KAAKizE,IACjBjzE,KAAKsrD,WAAW3pD,EAAM2gB,GACtBA,GAAOtiB,KAAKizE,GACZ5xE,GAAOrB,KAAKizE,GAMd,OAHI5xE,EAAM,GACRM,EAAKJ,KAAKvB,KAAK4V,MAAO,EAAG0M,EAAKA,EAAMjhB,GAE/BrB,KAGT,MAAMwT,EAAKnS,GACE,MAAPmS,IACFA,EAAM,GAEG,MAAPnS,GAAuB,IAARA,IACjBA,EAAM,KAAOrB,KAAKizE,KAAO,IAE3B5lE,GAAc,IAANmG,KAAgBA,GACxBnG,EAAQhM,IAAQ,IAAOA,GACvBgM,IAhGc,WAgGLrN,KAAK4H,KAAkB,+BAEhC5H,KAAK4V,MAAMzO,KAAK,EAAGnH,KAAK4H,IAAK5H,KAAKizE,IAClCjzE,KAAK4V,MAAM5V,KAAK4H,MAAQ4L,EACxBxT,KAAK4V,MAAM5V,KAAKizE,GAAK,IAAM,IAC3BjzE,KAAKsrD,WAAWtrD,KAAK4V,MAAO,GAC5B5V,KAAK4H,IAtGS,WAwGdyF,EAAOhM,GAAOrB,KAAKizE,IAEnB,MAAMhqE,EAAM3J,EAAOkH,MAAMnF,GAEzB,IAAK,IAAInE,EAAI,EAAGA,EAAImE,EAAKnE,IACvB+L,EAAI/L,GAAK8C,KAAKwd,MAAMtgB,IAAM,KAAQ,GAAS,EAAJA,GAEzC,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKwd,MAAMtgB,GAAK,EAElB,IAAK,IAAIA,EAAI,EAAGA,EAAI8C,KAAKizE,GAAI/1E,IAC3B8C,KAAK4V,MAAM1Y,GAAK,EAElB,OAAO+L,EAGT,WAAW2M,EAAO0M,GAChB,MAAM4wD,EAAQlzE,KAAKizE,KAAO,EACpBh0E,EAAIe,KAAKwd,MAEf,IAAK,IAAItgB,EAAI,EAAGA,EAAIg2E,EAAOh2E,IACzB+B,EAAE/B,IAAMswD,EAAQ53C,EAAO0M,EAAU,EAAJplB,GAE/B,IAAK,IAAIyB,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAC9B,MAAM0gD,EAAKpgD,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCk+C,EAAKl+C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCm+C,EAAKn+C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCk0E,EAAKl0E,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCm0E,EAAKn0E,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCo0E,EAAKp0E,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCq0E,EAAKr0E,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCs0E,EAAKt0E,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCu0E,EAAKv0E,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCw0E,EAAKx0E,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAEtCy0E,EAAKF,GAAOp2B,GAAM,EAAM+1B,IAAO,IAC/BQ,EAAKF,GAAON,GAAM,EAAM/1B,IAAO,IAC/Bw2B,EAAKv0B,GAAO+zB,GAAM,EAAMC,IAAO,IAC/B33B,EAAKyB,GAAOk2B,GAAM,EAAMD,IAAO,IAC/BS,EAAKz2B,GAAOk2B,GAAM,EAAMC,IAAO,IAC/B53B,EAAKw3B,GAAOI,GAAM,EAAMD,IAAO,IAC/BQ,EAAKV,GAAOI,GAAM,EAAMC,IAAO,IAC/BM,EAAKV,GAAOI,GAAM,EAAMD,IAAO,IAC/BQ,EAAKV,GAAOj0B,GAAM,EAAMlC,IAAO,IAC/B82B,EAAKV,GAAOp2B,GAAM,EAAMkC,IAAO,IAErCpgD,EAAE,IAAMy0E,EACRz0E,EAAE,IAAM00E,EACR10E,EAAE,KAAOy0E,EACTz0E,EAAE,KAAO00E,EACT10E,EAAE,KAAOy0E,EACTz0E,EAAE,KAAO00E,EACT10E,EAAE,KAAOy0E,EACTz0E,EAAE,KAAO00E,EACT10E,EAAE,KAAOy0E,EACTz0E,EAAE,KAAO00E,EAET10E,EAAE,IAAM20E,EACR30E,EAAE,IAAMy8C,EACRz8C,EAAE,KAAO20E,EACT30E,EAAE,KAAOy8C,EACTz8C,EAAE,KAAO20E,EACT30E,EAAE,KAAOy8C,EACTz8C,EAAE,KAAO20E,EACT30E,EAAE,KAAOy8C,EACTz8C,EAAE,KAAO20E,EACT30E,EAAE,KAAOy8C,EAETz8C,EAAE,IAAM40E,EACR50E,EAAE,IAAM08C,EACR18C,EAAE,KAAO40E,EACT50E,EAAE,KAAO08C,EACT18C,EAAE,KAAO40E,EACT50E,EAAE,KAAO08C,EACT18C,EAAE,KAAO40E,EACT50E,EAAE,KAAO08C,EACT18C,EAAE,KAAO40E,EACT50E,EAAE,KAAO08C,EAET18C,EAAE,IAAM60E,EACR70E,EAAE,IAAM80E,EACR90E,EAAE,KAAO60E,EACT70E,EAAE,KAAO80E,EACT90E,EAAE,KAAO60E,EACT70E,EAAE,KAAO80E,EACT90E,EAAE,KAAO60E,EACT70E,EAAE,KAAO80E,EACT90E,EAAE,KAAO60E,EACT70E,EAAE,KAAO80E,EAET90E,EAAE,IAAM+0E,EACR/0E,EAAE,IAAMg1E,EACRh1E,EAAE,KAAO+0E,EACT/0E,EAAE,KAAOg1E,EACTh1E,EAAE,KAAO+0E,EACT/0E,EAAE,KAAOg1E,EACTh1E,EAAE,KAAO+0E,EACT/0E,EAAE,KAAOg1E,EACTh1E,EAAE,KAAO+0E,EACT/0E,EAAE,KAAOg1E,EAET,MAAM5rD,EAAKppB,EAAE,GACPupB,EAAKvpB,EAAE,GACPi1E,EAAOj1E,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCk1E,EAAOl1E,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCm1E,EAAOn1E,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCo1E,EAAOp1E,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCq1E,EAAOr1E,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCs1E,EAAOt1E,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCu1E,EAAOv1E,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCw1E,EAAOx1E,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCy1E,EAAOz1E,EAAE,IAAM,EAAMA,EAAE,KAAO,GAC9B01E,EAAO11E,EAAE,IAAM,EAAMA,EAAE,KAAO,GAC9B0pB,EAAM1pB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChC6pB,EAAM7pB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChC21E,EAAO31E,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjC41E,EAAO51E,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjC61E,EAAO71E,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjC81E,EAAO91E,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjC+1E,EAAO/1E,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCg2E,EAAOh2E,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCi2E,EAAOj2E,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/Bk2E,EAAOl2E,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/Bm2E,EAAOn2E,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCk/C,EAAOl/C,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCgqB,EAAMhqB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChCmqB,EAAMnqB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChCo2E,EAAOp2E,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCq2E,EAAOr2E,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCs2E,EAAOt2E,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCu2E,EAAOv2E,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCw2E,EAAOx2E,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/By2E,GAAOz2E,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/B02E,GAAO12E,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjC22E,GAAO32E,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjC42E,GAAO52E,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjC62E,GAAO72E,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCsqB,GAAMtqB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChCyqB,GAAMzqB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChC82E,GAAO92E,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjC+2E,GAAO/2E,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCg3E,GAAOh3E,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/Bi3E,GAAOj3E,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/Bk3E,GAAOl3E,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCm3E,GAAOn3E,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCo3E,GAAOp3E,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCq3E,GAAOr3E,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCs3E,GAAOt3E,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCu3E,GAAOv3E,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChC4qB,GAAM5qB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChC+qB,GAAM/qB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAEtCA,EAAE,GAAKopB,GAAOM,EAAKM,EACnBhqB,EAAE,GAAKupB,GAAOM,EAAKM,EACnBnqB,EAAE,IAAMw2E,GAAQU,GAAM/B,EACtBn1E,EAAE,IAAMy2E,IAAQU,GAAM/B,EACtBp1E,EAAE,IAAMy1E,GAAQU,EAAMS,GACtB52E,EAAE,IAAM01E,GAAQx2B,EAAM23B,GACtB72E,EAAE,IAAMg3E,IAAQ/B,EAAMU,EACtB31E,EAAE,IAAMi3E,IAAQ/B,EAAMU,EACtB51E,EAAE,IAAMi2E,GAAQS,GAAMU,GACtBp3E,EAAE,IAAMk2E,GAAQS,GAAMU,GACtBr3E,EAAE,GAAK0pB,GAAOM,EAAKM,GACnBtqB,EAAE,GAAK6pB,GAAOM,EAAKM,GACnBzqB,EAAE,IAAMk3E,IAAQ/B,EAAMU,EACtB71E,EAAE,IAAMm3E,IAAQ/B,EAAMU,EACtB91E,EAAE,IAAMm2E,GAAQS,GAAMU,GACtBt3E,EAAE,IAAMk/C,GAAQ23B,GAAMU,GACtBv3E,EAAE,IAAMi1E,GAAQU,EAAMS,EACtBp2E,EAAE,IAAMk1E,GAAQU,EAAMS,EACtBr2E,EAAE,IAAM02E,IAAQU,GAAM/B,EACtBr1E,EAAE,IAAM22E,IAAQU,GAAM/B,EACtBt1E,EAAE,GAAKgqB,GAAOM,GAAKM,GACnB5qB,EAAE,GAAKmqB,GAAOM,GAAKM,GACnB/qB,EAAE,IAAMm1E,GAAQU,EAAMS,EACtBt2E,EAAE,IAAMo1E,GAAQU,EAAMS,EACtBv2E,EAAE,IAAM42E,IAAQU,GAAM/B,EACtBv1E,EAAE,IAAM62E,IAAQU,GAAM/B,EACtBx1E,EAAE,IAAM21E,GAAQS,EAAMU,GACtB92E,EAAE,IAAM41E,GAAQS,EAAMU,GACtB/2E,EAAE,IAAMo3E,IAAQ/B,EAAMU,EACtB/1E,EAAE,IAAMq3E,IAAQ/B,EAAMU,EACtBh2E,EAAE,GAAKsqB,IAAOM,GAAKxB,EACnBppB,EAAE,GAAKyqB,IAAOM,GAAKxB,EACnBvpB,EAAE,IAAM61E,GAAQS,EAAME,EACtBx2E,EAAE,IAAM81E,GAAQS,EAAME,GACtBz2E,EAAE,IAAMs3E,IAAQ/B,EAAME,EACtBz1E,EAAE,IAAMu3E,IAAQ/B,EAAME,EACtB11E,EAAE,IAAMo2E,GAAQU,GAAME,GACtBh3E,EAAE,IAAMq2E,GAAQU,GAAME,GACtBj3E,EAAE,IAAMq1E,GAAQU,EAAME,EACtBj2E,EAAE,IAAMs1E,GAAQU,EAAME,EACtBl2E,EAAE,GAAK4qB,IAAOxB,EAAKM,EACnB1pB,EAAE,GAAK+qB,IAAOxB,EAAKM,EACnB7pB,EAAE,IAAMs2E,GAAQE,EAAMU,GACtBl3E,EAAE,IAAMu2E,GAAQE,GAAMU,GACtBn3E,EAAE,IAAMu1E,GAAQE,EAAMU,EACtBn2E,EAAE,IAAMw1E,GAAQE,EAAMx2B,EACtBl/C,EAAE,IAAM82E,IAAQE,GAAM/B,EACtBj1E,EAAE,IAAM+2E,IAAQE,GAAM/B,EACtBl1E,EAAE,IAAM+1E,GAAQE,EAAMS,GACtB12E,EAAE,IAAMg2E,GAAQE,EAAMS,GAEtB32E,EAAE,IAAM+zE,EAAYr0E,EAAI,GACxBM,EAAE,IAAM+zE,EAAYr0E,EAAI,IAI5B,cACE,OAAO,IAAI2rD,EAGb,YAAYtvC,EAAMxH,EAAKnS,GACT,MAAR2Z,IACFA,EAAO,KAET3N,EAAQ2N,IAAS,IAAOA,GAExB,MAAMyvC,EAAO,KAAc,EAAPzvC,EAIpB,OAFA3N,EAAOo9C,GAAQ,GAAqB,IAAR,GAAPA,IAEd,IAAIz3C,EAAKs3C,EAAQG,IAAS,EAAG,CAACzvC,GAAO,CAACxH,EAAKnS,IAGpD,cAAcM,EAAMqZ,EAAMxH,EAAKnS,GAC7B,OAAOipD,EAAO93B,IAAI5jB,KAAKoM,GAAMxI,OAAO7Q,GAAM4R,MAAMC,EAAKnS,GAGvD,YAAY0gB,EAAMC,EAAOhH,EAAMxH,EAAKnS,GAgBlC,OAfY,MAAR2Z,IACFA,EAAO,KAEE,MAAP3Z,IACFA,EAAM,GAEI,IAARA,IACFA,EAAM2Z,IAAS,GAEjB3N,EAAQ2N,IAAS,IAAOA,GACxB3N,EAAsB,IAAP,EAAP2N,IACR3N,EAAQhM,IAAQ,IAAOA,GACvBgM,EAAO/N,EAAO8B,SAAS2gB,IAASA,EAAKriB,SAAW2B,GAChDgM,EAAO/N,EAAO8B,SAAS4gB,IAAUA,EAAMtiB,SAAW2B,GAE3CipD,EAAO93B,IAAI5jB,KAAKoM,GAAMxI,OAAOuP,GAAMvP,OAAOwP,GAAOzO,MAAMC,EAAKnS,GAGrE,aAAamG,EAAGC,EAAG4T,EAAGL,EAAMxH,EAAKnS,GAC/B,MAAM,IAACmxB,GAAO83B,EASd,OAPA93B,EAAI5jB,KAAKoM,GACTwX,EAAIhgB,OAAOhL,GACXgrB,EAAIhgB,OAAO/K,GAEP4T,GACFmX,EAAIhgB,OAAO6I,GAENmX,EAAIjf,MAAMC,EAAKnS,GAGxB,WAAWM,EAAMlD,EAAKuc,EAAMxH,EAAKnS,GAC/B,OAAOipD,EAAOU,KAAKhwC,EAAMxH,EAAKnS,GAAKuN,KAAKnQ,GAAK+T,OAAO7Q,GAAM4R,SAoB9D,SAASi6C,EAAQ7rD,EAAM2gB,GACrB,OAAQ3gB,EAAK2gB,KACS,IAAd3gB,EAAK2gB,KACS,MAAd3gB,EAAK2gB,KACO,SAAZ3gB,EAAK2gB,GAhBfgoC,EAAO9jB,OAAS,EAChB8jB,EAAO/jB,GAAK,YACZ+jB,EAAOxoD,KAAO,GACdwoD,EAAOtvC,KAAO,IACdsvC,EAAOz4C,UAAY,IACnBy4C,EAAOxa,KAAOxwC,EAAOkH,MAAM,GAAI,GAC/B8jD,EAAO93B,IAAM,IAAI83B,EAiBjBrtD,EAAOD,QAAUstD,I;;;;;GCpajBrtD,EAAOD,QAAU,EAAQ,M;;;;;;;;;;;;;;;;;;;;;GCgBzB,MAAMqQ,EAAS,EAAQ,GACjBkN,EAAK,EAAQ,GACbvK,EAAS,EAAQ,GAMjBymE,EAAc,IAAI72E,WAAW,CAChC,EAAI,EAAI,EACT,GAAI,GAAI,GACR,GAAI,GAAI,GACR,GAAI,GAAI,GACR,GAAI,GAAI,KAGJ82E,EAAqB,IAAIn8D,EAAG,uBAAwB,IAwBpDo8D,EAAU,IAAIp8D,EAAG,YACjBq8D,EAAU,IAAIr8D,EAAG,YAiDvB,SAASs8D,EAAgBrvE,EAAGsvE,EAAM9wC,EAAMh2B,GAGtC,GAFA3C,EAAO7F,aAAa+S,GAEhB/S,EAAE+gC,QAAU,EACd,OAAO,EAET,GAAI/gC,EAAE0U,KAAK,IAAM,EAAG,CAClB,MAAMnB,EAAIvT,EAAEyW,KAAK,GAEjB,OAAIlD,EAAI,GACwC,IArE7B,UAqES,GAAMA,EAAI,IAEC,KApFpB,WAoFO,GAAKA,GAGjC,GAAIvT,EAAEupB,SACJ,OAAO,EAET,MAAMgmD,EAAKvvE,EAAE8T,IAAIq7D,GAAS/yD,WACpBoI,EAAKxkB,EAAE8T,IAAIs7D,GAAShzD,WAE1B,OAAImzD,EAAK,GAAM,GACRA,EAAK,GAAM,GACXA,EAAK,GAAM,GACXA,EAAK,IAAO,GACZA,EAAK,IAAO,GACZA,EAAK,IAAO,GACZA,EAAK,IAAO,GACZA,EAAK,IAAO,GACZA,EAAK,IAAO,GACZ/qD,EAAK,IAAO,GACZA,EAAK,IAAO,GACZA,EAAK,IAAO,GACZA,EAAK,IAAO,GACZA,EAAK,IAAO,GACZA,EAAK,IAAO,GAIZxkB,EAAEswD,QAAQ9xB,EAAK8wC,GAqBxB95E,EAAQg6E,YAvGR,SAAqBh8D,EAAM87D,EAAO,GAAI9wC,EAAMh2B,GAK1C,GAJA3C,EAAQ2N,IAAS,IAAOA,GACxB3N,EAAQypE,IAAS,IAAOA,GACxBzpE,EAAc,MAAP24B,GAEHhrB,EAAO,EACT,MAAM,IAAI/a,MAAM,kCAElB,OAAS,CACP,MAAMjB,EAAIub,EAAGwvC,WAAW/jB,EAAKhrB,GAE7Bhc,EAAE+mB,KAAK/K,EAAO,EAAG,GACjBhc,EAAE+mB,KAAK/K,EAAO,EAAG,GACjBhc,EAAE+mB,KAAK,EAAG,GAEV,MAAMzK,EAAMtc,EAAEsc,IAAIo7D,GAEtBv5D,EACI,IAAK,IAAIqU,EAAQ,EAAGA,EAAS,GAAK,GAAKA,GAAS,EAAG,CACjD,MAAMl0B,EAAIge,EAAIiU,KAAKiC,GAEnB,IAAK,IAAIt0B,EAAI,EAAGA,EAAIu5E,EAAY/2E,OAAQxC,IAAK,CAC3C,MAAMy3B,EAAQ8hD,EAAYv5E,GAE1B,GAAuB,IAAnBI,EAAEy1C,MAAMpe,KAAiB3Z,EAAO,GAAuB,IAAlB1d,EAAE4e,KAAKyY,IAC9C,SAASxX,EAGbne,EAAE0lB,MAAM8M,GAER,MAGF,GAAIxyB,EAAEkc,cAAgBF,GAGjB67D,EAAgB73E,EAAG83E,EAAM9wC,GAG9B,OAAOhnC,IAiEXhC,EAAQ65E,gBAAkBA,EAC1B75E,EAAQi6E,YApBR,SAAqBzvE,EAAGsvE,EAAM9wC,GAE5B,QAAK6wC,EAAgBrvE,EAAGsvE,EAAM9wC,MAMzB6wC,EAFKrvE,EAAEgoB,KAAK,GAAG9T,OAAO,GAEHo7D,EAAM9wC,K;;;;;GC5JhC/oC,EAAOD,QAAU,EAAQ,M;;;;;GCAzBC,EAAOD,QAAU,EAAQ,M,8BCRzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA,MAAMqQ,EAAS,EAAQ,GACjB6pE,EAAW,EAAQ,IACnB38D,EAAK,EAAQ,GACb6rB,EAAW,EAAQ,IACnBJ,EAAM,EAAQ,GA4rBpB,MAAM9yB,EACJ,YAAYikE,GACVn3E,KAAK4mC,MAAQuwC,EAAMvwC,MAEnB5mC,KAAKmT,KAAO,IAAIgkE,EAAMhkE,KAGxB,KAAKwa,EAAI6E,GAkBP,OAjBAnlB,EAAa,MAANsgB,GAA4B,kBAAPA,GAC5BtgB,EAAO/N,EAAO8B,SAASoxB,IAEnBA,EAAI9yB,OAAS,MACf8yB,EAAMA,EAAIvxB,MAAM,EAAG,MAErBjB,KAAKmT,KAAKvE,QAEN5O,KAAK4mC,MAAM+M,SAAiB,MAANhmB,GAAc6E,EAAI9yB,OAAS,KAC/CM,KAAK4mC,MAAM1L,QACbl7B,KAAKmT,KAAKX,OAAOxS,KAAK4mC,MAAM1L,QAE9Bl7B,KAAKmT,KAAKX,OAAO2vB,EAAKxU,IACtB3tB,KAAKmT,KAAKX,OAAO2vB,EAAK3P,EAAI9yB,SAC1BM,KAAKmT,KAAKX,OAAOggB,IAGZxyB,KAGT,OAAO2B,GAEL,OADA3B,KAAKmT,KAAKX,OAAO7Q,GACV3B,KAGT,QACE,MAAMmT,EAAOnT,KAAKmT,KAAKI,MAAgC,EAA1BvT,KAAK4mC,MAAMgN,cAGxC,OAFYr5B,EAAG2C,OAAO/J,EAAMnT,KAAK4mC,MAAM1nB,QAE5B4V,KAAK90B,KAAK4mC,MAAMjoC,IAQ/B,SAASwjC,EAAKjkB,GACZ,MAAMta,EAAMtE,EAAOkH,MAAM,GAEzB,OADA5C,EAAI,GAAU,IAALsa,EACFta,EAOT3G,EAAOD,QA7uBP,MACE,YAAYupC,EAAIjgB,EAAKwsD,EAAK3/D,EAAMmzB,GAC9Bj5B,EAAqB,iBAAPk5B,GACdl5B,GAAQiZ,GAAsB,iBAARA,GACtBjZ,GAAQylE,GAAsB,iBAARA,GACtBzlE,EAAO8F,GAEPnT,KAAKumC,GAAKA,EACVvmC,KAAK0B,KAAO,QACZ1B,KAAKsmB,IAAMA,GAAO,KAClBtmB,KAAK8yE,IAAMA,GAAO,KAClB9yE,KAAKmT,KAAOA,EACZnT,KAAKwmC,OAAS,EAEdxmC,KAAKymC,KAAOH,GAAO,KACnBtmC,KAAK0mC,OAAS,KACd1mC,KAAK8gD,MAAQ,KACb9gD,KAAKo3E,KAAO,KACZp3E,KAAKq3E,KAAO,KAGd,YAME,OALKr3E,KAAK0mC,SACR1mC,KAAK0mC,OAASN,EAASQ,MAAM5mC,KAAKumC,GAAIvmC,KAAKymC,MAC3CzmC,KAAK0mC,OAAOG,WAAWb,GACvBhmC,KAAKymC,KAAO,MAEPzmC,KAAK0mC,OAGd,WAGE,OAFI1mC,KAAKsmB,MAAQtmB,KAAK8gD,QACpB9gD,KAAK8gD,MAAQ1a,EAASQ,MAAM5mC,KAAKsmB,MAC5BtmB,KAAK8gD,MAGd,UACE,OAAK9gD,KAAK8yE,KAGL9yE,KAAKo3E,OACRp3E,KAAKo3E,KAAOhxC,EAASQ,MAAM5mC,KAAK8yE,MAE3B9yE,KAAKo3E,MALHp3E,KAAKg2B,KAQhB,UAIE,OAHKh2B,KAAKq3E,OACRr3E,KAAKq3E,KAAO,IAAIH,EAASl3E,KAAK4mC,QAEzB5mC,KAAKq3E,KAGd,WACE,OAAOr3E,KAAK4mC,MAAMgN,aAGpB,WACE,OAAO5zC,KAAK4mC,MAAMG,UAGpB,UAAU7L,EAAQ5tB,EAAKqgB,EAAI6E,GACzB,MAAMrf,EAAO,IAAID,EAAKlT,MAMtB,OAJAmT,EAAKvE,KAAK+e,EAAI6E,GACdrf,EAAKX,OAAO0oB,GACZ/nB,EAAKX,OAAOlF,GAEL6F,EAAKI,QAGd,cAAco2B,EAAGhZ,EAAGrzB,EAAGqwB,EAAI6E,GACzB,MAAMrf,EAAO,IAAID,EAAKlT,MAOtB,OALAmT,EAAKvE,KAAK+e,EAAI6E,GACdrf,EAAKX,OAAOm3B,GACZx2B,EAAKX,OAAOme,GACZxd,EAAKX,OAAOlV,GAEL6V,EAAKI,QAGd,qBACE,OAAOyyB,EAAI93B,YAAYlO,KAAK4mC,MAAMgN,cAGpC,iBACE,MAAMyD,EAASrR,EAAI93B,YAAYlO,KAAK4mC,MAAM6C,YAC1C,OAAOzpC,KAAK4mC,MAAM/2B,MAAMwnC,GAG1B,iBAAiBigC,GACfjqE,EAAO/N,EAAO8B,SAASk2E,IACvBjqE,EAAOiqE,EAAO53E,SAAWM,KAAK4mC,MAAMgN,cAEpC,MAAMzgC,EAAOnT,KAAKmT,KAAKk5B,OAAOirC,EAAkC,EAA1Bt3E,KAAK4mC,MAAMgN,cAEjD,OAAO5zC,KAAK4mC,MAAM2wC,UAAUpkE,GAG9B,kBAAkBmkE,GAChB,MAAO74E,GAAOuB,KAAKw3E,iBAAiBF,GACpC,OAAO74E,EAGT,iBAAiB64E,GAEf,OADAjqE,EAAO/N,EAAO8B,SAASk2E,IAChBA,EAAO53E,SAAWM,KAAK4mC,MAAMgN,aAGtC,aAAayD,GAEX,OADAhqC,EAAO/N,EAAO8B,SAASi2C,IAChBA,EAAO33C,SAAWM,KAAK4mC,MAAM6C,WAGtC,aAAa4N,GAGX,IAAIj8B,EAFJ/N,EAAO/N,EAAO8B,SAASi2C,IAGvB,IACEj8B,EAAIpb,KAAK4mC,MAAMM,aAAamQ,GAAQviB,KAAK90B,KAAK4mC,MAAMjoC,GACpD,MAAOkI,GACP,OAAO,EAGT,OAAOuU,EAAEqI,SAGX,YAAY4zB,GAIV,OAHAhqC,EAAO/N,EAAO8B,SAASi2C,IACvBhqC,EAAOgqC,EAAO33C,SAAWM,KAAK4mC,MAAM6C,YAE7BzpC,KAAK4mC,MAAM/2B,MAAMvQ,EAAOa,KAAKk3C,IAGtC,iBAAiBigC,GACf,MAAMnwC,EAAMnnC,KAAKonC,gBAAgBkwC,IAC3B,EAAC9vE,EAAC,EAAEC,GAAKzH,KAAKqnC,gBAAgBF,GAEpC,MAAO,CACL3pC,EAAG8B,EAAOa,KAAKm3E,GACf9vE,IACAC,KAIJ,iBAAiB6/B,GAIf,GAHAj6B,EAAOi6B,GAAwB,iBAATA,GACtBj6B,EAAO/N,EAAO8B,SAASkmC,EAAK9pC,IAExB8pC,EAAK9pC,EAAEkC,SAAWM,KAAK4mC,MAAMgN,aAC/B,MAAM,IAAI3zC,MAAM,wBAElB,OAAOX,EAAOa,KAAKmnC,EAAK9pC,GAG1B,eAAe65C,EAAQ9P,GACrB,MAAMhgC,EAAIvH,KAAK4mC,MAAMM,aAAamQ,GAC5Bj5C,EAAI4B,KAAK4mC,MAAMM,aAAaK,GAC5BnsB,EAAI7T,EAAE6e,IAAIhoB,GAAG02B,KAAK90B,KAAK4mC,MAAMjoC,GAEnC,OAAOqB,KAAK4mC,MAAMK,aAAa7rB,GAGjC,eAAei8B,EAAQ9P,GACrB,MAAMhgC,EAAIvH,KAAK4mC,MAAMM,aAAamQ,GAC5Bj5C,EAAI4B,KAAK4mC,MAAMM,aAAaK,GAC5BnsB,EAAI7T,EAAE0C,IAAI7L,GAAG02B,KAAK90B,KAAK4mC,MAAMjoC,GAEnC,OAAOqB,KAAK4mC,MAAMK,aAAa7rB,GAGjC,aAAai8B,GACX,MACMj8B,EADIpb,KAAK4mC,MAAMM,aAAamQ,GACtBviB,KAAK90B,KAAK4mC,MAAMjoC,GAE5B,OAAOqB,KAAK4mC,MAAMK,aAAa7rB,GAGjC,aAAai8B,GACX,MACMj8B,EADIpb,KAAK4mC,MAAMM,aAAamQ,GAAQviB,KAAK90B,KAAK4mC,MAAMjoC,GAC9CqmB,MAAM8P,KAAK90B,KAAK4mC,MAAMjoC,GAElC,OAAOqB,KAAK4mC,MAAMK,aAAa7rB,GAGjC,aAAai8B,GACX,MAAM9vC,EAAIvH,KAAK4mC,MAAMM,aAAamQ,GAAQviB,KAAK90B,KAAK4mC,MAAMjoC,GAE1D,GAAI4I,EAAEkc,SACJ,OAAOzjB,KAAK4mC,MAAMK,aAAa1/B,GAEjC,MAAM6T,EAAI7T,EAAEigC,OAAOxnC,KAAK4mC,MAAMjoC,GAE9B,OAAOqB,KAAK4mC,MAAMK,aAAa7rB,GAGjC,gBAAgBk8D,GACd,MAAM74E,EAAMuB,KAAKy3E,kBAAkBH,GACnC,OAAOt3E,KAAK03E,oBAAoBj5E,GAGlC,oBAAoB44C,GAClB,MAAM9vC,EAAIvH,KAAK4mC,MAAMM,aAAamQ,GAAQviB,KAAK90B,KAAK4mC,MAAMjoC,GAG1D,OAFUqB,KAAK4mC,MAAM9V,EAAE4W,SAASngC,GAEvBqT,SAGX,iBAAiBnc,GACf,IAAKuB,KAAKg2B,KACR,MAAM,IAAI/1B,MAAM,mCAElB,MAAM0wB,EAAI3wB,KAAK4mC,MAAMe,YAAYlpC,GAGjC,OAFUuB,KAAKg2B,KAAKiyB,iBAAiBt3B,GAE5B/V,SAGX,qBAAqBzR,GACnB,MAAM6P,EAAIhZ,KAAK4mC,MAAMgB,cAAcz+B,GAGnC,OAFUnJ,KAAK4mC,MAAMiB,iBAAiB7uB,EAAGhZ,KAAK23E,KAErC/8D,SAGX,mBAAmBnc,EAAKmwB,EAAOoX,EAAI8B,aACjC,MAAMnX,EAAI3wB,KAAK4mC,MAAMe,YAAYlpC,GAC3Bua,EAAIhZ,KAAK4mC,MAAMmB,eAAepX,EAAG/B,EAAM5uB,KAAK23E,KAElD,OAAO33E,KAAK4mC,MAAMoB,cAAchvB,EAAG4V,IAAS,GAG9C,kBAAkBzlB,EAAOmtC,GAAO,GAE9B,OADUt2C,KAAK4mC,MAAMqB,cAAc9+B,EAAOmtC,EAAMt2C,KAAK23E,KAC5C/8D,SAGX,gBAAgBnc,EAAKk4C,EAAW3Q,EAAI8B,aAClC,MAAMnX,EAAI3wB,KAAK4mC,MAAMe,YAAYlpC,GACjC,OAAOuB,KAAK4mC,MAAMsB,YAAYvX,EAAGgmB,EAAU3Q,EAAKhmC,KAAK23E,KAGvD,gBAAgBl5E,GACd4O,EAAO/N,EAAO8B,SAAS3C,IAEvB,IACEuB,KAAK4mC,MAAMe,YAAYlpC,GACvB,MAAOoI,GACP,OAAO,EAGT,OAAO,EAGT,oBAAoBpI,GAGlB,IAAIkyB,EAFJtjB,EAAO/N,EAAO8B,SAAS3C,IAGvB,IACEkyB,EAAI3wB,KAAK4mC,MAAMe,YAAYlpC,GAC3B,MAAOoI,GACP,OAAO,EAGT,OAAO8pB,EAAEiZ,aAGX,iBAAiBnrC,GAGf,IAAIkyB,EAFJtjB,EAAO/N,EAAO8B,SAAS3C,IAGvB,IACEkyB,EAAI3wB,KAAK4mC,MAAMe,YAAYlpC,GAC3B,MAAOoI,GACP,OAAO,EAGT,OAAO8pB,EAAEma,UAGX,oBAAoBrsC,GAGlB,IAAIkyB,EAFJtjB,EAAO/N,EAAO8B,SAAS3C,IAGvB,IACEkyB,EAAI3wB,KAAK4mC,MAAMe,YAAYlpC,GAC3B,MAAOoI,GACP,OAAO,EAGT,OAAO8pB,EAAEw0B,aAGX,gBAAgB1mD,GACd,MAAM,EAAC+I,EAAC,EAAEC,GAAKzH,KAAK4mC,MAAMe,YAAYlpC,GAEtC,MAAO,CACL+I,EAAGxH,KAAK4mC,MAAMuB,YAAY3gC,EAAEmrB,WAC5BlrB,EAAGzH,KAAK4mC,MAAMuB,YAAY1gC,EAAEkrB,YAIhC,gBAAgB2U,GACdj6B,EAAOi6B,GAAwB,iBAATA,GAEtB,IAEI3W,EAFAnpB,EAAI,KACJC,EAAI,KAGR,GAAc,MAAV6/B,EAAK9/B,IACPA,EAAI+S,EAAG2C,OAAOoqB,EAAK9/B,EAAGxH,KAAK4mC,MAAM1nB,QAE7B1X,EAAEya,IAAIjiB,KAAK4mC,MAAM5nC,IAAM,GACzB,MAAM,IAAIiB,MAAM,kBAGpB,GAAc,MAAVqnC,EAAK7/B,IACPA,EAAI8S,EAAG2C,OAAOoqB,EAAK7/B,EAAGzH,KAAK4mC,MAAM1nB,QAE7BzX,EAAEwa,IAAIjiB,KAAK4mC,MAAM5nC,IAAM,GACzB,MAAM,IAAIiB,MAAM,kBAGpB,GAAIuH,GAAKC,GAGP,GAFAkpB,EAAI3wB,KAAK4mC,MAAMwB,MAAM5gC,EAAGC,IAEnBkpB,EAAE0X,WACL,MAAM,IAAIpoC,MAAM,uBACb,GAAIuH,EACTmpB,EAAI3wB,KAAK4mC,MAAM0B,WAAW9gC,EAAG8/B,EAAKiB,UAC7B,KAAI9gC,EAGT,MAAM,IAAIxH,MAAM,kBAFhB0wB,EAAI3wB,KAAK4mC,MAAM4hB,WAAW/gD,EAAG6/B,EAAKiB,MAKpC,OAAO5X,EAAE/V,SAGX,kBAAkBnc,EAAK8oC,GACrB,MAAMnpC,EAAI4B,KAAK4mC,MAAMM,aAAaK,GAAOzS,KAAK90B,KAAK4mC,MAAMjoC,GACnDgyB,EAAI3wB,KAAK4mC,MAAMe,YAAYlpC,GAIjC,OAHUuB,KAAK4mC,MAAM9V,EAAE7mB,IAAI7L,GACfgoB,IAAIuK,GAEP/V,SAGX,kBAAkBnc,EAAK8oC,GACrB,MAAMnpC,EAAI4B,KAAK4mC,MAAMM,aAAaK,GAIlC,OAHUvnC,KAAK4mC,MAAMe,YAAYlpC,GACrBwL,IAAI7L,GAEPwc,SAGX,iBAAiB6tB,GACfp7B,EAAOvE,MAAM1J,QAAQqpC,IAErB,IAAIC,EAAI1oC,KAAK4mC,MAAMwB,QAEnB,IAAK,MAAM3pC,KAAOgqC,EAAM,CACtB,MAAM9X,EAAI3wB,KAAK4mC,MAAMe,YAAYlpC,GAEjCiqC,EAAIA,EAAEtiB,IAAIuK,GAGZ,OAAO+X,EAAE9tB,SAGX,gBAAgBnc,GAId,OAHUuB,KAAK4mC,MAAMe,YAAYlpC,GACrBumB,MAEHpK,SAGX,KAAKtN,EAAKgqE,EAAQ3pD,EAAI6E,GACpB,MAAO/zB,EAAKy8B,GAAUl7B,KAAKw3E,iBAAiBF,GAC5C,OAAOt3E,KAAK43E,eAAetqE,EAAK7O,EAAKy8B,EAAQvN,EAAI6E,GAGnD,eAAellB,EAAK+pC,EAAQnc,EAAQvN,EAAI6E,GA6B3B,MAAPA,IACFA,EAAMlzB,EAAOkH,MAAM,IAErB6G,EAAO/N,EAAO8B,SAASkM,IACvBD,EAAO/N,EAAO8B,SAAS85B,IACvB7tB,EAAO6tB,EAAOx7B,SAAWM,KAAK4mC,MAAMgN,cAEpC,MAAM,EAACj1C,GAAKqB,KAAK4mC,MACXwC,EAAIppC,KAAK4mC,MAAM9V,EACf1V,EAAIpb,KAAK63E,UAAU38C,EAAQ5tB,EAAKqgB,EAAI6E,GACpC2Y,EAAO/B,EAAE1B,SAAStsB,GAAGR,SACrBrT,EAAIvH,KAAK4mC,MAAMM,aAAamQ,GAC5BygC,EAAO1uC,EAAE1B,SAASngC,GAAGqT,SACrB/T,EAAI7G,KAAK+3E,cAAc5sC,EAAM2sC,EAAMxqE,EAAKqgB,EAAI6E,GAC5CvzB,EAAImc,EAAEgL,IAAIvf,EAAEoD,IAAI1C,IAAIutB,KAAKn2B,GAE/B,OAAOW,EAAOoI,OAAO,CAACyjC,EAAMnrC,KAAK4mC,MAAM0hB,eAAerpD,KAGxD,aAAaqO,EAAKgqE,EAAQ/vC,EAAO5Z,EAAI6E,GACnC,MAAOwlD,EAAMC,GAAWj4E,KAAKw3E,iBAAiBF,GACxC74E,EAAMuB,KAAKk4E,eAAeF,EAAMzwC,GAGhCrM,EAFWl7B,KAAKmT,KAAKy5C,MAAMqrB,EAAS1wC,EAAO,KACU,EAA1BvnC,KAAK4mC,MAAMgN,cACpB3yC,MAAM,EAAGjB,KAAK4mC,MAAMgN,cAE5C,OAAO5zC,KAAK43E,eAAetqE,EAAK7O,EAAKy8B,EAAQvN,EAAI6E,GAGnD,aAAallB,EAAKgqE,EAAQ/vC,EAAO5Z,EAAI6E,GACnC,MAAOwlD,EAAMC,GAAWj4E,KAAKw3E,iBAAiBF,GACxC74E,EAAMuB,KAAKm4E,eAAeH,EAAMzwC,GAGhCrM,EAFWl7B,KAAKmT,KAAKy5C,MAAMqrB,EAAS1wC,EAAO,KACU,EAA1BvnC,KAAK4mC,MAAMgN,cACpB3yC,MAAM,EAAGjB,KAAK4mC,MAAMgN,cAE5C,OAAO5zC,KAAK43E,eAAetqE,EAAK7O,EAAKy8B,EAAQvN,EAAI6E,GAGnD,OAAOllB,EAAKs7B,EAAKnqC,EAAKkvB,EAAI6E,GAUxB,GATW,MAAPA,IACFA,EAAMlzB,EAAOkH,MAAM,IAErB6G,EAAO/N,EAAO8B,SAASkM,IACvBD,EAAO/N,EAAO8B,SAASwnC,IACvBv7B,EAAO/N,EAAO8B,SAAS3C,IACvB4O,EAAa,MAANsgB,GAA4B,kBAAPA,GAC5BtgB,EAAO/N,EAAO8B,SAASoxB,IAEnBoW,EAAIlpC,SAAqC,EAA1BM,KAAK4mC,MAAMgN,aAC5B,OAAO,EAET,GAAIn1C,EAAIiB,SAAWM,KAAK4mC,MAAMgN,aAC5B,OAAO,EAET,IACE,OAAO5zC,KAAKkqC,QAAQ58B,EAAKs7B,EAAKnqC,EAAKkvB,EAAI6E,GACvC,MAAO3rB,GACP,OAAO,GAIX,QAAQyG,EAAKs7B,EAAKnqC,EAAKkvB,EAAI6E,GAyBzB,MAAM,EAAC7zB,GAAKqB,KAAK4mC,MACXwC,EAAIppC,KAAK4mC,MAAM9V,EACfqa,EAAOvC,EAAI3nC,MAAM,EAAGjB,KAAK4mC,MAAMgN,cAC/BwkC,EAAOxvC,EAAI3nC,MAAMjB,KAAK4mC,MAAMgN,cAC5BjK,EAAI3pC,KAAK4mC,MAAMe,YAAYwD,GAC3BlsC,EAAIe,KAAK4mC,MAAM2hB,eAAe6vB,GAC9BznD,EAAI3wB,KAAK4mC,MAAMe,YAAYlpC,GAEjC,GAAIQ,EAAEgjB,IAAItjB,IAAM,EACd,OAAO,EAET,MAAMkI,EAAI7G,KAAK+3E,cAAc5sC,EAAM1sC,EAAK6O,EAAKqgB,EAAI6E,GAEjD,OAAO4W,EAAEwB,OAAO3rC,EAAG0xB,EAAE3L,MAAOne,GAAGwrB,GAAGsX,GAGpC,aAAar8B,EAAKs7B,EAAKnqC,EAAKkvB,EAAI6E,GAU9B,GATW,MAAPA,IACFA,EAAMlzB,EAAOkH,MAAM,IAErB6G,EAAO/N,EAAO8B,SAASkM,IACvBD,EAAO/N,EAAO8B,SAASwnC,IACvBv7B,EAAO/N,EAAO8B,SAAS3C,IACvB4O,EAAa,MAANsgB,GAA4B,kBAAPA,GAC5BtgB,EAAO/N,EAAO8B,SAASoxB,IAEnBoW,EAAIlpC,SAAqC,EAA1BM,KAAK4mC,MAAMgN,aAC5B,OAAO,EAET,GAAIn1C,EAAIiB,SAAWM,KAAK4mC,MAAMgN,aAC5B,OAAO,EAET,IACE,OAAO5zC,KAAKq4E,cAAc/qE,EAAKs7B,EAAKnqC,EAAKkvB,EAAI6E,GAC7C,MAAO3rB,GACP,OAAO,GAIX,cAAcyG,EAAKs7B,EAAKnqC,EAAKkvB,EAAI6E,GAyB/B,MAAM,EAAC7zB,GAAKqB,KAAK4mC,MACXwC,EAAIppC,KAAK4mC,MAAM9V,EACfqa,EAAOvC,EAAI3nC,MAAM,EAAGjB,KAAK4mC,MAAMgN,cAC/BwkC,EAAOxvC,EAAI3nC,MAAMjB,KAAK4mC,MAAMgN,cAC5BjK,EAAI3pC,KAAK4mC,MAAMe,YAAYwD,GAC3BlsC,EAAIe,KAAK4mC,MAAM2hB,eAAe6vB,GAC9BznD,EAAI3wB,KAAK4mC,MAAMe,YAAYlpC,GAEjC,GAAIQ,EAAEgjB,IAAItjB,IAAM,EACd,OAAO,EAET,MAAMkI,EAAI7G,KAAK+3E,cAAc5sC,EAAM1sC,EAAK6O,EAAKqgB,EAAI6E,GAC3C8lD,EAAKt4E,KAAK4mC,MAAMoQ,MAAM/3C,GACtBs5E,EAAK5nD,EAAE+lB,OACP8hC,EAAK7uC,EAAE+M,OAEb,OAAOtN,EAAEwB,OAAO0tC,EAAIC,EAAGvzD,MAAOne,GAAGwrB,GAAGmmD,GAGtC,YAAYvtC,EAAOtd,EAAI6E,GACV,MAAPA,IACFA,EAAMlzB,EAAOkH,MAAM,IAErB6G,EAAOvE,MAAM1J,QAAQ6rC,IACrB59B,EAAa,MAANsgB,GAA4B,kBAAPA,GAC5BtgB,EAAO/N,EAAO8B,SAASoxB,IAEvB,IAAK,MAAMk2B,KAAQzd,EAAO,CACxB59B,EAAOvE,MAAM1J,QAAQspD,IAAyB,IAAhBA,EAAKhpD,QAEnC,MAAO4N,EAAKs7B,EAAKnqC,GAAOiqD,EAMxB,GAJAr7C,EAAO/N,EAAO8B,SAASkM,IACvBD,EAAO/N,EAAO8B,SAASwnC,IACvBv7B,EAAO/N,EAAO8B,SAAS3C,IAEnBmqC,EAAIlpC,SAAqC,EAA1BM,KAAK4mC,MAAMgN,aAC5B,OAAO,EAET,GAAIn1C,EAAIiB,SAAWM,KAAK4mC,MAAMgN,aAC5B,OAAO,EAGX,IACE,OAAO5zC,KAAKy4E,aAAaxtC,EAAOtd,EAAI6E,GACpC,MAAO3rB,GACP,OAAO,GAIX,aAAaokC,EAAOtd,EAAI6E,GAqBtB,MAAM,EAAC7zB,GAAKqB,KAAK4mC,MACXwC,EAAIppC,KAAK4mC,MAAM9V,EACfqgB,EAAS,IAAIroC,MAAM,EAAmB,EAAfmiC,EAAMvrC,QAC7BiyC,EAAS,IAAI7oC,MAAM,EAAmB,EAAfmiC,EAAMvrC,QAC7Bg5E,EAAM,IAAIn+D,EAAG,GAEnBva,KAAKgmC,IAAIp3B,KAAKq8B,GAEdkG,EAAO,GAAK/H,EACZuI,EAAO,GAAK+mC,EAEZ,IAAK,IAAIx7E,EAAI,EAAGA,EAAI+tC,EAAMvrC,OAAQxC,IAAK,CACrC,MAAOoQ,EAAKs7B,EAAKnqC,GAAOwsC,EAAM/tC,GACxBiuC,EAAOvC,EAAI3nC,MAAM,EAAGjB,KAAK4mC,MAAMgN,cAC/BwkC,EAAOxvC,EAAI3nC,MAAMjB,KAAK4mC,MAAMgN,cAC5BjK,EAAI3pC,KAAK4mC,MAAMe,YAAYwD,GAC3BlsC,EAAIe,KAAK4mC,MAAM2hB,eAAe6vB,GAC9BznD,EAAI3wB,KAAK4mC,MAAMe,YAAYlpC,GAEjC,GAAIQ,EAAEgjB,IAAItjB,IAAM,EACd,OAAO,EAET,MAAMkI,EAAI7G,KAAK+3E,cAAc5sC,EAAM1sC,EAAK6O,EAAKqgB,EAAI6E,GAC3CjrB,EAAIvH,KAAKgmC,IAAIwD,SAAStsC,GACtBy7E,EAAK9xE,EAAEoD,IAAI1C,GAAGutB,KAAKn2B,GAEzB+5E,EAAIxyD,KAAKjnB,EAAEgL,IAAI1C,IAAIutB,KAAKn2B,GAExBwyC,EAAO,EAAQ,EAAJj0C,EAAQ,GAAKysC,EAAE+M,OAC1B/E,EAAO,EAAQ,EAAJz0C,EAAQ,GAAKqK,EACxB4pC,EAAO,EAAQ,EAAJj0C,EAAQ,GAAKyzB,EAAE+lB,OAC1B/E,EAAO,EAAQ,EAAJz0C,EAAQ,GAAKy7E,EAK1B,OAFA34E,KAAK4mC,MAAMoQ,MAAM0hC,EAAI5zD,QAEd9kB,KAAK4mC,MAAM6Z,OAAOtP,EAAQQ,GAAQ/H,aAG3C,OAAOzC,EAAKmwC,GACV,MAAMjgC,EAASr3C,KAAKy3E,kBAAkBH,GACtC,OAAOt3E,KAAK44E,iBAAiBzxC,EAAKkQ,GAGpC,iBAAiBlQ,EAAKkQ,GACpB,MAAM1mB,EAAI3wB,KAAK4mC,MAAMe,YAAYR,GAC3B5/B,EAAIvH,KAAK4mC,MAAMmsC,cAAc17B,GAC7B3O,EAAI/X,EAAE+W,SAASngC,EAAGy+B,GAExB,GAAI0C,EAAEkB,aACJ,MAAM,IAAI3pC,MAAM,kBAElB,OAAOyoC,EAAE9tB,a,qDCxwBb5d,EAAQq2C,OAAS,W,8BCFjB;;;;;;;AASA,MAAMtN,EAAU,EAAQ,IAClBllC,EAAW,EAAQ,IACnBk+B,EAAgB,EAAQ,IAMxBniB,EAAQtd,EAAOkH,MAAM,GAy2B3BvJ,EAAOD,QAn2BP,MAUE,YAAY2E,EAAMy1D,GAAW,GAC3BrxB,EAAQzmC,EAAO8B,SAASO,GAAO,OAAQ,UACvCokC,EAA4B,kBAAbqxB,EAAwB,WAAY,WAEnDp3D,KAAK2B,KAAOA,EACZ3B,KAAKkE,OAAS,EACdlE,KAAKo3D,SAAWA,EAChBp3D,KAAKyvE,MAAQ,GAQf,MAAM3tE,GACJ,GAAI9B,KAAKkE,OAASpC,EAAO9B,KAAK2B,KAAKjC,OACjC,MAAM,IAAIq/B,EAAc/+B,KAAKkE,OAAQ,qBAAsBlE,KAAKytD,OAQpE,UACE,OAAOztD,KAAK2B,KAAKjC,OAQnB,OAEE,OADAM,KAAKytD,MAAM,GACJztD,KAAK2B,KAAKjC,OAASM,KAAKkE,OAQjC,KAAKoe,GAGH,GAFAyjB,EAAQ5hC,OAAO42B,cAAczY,GAAM,MAAO,WAEtCtiB,KAAKkE,OAASoe,EAAM,EACtB,MAAM,IAAIyc,EAAc/+B,KAAKkE,OAAQ,sBAKvC,OAHAlE,KAAKytD,MAAMnrC,GACXtiB,KAAKkE,QAAUoe,EAERtiB,KAOT,QAEE,OADAA,KAAKyvE,MAAM3qE,KAAK9E,KAAKkE,QACdlE,KAAKkE,OAUd,MACE,GAA0B,IAAtBlE,KAAKyvE,MAAM/vE,OACb,MAAM,IAAIO,MAAM,oCAElB,MAAMqC,EAAQtC,KAAKyvE,MAAMoJ,MAEzB,OAAO74E,KAAKkE,OAAS5B,EAavB,QAAQ80D,GAAW,GAGjB,GAFArxB,EAA4B,kBAAbqxB,EAAwB,WAAY,WAEzB,IAAtBp3D,KAAKyvE,MAAM/vE,OACb,MAAM,IAAIO,MAAM,oCAElB,MAAMqC,EAAQtC,KAAKyvE,MAAMoJ,MACnBt2E,EAAMvC,KAAKkE,OACXpC,EAAOS,EAAMD,EACbX,EAAO3B,KAAK2B,KAElB,GAAIG,IAASH,EAAKjC,OAChB,OAAOiC,EAET,GAAI3B,KAAKo3D,UAAYA,EACnB,OAAOz1D,EAAKV,MAAMqB,EAAOC,GAE3B,MAAMyG,EAAM1J,EAAO8H,gBAAgBtF,GAInC,OAFAH,EAAKJ,KAAKyH,EAAK,EAAG1G,EAAOC,GAElByG,EAOT,UAIE,OAHAhJ,KAAK2B,KAAOib,EACZ5c,KAAKkE,OAAS,EACdlE,KAAKyvE,MAAM/vE,OAAS,EACbM,KAQT,SACEA,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMhJ,KAAK2B,KAAK3B,KAAKkE,QAI3B,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,UACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASitD,QAAQ9tD,KAAK2B,KAAM3B,KAAKkE,QAI7C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,YACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASwtD,UAAUruD,KAAK2B,KAAM3B,KAAKkE,QAI/C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,UACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAAS8sD,QAAQ3tD,KAAK2B,KAAM3B,KAAKkE,QAI7C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,YACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASqtD,UAAUluD,KAAK2B,KAAM3B,KAAKkE,QAI/C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,UACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAAS2sD,QAAQxtD,KAAK2B,KAAM3B,KAAKkE,QAI7C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,YACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASmtD,UAAUhuD,KAAK2B,KAAM3B,KAAKkE,QAI/C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,UACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASgtD,QAAQ7tD,KAAK2B,KAAM3B,KAAKkE,QAI7C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,YACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASutD,UAAUpuD,KAAK2B,KAAM3B,KAAKkE,QAI/C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,UACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAAS+sD,QAAQ5tD,KAAK2B,KAAM3B,KAAKkE,QAI7C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,YACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASstD,UAAUnuD,KAAK2B,KAAM3B,KAAKkE,QAI/C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,UACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAAS6sD,QAAQ1tD,KAAK2B,KAAM3B,KAAKkE,QAI7C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,YACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASotD,UAAUjuD,KAAK2B,KAAM3B,KAAKkE,QAI/C,OAFAlE,KAAKkE,QAAU,EAER8E,EAST,UACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAAS0sD,QAAQvtD,KAAK2B,KAAM3B,KAAKkE,QAI7C,OAFAlE,KAAKkE,QAAU,EAER8E,EAST,YACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASktD,UAAU/tD,KAAK2B,KAAM3B,KAAKkE,QAI/C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,SACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASiuD,OAAO9uD,KAAK2B,KAAM3B,KAAKkE,QAI5C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,UACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASguD,QAAQ7uD,KAAK2B,KAAM3B,KAAKkE,QAI7C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,YACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASwuD,UAAUrvD,KAAK2B,KAAM3B,KAAKkE,QAI/C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,UACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAAS6tD,QAAQ1uD,KAAK2B,KAAM3B,KAAKkE,QAI7C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,YACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASquD,UAAUlvD,KAAK2B,KAAM3B,KAAKkE,QAI/C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,UACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAAS0tD,QAAQvuD,KAAK2B,KAAM3B,KAAKkE,QAI7C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,YACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASmuD,UAAUhvD,KAAK2B,KAAM3B,KAAKkE,QAI/C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,UACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAAS+tD,QAAQ5uD,KAAK2B,KAAM3B,KAAKkE,QAI7C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,YACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASuuD,UAAUpvD,KAAK2B,KAAM3B,KAAKkE,QAI/C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,UACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAAS8tD,QAAQ3uD,KAAK2B,KAAM3B,KAAKkE,QAI7C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,YACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASsuD,UAAUnvD,KAAK2B,KAAM3B,KAAKkE,QAI/C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,UACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAAS4tD,QAAQzuD,KAAK2B,KAAM3B,KAAKkE,QAI7C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,YACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASouD,UAAUjvD,KAAK2B,KAAM3B,KAAKkE,QAI/C,OAFAlE,KAAKkE,QAAU,EAER8E,EAST,UACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASytD,QAAQtuD,KAAK2B,KAAM3B,KAAKkE,QAI7C,OAFAlE,KAAKkE,QAAU,EAER8E,EAST,YACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASkuD,UAAU/uD,KAAK2B,KAAM3B,KAAKkE,QAI/C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,YACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAAS6uD,UAAU1vD,KAAK2B,KAAM3B,KAAKkE,QAI/C,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,cACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASmK,YAAYhL,KAAK2B,KAAM3B,KAAKkE,QAIjD,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,aACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAAS8uD,WAAW3vD,KAAK2B,KAAM3B,KAAKkE,QAIhD,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,eACEhJ,KAAKytD,MAAM,GAEX,MAAMzkD,EAAMnI,EAASqK,aAAalL,KAAK2B,KAAM3B,KAAKkE,QAIlD,OAFAlE,KAAKkE,QAAU,EAER8E,EAQT,aACE,MAAM,KAAClH,EAAI,MAAE3D,GAAS0C,EAAS2xD,WAAWxyD,KAAK2B,KAAM3B,KAAKkE,QAI1D,OAFAlE,KAAKkE,QAAUpC,EAER3D,EAQT,cACE,MAAM,KAAC2D,EAAI,MAAE3D,GAAS0C,EAAS6xD,YAAY1yD,KAAK2B,KAAM3B,KAAKkE,QAI3D,OAFAlE,KAAKkE,QAAUpC,EAER3D,EAYT,UAAU2D,EAAMs1D,GAAW,GAMzB,IAAIpuD,EAWJ,OAhBA+8B,EAASjkC,IAAS,IAAOA,EAAM,OAAQ,WACvCikC,EAA4B,kBAAbqxB,EAAwB,WAAY,WAEnDp3D,KAAKytD,MAAM3rD,GAIP9B,KAAKo3D,UAAYA,EACnBpuD,EAAMhJ,KAAK2B,KAAKV,MAAMjB,KAAKkE,OAAQlE,KAAKkE,OAASpC,IAEjDkH,EAAM1J,EAAO8H,gBAAgBtF,GAC7B9B,KAAK2B,KAAKJ,KAAKyH,EAAK,EAAGhJ,KAAKkE,OAAQlE,KAAKkE,OAASpC,IAGpD9B,KAAKkE,QAAUpC,EAERkH,EAWT,aAAaouD,GAAW,GACtB,OAAOp3D,KAAKu5B,UAAUv5B,KAAKwyD,aAAc4E,GAS3C,UAAUt1D,GACRikC,EAASjkC,IAAS,IAAOA,EAAM,OAAQ,WAEvC9B,KAAKytD,MAAM3rD,GAEX,MAAMH,EAAO3B,KAAK2B,KAAKV,MAAM,EAAGjB,KAAKkE,OAASpC,GACxCs2B,EAAK,IAAIp4B,KAAKohB,YAAYzf,GAMhC,OAJAy2B,EAAGl0B,OAASlE,KAAKkE,OAEjBlE,KAAKkE,QAAUpC,EAERs2B,EAUT,WAAWt2B,EAAMqO,GACJ,MAAPA,IACFA,EAAM,UAER41B,EAASjkC,IAAS,IAAOA,EAAM,OAAQ,WACvCikC,EAAuB,iBAAR51B,EAAkB,MAAO,UAExCnQ,KAAKytD,MAAM3rD,GAEX,MAAMkH,EAAMhJ,KAAK2B,KAAKI,SAASoO,EAAKnQ,KAAKkE,OAAQlE,KAAKkE,OAASpC,GAI/D,OAFA9B,KAAKkE,QAAUpC,EAERkH,EAST,SAASmH,GACP,OAAIA,EACKnQ,KAAKk6B,WAAW,GAAI/pB,GACtBnQ,KAAKu5B,UAAU,IAUxB,cAAcppB,EAAKvE,EAAQ,GACd,MAAPuE,IACFA,EAAM,UAER41B,EAAuB,iBAAR51B,EAAkB,MAAO,UACxC41B,EAASn6B,IAAU,IAAOA,EAAO,QAAS,WAE1C,MAAM9J,EAAO9B,KAAKwyD,aAElB,GAAc,IAAV5mD,GAAe9J,EAAO8J,EACxB,MAAM,IAAImzB,EAAc/+B,KAAKkE,OAAQ,wBAEvC,OAAOlE,KAAKk6B,WAAWp4B,EAAMqO,GAS/B,eAAeA,GACF,MAAPA,IACFA,EAAM,UAER41B,EAAuB,iBAAR51B,EAAkB,MAAO,UAExC,IAAIjT,EAAI8C,KAAKkE,OAEb,KAAOhH,EAAI8C,KAAK2B,KAAKjC,QACE,IAAjBM,KAAK2B,KAAKzE,GADaA,KAK7B,GAAIA,IAAM8C,KAAK2B,KAAKjC,OAClB,MAAM,IAAIq/B,EAAc/+B,KAAKkE,OAAQ,qBAEvC,MAAM8E,EAAMhJ,KAAKk6B,WAAWh9B,EAAI8C,KAAKkE,OAAQiM,GAI7C,OAFAnQ,KAAKkE,OAAShH,EAAI,EAEX8L,EAST,eAAemK,GACRA,GAA+B,mBAAhBA,EAAKk5B,QACvBtG,EAAwB,mBAAT5yB,EAAqB,OAAQ,YAE9C,IAAI7Q,EAAQ,EAERtC,KAAKyvE,MAAM/vE,OAAS,IACtB4C,EAAQtC,KAAKyvE,MAAMzvE,KAAKyvE,MAAM/vE,OAAS,IAEzC,MAAMiC,EAAO3B,KAAK2B,KAAKV,MAAMqB,EAAOtC,KAAKkE,QACnCo1B,EAAMnmB,EAAKk5B,OAASl5B,EAAKk5B,OAAO1qC,GAAQwR,EAAKxR,GAEnD,OAAOd,EAAS2sD,QAAQl0B,EAAK,GAU/B,eAAenmB,GACb,MAAM2lE,EAAW94E,KAAK+4E,eAAe5lE,GAGrC,GAAI2lE,IAFW94E,KAAKwtD,UAGlB,MAAM,IAAIzuB,EAAc/+B,KAAKkE,OAAQ,qBAEvC,OAAO40E,M,sDCl3BX;;;;;;;AASA,MAAM/yC,EAAU,EAAQ,IAClBllC,EAAW,EAAQ,IACnBk+B,EAAgB,EAAQ,IAyzB9B,MAAMi6C,EACJ,YAAYt3E,GACV1B,KAAK0B,KAAOA,GAIhB,MAAMu3E,UAAiBD,EACrB,YAAYt3E,EAAMvD,GAChB45B,MAAMr2B,GACN1B,KAAK7B,MAAQA,GAIjB,MAAM+6E,UAAiBF,EACrB,YAAYt3E,EAAMC,GAChBo2B,MAAMr2B,GACN1B,KAAK2B,KAAOA,GAIhB,MAAMw3E,UAAiBH,EACrB,YAAYt3E,EAAMvD,EAAOgS,GACvB4nB,MAAMr2B,GACN1B,KAAK7B,MAAQA,EACb6B,KAAKmQ,IAAMA,GAIf,MAAMipE,UAAmBJ,EACvB,YAAYt3E,EAAM+mD,GAChB1wB,MAAMr2B,GACN1B,KAAKyoD,KAAOA,GAIhB,MAAM4wB,UAAeL,EACnB,YAAYt3E,EAAMvD,EAAO2D,GACvBi2B,MAAMr2B,GACN1B,KAAK7B,MAAQA,EACb6B,KAAK8B,KAAOA,GAQhB7E,EAAOD,QApzBP,MAME,cACEgD,KAAKs5E,IAAM,GACXt5E,KAAKkE,OAAS,EAQhB,SACE,MAAMvC,EAAOrC,EAAO8H,gBAAgBpH,KAAKkE,QAEzC,IAAIoe,EAAM,EAEV,IAAK,MAAMi3D,KAAMv5E,KAAKs5E,IACpB,OAAQC,EAAG73E,MACT,KArEK,EAsEH4gB,GAAOi3D,EAAGp7E,MACV,MACF,KAvEG,EAwEDmkB,EAAMzhB,EAAS05B,QAAQ54B,EAAM43E,EAAGp7E,MAAOmkB,GACvC,MACF,KAzEI,EA0EFA,EAAMzhB,EAASsvD,SAASxuD,EAAM43E,EAAGp7E,MAAOmkB,GACxC,MACF,KA3EM,EA4EJA,EAAMzhB,EAAS49B,WAAW98B,EAAM43E,EAAGp7E,MAAOmkB,GAC1C,MACF,KA7EI,EA8EFA,EAAMzhB,EAASqvD,SAASvuD,EAAM43E,EAAGp7E,MAAOmkB,GACxC,MACF,KA/EM,EAgFJA,EAAMzhB,EAAS69B,WAAW/8B,EAAM43E,EAAGp7E,MAAOmkB,GAC1C,MACF,KAjFI,EAkFFA,EAAMzhB,EAAS0qD,SAAS5pD,EAAM43E,EAAGp7E,MAAOmkB,GACxC,MACF,KAnFM,EAoFJA,EAAMzhB,EAAS0vD,WAAW5uD,EAAM43E,EAAGp7E,MAAOmkB,GAC1C,MACF,KArFI,EAsFFA,EAAMzhB,EAASovD,SAAStuD,EAAM43E,EAAGp7E,MAAOmkB,GACxC,MACF,KAvFM,EAwFJA,EAAMzhB,EAASyvD,WAAW3uD,EAAM43E,EAAGp7E,MAAOmkB,GAC1C,MACF,KAzFI,GA0FFA,EAAMzhB,EAASmvD,SAASruD,EAAM43E,EAAGp7E,MAAOmkB,GACxC,MACF,KA3FM,GA4FJA,EAAMzhB,EAASwvD,WAAW1uD,EAAM43E,EAAGp7E,MAAOmkB,GAC1C,MACF,KA7FI,GA8FFA,EAAMzhB,EAASivD,SAASnuD,EAAM43E,EAAGp7E,MAAOmkB,GACxC,MACF,KA/FM,GAgGJA,EAAMzhB,EAASuvD,WAAWzuD,EAAM43E,EAAGp7E,MAAOmkB,GAC1C,MACF,KAjGI,GAkGFA,EAAMzhB,EAAS+uD,SAASjuD,EAAM43E,EAAGp7E,MAAOmkB,GACxC,MACF,KAnGM,GAoGJA,EAAMzhB,EAASm6B,WAAWr5B,EAAM43E,EAAGp7E,MAAOmkB,GAC1C,MACF,KArGG,GAsGDA,EAAMzhB,EAASoxD,QAAQtwD,EAAM43E,EAAGp7E,MAAOmkB,GACvC,MACF,KAvGI,GAwGFA,EAAMzhB,EAASmxD,SAASrwD,EAAM43E,EAAGp7E,MAAOmkB,GACxC,MACF,KAzGM,GA0GJA,EAAMzhB,EAAS0xD,WAAW5wD,EAAM43E,EAAGp7E,MAAOmkB,GAC1C,MACF,KA3GI,GA4GFA,EAAMzhB,EAAS4vD,SAAS9uD,EAAM43E,EAAGp7E,MAAOmkB,GACxC,MACF,KA7GM,GA8GJA,EAAMzhB,EAAS8vD,WAAWhvD,EAAM43E,EAAGp7E,MAAOmkB,GAC1C,MACF,KA/GI,GAgHFA,EAAMzhB,EAAS2vD,SAAS7uD,EAAM43E,EAAGp7E,MAAOmkB,GACxC,MACF,KAjHM,GAkHJA,EAAMzhB,EAAS6vD,WAAW/uD,EAAM43E,EAAGp7E,MAAOmkB,GAC1C,MACF,KAnHI,GAoHFA,EAAMzhB,EAASkxD,SAASpwD,EAAM43E,EAAGp7E,MAAOmkB,GACxC,MACF,KArHM,GAsHJA,EAAMzhB,EAASyxD,WAAW3wD,EAAM43E,EAAGp7E,MAAOmkB,GAC1C,MACF,KAvHI,GAwHFA,EAAMzhB,EAASixD,SAASnwD,EAAM43E,EAAGp7E,MAAOmkB,GACxC,MACF,KAzHM,GA0HJA,EAAMzhB,EAASwxD,WAAW1wD,EAAM43E,EAAGp7E,MAAOmkB,GAC1C,MACF,KA3HI,GA4HFA,EAAMzhB,EAASgxD,SAASlwD,EAAM43E,EAAGp7E,MAAOmkB,GACxC,MACF,KA7HM,GA8HJA,EAAMzhB,EAASuxD,WAAWzwD,EAAM43E,EAAGp7E,MAAOmkB,GAC1C,MACF,KA/HI,GAgIFA,EAAMzhB,EAAS+wD,SAASjwD,EAAM43E,EAAGp7E,MAAOmkB,GACxC,MACF,KAjIM,GAkIJA,EAAMzhB,EAASsxD,WAAWxwD,EAAM43E,EAAGp7E,MAAOmkB,GAC1C,MACF,KAnIG,GAoIDA,EAAMzhB,EAAS8I,WAAWhI,EAAM43E,EAAGp7E,MAAOmkB,GAC1C,MACF,KArIK,GAsIHA,EAAMzhB,EAASwL,aAAa1K,EAAM43E,EAAGp7E,MAAOmkB,GAC5C,MACF,KAvII,GAwIFA,EAAMzhB,EAASgJ,YAAYlI,EAAM43E,EAAGp7E,MAAOmkB,GAC3C,MACF,KAzIM,GA0IJA,EAAMzhB,EAAS0L,cAAc5K,EAAM43E,EAAGp7E,MAAOmkB,GAC7C,MACF,KA3IO,GA4ILA,EAAMzhB,EAAS4xD,YAAY9wD,EAAM43E,EAAGp7E,MAAOmkB,GAC3C,MACF,KA7IQ,GA8INA,EAAMzhB,EAAS8xD,aAAahxD,EAAM43E,EAAGp7E,MAAOmkB,GAC5C,MACF,KA/IM,GAgJJA,GAAOi3D,EAAG53E,KAAKJ,KAAKI,EAAM2gB,GAC1B,MACF,KAjJI,GAkJFA,GAAO3gB,EAAKX,MAAMu4E,EAAGp7E,MAAOmkB,EAAKi3D,EAAGppE,KACpC,MACF,KAnJS,GAoJPmS,GAAOi3D,EAAG9wB,KAAK9mD,EAAKV,MAAM,EAAGqhB,IAAM/gB,KAAKI,EAAM2gB,EAAK,EAAG,GACtD,MACF,KArJK,GAsJH3gB,EAAKwF,KAAKoyE,EAAGp7E,MAAOmkB,EAAKA,EAAMi3D,EAAGz3E,MAClCwgB,GAAOi3D,EAAGz3E,KACV,MACF,QACE,MAAM,IAAI7B,MAAM,iBAItB,GAAIqiB,IAAQ3gB,EAAKjC,OACf,MAAM,IAAIq/B,EAAczc,EAAK,uBAI/B,OAFAtiB,KAAKu1D,UAEE5zD,EAQT,UACE,OAAO3B,KAAKkE,OAQd,KAAKoe,GAGH,GAFAyjB,EAAQ5hC,OAAO42B,cAAczY,GAAM,MAAO,WAEtCtiB,KAAKkE,OAASoe,EAAM,EACtB,MAAM,IAAIyc,EAAc/+B,KAAKkE,OAAQ,uBAKvC,OAHAlE,KAAKkE,QAAUoe,EACftiB,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAnOT,EAmOwB32D,IAE1BtiB,KAOT,UAGE,OAFAA,KAAKs5E,IAAI55E,OAAS,EAClBM,KAAKkE,OAAS,EACPlE,KAQT,QAAQ7B,GAGN,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAxPX,EAwPwB96E,IACxB6B,KAQT,SAAS7B,GAGP,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAlQV,EAkQwB96E,IACzB6B,KAQT,WAAW7B,GAGT,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EA5QR,EA4QwB96E,IAC3B6B,KAQT,SAAS7B,GAGP,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAtRV,EAsRwB96E,IACzB6B,KAQT,WAAW7B,GAGT,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAhSR,EAgSwB96E,IAC3B6B,KAQT,SAAS7B,GAGP,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EA1SV,EA0SwB96E,IACzB6B,KAQT,WAAW7B,GAGT,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EApTR,EAoTwB96E,IAC3B6B,KAQT,SAAS7B,GAGP,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EA9TV,EA8TwB96E,IACzB6B,KAQT,WAAW7B,GAGT,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAxUR,EAwUwB96E,IAC3B6B,KAQT,SAAS7B,GAGP,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAlVV,GAkVwB96E,IACzB6B,KAQT,WAAW7B,GAGT,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EA5VR,GA4VwB96E,IAC3B6B,KAQT,SAAS7B,GAGP,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAtWV,GAsWwB96E,IACzB6B,KAQT,WAAW7B,GAGT,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAhXR,GAgXwB96E,IAC3B6B,KAQT,SAAS7B,GAGP,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EA1XV,GA0XwB96E,IACzB6B,KAQT,WAAW7B,GAGT,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EApYR,GAoYwB96E,IAC3B6B,KAQT,QAAQ7B,GAGN,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EA9YX,GA8YwB96E,IACxB6B,KAQT,SAAS7B,GAGP,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAxZV,GAwZwB96E,IACzB6B,KAQT,WAAW7B,GAGT,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAlaR,GAkawB96E,IAC3B6B,KAQT,SAAS7B,GAGP,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EA5aV,GA4awB96E,IACzB6B,KAQT,WAAW7B,GAGT,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAtbR,GAsbwB96E,IAC3B6B,KAQT,SAAS7B,GAGP,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAhcV,GAgcwB96E,IACzB6B,KAQT,WAAW7B,GAGT,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EA1cR,GA0cwB96E,IAC3B6B,KAQT,SAAS7B,GAGP,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EApdV,GAodwB96E,IACzB6B,KAQT,WAAW7B,GAGT,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EA9dR,GA8dwB96E,IAC3B6B,KAQT,SAAS7B,GAGP,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAxeV,GAwewB96E,IACzB6B,KAQT,WAAW7B,GAGT,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAlfR,GAkfwB96E,IAC3B6B,KAQT,SAAS7B,GAGP,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EA5fV,GA4fwB96E,IACzB6B,KAQT,WAAW7B,GAGT,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAtgBR,GAsgBwB96E,IAC3B6B,KAQT,SAAS7B,GAGP,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAhhBV,GAghBwB96E,IACzB6B,KAQT,WAAW7B,GAGT,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EA1hBR,GA0hBwB96E,IAC3B6B,KAQT,WAAW7B,GAGT,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EApiBX,GAoiBwB96E,IACxB6B,KAQT,aAAa7B,GAGX,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EA9iBT,GA8iBwB96E,IAC1B6B,KAQT,YAAY7B,GAGV,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAxjBV,GAwjBwB96E,IACzB6B,KAQT,cAAc7B,GAGZ,OAFA6B,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAlkBR,GAkkBwB96E,IAC3B6B,KAQT,YAAY7B,GAGV,OAFA6B,KAAKkE,QAAUrD,EAASowD,WAAW9yD,GACnC6B,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EA5kBP,GA4kBwB96E,IAC5B6B,KAQT,aAAa7B,GAGX,OAFA6B,KAAKkE,QAAUrD,EAAS+xD,YAAYz0D,GACpC6B,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EAtlBN,GAslBwB96E,IAC7B6B,KAQT,WAAW7B,GAGT,OAFA4nC,EAAQzmC,EAAO8B,SAASjD,GAAQ,QAAS,UAEpB,IAAjBA,EAAMuB,SAGVM,KAAKkE,QAAU/F,EAAMuB,OACrBM,KAAKs5E,IAAIx0E,KAAK,IAAIo0E,EArmBR,GAqmBwB/6E,KAHzB6B,KAaX,cAAc7B,GAMZ,OALA4nC,EAAQzmC,EAAO8B,SAASjD,GAAQ,QAAS,UAEzC6B,KAAKkE,QAAUrD,EAASowD,WAAW9yD,EAAMuB,QACzCM,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EArnBP,GAqnBwB96E,EAAMuB,SAEpB,IAAjBvB,EAAMuB,SAGVM,KAAKkE,QAAU/F,EAAMuB,OACrBM,KAAKs5E,IAAIx0E,KAAK,IAAIo0E,EAznBR,GAynBwB/6E,KAHzB6B,KAeX,KAAK7B,EAAOmE,EAAOC,GACjBwjC,EAAQzmC,EAAO8B,SAASjD,GAAQ,QAAS,UACzC4nC,EAASzjC,IAAU,IAAOA,EAAO,QAAS,WAC1CyjC,EAASxjC,IAAQ,IAAOA,EAAK,MAAO,WACpCwjC,EAAQxjC,GAAOD,EAAO,QAAS,WAE/B,MAAMsB,EAAMzF,EAAM8C,MAAMqB,EAAOC,GAI/B,OAFAvC,KAAK26B,WAAW/2B,GAET5D,KAST,YAAY7B,EAAOgS,GAOjB,OANW,MAAPA,IACFA,EAAM,UAER41B,EAAyB,iBAAV5nC,EAAoB,QAAS,UAC5C4nC,EAAuB,iBAAR51B,EAAkB,MAAO,UAEnB,IAAjBhS,EAAMuB,SAGVM,KAAKkE,QAAU5E,EAAOkB,WAAWrC,EAAOgS,GACxCnQ,KAAKs5E,IAAIx0E,KAAK,IAAIq0E,EAlqBV,GAkqBwBh7E,EAAOgS,KAH9BnQ,KAaX,UAAU7B,GACR,MAAqB,iBAAVA,GACT4nC,EAAQzmC,EAAO8B,SAASjD,GAAQ,QAAS,UACzC4nC,EAAyB,KAAjB5nC,EAAMuB,OAAe,QAAS,gBACtCM,KAAK26B,WAAWx8B,GACT6B,OAGT+lC,EAAyB,KAAjB5nC,EAAMuB,OAAe,QAAS,gBAEtCM,KAAKi6B,YAAY97B,EAAO,OAEjB6B,MAST,eAAe7B,EAAOgS,GAOpB,GANW,MAAPA,IACFA,EAAM,UAER41B,EAAyB,iBAAV5nC,EAAoB,QAAS,UAC5C4nC,EAAuB,iBAAR51B,EAAkB,MAAO,UAEnB,IAAjBhS,EAAMuB,OAER,OADAM,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EA5sBT,GA4sB0B,IAC5Bj5E,KAGT,MAAM8B,EAAOxC,EAAOkB,WAAWrC,EAAOgS,GAQtC,OANAnQ,KAAKkE,QAAUrD,EAASowD,WAAWnvD,GACnC9B,KAAKkE,QAAUpC,EAEf9B,KAAKs5E,IAAIx0E,KAAK,IAAIm0E,EArtBP,GAqtBwBn3E,IACnC9B,KAAKs5E,IAAIx0E,KAAK,IAAIq0E,EAntBV,GAmtBwBh7E,EAAOgS,IAEhCnQ,KAST,gBAAgB7B,EAAOgS,GAGrB,OAFAnQ,KAAKi6B,YAAY97B,EAAOgS,GACxBnQ,KAAKu6B,QAAQ,GACNv6B,KAQT,cAAcmT,GASZ,OARIA,GAA+B,mBAAhBA,EAAKk5B,SACtBl5B,EAAOA,EAAKk5B,OAAO3tC,KAAKyU,IAE1B4yB,EAAwB,mBAAT5yB,EAAqB,OAAQ,YAE5CnT,KAAKkE,QAAU,EACflE,KAAKs5E,IAAIx0E,KAAK,IAAIs0E,EA/uBL,GA+uB0BjmE,IAEhCnT,KAST,KAAK7B,EAAO2D,GAIV,OAHAikC,GAAiB,IAAR5nC,KAAkBA,EAAO,QAAS,QAC3C4nC,EAASjkC,IAAS,IAAOA,EAAM,OAAQ,WAE1B,IAATA,IAGJ9B,KAAKkE,QAAUpC,EACf9B,KAAKs5E,IAAIx0E,KAAK,IAAIu0E,EAjwBT,GAiwBsBl7E,EAAO2D,KAH7B9B,S,sDCvzBb;;;;;;AAQA,MAAM+lC,EAAU,EAAQ,IAClBllC,EAAW,EAAQ,IACnBk+B,EAAgB,EAAQ,IAMxBniB,EAAQtd,EAAOkH,MAAM,GAG3B,IAAIgzE,EAAO,KAMX,MAAM3iB,EAOJ,YAAYp+B,GACVz4B,KAAK2B,KAAOib,EACZ5c,KAAKkE,OAAS,EAEC,MAAXu0B,GACFz4B,KAAK4O,KAAK6pB,GAQd,MAAM32B,GACJ,GAAI9B,KAAKkE,OAASpC,EAAO9B,KAAK2B,KAAKjC,OACjC,MAAM,IAAIq/B,EAAc/+B,KAAKkE,OAAQ,sBAAuBlE,KAAKytD,OAQrE,KAAKh1B,GACH,OAAIn5B,EAAO8B,SAASq3B,IAClBz4B,KAAK2B,KAAO82B,EACZz4B,KAAKkE,OAAS,EACPlE,OAGT+lC,EAAStN,IAAY,IAAOA,EAAS,OAAQ,WAE7Cz4B,KAAK2B,KAAOrC,EAAO8H,gBAAgBqxB,GACnCz4B,KAAKkE,OAAS,EAEPlE,MAST,YAAY8B,GAGV,GAFAikC,EAASjkC,IAAS,IAAOA,EAAM,OAAQ,WAEnCA,GA9DU,OA8DS,CAChB03E,IACHA,EAAOl6E,EAAO8H,gBAhEJ,SAkEZ,MAAM+wB,EAAK,IAAI0+B,EAIf,OAFA1+B,EAAGx2B,KAAO63E,EAAKv4E,MAAM,EAAGa,GAEjBq2B,EAGT,OAAO,IAAI0+B,EAAa/0D,GAQ1B,SACE,MAAM,KAACH,EAAI,OAAEuC,GAAUlE,KAEvB,GAAIkE,IAAWvC,EAAKjC,OAClB,MAAM,IAAIq/B,EAAc76B,EAAQ,uBAIlC,OAFAlE,KAAKu1D,UAEE5zD,EAQT,QACE,MAAM,KAACA,EAAI,OAAEuC,GAAUlE,KAEvB,GAAIkE,EAASvC,EAAKjC,OAChB,MAAM,IAAIq/B,EAAc76B,EAAQ,uBAIlC,OAFAlE,KAAKu1D,UAEE5zD,EAAKV,MAAM,EAAGiD,GAQvB,UACE,OAAOlE,KAAKkE,OAQd,KAAKoe,GAGH,GAFAyjB,EAAQ5hC,OAAO42B,cAAczY,GAAM,MAAO,WAEtCtiB,KAAKkE,OAASoe,EAAM,EACtB,MAAM,IAAIyc,EAAc/+B,KAAKkE,OAAQ,uBAKvC,OAHAlE,KAAKytD,MAAMnrC,GACXtiB,KAAKkE,QAAUoe,EAERtiB,KAOT,UAGE,OAFAA,KAAK2B,KAAOib,EACZ5c,KAAKkE,OAAS,EACPlE,KAQT,QAAQ7B,GAGN,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAAS05B,QAAQv6B,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAC/ClE,KAQT,SAAS7B,GAGP,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASsvD,SAASnwD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAChDlE,KAQT,WAAW7B,GAGT,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAAS49B,WAAWz+B,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAClDlE,KAQT,SAAS7B,GAGP,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASqvD,SAASlwD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAChDlE,KAQT,WAAW7B,GAGT,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAAS69B,WAAW1+B,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAClDlE,KAQT,SAAS7B,GAGP,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAAS0qD,SAASvrD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAChDlE,KAQT,WAAW7B,GAGT,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAAS0vD,WAAWvwD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAClDlE,KAQT,SAAS7B,GAGP,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASovD,SAASjwD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAChDlE,KAQT,WAAW7B,GAGT,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASyvD,WAAWtwD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAClDlE,KAQT,SAAS7B,GAGP,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASmvD,SAAShwD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAChDlE,KAQT,WAAW7B,GAGT,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASwvD,WAAWrwD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAClDlE,KAQT,SAAS7B,GAGP,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASivD,SAAS9vD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAChDlE,KAQT,WAAW7B,GAGT,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASuvD,WAAWpwD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAClDlE,KAQT,SAAS7B,GAGP,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAAS+uD,SAAS5vD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAChDlE,KAQT,WAAW7B,GAGT,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASm6B,WAAWh7B,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAClDlE,KAQT,QAAQ7B,GAGN,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASoxD,QAAQjyD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAC/ClE,KAQT,SAAS7B,GAGP,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASmxD,SAAShyD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAChDlE,KAQT,WAAW7B,GAGT,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAAS0xD,WAAWvyD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAClDlE,KAQT,SAAS7B,GAGP,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAAS4vD,SAASzwD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAChDlE,KAQT,WAAW7B,GAGT,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAAS8vD,WAAW3wD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAClDlE,KAQT,SAAS7B,GAGP,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAAS2vD,SAASxwD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAChDlE,KAQT,WAAW7B,GAGT,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAAS6vD,WAAW1wD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAClDlE,KAQT,SAAS7B,GAGP,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASkxD,SAAS/xD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAChDlE,KAQT,WAAW7B,GAGT,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASyxD,WAAWtyD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAClDlE,KAQT,SAAS7B,GAGP,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASixD,SAAS9xD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAChDlE,KAQT,WAAW7B,GAGT,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASwxD,WAAWryD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAClDlE,KAQT,SAAS7B,GAGP,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASgxD,SAAS7xD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAChDlE,KAQT,WAAW7B,GAGT,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASuxD,WAAWpyD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAClDlE,KAQT,SAAS7B,GAGP,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAAS+wD,SAAS5xD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAChDlE,KAQT,WAAW7B,GAGT,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASsxD,WAAWnyD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAClDlE,KAQT,WAAW7B,GAGT,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAAS8I,WAAW3J,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QAClDlE,KAQT,aAAa7B,GAGX,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASwL,aAAarM,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QACpDlE,KAQT,YAAY7B,GAGV,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAASgJ,YAAY7J,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QACnDlE,KAQT,cAAc7B,GAGZ,OAFA6B,KAAKytD,MAAM,GACXztD,KAAKkE,OAASrD,EAAS0L,cAAcvM,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QACrDlE,KAQT,YAAY7B,GAEV,OADA6B,KAAKkE,OAASrD,EAAS4xD,YAAYzyD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QACnDlE,KAQT,aAAa7B,GAEX,OADA6B,KAAKkE,OAASrD,EAAS8xD,aAAa3yD,KAAK2B,KAAMxD,EAAO6B,KAAKkE,QACpDlE,KAQT,WAAW7B,GAMT,OALA4nC,EAAQzmC,EAAO8B,SAASjD,GAAQ,QAAS,UAEzC6B,KAAKytD,MAAMtvD,EAAMuB,QACjBM,KAAKkE,QAAU/F,EAAMoD,KAAKvB,KAAK2B,KAAM3B,KAAKkE,QAEnClE,KAQT,cAAc7B,GAMZ,OALA4nC,EAAQzmC,EAAO8B,SAASjD,GAAQ,QAAS,UAEzC6B,KAAKyyD,YAAYt0D,EAAMuB,QACvBM,KAAK26B,WAAWx8B,GAET6B,KAUT,KAAK7B,EAAOmE,EAAOC,GASjB,OARAwjC,EAAQzmC,EAAO8B,SAASjD,GAAQ,QAAS,UACzC4nC,EAASzjC,IAAU,IAAOA,EAAO,QAAS,WAC1CyjC,EAASxjC,IAAQ,IAAOA,EAAK,MAAO,WACpCwjC,EAAQxjC,GAAOD,EAAO,QAAS,WAE/BtC,KAAKytD,MAAMlrD,EAAMD,GACjBtC,KAAKkE,QAAU/F,EAAMoD,KAAKvB,KAAK2B,KAAM3B,KAAKkE,OAAQ5B,EAAOC,GAElDvC,KAST,YAAY7B,EAAOgS,GAOjB,GANW,MAAPA,IACFA,EAAM,UAER41B,EAAyB,iBAAV5nC,EAAoB,QAAS,UAC5C4nC,EAAuB,iBAAR51B,EAAkB,MAAO,UAEnB,IAAjBhS,EAAMuB,OACR,OAAOM,KAET,MAAM8B,EAAOxC,EAAOkB,WAAWrC,EAAOgS,GAMtC,OAJAnQ,KAAKytD,MAAM3rD,GAEX9B,KAAKkE,QAAUlE,KAAK2B,KAAKX,MAAM7C,EAAO6B,KAAKkE,OAAQiM,GAE5CnQ,KAQT,UAAU7B,GACR,MAAqB,iBAAVA,GACT4nC,EAAQzmC,EAAO8B,SAASjD,GAAQ,QAAS,UACzC4nC,EAAyB,KAAjB5nC,EAAMuB,OAAe,QAAS,gBACtCM,KAAK26B,WAAWx8B,GACT6B,OAGT+lC,EAAyB,KAAjB5nC,EAAMuB,OAAe,QAAS,gBAEtCM,KAAKytD,MAAM,IACXztD,KAAKkE,QAAUlE,KAAK2B,KAAKX,MAAM7C,EAAO6B,KAAKkE,OAAQ,OAE5ClE,MAST,eAAe7B,EAAOgS,GAOpB,GANW,MAAPA,IACFA,EAAM,UAER41B,EAAyB,iBAAV5nC,EAAoB,QAAS,UAC5C4nC,EAAuB,iBAAR51B,EAAkB,MAAO,UAEnB,IAAjBhS,EAAMuB,OAER,OADAM,KAAKyyD,YAAY,GACVzyD,KAGT,MAAM8B,EAAOxC,EAAOkB,WAAWrC,EAAOgS,GAMtC,OAJAnQ,KAAKyyD,YAAY3wD,GACjB9B,KAAKytD,MAAM3rD,GACX9B,KAAKkE,QAAUlE,KAAK2B,KAAKX,MAAM7C,EAAO6B,KAAKkE,OAAQiM,GAE5CnQ,KAST,gBAAgB7B,EAAOgS,GAGrB,OAFAnQ,KAAKi6B,YAAY97B,EAAOgS,GACxBnQ,KAAKu6B,QAAQ,GACNv6B,KAQT,cAAcmT,GACPA,GAA+B,mBAAhBA,EAAKk5B,QACvBtG,EAAwB,mBAAT5yB,EAAqB,OAAQ,YAE9CnT,KAAKytD,MAAM,GAEX,MAAM9rD,EAAO3B,KAAK2B,KAAKV,MAAM,EAAGjB,KAAKkE,QAOrC,OANYiP,EAAKk5B,OAASl5B,EAAKk5B,OAAO1qC,GAAQwR,EAAKxR,IAE/CJ,KAAKvB,KAAK2B,KAAM3B,KAAKkE,OAAQ,EAAG,GAEpClE,KAAKkE,QAAU,EAERlE,KAST,KAAK7B,EAAO2D,GASV,OARAikC,GAAiB,IAAR5nC,KAAkBA,EAAO,QAAS,QAC3C4nC,EAASjkC,IAAS,IAAOA,EAAM,OAAQ,WAEvC9B,KAAKytD,MAAM3rD,GAEX9B,KAAK2B,KAAKwF,KAAKhJ,EAAO6B,KAAKkE,OAAQlE,KAAKkE,OAASpC,GACjD9B,KAAKkE,QAAUpC,EAER9B,MAQX/C,EAAOD,QAAU65D,I;;;;;GCjtBjB,MAAMxpD,EAAS,EAAQ,GA2DvB,SAASosE,EAAU70E,GACjByI,EAAsB,iBAARzI,GAEd,IAAK,IAAI1H,EAAI0H,EAAIlF,OAAS,EAAGxC,GAAK,EAAGA,IAAK,CAGxC,OAFW0H,EAAIG,WAAW7H,IAGxB,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACH,SAGJ,OAAO0H,EAAIwZ,UAAU,EAAGlhB,EAAI,GAG9B,OAAO0H,EAOT3H,EAAOD,QA9EP,UAAgB4H,GACdyI,EAAsB,iBAARzI,GAEd,IAAI1H,EAAI,EACJ8G,EAAI,EACJrF,EAAI,EASR,IAPIiG,EAAIlF,OAAS,GACW,QAAtBkF,EAAIG,WAAW,KACjB7H,GAAK,EACL8G,GAAK,GAIF9G,EAAI0H,EAAIlF,OAAQxC,IAAK,CAC1B,MAAMghB,EAAKtZ,EAAIG,WAAW7H,GAE1B,OAAQghB,GACN,KAAK,GACL,KAAK,GACL,KAAK,IACH,GAAIla,IAAM9G,EAAG,CACX,MAAMshB,EAAOi7D,EAAU70E,EAAIwZ,UAAUpa,EAAG9G,IAEpCshB,EAAK9e,OAAS,SACV,CAACf,EAAG6f,IAGH,KAAPN,GAAehhB,EAAI,EAAI0H,EAAIlF,QACC,KAA1BkF,EAAIG,WAAW7H,EAAI,KACrBA,GAAK,GAGT8G,EAAI9G,EAAI,EACRyB,GAAK,GAOX,GAAIqF,IAAM9G,EAAG,CACX,MAAMshB,EAAOi7D,EAAU70E,EAAIwZ,UAAUpa,EAAG9G,IAEpCshB,EAAK9e,OAAS,SACV,CAACf,EAAG6f,O;;;;;;;;;;;GC/ChB,MAAMynB,EAAO,EAAQ,IACfyzC,EAAM,EAAQ,GAYpB,MAAMC,UAAkB1zC,EAAKlF,SAC3B,YAAY/hC,EAAGilB,EAAG6M,GAChBiH,QACA/3B,KAAKhB,EAAI,IAAIinC,EAAK7E,SAASpiC,GAC3BgB,KAAKikB,EAAI,IAAIgiB,EAAK7E,SAASnd,GAC3BjkB,KAAK8wB,EAAI,IAAImV,EAAK7E,SAAStQ,GAG7B,cACE,IAAIhvB,EAAO,EAIX,OAHAA,GAAQ9B,KAAKhB,EAAE86B,UACfh4B,GAAQ9B,KAAKikB,EAAE6V,UACfh4B,GAAQ9B,KAAK8wB,EAAEgJ,UACRh4B,EAGT,UAAUq2B,GAIR,OAHAn4B,KAAKhB,EAAEgC,MAAMm3B,GACbn4B,KAAKikB,EAAEjjB,MAAMm3B,GACbn4B,KAAK8wB,EAAE9vB,MAAMm3B,GACNA,EAGT,SAASC,GAIP,OAHAp4B,KAAKhB,EAAE2E,KAAKy0B,GACZp4B,KAAKikB,EAAEtgB,KAAKy0B,GACZp4B,KAAK8wB,EAAEntB,KAAKy0B,GACLp4B,KAGT,QACE,OAAOA,KAAKhB,EAAE25B,SACP34B,KAAKikB,EAAE0U,SACP34B,KAAK8wB,EAAE6H,QAGhB,QACE,OAAO+gD,EAAI/6D,MAAM3e,KAAK4a,SAAU,kBAGlC,QAAQhW,GACN,MAAMjD,EAAO+3E,EAAI96D,QAAQha,EAAK,kBAC9B,OAAO5E,KAAKkd,OAAOvb,GAGrB,SACE,MAAO,CACLD,KAAM1B,KAAKohB,YAAY3jB,KACvBuB,EAAGgB,KAAKhB,EACRilB,EAAGjkB,KAAKikB,EACR6M,EAAG9wB,KAAK8wB,IAgBd,MAAM8oD,UAAqB3zC,EAAKlF,SAC9B,YAAYt5B,EAAGzI,EAAGilB,EAAG6M,GACnBiH,QACA/3B,KAAKyH,EAAI,IAAIw+B,EAAK7E,SAAS35B,GAC3BzH,KAAKhB,EAAI,IAAIinC,EAAK7E,SAASpiC,GAC3BgB,KAAKikB,EAAI,IAAIgiB,EAAK7E,SAASnd,GAC3BjkB,KAAK8wB,EAAI,IAAImV,EAAK7E,SAAStQ,GAG7B,cACE,IAAIhvB,EAAO,EAKX,OAJAA,GAAQ9B,KAAKyH,EAAEqyB,UACfh4B,GAAQ9B,KAAKhB,EAAE86B,UACfh4B,GAAQ9B,KAAKikB,EAAE6V,UACfh4B,GAAQ9B,KAAK8wB,EAAEgJ,UACRh4B,EAGT,UAAUq2B,GAKR,OAJAn4B,KAAKyH,EAAEzG,MAAMm3B,GACbn4B,KAAKhB,EAAEgC,MAAMm3B,GACbn4B,KAAKikB,EAAEjjB,MAAMm3B,GACbn4B,KAAK8wB,EAAE9vB,MAAMm3B,GACNA,EAGT,SAASC,GAKP,OAJAp4B,KAAKyH,EAAE9D,KAAKy0B,GACZp4B,KAAKhB,EAAE2E,KAAKy0B,GACZp4B,KAAKikB,EAAEtgB,KAAKy0B,GACZp4B,KAAK8wB,EAAEntB,KAAKy0B,GACLp4B,KAGT,QACE,OAAOA,KAAKyH,EAAEkxB,SACP34B,KAAKhB,EAAE25B,SACP34B,KAAKikB,EAAE0U,SACP34B,KAAK8wB,EAAE6H,QAGhB,QACE,OAAO+gD,EAAI/6D,MAAM3e,KAAK4a,SAAU,kBAGlC,QAAQhW,GACN,MAAMjD,EAAO+3E,EAAI96D,QAAQha,EAAK,kBAC9B,OAAO5E,KAAKkd,OAAOvb,GAGrB,SACE,MAAO,CACLD,KAAM1B,KAAKohB,YAAY3jB,KACvBgK,EAAGzH,KAAKyH,EACRzI,EAAGgB,KAAKhB,EACRilB,EAAGjkB,KAAKikB,EACR6M,EAAG9wB,KAAK8wB,IAkBd,MAAM+oD,UAAsB5zC,EAAKlF,SAC/B,YAAYxjB,EAASve,EAAGilB,EAAG6M,EAAGrpB,EAAGD,GAC/BuwB,QACA/3B,KAAKud,QAAU,IAAI0oB,EAAK7E,SAAS7jB,GACjCvd,KAAKhB,EAAI,IAAIinC,EAAK7E,SAASpiC,GAC3BgB,KAAKikB,EAAI,IAAIgiB,EAAK7E,SAASnd,GAC3BjkB,KAAK8wB,EAAI,IAAImV,EAAK7E,SAAStQ,GAC3B9wB,KAAKyH,EAAI,IAAIw+B,EAAK7E,SAAS35B,GAC3BzH,KAAKwH,EAAI,IAAIy+B,EAAK7E,SAAS55B,GAG7B,cACE,IAAI1F,EAAO,EAOX,OANAA,GAAQ9B,KAAKud,QAAQuc,UACrBh4B,GAAQ9B,KAAKhB,EAAE86B,UACfh4B,GAAQ9B,KAAKikB,EAAE6V,UACfh4B,GAAQ9B,KAAK8wB,EAAEgJ,UACfh4B,GAAQ9B,KAAKyH,EAAEqyB,UACfh4B,GAAQ9B,KAAKwH,EAAEsyB,UACRh4B,EAGT,UAAUq2B,GAOR,OANAn4B,KAAKud,QAAQvc,MAAMm3B,GACnBn4B,KAAKhB,EAAEgC,MAAMm3B,GACbn4B,KAAKikB,EAAEjjB,MAAMm3B,GACbn4B,KAAK8wB,EAAE9vB,MAAMm3B,GACbn4B,KAAKyH,EAAEzG,MAAMm3B,GACbn4B,KAAKwH,EAAExG,MAAMm3B,GACNA,EAGT,SAASC,GAOP,OANAp4B,KAAKud,QAAQ5Z,KAAKy0B,GAClBp4B,KAAKhB,EAAE2E,KAAKy0B,GACZp4B,KAAKikB,EAAEtgB,KAAKy0B,GACZp4B,KAAK8wB,EAAEntB,KAAKy0B,GACZp4B,KAAKyH,EAAE9D,KAAKy0B,GACZp4B,KAAKwH,EAAE7D,KAAKy0B,GACLp4B,KAGT,QACE,OAAOA,KAAKhB,EAAE25B,SACP34B,KAAKikB,EAAE0U,SACP34B,KAAK8wB,EAAE6H,SACP34B,KAAKyH,EAAEkxB,SACP34B,KAAKwH,EAAEmxB,QAGhB,QACE,OAAO+gD,EAAI/6D,MAAM3e,KAAK4a,SAAU,mBAGlC,QAAQhW,GACN,MAAMjD,EAAO+3E,EAAI96D,QAAQha,EAAK,mBAC9B,OAAO5E,KAAKkd,OAAOvb,GAGrB,SACE,MAAO,CACLD,KAAM1B,KAAKohB,YAAY3jB,KACvB8f,QAASvd,KAAKud,QACdve,EAAGgB,KAAKhB,EACRilB,EAAGjkB,KAAKikB,EACR6M,EAAG9wB,KAAK8wB,EACRrpB,EAAGzH,KAAKyH,EACRD,EAAGxH,KAAKwH,IASdxK,EAAQ28E,UAAYA,EACpB38E,EAAQ48E,aAAeA,EACvB58E,EAAQ68E,cAAgBA,G;;;;;;;;GC1OxB,MAAMxsE,EAAS,EAAQ,IACjB,SAACwP,GAAY,EAAQ,GACrB5H,EAAS,EAAQ,IACjBjF,EAAS,EAAQ,GACjB0zD,EAAO,EAAQ,IACfriC,EAAM,EAAQ,IAMdy4C,EAAU,CACdj6E,UAAW,KACX,UAAW,CAAC,GAAI,IAChB,UAAW,CAAC,GAAI,IAChB,UAAW,CAAC,GAAI,IAChB,UAAW,CAAC,EAAG,GACf,UAAW,CAAC,EAAG,GACf,WAAY,CAAC,GAAI,GACjB,GAAM,CAAC,GAAI,GACX,SAAY,CAAC,GAAI,GACjB,eAAgB,CAAC,GAAI,IACrB,eAAgB,CAAC,GAAI,IACrB,eAAgB,CAAC,GAAI,IACrB,MAAS,CAAC,GAAI,GACd,IAAO,CAAC,EAAG,GACX,UAAW,CAAC,GAAI,GAChB,WAAY,CAAC,GAAI,GACjB,KAAQ,CAAC,GAAI,GACb,cAAe,CAAC,GAAI,IACpB,cAAe,CAAC,GAAI,IACpB,cAAe,CAAC,GAAI,IACpB,cAAe,CAAC,GAAI,IACpB,cAAe,CAAC,GAAI,IACpB,cAAe,CAAC,GAAI,KAiEtB,SAASk6E,EAAWt8E,GAMlB,GALA4P,EAAuB,iBAAT5P,GAEe,QAAzBA,EAAK2gB,UAAU,EAAG,KACpB3gB,EAAO,IAAMA,GAEXA,EAAKiC,OAAS,GAA+B,MAA1BjC,EAAKA,EAAKiC,OAAS,GACxC,MAAM,IAAIO,MAAM,uBAAuBxC,MAEzC,MAAMwV,EAAOxV,EAAK2gB,UAAU,EAAG3gB,EAAKiC,OAAS,GACvCke,EAAOk8D,EAAQ7mE,GAErB,IAAK2K,EACH,MAAM,IAAI3d,MAAM,uBAAuBxC,MAEzC,OAAOmgB,EAOT5gB,EAAQkY,QA5ER,SAAiBU,EAAOnY,EAAMu8E,GAK5B,GAJA3sE,EAAOuI,aAAiBiH,GACxBxP,EAAuB,iBAAT5P,GACd4P,EAAyB,iBAAX2sE,GAEVpkE,EAAMqkE,cACR,MAAM,IAAIh6E,MAAM,mCAElB,MAAO6U,EAASC,GAAUglE,EAAWt8E,GAC/B6X,EAAKtF,EAAO9B,YAAY6G,IACvBtW,GAAOilE,EAAKiD,OAAOtlC,EAAK24C,EAAQ1kE,EAAIR,EAASC,GAOpD,OALAa,EAAMjU,KAAOsT,EAAOC,QAAQzX,EAAMgB,EAAK6W,EAAIM,EAAMjU,MAEjDiU,EAAMskE,YAAY,EAAG,aACrBtkE,EAAMukE,WAAW18E,EAAM6X,GAEhBM,GA4DT5Y,EAAQmY,QAlDR,SAAiBS,EAAOokE,GAItB,GAHA3sE,EAAOuI,aAAiBiH,GACxBxP,EAAyB,iBAAX2sE,IAETpkE,EAAMqkE,cACT,MAAM,IAAIh6E,MAAM,+BAElB,MAAM2d,EAAOhI,EAAMwkE,aAEnB,IAAKx8D,EACH,MAAM,IAAI3d,MAAM,uBAElB,MAAO6U,EAASC,GAAUglE,EAAWn8D,EAAKngB,OACnCgB,GAAOilE,EAAKiD,OAAOtlC,EAAK24C,EAAQp8D,EAAKtI,GAAIR,EAASC,GAOzD,OALAa,EAAMjU,KAAOsT,EAAOE,QAAQyI,EAAKngB,KAAMgB,EAAKmf,EAAKtI,GAAIM,EAAMjU,MAE3DiU,EAAMykE,gBACNzkE,EAAM0kE,eAEC1kE,I,8BCvGT;;;;;;;;;;AAYA,MAAMvI,EAAS,EAAQ,GACjB2F,EAAO,EAAQ,GAOfi4C,EAAO3rD,EAAOkH,MAAM,EAAG,GACvB0kD,EAAU5rD,EAAOkH,MAAM,GAAI,GAEjC0kD,EAAQ,GAAK,IAEb,MAAMC,EAAI,IAAIl9C,YAAY,CACxB,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,SAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,SACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,aAGhCg+D,EAAI,IAAIrsE,WAAW,CACvB,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GACzC,EAAG,GAAI,GAAI,GAAI,EAAI,EAAG,GAAI,GAAI,EAAI,EAAG,GAAI,GACzC,EAAI,EAAG,GAAI,GAAI,EAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GACzC,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GACzC,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GACzC,EAAG,GAAI,GAAI,KAOb,MAAMyhC,EACJ,cACErhC,KAAKwd,MAAQ,IAAIvP,YAAY,GAC7BjO,KAAKsN,IAAM,IAAIW,YAAY,IAC3BjO,KAAK4V,MAAQtW,EAAOkH,MAAM,IAC1BxG,KAAK8B,MA3CS,EA8ChB,OAME,OALA9B,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,UAChBxd,KAAK8B,KAAO,EACL9B,KAGT,OAAO2B,GAGL,OAFA0L,EAAO/N,EAAO8B,SAASO,IACvB3B,KAAKosC,QAAQzqC,EAAMA,EAAKjC,QACjBM,KAGT,QACE,OAAOA,KAAKorD,OAAO9rD,EAAOkH,MAAM,KAGlC,QAAQ7E,EAAMN,GACZgM,GAlEc,IAkEPrN,KAAK8B,KAAoB,+BAEhC,IAAI8F,EAAkB,GAAZ5H,KAAK8B,KACXwgB,EAAM,EAIV,GAFAtiB,KAAK8B,MAAQT,EAETuG,EAAM,EAAG,CACX,IAAIyjD,EAAO,GAAKzjD,EAWhB,GATIyjD,EAAOhqD,IACTgqD,EAAOhqD,GAETM,EAAKJ,KAAKvB,KAAK4V,MAAOhO,EAAK0a,EAAKA,EAAM+oC,GAEtCzjD,GAAOyjD,EACPhqD,GAAOgqD,EACP/oC,GAAO+oC,EAEHzjD,EAAM,GACR,OAEF5H,KAAKsrD,WAAWtrD,KAAK4V,MAAO,GAG9B,KAAOvU,GAAO,IACZrB,KAAKsrD,WAAW3pD,EAAM2gB,GACtBA,GAAO,GACPjhB,GAAO,GAGLA,EAAM,GACRM,EAAKJ,KAAKvB,KAAK4V,MAAO,EAAG0M,EAAKA,EAAMjhB,GAGxC,OAAO4H,GACLoE,GAtGc,IAsGPrN,KAAK8B,KAAoB,+BAEhC,MAAM8F,EAAkB,GAAZ5H,KAAK8B,KACXT,EAAkB,EAAZrB,KAAK8B,KAEjBypD,EAASN,EAAM5pD,IAAQ,EAAG,GAC1BkqD,EAASN,EAAO5pD,GAAO,EAAI,cAAkB,EAAG,GAEhDrB,KAAKosC,QAAQ8e,EAAS,GAAM,IAAMtjD,EAAO,KACzC5H,KAAKosC,QAAQ6e,EAAM,GAEnB,IAAK,IAAI/tD,EAAI,EAAGA,EAAI,EAAGA,IACrBquD,EAAStiD,EAAKjJ,KAAKwd,MAAMtgB,GAAQ,EAAJA,GAC7B8C,KAAKwd,MAAMtgB,GAAK,EAGlB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKsN,IAAIpQ,GAAK,EAEhB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAK4V,MAAM1Y,GAAK,EAIlB,OAFA8C,KAAK8B,MA5HS,EA8HPmH,EAGT,WAAWsV,EAAO3W,GAChB,MAAM4jD,EAAIxrD,KAAKsN,IAEf,IAAI/F,EAAIvH,KAAKwd,MAAM,GACfza,EAAI/C,KAAKwd,MAAM,GACfjgB,EAAIyC,KAAKwd,MAAM,GACfhgB,EAAIwC,KAAKwd,MAAM,GACftgB,EAAI,EAER,KAAOA,EAAI,GAAIA,IACbsuD,EAAEtuD,IA6FeolB,EA7FK1a,EAAU,EAAJ1K,GA6FjByE,EA7FI4c,GA8FN+D,KACS,IAAd3gB,EAAK2gB,KACS,MAAd3gB,EAAK2gB,KACO,SAAZ3gB,EAAK2gB,IAJf,IAAiB3gB,EAAM2gB,EA3FnB,IAAKplB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACvB,IAAIqc,EAAGuX,EAEF5zB,EAAI,IACPqc,EAAKxW,EAAIxF,GAAOwF,EAAIvF,EACpBszB,EAAI5zB,GACKA,EAAI,IACbqc,EAAK/b,EAAIuF,GAAOvF,EAAID,EACpBuzB,EAAK,EAAI5zB,EAAI,EAAK,IACTA,EAAI,IACbqc,EAAIxW,EAAIxF,EAAIC,EACZszB,EAAK,EAAI5zB,EAAI,EAAK,KAElBqc,EAAIhc,GAAKwF,GAAKvF,GACdszB,EAAK,EAAI5zB,EAAK,IAGhBqc,KAAO,EAEPA,EAAIA,EAAIhS,EAAI4jD,EAAEjuD,GAAKsuD,EAAE16B,GACrBvX,KAAO,EAEPhS,EAAI/J,EACJA,EAAID,EACJA,EAAIwF,EACJA,GAAQuc,EAAO/F,EAAG0yD,EAAE/uE,IACpB6F,KAAO,EAGT/C,KAAKwd,MAAM,IAAMjW,EACjBvH,KAAKwd,MAAM,IAAMza,EACjB/C,KAAKwd,MAAM,IAAMjgB,EACjByC,KAAKwd,MAAM,IAAMhgB,EAGnB,cACE,OAAO,IAAI6jC,EAGb,cACE,OAAO,IAAIruB,EAAKquB,EAAK,IAGvB,cAAc1/B,GACZ,OAAO0/B,EAAI7O,IAAI5jB,OAAO4D,OAAO7Q,GAAM4R,QAGrC,YAAYwO,EAAMC,GAGhB,OAFA3U,EAAO/N,EAAO8B,SAAS2gB,IAAyB,KAAhBA,EAAKriB,QACrC2N,EAAO/N,EAAO8B,SAAS4gB,IAA2B,KAAjBA,EAAMtiB,QAChC2hC,EAAI7O,IAAI5jB,OAAO4D,OAAOuP,GAAMvP,OAAOwP,GAAOzO,QAGnD,aAAa/L,EAAGC,EAAG4T,GACjB,MAAM,IAACmX,GAAO6O,EASd,OAPA7O,EAAI5jB,OACJ4jB,EAAIhgB,OAAOhL,GACXgrB,EAAIhgB,OAAO/K,GAEP4T,GACFmX,EAAIhgB,OAAO6I,GAENmX,EAAIjf,QAGb,WAAW5R,EAAMlD,GACf,OAAO4iC,EAAI2pB,OAAOp8C,KAAKnQ,GAAK+T,OAAO7Q,GAAM4R,SAoB7C,SAAS+L,EAAOvE,EAAGhY,GACjB,OAAQgY,GAAKhY,EAAMgY,IAAO,GAAKhY,EAUjC,SAASwoD,EAASn+C,EAAK0N,EAAKwH,GAQ1B,OAPAlV,EAAIkV,KAASxH,EACbA,KAAS,EACT1N,EAAIkV,KAASxH,EACbA,KAAS,EACT1N,EAAIkV,KAASxH,EACbA,KAAS,EACT1N,EAAIkV,KAASxH,EACNwH,EA/BT+e,EAAImF,OAAS,EACbnF,EAAIkF,GAAK,MACTlF,EAAIv/B,KAAO,GACXu/B,EAAIrmB,KAAO,IACXqmB,EAAIxvB,UAAY,GAChBwvB,EAAIyO,KAAOxwC,EAAOkH,MAAM,GAAI,GAC5B66B,EAAI7O,IAAM,IAAI6O,EAgCdpkC,EAAOD,QAAUqkC,I;;;;;;;;;;;;;;;;;GC7PjB,MAAM4E,EAAO,EAAQ,IACfyzC,EAAM,EAAQ,GAWpB,MAAMa,UAAqBt0C,EAAKlF,SAC9B,YAAYpiC,EAAGkI,GACbkxB,QACA/3B,KAAKrB,EAAI,IAAIsnC,EAAK7E,SAASziC,GAC3BqB,KAAK6G,EAAI,IAAIo/B,EAAK7E,SAASv6B,GAG7B,cACE,IAAI/E,EAAO,EAGX,OAFAA,GAAQ9B,KAAKrB,EAAEm7B,UACfh4B,GAAQ9B,KAAK6G,EAAEizB,UACRh4B,EAGT,UAAUq2B,GAGR,OAFAn4B,KAAKrB,EAAEqC,MAAMm3B,GACbn4B,KAAK6G,EAAE7F,MAAMm3B,GACNA,EAGT,SAASC,GAGP,OAFAp4B,KAAKrB,EAAEgF,KAAKy0B,GACZp4B,KAAK6G,EAAElD,KAAKy0B,GACLp4B,KAGT,QACE,OAAOA,KAAKrB,EAAEg6B,SAAW34B,KAAK6G,EAAE8xB,QAGlC,QACE,OAAO+gD,EAAI/6D,MAAM3e,KAAK4a,SAAU,kBAGlC,QAAQhW,GACN,MAAMjD,EAAO+3E,EAAI96D,QAAQha,EAAK,kBAC9B,OAAO5E,KAAKkd,OAAOvb,GAGrB,SACE,MAAO,CACLD,KAAM1B,KAAKohB,YAAY3jB,KACvBkB,EAAGqB,KAAKrB,EACRkI,EAAG7G,KAAK6G,IAsBd,MAAM2zE,UAAsBv0C,EAAKlF,SAC/B,YAAYxjB,EAAS5e,EAAGkI,EAAGrJ,EAAGwB,EAAGilB,EAAGw2D,EAAIC,EAAIC,GAC1C5iD,QACA/3B,KAAKud,QAAU,IAAI0oB,EAAK7E,SAAS7jB,GACjCvd,KAAKrB,EAAI,IAAIsnC,EAAK7E,SAASziC,GAC3BqB,KAAK6G,EAAI,IAAIo/B,EAAK7E,SAASv6B,GAC3B7G,KAAKxC,EAAI,IAAIyoC,EAAK7E,SAAS5jC,GAC3BwC,KAAKhB,EAAI,IAAIinC,EAAK7E,SAASpiC,GAC3BgB,KAAKikB,EAAI,IAAIgiB,EAAK7E,SAASnd,GAC3BjkB,KAAKy6E,GAAK,IAAIx0C,EAAK7E,SAASq5C,GAC5Bz6E,KAAK06E,GAAK,IAAIz0C,EAAK7E,SAASs5C,GAC5B16E,KAAK26E,GAAK,IAAI10C,EAAK7E,SAASu5C,GAG9B,cACE,IAAI74E,EAAO,EAUX,OATAA,GAAQ9B,KAAKud,QAAQuc,UACrBh4B,GAAQ9B,KAAKrB,EAAEm7B,UACfh4B,GAAQ9B,KAAK6G,EAAEizB,UACfh4B,GAAQ9B,KAAKxC,EAAEs8B,UACfh4B,GAAQ9B,KAAKhB,EAAE86B,UACfh4B,GAAQ9B,KAAKikB,EAAE6V,UACfh4B,GAAQ9B,KAAKy6E,GAAG3gD,UAChBh4B,GAAQ9B,KAAK06E,GAAG5gD,UAChBh4B,GAAQ9B,KAAK26E,GAAG7gD,UACTh4B,EAGT,UAAUq2B,GAUR,OATAn4B,KAAKud,QAAQvc,MAAMm3B,GACnBn4B,KAAKrB,EAAEqC,MAAMm3B,GACbn4B,KAAK6G,EAAE7F,MAAMm3B,GACbn4B,KAAKxC,EAAEwD,MAAMm3B,GACbn4B,KAAKhB,EAAEgC,MAAMm3B,GACbn4B,KAAKikB,EAAEjjB,MAAMm3B,GACbn4B,KAAKy6E,GAAGz5E,MAAMm3B,GACdn4B,KAAK06E,GAAG15E,MAAMm3B,GACdn4B,KAAK26E,GAAG35E,MAAMm3B,GACPA,EAGT,SAASC,GAUP,OATAp4B,KAAKud,QAAQ5Z,KAAKy0B,GAClBp4B,KAAKrB,EAAEgF,KAAKy0B,GACZp4B,KAAK6G,EAAElD,KAAKy0B,GACZp4B,KAAKxC,EAAEmG,KAAKy0B,GACZp4B,KAAKhB,EAAE2E,KAAKy0B,GACZp4B,KAAKikB,EAAEtgB,KAAKy0B,GACZp4B,KAAKy6E,GAAG92E,KAAKy0B,GACbp4B,KAAK06E,GAAG/2E,KAAKy0B,GACbp4B,KAAK26E,GAAGh3E,KAAKy0B,GACNp4B,KAGT,QACE,OAAOA,KAAKrB,EAAEg6B,SACP34B,KAAK6G,EAAE8xB,SACP34B,KAAKxC,EAAEm7B,SACP34B,KAAKhB,EAAE25B,SACP34B,KAAKikB,EAAE0U,SACP34B,KAAKy6E,GAAG9hD,SACR34B,KAAK06E,GAAG/hD,SACR34B,KAAK26E,GAAGhiD,QAGjB,QACE,OAAO+gD,EAAI/6D,MAAM3e,KAAK4a,SAAU,mBAGlC,QAAQhW,GACN,MAAMjD,EAAO+3E,EAAI96D,QAAQha,EAAK,mBAC9B,OAAO5E,KAAKkd,OAAOvb,GAGrB,SACE,MAAO,CACLD,KAAM1B,KAAKohB,YAAY3jB,KACvB8f,QAASvd,KAAKud,QACd5e,EAAGqB,KAAKrB,EACRkI,EAAG7G,KAAK6G,EACRrJ,EAAGwC,KAAKxC,EACRwB,EAAGgB,KAAKhB,EACRilB,EAAGjkB,KAAKikB,EACRw2D,GAAIz6E,KAAKy6E,GACTC,GAAI16E,KAAK06E,GACTC,GAAI36E,KAAK26E,KASf39E,EAAQu9E,aAAeA,EACvBv9E,EAAQw9E,cAAgBA,G;;;;;;;;;;;;;;;;;;;;GCzKxB,MAAMntE,EAAS,EAAQ,GACjB44B,EAAO,EAAQ,IACfyzC,EAAM,EAAQ,IACd,MAACpjD,GAAS2P,EAWhB,MAAM20C,UAAoB30C,EAAKlF,SAC7B,cACEhJ,QACA/3B,KAAK66E,eAAiB,IAAIC,EAC1B96E,KAAK+6E,mBAAqB,IAAIC,EAC9Bh7E,KAAK2tC,UAAY,IAAI1H,EAAKhL,UAG5B,YACE,OAAO,EAGT,cACE,IAAIn5B,EAAO,EAIX,OAHAA,GAAQ9B,KAAK66E,eAAe/gD,UAC5Bh4B,GAAQ9B,KAAK+6E,mBAAmBjhD,UAChCh4B,GAAQ9B,KAAK2tC,UAAU7T,UAChBh4B,EAGT,UAAUq2B,GAIR,OAHAn4B,KAAK66E,eAAe75E,MAAMm3B,GAC1Bn4B,KAAK+6E,mBAAmB/5E,MAAMm3B,GAC9Bn4B,KAAK2tC,UAAU3sC,MAAMm3B,GACdA,EAGT,SAASC,GAIP,OAHAp4B,KAAK66E,eAAel3E,KAAKy0B,GACzBp4B,KAAK+6E,mBAAmBp3E,KAAKy0B,GAC7Bp4B,KAAK2tC,UAAUhqC,KAAKy0B,GACbp4B,KAGT,QACE,OAAOA,KAAK66E,eAAeliD,SACpB34B,KAAK+6E,mBAAmBpiD,SACxB34B,KAAK2tC,UAAUhV,QAGxB,QACE,OAAO+gD,EAAI/6D,MAAM3e,KAAK4a,SAAU,eAGlC,QAAQhW,GACN,MAAMjD,EAAO+3E,EAAI96D,QAAQha,EAAK,eAC9B,OAAO5E,KAAKkd,OAAOvb,GAGrB,SACE,MAAO,CACLD,KAAM1B,KAAKohB,YAAY3jB,KACvBo9E,eAAgB76E,KAAK66E,eACrBE,mBAAoB/6E,KAAK+6E,mBACzBptC,UAAW3tC,KAAK2tC,YAuBtB,MAAMmtC,UAAuB70C,EAAKlF,SAChC,cACEhJ,QACA/3B,KAAKud,SAAU,IAAI0oB,EAAK7E,UAAW65C,SAAS,GAAGn8C,WAC/C9+B,KAAKk7E,aAAe,IAAIj1C,EAAKxL,QAC7Bz6B,KAAK2tC,UAAY,IAAIqtC,EACrBh7E,KAAKm7E,OAAS,IAAIC,EAClBp7E,KAAKq7E,SAAW,IAAIC,EACpBt7E,KAAKu7E,QAAU,IAAIH,EACnBp7E,KAAKw7E,qBAAuB,IAAIC,EAChCz7E,KAAK07E,gBAAiB,IAAIz1C,EAAKhL,WAAY0gD,SAAS,GAAG78C,WACvD9+B,KAAK47E,iBAAkB,IAAI31C,EAAKhL,WAAY0gD,SAAS,GAAG78C,WACxD9+B,KAAK67E,YAAa,IAAIC,GAAab,SAAS,GAAGn8C,WAGjD,YACE,OAAO,EAGT,cACE,IAAIh9B,EAAO,EAWX,OAVAA,GAAQ9B,KAAKud,QAAQuc,UACrBh4B,GAAQ9B,KAAKk7E,aAAaphD,UAC1Bh4B,GAAQ9B,KAAK2tC,UAAU7T,UACvBh4B,GAAQ9B,KAAKm7E,OAAOrhD,UACpBh4B,GAAQ9B,KAAKq7E,SAASvhD,UACtBh4B,GAAQ9B,KAAKu7E,QAAQzhD,UACrBh4B,GAAQ9B,KAAKw7E,qBAAqB1hD,UAClCh4B,GAAQ9B,KAAK07E,eAAe5hD,UAC5Bh4B,GAAQ9B,KAAK47E,gBAAgB9hD,UAC7Bh4B,GAAQ9B,KAAK67E,WAAW/hD,UACjBh4B,EAGT,UAAUq2B,GAWR,OAVAn4B,KAAKud,QAAQvc,MAAMm3B,GACnBn4B,KAAKk7E,aAAal6E,MAAMm3B,GACxBn4B,KAAK2tC,UAAU3sC,MAAMm3B,GACrBn4B,KAAKm7E,OAAOn6E,MAAMm3B,GAClBn4B,KAAKq7E,SAASr6E,MAAMm3B,GACpBn4B,KAAKu7E,QAAQv6E,MAAMm3B,GACnBn4B,KAAKw7E,qBAAqBx6E,MAAMm3B,GAChCn4B,KAAK07E,eAAe16E,MAAMm3B,GAC1Bn4B,KAAK47E,gBAAgB56E,MAAMm3B,GAC3Bn4B,KAAK67E,WAAW76E,MAAMm3B,GACfA,EAGT,SAASC,GAWP,OAVAp4B,KAAKud,QAAQ5Z,KAAKy0B,GAClBp4B,KAAKk7E,aAAav3E,KAAKy0B,GACvBp4B,KAAK2tC,UAAUhqC,KAAKy0B,GACpBp4B,KAAKm7E,OAAOx3E,KAAKy0B,GACjBp4B,KAAKq7E,SAAS13E,KAAKy0B,GACnBp4B,KAAKu7E,QAAQ53E,KAAKy0B,GAClBp4B,KAAKw7E,qBAAqB73E,KAAKy0B,GAC/Bp4B,KAAK07E,eAAe/3E,KAAKy0B,GACzBp4B,KAAK47E,gBAAgBj4E,KAAKy0B,GAC1Bp4B,KAAK67E,WAAWl4E,KAAKy0B,GACdp4B,KAGT,QACE,OAAOA,KAAKud,QAAQob,SACb34B,KAAKk7E,aAAaviD,SAClB34B,KAAK2tC,UAAUhV,SACf34B,KAAKm7E,OAAOxiD,SACZ34B,KAAKq7E,SAAS1iD,SACd34B,KAAKu7E,QAAQ5iD,SACb34B,KAAKw7E,qBAAqB7iD,SAC1B34B,KAAK07E,eAAe/iD,SACpB34B,KAAK47E,gBAAgBjjD,SACrB34B,KAAK67E,WAAWljD,QAGzB,QACE,OAAO+gD,EAAI/6D,MAAM3e,KAAK4a,SAAU,mBAGlC,QAAQhW,GACN,MAAMjD,EAAO+3E,EAAI96D,QAAQha,EAAK,mBAC9B,OAAO5E,KAAKkd,OAAOvb,GAGrB,SACE,MAAO,CACLD,KAAM1B,KAAKohB,YAAY3jB,KACvB8f,QAASvd,KAAKud,QACd29D,aAAcl7E,KAAKk7E,aACnBvtC,UAAW3tC,KAAK2tC,UAChBwtC,OAAQn7E,KAAKm7E,OACbE,SAAUr7E,KAAKq7E,SACfE,QAASv7E,KAAKu7E,QACdC,qBAAsBx7E,KAAKw7E,qBAC3BE,eAAgB17E,KAAK07E,eACrBE,gBAAiB57E,KAAK47E,gBACtBC,WAAY77E,KAAK67E,aAavB,MAAMb,UAA4B/0C,EAAKlF,SACrC,YAAYzpB,EAAWykE,GACrBhkD,QAEA/3B,KAAKsX,UAAY,IAAI2uB,EAAKrP,IAAItf,GAC9BtX,KAAK+7E,WAAa,IAAI91C,EAAKtM,IAAIoiD,GAAYj9C,WAG7C,cACE,IAAIh9B,EAAO,EAGX,OAFAA,GAAQ9B,KAAKsX,UAAUwiB,UACvBh4B,GAAQ9B,KAAK+7E,WAAWjiD,UACjBh4B,EAGT,UAAUq2B,GAGR,OAFAn4B,KAAKsX,UAAUtW,MAAMm3B,GACrBn4B,KAAK+7E,WAAW/6E,MAAMm3B,GACfA,EAGT,SAASC,GAGP,OAFAp4B,KAAKsX,UAAU3T,KAAKy0B,GACpBp4B,KAAK+7E,WAAWp4E,KAAKy0B,GACdp4B,KAGT,QACE,OAAOA,KAAKsX,UAAUqhB,SACf34B,KAAK+7E,WAAWpjD,QAGzB,SACE,MAAO,CACLj3B,KAAM1B,KAAKohB,YAAY3jB,KACvB6Z,UAAWtX,KAAKsX,UAChBykE,WAAY/7E,KAAK+7E,aAcvB,MAAMX,UAAoBn1C,EAAKlF,SAC7B,cACEhJ,QACA/3B,KAAKg8E,MAAQ,GAGf,cACE,IAAIl6E,EAAO,EAEX,IAAK,MAAMm6E,KAAOj8E,KAAKg8E,MACrBl6E,GAAQm6E,EAAIniD,UAEd,OAAOh4B,EAGT,UAAUq2B,GACR,IAAK,MAAM8jD,KAAOj8E,KAAKg8E,MACrBC,EAAIj7E,MAAMm3B,GACZ,OAAOA,EAGT,SAASC,GACP,KAAOA,EAAGrW,QAAQ,CAChB,MAAMk6D,EAAMC,EAAIv4E,KAAKy0B,GACrBp4B,KAAKg8E,MAAMl3E,KAAKm3E,GAGlB,OAAOj8E,KAGT,QACE,OAA6B,IAAtBA,KAAKg8E,MAAMt8E,OAGpB,SACE,MAAO,CACLgC,KAAM1B,KAAKohB,YAAY3jB,KACvBu+E,MAAOh8E,KAAKg8E,QAalB,MAAME,UAAYj2C,EAAKjF,IACrB,YAAYuF,EAAIpoC,GACd45B,QACA/3B,KAAKm8E,WAAa,CAAC,IAAIC,EAAU71C,EAAIpoC,IAGvC,cACE,IAAI2D,EAAO,EAEXuL,EAAOrN,KAAKm8E,WAAWz8E,QAAU,GAEjC,IAAK,MAAM28E,KAAQr8E,KAAKm8E,WACtBr6E,GAAQu6E,EAAKviD,UAEf,OAAOh4B,EAGT,UAAUq2B,GACR9qB,EAAOrN,KAAKm8E,WAAWz8E,QAAU,GAEjC,IAAK,MAAM28E,KAAQr8E,KAAKm8E,WACtBE,EAAKr7E,MAAMm3B,GAEb,OAAOA,EAGT,SAASC,GAGP,IAFAp4B,KAAKm8E,WAAW,GAAGx4E,KAAKy0B,GAEjBA,EAAGrW,QAAQ,CAChB,MAAMs6D,EAAOD,EAAUz4E,KAAKy0B,GAC5Bp4B,KAAKm8E,WAAWr3E,KAAKu3E,GAGvB,OAAOr8E,KAGT,QACE,OAAkC,IAA3BA,KAAKm8E,WAAWz8E,QAAgBM,KAAKm8E,WAAW,GAAGxjD,QAG5D,SACE,MAAO,CACLj3B,KAAM1B,KAAKohB,YAAY3jB,KACvB0+E,WAAYn8E,KAAKm8E,aAiBvB,MAAMC,UAAkBn2C,EAAKlF,SAC3B,YAAYwF,EAAIpoC,GACd45B,QAEA/3B,KAAKumC,GAAK,IAAIN,EAAKrP,IAAI2P,GACvBvmC,KAAK7B,MAAQ,IAAI8nC,EAAKtM,IAAIx7B,GAG5B,cACE,IAAI2D,EAAO,EAGX,OAFAA,GAAQ9B,KAAKumC,GAAGzM,UAChBh4B,GAAQ9B,KAAK7B,MAAM27B,UACZh4B,EAGT,UAAUq2B,GAGR,OAFAn4B,KAAKumC,GAAGvlC,MAAMm3B,GACdn4B,KAAK7B,MAAM6C,MAAMm3B,GACVA,EAGT,SAASC,GAGP,OAFAp4B,KAAKumC,GAAG5iC,KAAKy0B,GACbp4B,KAAK7B,MAAMwF,KAAKy0B,GACTp4B,KAGT,QACE,OAAOA,KAAKumC,GAAG5N,SACR34B,KAAK7B,MAAMw6B,QAGpB,SACE,MAAO,CACLj3B,KAAM1B,KAAKohB,YAAY3jB,KACvB8oC,GAAIvmC,KAAKumC,GACTpoC,MAAO6B,KAAK7B,QAalB,MAAMm9E,UAAiBr1C,EAAKlF,SAC1B,cACEhJ,QACA/3B,KAAKs8E,UAAY,IAAIv/C,EACrB/8B,KAAKu8E,SAAW,IAAIx/C,EAGtB,cACE,IAAIj7B,EAAO,EAGX,OAFAA,GAAQ9B,KAAKs8E,UAAUxiD,UACvBh4B,GAAQ9B,KAAKu8E,SAASziD,UACfh4B,EAGT,UAAUq2B,GAGR,OAFAn4B,KAAKs8E,UAAUt7E,MAAMm3B,GACrBn4B,KAAKu8E,SAASv7E,MAAMm3B,GACbA,EAGT,SAASC,GAGP,OAFAp4B,KAAKs8E,UAAU34E,KAAKy0B,GACpBp4B,KAAKu8E,SAAS54E,KAAKy0B,GACZp4B,KAGT,QACE,OAAOA,KAAKs8E,UAAU3jD,SACf34B,KAAKu8E,SAAS5jD,QAGvB,SACE,MAAO,CACLj3B,KAAM1B,KAAKohB,YAAY3jB,KACvB6+E,UAAWt8E,KAAKs8E,UAChBC,SAAUv8E,KAAKu8E,WAarB,MAAMx/C,UAAakJ,EAAKhF,OACtB,YAAYxI,GACVV,MAAM,IAAIkO,EAAK1I,QAAW9E,GAG5B,UACE,MAAO,CACLnC,EAAMe,QACNf,EAAMgB,UASZ,MAAMmkD,UAA6Bx1C,EAAKlF,SACtC,YAAYzpB,EAAWykE,EAAYruC,GACjC3V,QACA/3B,KAAKsX,UAAY,IAAI0jE,EAAoB1jE,EAAWykE,GACpD/7E,KAAK0tC,UAAY,IAAIzH,EAAKhL,UAAUyS,GAGtC,YACE,OAAO,EAGT,cACE,IAAI5rC,EAAO,EAGX,OAFAA,GAAQ9B,KAAKsX,UAAUwiB,UACvBh4B,GAAQ9B,KAAK0tC,UAAU5T,UAChBh4B,EAGT,UAAUq2B,GAGR,OAFAn4B,KAAKsX,UAAUtW,MAAMm3B,GACrBn4B,KAAK0tC,UAAU1sC,MAAMm3B,GACdA,EAGT,SAASC,GAGP,OAFAp4B,KAAKsX,UAAU3T,KAAKy0B,GACpBp4B,KAAK0tC,UAAU/pC,KAAKy0B,GACbp4B,KAGT,QACE,OAAOA,KAAKsX,UAAUqhB,SACf34B,KAAK0tC,UAAU/U,QAGxB,QACE,OAAO+gD,EAAI/6D,MAAM3e,KAAK4a,SAAU,cAGlC,QAAQhW,GACN,MAAMjD,EAAO+3E,EAAI96D,QAAQha,EAAK,cAC9B,OAAO5E,KAAKkd,OAAOvb,GAGrB,SACE,MAAO,CACLD,KAAM1B,KAAKohB,YAAY3jB,KACvB6Z,UAAWtX,KAAKsX,UAChBo2B,UAAW1tC,KAAK0tC,YAStB,MAAMouC,UAAmB71C,EAAKlF,SAC5B,cACEhJ,QACA/3B,KAAK67E,WAAa,GAGpB,cACE,IAAI/5E,EAAO,EAEX,IAAK,MAAMuH,KAAOrJ,KAAK67E,WACrB/5E,GAAQuH,EAAIywB,UAEd,OAAOh4B,EAGT,UAAUq2B,GACR,IAAK,MAAM9uB,KAAOrJ,KAAK67E,WACrBxyE,EAAIrI,MAAMm3B,GACZ,OAAOA,EAGT,SAASC,GACP,IAAK,MAAM/uB,KAAOrJ,KAAK67E,WACrBxyE,EAAI1F,KAAKy0B,GACX,OAAOp4B,KAGT,QACE,OAAkC,IAA3BA,KAAK67E,WAAWn8E,OAGzB,SACE,MAAO,CACLgC,KAAM1B,KAAKohB,YAAY3jB,KACvBo+E,WAAY77E,KAAK67E,aAcvB,MAAMW,UAAkBv2C,EAAKlF,SAC3B,cACEhJ,QACA/3B,KAAKy8E,OAAS,IAAIx2C,EAAKrP,IACvB52B,KAAK08E,UAAW,IAAIz2C,EAAK3L,MAAOwE,WAChC9+B,KAAK28E,UAAY,IAAI12C,EAAK7K,UAG5B,cACE,IAAIt5B,EAAO,EAIX,OAHAA,GAAQ9B,KAAKy8E,OAAO3iD,UACpBh4B,GAAQ9B,KAAK08E,SAAS5iD,UACtBh4B,GAAQ9B,KAAK28E,UAAU7iD,UAChBh4B,EAGT,UAAUq2B,GAIR,OAHAn4B,KAAKy8E,OAAOz7E,MAAMm3B,GAClBn4B,KAAK08E,SAAS17E,MAAMm3B,GACpBn4B,KAAK28E,UAAU37E,MAAMm3B,GACdA,EAGT,SAASC,GAIP,OAHAp4B,KAAKy8E,OAAO94E,KAAKy0B,GACjBp4B,KAAK08E,SAAS/4E,KAAKy0B,GACnBp4B,KAAK28E,UAAUh5E,KAAKy0B,GACbp4B,KAGT,QACE,OAAOA,KAAKy8E,OAAO9jD,SACZ34B,KAAK08E,SAAS/jD,SACd34B,KAAK28E,UAAUhkD,QAGxB,SACE,MAAO,CACLj3B,KAAM1B,KAAKohB,YAAY3jB,KACvBg/E,OAAQz8E,KAAKy8E,OACbC,SAAU18E,KAAK08E,SACfC,UAAW38E,KAAK28E,YAiBtB,MAAMC,UAAmB32C,EAAKlF,SAC5B,YAAYzpB,EAAW+0B,GACrBtU,QACA/3B,KAAKsX,UAAY,IAAI0jE,EAAoB1jE,GACzCtX,KAAKsX,UAAUykE,WAAWj9C,UAAS,GACnC9+B,KAAKqsC,OAAS,IAAIpG,EAAK7K,UAAUiR,GAGnC,cACE,IAAIvqC,EAAO,EAGX,OAFAA,GAAQ9B,KAAKsX,UAAUwiB,UACvBh4B,GAAQ9B,KAAKqsC,OAAOvS,UACbh4B,EAGT,UAAUq2B,GAGR,OAFAn4B,KAAKsX,UAAUtW,MAAMm3B,GACrBn4B,KAAKqsC,OAAOrrC,MAAMm3B,GACXA,EAGT,SAASC,GAGP,OAFAp4B,KAAKsX,UAAU3T,KAAKy0B,GACpBp4B,KAAKqsC,OAAO1oC,KAAKy0B,GACVp4B,KAGT,QACE,OAAOA,KAAKsX,UAAUqhB,SACf34B,KAAKqsC,OAAO1T,QAGrB,SACE,MAAO,CACLj3B,KAAM1B,KAAKohB,YAAY3jB,KACvB6Z,UAAWtX,KAAKsX,UAChB+0B,OAAQrsC,KAAKqsC,SASnBrvC,EAAQ49E,YAAcA,EACtB59E,EAAQ89E,eAAiBA,EACzB99E,EAAQg+E,oBAAsBA,EAC9Bh+E,EAAQo+E,YAAcA,EACtBp+E,EAAQk/E,IAAMA,EACdl/E,EAAQo/E,UAAYA,EACpBp/E,EAAQs+E,SAAWA,EACnBt+E,EAAQ+/B,KAAOA,EACf//B,EAAQy+E,qBAAuBA,EAC/Bz+E,EAAQ8+E,WAAaA,EACrB9+E,EAAQw/E,UAAYA,EACpBx/E,EAAQ4/E,WAAaA,G;;;;;;;;;;;;;;;GC3rBrB,MAAM32C,EAAO,EAAQ,IACfyzC,EAAM,EAAQ,GA+BpB,MAAMmD,UAAqB52C,EAAKlF,SAC9B,YAAYxjB,EAASu/D,EAAYC,EAAervC,GAC9C3V,QACA/3B,KAAKud,QAAU,IAAI0oB,EAAK7E,SAAS7jB,GACjCvd,KAAK88E,WAAa,IAAI72C,EAAK7K,UAAU0hD,GACrC98E,KAAK+8E,cAAgB,IAAI92C,EAAKrP,IAAImmD,GAAe9B,SAAS,GAAGn8C,WAC7D9+B,KAAK0tC,UAAY,IAAIzH,EAAKhL,UAAUyS,GAAWutC,SAAS,GAAGn8C,WAG7D,cACE,IAAIh9B,EAAO,EAKX,OAJAA,GAAQ9B,KAAKud,QAAQuc,UACrBh4B,GAAQ9B,KAAK88E,WAAWhjD,UACxBh4B,GAAQ9B,KAAK+8E,cAAcjjD,UAC3Bh4B,GAAQ9B,KAAK0tC,UAAU5T,UAChBh4B,EAGT,UAAUq2B,GAKR,OAJAn4B,KAAKud,QAAQvc,MAAMm3B,GACnBn4B,KAAK88E,WAAW97E,MAAMm3B,GACtBn4B,KAAK+8E,cAAc/7E,MAAMm3B,GACzBn4B,KAAK0tC,UAAU1sC,MAAMm3B,GACdA,EAGT,SAASC,GAKP,OAJAp4B,KAAKud,QAAQ5Z,KAAKy0B,GAClBp4B,KAAK88E,WAAWn5E,KAAKy0B,GACrBp4B,KAAK+8E,cAAcp5E,KAAKy0B,GACxBp4B,KAAK0tC,UAAU/pC,KAAKy0B,GACbp4B,KAGT,QACE,OAAOA,KAAKud,QAAQob,SACb34B,KAAK88E,WAAWnkD,SAChB34B,KAAK+8E,cAAcpkD,SACnB34B,KAAK0tC,UAAU/U,QAGxB,QACE,OAAO+gD,EAAI/6D,MAAM3e,KAAK4a,SAAU,kBAGlC,QAAQhW,GACN,MAAMjD,EAAO+3E,EAAI96D,QAAQha,EAAK,kBAC9B,OAAO5E,KAAKkd,OAAOvb,GAGrB,SACE,MAAO,CACLD,KAAM1B,KAAKohB,YAAY3jB,KACvB8f,QAASvd,KAAKud,QACdu/D,WAAY98E,KAAK88E,WACjBC,cAAe/8E,KAAK+8E,cACpBrvC,UAAW1tC,KAAK0tC,YA6BtB,MAAMsvC,UAAuB/2C,EAAKlF,SAChC,YAAY/iC,EAAGiB,GACb84B,QACA/3B,KAAKhC,EAAI,IAAIioC,EAAK7E,SAASpjC,GAC3BgC,KAAKf,EAAI,IAAIgnC,EAAK7E,SAASniC,GAG7B,cACE,IAAI6C,EAAO,EAGX,OAFAA,GAAQ9B,KAAKhC,EAAE87B,UACfh4B,GAAQ9B,KAAKf,EAAE66B,UACRh4B,EAGT,UAAUq2B,GAGR,OAFAn4B,KAAKhC,EAAEgD,MAAMm3B,GACbn4B,KAAKf,EAAE+B,MAAMm3B,GACNA,EAGT,SAASC,GAGP,OAFAp4B,KAAKhC,EAAE2F,KAAKy0B,GACZp4B,KAAKf,EAAE0E,KAAKy0B,GACLp4B,KAGT,QACE,OAAOA,KAAKhC,EAAE26B,SAAW34B,KAAKf,EAAE05B,QAGlC,QACE,OAAO+gD,EAAI/6D,MAAM3e,KAAK4a,SAAU,gBAGlC,QAAQhW,GACN,MAAMjD,EAAO+3E,EAAI96D,QAAQha,EAAK,gBAC9B,OAAO5E,KAAKkd,OAAOvb,GAGrB,SACE,MAAO,CACLD,KAAM1B,KAAKohB,YAAY3jB,KACvBO,EAAGgC,KAAKhC,EACRiB,EAAGe,KAAKf,IASdjC,EAAQ6/E,aAAeA,EACvB7/E,EAAQggF,eAAiBA,G,8BC5LzB;;;;;;;;;;;;;;;AAiBA,MAAM3vE,EAAS,EAAQ,GACjB2F,EAAO,EAAQ,GAOfi4C,EAAO3rD,EAAOkH,MAAM,EAAG,GACvB0kD,EAAU5rD,EAAOkH,MAAM,GAAI,GAEjC0kD,EAAQ,GAAK,IAEb,MAAMltD,EAAI,IAAI4B,WAAW,CACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAClD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EACnD,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAClD,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,KAG9Cq9E,EAAK,IAAIr9E,WAAW,CACxB,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAClD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EACnD,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAClD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAClD,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,KAG9CX,EAAI,IAAIW,WAAW,CACvB,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EACrD,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GACpD,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EACrD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GACpD,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,IAGjD04E,EAAK,IAAI14E,WAAW,CACxB,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GACpD,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EACrD,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EACrD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,KAOtD,MAAM+sC,EACJ,cACE3sC,KAAKwd,MAAQ,IAAIvP,YAAY,GAC7BjO,KAAKsN,IAAM,IAAIW,YAAY,IAC3BjO,KAAK4V,MAAQtW,EAAOkH,MAAM,IAC1BxG,KAAK8B,MA/CS,EAkDhB,OAOE,OANA9B,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,UAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAK8B,KAAO,EACL9B,KAGT,OAAO2B,GAGL,OAFA0L,EAAO/N,EAAO8B,SAASO,IACvB3B,KAAKosC,QAAQzqC,EAAMA,EAAKjC,QACjBM,KAGT,QACE,OAAOA,KAAKorD,OAAO9rD,EAAOkH,MAAM,KAGlC,QAAQ7E,EAAMN,GACZgM,GAvEc,IAuEPrN,KAAK8B,KAAoB,+BAEhC,IAAI8F,EAAkB,GAAZ5H,KAAK8B,KACXwgB,EAAM,EAIV,GAFAtiB,KAAK8B,MAAQT,EAETuG,EAAM,EAAG,CACX,IAAIyjD,EAAO,GAAKzjD,EAWhB,GATIyjD,EAAOhqD,IACTgqD,EAAOhqD,GAETM,EAAKJ,KAAKvB,KAAK4V,MAAOhO,EAAK0a,EAAKA,EAAM+oC,GAEtCzjD,GAAOyjD,EACPhqD,GAAOgqD,EACP/oC,GAAO+oC,EAEHzjD,EAAM,GACR,OAEF5H,KAAKsrD,WAAWtrD,KAAK4V,MAAO,GAG9B,KAAOvU,GAAO,IACZrB,KAAKsrD,WAAW3pD,EAAM2gB,GACtBA,GAAO,GACPjhB,GAAO,GAGLA,EAAM,GACRM,EAAKJ,KAAKvB,KAAK4V,MAAO,EAAG0M,EAAKA,EAAMjhB,GAGxC,OAAO4H,GACLoE,GA3Gc,IA2GPrN,KAAK8B,KAAoB,+BAEhC,MAAM8F,EAAkB,GAAZ5H,KAAK8B,KACXT,EAAkB,EAAZrB,KAAK8B,KAEjBypD,EAASN,EAAM5pD,IAAQ,EAAG,GAC1BkqD,EAASN,EAAO5pD,GAAO,EAAI,cAAkB,EAAG,GAEhDrB,KAAKosC,QAAQ8e,EAAS,GAAM,IAAMtjD,EAAO,KACzC5H,KAAKosC,QAAQ6e,EAAM,GAEnB,IAAK,IAAI/tD,EAAI,EAAGA,EAAI,EAAGA,IACrBquD,EAAStiD,EAAKjJ,KAAKwd,MAAMtgB,GAAQ,EAAJA,GAC7B8C,KAAKwd,MAAMtgB,GAAK,EAGlB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKsN,IAAIpQ,GAAK,EAEhB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAK4V,MAAM1Y,GAAK,EAIlB,OAFA8C,KAAK8B,MAjIS,EAmIPmH,EAGT,WAAWsV,EAAO3W,GAChB,MAAM4jD,EAAIxrD,KAAKsN,IAEf,IAAIqjB,EAAI3wB,KAAKwd,MAAM,GACfoT,EAAI5wB,KAAKwd,MAAM,GACfnP,EAAIrO,KAAKwd,MAAM,GACfqT,EAAI7wB,KAAKwd,MAAM,GACf0/D,EAAIl9E,KAAKwd,MAAM,GACf+6D,EAAK5nD,EACLwsD,EAAKvsD,EACL+6B,EAAKt9C,EACL+uE,EAAKvsD,EACLwsD,EAAKH,EAET,IAAK,IAAIhgF,EAAI,EAAGA,EAAI,GAAIA,IACtBsuD,EAAEtuD,IAwIeolB,EAxIK1a,EAAU,EAAJ1K,GAwIjByE,EAxII4c,GAyIN+D,KACS,IAAd3gB,EAAK2gB,KACS,MAAd3gB,EAAK2gB,KACO,SAAZ3gB,EAAK2gB,IAJf,IAAiB3gB,EAAM2gB,EAtInB,IAAK,IAAIte,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIuD,EAAIopB,EAAIpX,EAAEvV,EAAG4sB,EAAGviB,EAAGwiB,GAAK26B,EAAExtD,EAAEgG,IAAMmnD,EAAEnnD,GACpCjB,EAAIuc,EAAO/X,EAAGtI,EAAE+E,IAChB+/B,EAAIhhC,EAAIm6E,EAEZvsD,EAAIusD,EACJA,EAAIrsD,EACJA,EAAIvR,EAAOjR,EAAG,IACdA,EAAIuiB,EACJA,EAAImT,EAEJx8B,EAAIgxE,EAAKh/D,EAAE,GAAKvV,EAAGm5E,EAAIxxB,EAAIyxB,GAAM5xB,EAAEyxB,EAAGj5E,IAAMs5E,EAAGt5E,GAC/CjB,EAAIuc,EAAO/X,EAAG+wE,EAAGt0E,IACjB+/B,EAAIhhC,EAAIs6E,EACR9E,EAAK8E,EACLA,EAAKD,EACLA,EAAK99D,EAAOqsC,EAAI,IAChBA,EAAKwxB,EACLA,EAAKp5C,EAGP,MAAMA,EAAI/jC,KAAKwd,MAAM,GAAKnP,EAAI+uE,EAE9Bp9E,KAAKwd,MAAM,GAAKxd,KAAKwd,MAAM,GAAKqT,EAAIwsD,EACpCr9E,KAAKwd,MAAM,GAAKxd,KAAKwd,MAAM,GAAK0/D,EAAI3E,EACpCv4E,KAAKwd,MAAM,GAAKxd,KAAKwd,MAAM,GAAKmT,EAAIwsD,EACpCn9E,KAAKwd,MAAM,GAAKxd,KAAKwd,MAAM,GAAKoT,EAAI+6B,EACpC3rD,KAAKwd,MAAM,GAAKumB,EAGlB,cACE,OAAO,IAAI4I,EAGb,cACE,OAAO,IAAI35B,EAAK25B,EAAW,IAG7B,cAAchrC,GACZ,OAAOgrC,EAAUna,IAAI5jB,OAAO4D,OAAO7Q,GAAM4R,QAG3C,YAAYwO,EAAMC,GAGhB,OAFA3U,EAAO/N,EAAO8B,SAAS2gB,IAAyB,KAAhBA,EAAKriB,QACrC2N,EAAO/N,EAAO8B,SAAS4gB,IAA2B,KAAjBA,EAAMtiB,QAChCitC,EAAUna,IAAI5jB,OAAO4D,OAAOuP,GAAMvP,OAAOwP,GAAOzO,QAGzD,aAAa/L,EAAGC,EAAG4T,GACjB,MAAM,IAACmX,GAAOma,EASd,OAPAna,EAAI5jB,OACJ4jB,EAAIhgB,OAAOhL,GACXgrB,EAAIhgB,OAAO/K,GAEP4T,GACFmX,EAAIhgB,OAAO6I,GAENmX,EAAIjf,QAGb,WAAW5R,EAAMlD,GACf,OAAOkuC,EAAUqe,OAAOp8C,KAAKnQ,GAAK+T,OAAO7Q,GAAM4R,SAoBnD,SAAS+L,EAAOvE,EAAGhY,GACjB,OAAQgY,GAAKhY,EAAMgY,IAAO,GAAKhY,EAGjC,SAASwW,EAAEvV,EAAGwD,EAAGC,EAAG4T,GAClB,OAAIrX,GAAK,GACAwD,EAAIC,EAAI4T,EAEbrX,GAAK,GACCwD,EAAIC,GAAQD,EAAK6T,EAEvBrX,GAAK,IACCwD,GAAMC,GAAM4T,EAElBrX,GAAK,GACCwD,EAAI6T,EAAM5T,GAAM4T,EAEnB7T,GAAKC,GAAM4T,GAGpB,SAAS8vC,EAAEnnD,GACT,OAAIA,GAAK,GACA,EAELA,GAAK,GACA,WAELA,GAAK,GACA,WAELA,GAAK,GACA,WAEF,WAGT,SAASs5E,EAAGt5E,GACV,OAAIA,GAAK,GACA,WAELA,GAAK,GACA,WAELA,GAAK,GACA,WAELA,GAAK,GACA,WAEF,EAUT,SAASunD,EAASn+C,EAAK0N,EAAKwH,GAQ1B,OAPAlV,EAAIkV,KAASxH,EACbA,KAAS,EACT1N,EAAIkV,KAASxH,EACbA,KAAS,EACT1N,EAAIkV,KAASxH,EACbA,KAAS,EACT1N,EAAIkV,KAASxH,EACNwH,EA/ETqqB,EAAUnG,OAAS,EACnBmG,EAAUpG,GAAK,YACfoG,EAAU7qC,KAAO,GACjB6qC,EAAU3xB,KAAO,IACjB2xB,EAAU96B,UAAY,GACtB86B,EAAUmD,KAAOxwC,EAAOkH,MAAM,GAAI,GAClCmmC,EAAUna,IAAM,IAAIma,EAgFpB1vC,EAAOD,QAAU2vC,I,sDC3UjB;;;;;;;;;;;;;;;;AAoBA,MAAMt/B,EAAS,EAAQ,GACjB2F,EAAO,EAAQ,GAOfi4C,EAAO3rD,EAAOkH,MAAM,EAAG,GACvB0kD,EAAU5rD,EAAOkH,MAAM,GAAI,GAEjC0kD,EAAQ,GAAK,IAEb,MAAMC,EAAI,IAAIl9C,YAAY,CACxB,WACA,WACA,WACA,aAOF,MAAM4+B,EACJ,cACE7sC,KAAKwd,MAAQ,IAAIvP,YAAY,GAC7BjO,KAAKsN,IAAM,IAAIW,YAAY,IAC3BjO,KAAK4V,MAAQtW,EAAOkH,MAAM,IAC1BxG,KAAK8B,MAtBS,EAyBhB,OAOE,OANA9B,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAKwd,MAAM,GAAK,UAChBxd,KAAKwd,MAAM,GAAK,WAChBxd,KAAK8B,KAAO,EACL9B,KAGT,OAAO2B,GAGL,OAFA0L,EAAO/N,EAAO8B,SAASO,IACvB3B,KAAKosC,QAAQzqC,EAAMA,EAAKjC,QACjBM,KAGT,QACE,OAAOA,KAAKorD,OAAO9rD,EAAOkH,MAAM,KAGlC,QAAQ7E,EAAMN,GACZgM,GA9Cc,IA8CPrN,KAAK8B,KAAoB,+BAEhC,IAAI8F,EAAkB,GAAZ5H,KAAK8B,KACXwgB,EAAM,EAIV,GAFAtiB,KAAK8B,MAAQT,EAETuG,EAAM,EAAG,CACX,IAAIyjD,EAAO,GAAKzjD,EAWhB,GATIyjD,EAAOhqD,IACTgqD,EAAOhqD,GAETM,EAAKJ,KAAKvB,KAAK4V,MAAOhO,EAAK0a,EAAKA,EAAM+oC,GAEtCzjD,GAAOyjD,EACPhqD,GAAOgqD,EACP/oC,GAAO+oC,EAEHzjD,EAAM,GACR,OAEF5H,KAAKsrD,WAAWtrD,KAAK4V,MAAO,GAG9B,KAAOvU,GAAO,IACZrB,KAAKsrD,WAAW3pD,EAAM2gB,GACtBA,GAAO,GACPjhB,GAAO,GAGLA,EAAM,GACRM,EAAKJ,KAAKvB,KAAK4V,MAAO,EAAG0M,EAAKA,EAAMjhB,GAGxC,OAAO4H,GACLoE,GAlFc,IAkFPrN,KAAK8B,KAAoB,+BAEhC,MAAM8F,EAAkB,GAAZ5H,KAAK8B,KACXT,EAAkB,EAAZrB,KAAK8B,KAEjBypD,EAASN,EAAO5pD,GAAO,EAAI,cAAkB,EAAG,GAChDkqD,EAASN,EAAM5pD,IAAQ,EAAG,GAE1BrB,KAAKosC,QAAQ8e,EAAS,GAAM,IAAMtjD,EAAO,KACzC5H,KAAKosC,QAAQ6e,EAAM,GAEnB,IAAK,IAAI/tD,EAAI,EAAGA,EAAI,EAAGA,IACrBquD,EAAStiD,EAAKjJ,KAAKwd,MAAMtgB,GAAQ,EAAJA,GAC7B8C,KAAKwd,MAAMtgB,GAAK,EAGlB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKsN,IAAIpQ,GAAK,EAEhB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAK4V,MAAM1Y,GAAK,EAIlB,OAFA8C,KAAK8B,MAxGS,EA0GPmH,EAGT,WAAWsV,EAAO3W,GAChB,MAAM4jD,EAAIxrD,KAAKsN,IAEf,IAAI/F,EAAIvH,KAAKwd,MAAM,GACfza,EAAI/C,KAAKwd,MAAM,GACfjgB,EAAIyC,KAAKwd,MAAM,GACfhgB,EAAIwC,KAAKwd,MAAM,GACf3W,EAAI7G,KAAKwd,MAAM,GACftgB,EAAI,EAER,KAAOA,EAAI,GAAIA,IACbsuD,EAAEtuD,IAwGeolB,EAxGK1a,EAAU,EAAJ1K,EAyGV,UADPyE,EAxGI4c,GAyGN+D,KACS,MAAd3gB,EAAK2gB,KACS,IAAd3gB,EAAK2gB,KACL3gB,EAAK2gB,IA1GX,IAsGJ,IAAiB3gB,EAAM2gB,EAtGZplB,EAAI,GAAIA,IACbsuD,EAAEtuD,GAAKoiB,EAAOksC,EAAEtuD,EAAI,GAAKsuD,EAAEtuD,EAAI,GAAKsuD,EAAEtuD,EAAI,IAAMsuD,EAAEtuD,EAAI,IAAK,GAE7D,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACvB,MAAM+B,EAAI/B,EAAI,GAAK,EACbkB,EAAIkhB,EAAO/X,EAAG,GAAK21D,EAAKj+D,EAAG8D,EAAGxF,EAAGC,GAAKqJ,EAAI2kD,EAAEtuD,GAAKiuD,EAAElsD,GAEzD4H,EAAIrJ,EACJA,EAAID,EACJA,EAAI+hB,EAAOvc,EAAG,IACdA,EAAIwE,EACJA,EAAInJ,IAAM,EAGZ4B,KAAKwd,MAAM,IAAMjW,EACjBvH,KAAKwd,MAAM,IAAMza,EACjB/C,KAAKwd,MAAM,IAAMjgB,EACjByC,KAAKwd,MAAM,IAAMhgB,EACjBwC,KAAKwd,MAAM,IAAM3W,EAGnB,cACE,OAAO,IAAIgmC,EAGb,cACE,OAAO,IAAI75B,EAAK65B,EAAM,IAGxB,cAAclrC,GACZ,OAAOkrC,EAAKra,IAAI5jB,OAAO4D,OAAO7Q,GAAM4R,QAGtC,YAAYwO,EAAMC,GAGhB,OAFA3U,EAAO/N,EAAO8B,SAAS2gB,IAAyB,KAAhBA,EAAKriB,QACrC2N,EAAO/N,EAAO8B,SAAS4gB,IAA2B,KAAjBA,EAAMtiB,QAChCmtC,EAAKra,IAAI5jB,OAAO4D,OAAOuP,GAAMvP,OAAOwP,GAAOzO,QAGpD,aAAa/L,EAAGC,EAAG4T,GACjB,MAAM,IAACmX,GAAOqa,EASd,OAPAra,EAAI5jB,OACJ4jB,EAAIhgB,OAAOhL,GACXgrB,EAAIhgB,OAAO/K,GAEP4T,GACFmX,EAAIhgB,OAAO6I,GAENmX,EAAIjf,QAGb,WAAW5R,EAAMlD,GACf,OAAOouC,EAAKme,OAAOp8C,KAAKnQ,GAAK+T,OAAO7Q,GAAM4R,SAoB9C,SAAS+L,EAAOvE,EAAGhY,GACjB,OAAQgY,GAAKhY,EAAMgY,IAAO,GAAKhY,EAGjC,SAASm6D,EAAKj+D,EAAGuI,EAAGC,EAAG4T,GACrB,OAAU,IAANpc,EAYN,SAAcuI,EAAGC,EAAG4T,GAClB,OAAQ7T,EAAIC,GAAQD,EAAK6T,EAZhB0hD,CAAKv1D,EAAGC,EAAG4T,GAEV,IAANpc,GAAiB,IAANA,EAiBjB,SAAauI,EAAGC,EAAG4T,GACjB,OAAO7T,EAAIC,EAAI4T,EAjBN4hD,CAAIz1D,EAAGC,EAAG4T,GAET,IAANpc,EAUN,SAAeuI,EAAGC,EAAG4T,GACnB,OAAQ7T,EAAIC,EAAMD,EAAI6T,EAAM5T,EAAI4T,EAVvB2hD,CAAMx1D,EAAGC,EAAG4T,GAEd,EAsBT,SAASkwC,EAAS5pD,EAAMmZ,EAAKwH,GAK3B,OAJA3gB,EAAK2gB,KAASxH,IAAQ,GACtBnZ,EAAK2gB,KAASxH,IAAQ,GACtBnZ,EAAK2gB,KAASxH,IAAQ,EACtBnZ,EAAK2gB,KAASxH,EACPwH,EArDTuqB,EAAKrG,OAAS,EACdqG,EAAKtG,GAAK,OACVsG,EAAK/qC,KAAO,GACZ+qC,EAAK7xB,KAAO,IACZ6xB,EAAKh7B,UAAY,GACjBg7B,EAAKiD,KAAOxwC,EAAOkH,MAAM,GAAI,GAC7BqmC,EAAKra,IAAM,IAAIqa,EAsDf5vC,EAAOD,QAAU6vC,I;;;;;GCtQjB5vC,EAAOD,QAAU,EAAQ,M;;;;;GCAzBC,EAAOD,QAAU,EAAQ,M;;;;;GCAzBC,EAAOD,QAAU,EAAQ,M;;;;;GCAzBC,EAAOD,QAAU,EAAQ,M;;;;;GCAzBC,EAAOD,QAAU,EAAQ,M;;;;;GCAzBC,EAAOD,QAAU,EAAQ,M;;;;;GCAzBC,EAAOD,QAAU,EAAQ,M;;;;;GCAzBC,EAAOD,QAAU,EAAQ,M,8BCRzB;;;;;;;;;;;;;AAeA,MAAMqQ,EAAS,EAAQ,GAmDvB,SAASkwE,EAAa/1E,EAAGC,GACvB,OAASD,EAAIC,GAAK,IAAO,GAG3B,SAAS+1E,EAAWh2E,EAAGC,EAAG+R,GACxB,OAAQhS,EAAKgS,EAAI,EAAO/R,IAAM+R,EAAI,GAGpC,SAASikE,EAAOj2E,EAAGC,GACjB,OAAQD,EAAIC,IAAO,GAOrB,SAASi2E,EAAOl2E,EAAGC,GACjB,OAAQA,EAAID,IAAO,GAuCrBxK,EAAQ2gF,YArGR,SAAqBn2E,EAAGC,GAItB,GAHA4F,EAAO/N,EAAO8B,SAASoG,IACvB6F,EAAO/N,EAAO8B,SAASqG,IAEnB81E,EAAa/1E,EAAE9H,OAAQ,GACzB,OAAO69E,EAAa91E,EAAE/H,OAAQ,GAWhC,IAAI8Z,EAAIhS,EAAE9H,OAAS+H,EAAE/H,OAErB,IAAK,IAAIxC,EAAI,EAAGA,EAAIuK,EAAE/H,OAAQxC,IAC5Bsc,GAAKhS,EAAEtK,EAAIsK,EAAE9H,QAAU+H,EAAEvK,GAE3B,OAAQsc,EAAI,IAAO,IAiFrBxc,EAAQusE,UA9ER,SAAmB/hE,EAAGC,GAMpB,GALA4F,EAAO/N,EAAO8B,SAASoG,IACvB6F,EAAO/N,EAAO8B,SAASqG,KAIlB81E,EAAa/1E,EAAE9H,OAAQ+H,EAAE/H,QAC5B,OAAO,EAET,IAAI8Z,EAAI,EAER,IAAK,IAAItc,EAAI,EAAGA,EAAIsK,EAAE9H,OAAQxC,IAC5Bsc,GAAKhS,EAAEtK,GAAKuK,EAAEvK,GAEhB,OAAQsc,EAAI,IAAO,IAiErBxc,EAAQ4gF,cA9DR,SAAuBp2E,EAAGC,GACxB,OAAO81E,EAAiB,IAAJ/1E,EAAc,IAAJC,IA8DhCzK,EAAQugF,aAAeA,EACvBvgF,EAAQwgF,WAAaA,EACrBxgF,EAAQygF,OAASA,EACjBzgF,EAAQ6gF,QAlDR,SAAiBr2E,EAAGC,GAClB,OAAQD,EAAIC,EAAI,IAAO,IAkDzBzK,EAAQ0gF,OAASA,EACjB1gF,EAAQ8gF,QA5CR,SAAiBt2E,EAAGC,GAClB,OAAQA,EAAID,EAAI,IAAO,IA4CzBxK,EAAQ+gF,QAzCR,SAAiBv2E,EAAGC,GAClB,OAAO+1E,EAAWh2E,EAAGC,EAAGg2E,EAAOh2E,EAAGD,KAyCpCxK,EAAQghF,QAtCR,SAAiBx2E,EAAGC,GAClB,OAAO+1E,EAAWh2E,EAAGC,EAAGi2E,EAAOj2E,EAAGD,KAsCpCxK,EAAQihF,QAnCR,SAAiBz2E,GACf,OAAY,EAAJA,IAAWA,GAAK,GAAM,IAmChCxK,EAAQkhF,SAhCR,SAAkB12E,GAChB,OAAkC,GAAzBA,GAAK,IAAQA,GAAK,KAgC7BxK,EAAQmhF,SA7BR,SAAkB32E,EAAGC,EAAG+R,GACtBnM,EAAO/N,EAAO8B,SAASoG,IACvB6F,EAAO/N,EAAO8B,SAASqG,IACvB4F,EAAOkwE,EAAa/1E,EAAE9H,OAAQ+H,EAAE/H,SAEhC,MAAM0+E,EAAS5kE,EAAI,EAAK,IAClB6kE,EAAmB,MAAT7kE,EAAI,GAEpB,IAAK,IAAItc,EAAI,EAAGA,EAAIsK,EAAE9H,OAAQxC,IAC5BsK,EAAEtK,GAAMsK,EAAEtK,GAAKkhF,EAAU32E,EAAEvK,GAAKmhF,K,m8zBClHpC,YAEa,EAAAC,oBAAmB,OAC3B,EAAA3mB,sBAAoB,IAqBvB,CAAE15C,KAAM,SAAU+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,6BACzD,CAAEnkD,KAAM,YAAa+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,kCAC5D,CAAEnkD,KAAM,UAAW+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,kEAC1D,CAAEnkD,KAAM,WAAY+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,kEAM3D,CAAEnkD,KAAM,YAAa+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,uCAC5D,CAAEnkD,KAAM,SAAU+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,+CACzD,CAAEnkD,KAAM,QAAS+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,8CACxD,CAAEnkD,KAAM,SAAU+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,wDAMzD,CAAEnkD,KAAM,YAAa+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,0CAC5D,CAAEnkD,KAAM,YAAa+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,2CAqB5D,CACEnkD,KAAM,uBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YACE,kNAEJ,CACEnkD,KAAM,6BACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YACE,kNAEJ,CAAEnkD,KAAM,iBAAkB+jB,OAAQ,IAAKnoB,IAAK,OAAQuoD,YAAa,oC,qHC/EnE,WAEMmc,EAAc,SAACzkE,GACnB,IAAMD,EAAMC,EAAO/X,SAAS,IACtBy8E,EAAS3kE,EAAIna,OAAS,GAAM,EAAIma,EAAM,IAAMA,EAClD,OAAO,IAAA7B,OAAMwmE,IAGF,EAAAC,YAAc,SAAC5kE,GAC1B,IAAMrZ,EAAaqZ,EAAIna,OAAS,EAGhC,GAAmB,IAAfc,EACF,MAAO,KAIJ,GAAmB,IAAfA,EAAkB,CACzB,IAAM7B,EAAI4F,SAASsV,EAAK,IACxB,OAAI,EAAIlb,GAAKA,EAAI,IACPA,EAAI,IAAIoD,SAAS,IAElB,KAAO8X,EAKb,GAAI,EAAIrZ,GAAcA,GAAc,GACvC,OAAO+9E,EAAY/9E,GAAcqZ,EAI9B,GAAI,GAAKrZ,GAAcA,GAAc,IACxC,MAAO,KAAO+9E,EAAY/9E,GAAcqZ,EAIrC,GAAI,IAAMrZ,GAAcA,GAAc,IACzC,MAAO,KAAO+9E,EAAY/9E,GAAcqZ,EAKxC,KAAM,8DAIG,EAAA6kE,YAAc,SAACC,GAA4B,WAAOA,EAAMt2E,KAAK,M,6BC7C1ErL,EAAQwD,WAuCR,SAAqBo+E,GACnB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAuC,GAA9BE,EAAWC,GAAuB,EAAKA,GA1ClDhiF,EAAQ8P,YAiDR,SAAsB8xE,GACpB,IAAIvqD,EAcAn3B,EAbA2hF,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvBv7E,EAAM,IAAI27E,EAVhB,SAAsBL,EAAKG,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,EAS9BE,CAAYN,EAAKG,EAAUC,IAEzCG,EAAU,EAGV99E,EAAM29E,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAK7hF,EAAI,EAAGA,EAAImE,EAAKnE,GAAK,EACxBm3B,EACG+qD,EAAUR,EAAI75E,WAAW7H,KAAO,GAChCkiF,EAAUR,EAAI75E,WAAW7H,EAAI,KAAO,GACpCkiF,EAAUR,EAAI75E,WAAW7H,EAAI,KAAO,EACrCkiF,EAAUR,EAAI75E,WAAW7H,EAAI,IAC/BoG,EAAI67E,KAAc9qD,GAAO,GAAM,IAC/B/wB,EAAI67E,KAAc9qD,GAAO,EAAK,IAC9B/wB,EAAI67E,KAAmB,IAAN9qD,EAGK,IAApB2qD,IACF3qD,EACG+qD,EAAUR,EAAI75E,WAAW7H,KAAO,EAChCkiF,EAAUR,EAAI75E,WAAW7H,EAAI,KAAO,EACvCoG,EAAI67E,KAAmB,IAAN9qD,GAGK,IAApB2qD,IACF3qD,EACG+qD,EAAUR,EAAI75E,WAAW7H,KAAO,GAChCkiF,EAAUR,EAAI75E,WAAW7H,EAAI,KAAO,EACpCkiF,EAAUR,EAAI75E,WAAW7H,EAAI,KAAO,EACvCoG,EAAI67E,KAAc9qD,GAAO,EAAK,IAC9B/wB,EAAI67E,KAAmB,IAAN9qD,GAGnB,OAAO/wB,GA3FTtG,EAAQwI,cAkHR,SAAwB65E,GAQtB,IAPA,IAAIhrD,EACAhzB,EAAMg+E,EAAM3/E,OACZ4/E,EAAaj+E,EAAM,EACnB0c,EAAQ,GAIH7gB,EAAI,EAAGqiF,EAAOl+E,EAAMi+E,EAAYpiF,EAAIqiF,EAAMriF,GAH9B,MAInB6gB,EAAMjZ,KAAK06E,EAAYH,EAAOniF,EAAIA,EAJf,MAIqCqiF,EAAOA,EAAQriF,EAJpD,QAQF,IAAfoiF,GACFjrD,EAAMgrD,EAAMh+E,EAAM,GAClB0c,EAAMjZ,KACJ26E,EAAOprD,GAAO,GACdorD,EAAQprD,GAAO,EAAK,IACpB,OAEsB,IAAfirD,IACTjrD,GAAOgrD,EAAMh+E,EAAM,IAAM,GAAKg+E,EAAMh+E,EAAM,GAC1C0c,EAAMjZ,KACJ26E,EAAOprD,GAAO,IACdorD,EAAQprD,GAAO,EAAK,IACpBorD,EAAQprD,GAAO,EAAK,IACpB,MAIJ,OAAOtW,EAAM1V,KAAK,KAzIpB,IALA,IAAIo3E,EAAS,GACTL,EAAY,GACZH,EAA4B,oBAAfr/E,WAA6BA,WAAakJ,MAEvD4D,EAAO,mEACFxP,EAAI,EAAGmE,EAAMqL,EAAKhN,OAAQxC,EAAImE,IAAOnE,EAC5CuiF,EAAOviF,GAAKwP,EAAKxP,GACjBkiF,EAAU1yE,EAAK3H,WAAW7H,IAAMA,EAQlC,SAAS4hF,EAASF,GAChB,IAAIv9E,EAAMu9E,EAAIl/E,OAEd,GAAI2B,EAAM,EAAI,EACZ,MAAM,IAAIpB,MAAM,kDAKlB,IAAI8+E,EAAWH,EAAIx7E,QAAQ,KAO3B,OANkB,IAAd27E,IAAiBA,EAAW19E,GAMzB,CAAC09E,EAJcA,IAAa19E,EAC/B,EACA,EAAK09E,EAAW,GAsEtB,SAASS,EAAaH,EAAO/8E,EAAOC,GAGlC,IAFA,IAAI8xB,EARoBvZ,EASpBua,EAAS,GACJn4B,EAAIoF,EAAOpF,EAAIqF,EAAKrF,GAAK,EAChCm3B,GACIgrD,EAAMniF,IAAM,GAAM,WAClBmiF,EAAMniF,EAAI,IAAM,EAAK,QACP,IAAfmiF,EAAMniF,EAAI,IACbm4B,EAAOvwB,KAdF26E,GADiB3kE,EAeMuZ,IAdT,GAAK,IACxBorD,EAAO3kE,GAAO,GAAK,IACnB2kE,EAAO3kE,GAAO,EAAI,IAClB2kE,EAAa,GAAN3kE,IAaT,OAAOua,EAAOhtB,KAAK,IAjGrB+2E,EAAU,IAAIr6E,WAAW,IAAM,GAC/Bq6E,EAAU,IAAIr6E,WAAW,IAAM,I;;AClB/B/H,EAAQ2G,KAAO,SAAUnC,EAAQ0C,EAAQw7E,EAAMC,EAAM1vE,GACnD,IAAIpJ,EAAGvJ,EACHsiF,EAAiB,EAAT3vE,EAAc0vE,EAAO,EAC7BE,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACT7iF,EAAIwiF,EAAQzvE,EAAS,EAAK,EAC1BzS,EAAIkiF,GAAQ,EAAI,EAChBzgF,EAAIuC,EAAO0C,EAAShH,GAOxB,IALAA,GAAKM,EAELqJ,EAAI5H,GAAM,IAAO8gF,GAAU,EAC3B9gF,KAAQ8gF,EACRA,GAASH,EACFG,EAAQ,EAAGl5E,EAAS,IAAJA,EAAWrF,EAAO0C,EAAShH,GAAIA,GAAKM,EAAGuiF,GAAS,GAKvE,IAHAziF,EAAIuJ,GAAM,IAAOk5E,GAAU,EAC3Bl5E,KAAQk5E,EACRA,GAASJ,EACFI,EAAQ,EAAGziF,EAAS,IAAJA,EAAWkE,EAAO0C,EAAShH,GAAIA,GAAKM,EAAGuiF,GAAS,GAEvE,GAAU,IAANl5E,EACFA,EAAI,EAAIi5E,MACH,IAAIj5E,IAAMg5E,EACf,OAAOviF,EAAI0iF,IAAsBpzE,KAAd3N,GAAK,EAAI,GAE5B3B,GAAQmI,KAAK+E,IAAI,EAAGm1E,GACpB94E,GAAQi5E,EAEV,OAAQ7gF,GAAK,EAAI,GAAK3B,EAAImI,KAAK+E,IAAI,EAAG3D,EAAI84E,IAG5C3iF,EAAQgE,MAAQ,SAAUQ,EAAQrD,EAAO+F,EAAQw7E,EAAMC,EAAM1vE,GAC3D,IAAIpJ,EAAGvJ,EAAGC,EACNqiF,EAAiB,EAAT3vE,EAAc0vE,EAAO,EAC7BE,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBI,EAAe,KAATN,EAAcl6E,KAAK+E,IAAI,GAAI,IAAM/E,KAAK+E,IAAI,GAAI,IAAM,EAC1DtN,EAAIwiF,EAAO,EAAKzvE,EAAS,EACzBzS,EAAIkiF,EAAO,GAAK,EAChBzgF,EAAId,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQsH,KAAK+e,IAAIrmB,GAEb+E,MAAM/E,IAAUA,IAAUyO,KAC5BtP,EAAI4F,MAAM/E,GAAS,EAAI,EACvB0I,EAAIg5E,IAEJh5E,EAAIpB,KAAK6F,MAAM7F,KAAK0T,IAAIhb,GAASsH,KAAKy6E,KAClC/hF,GAASZ,EAAIkI,KAAK+E,IAAI,GAAI3D,IAAM,IAClCA,IACAtJ,GAAK,IAGLY,GADE0I,EAAIi5E,GAAS,EACNG,EAAK1iF,EAEL0iF,EAAKx6E,KAAK+E,IAAI,EAAG,EAAIs1E,IAEpBviF,GAAK,IACfsJ,IACAtJ,GAAK,GAGHsJ,EAAIi5E,GAASD,GACfviF,EAAI,EACJuJ,EAAIg5E,GACKh5E,EAAIi5E,GAAS,GACtBxiF,GAAMa,EAAQZ,EAAK,GAAKkI,KAAK+E,IAAI,EAAGm1E,GACpC94E,GAAQi5E,IAERxiF,EAAIa,EAAQsH,KAAK+E,IAAI,EAAGs1E,EAAQ,GAAKr6E,KAAK+E,IAAI,EAAGm1E,GACjD94E,EAAI,IAID84E,GAAQ,EAAGn+E,EAAO0C,EAAShH,GAAS,IAAJI,EAAUJ,GAAKM,EAAGF,GAAK,IAAKqiF,GAAQ,GAI3E,IAFA94E,EAAKA,GAAK84E,EAAQriF,EAClBsiF,GAAQD,EACDC,EAAO,EAAGp+E,EAAO0C,EAAShH,GAAS,IAAJ2J,EAAU3J,GAAKM,EAAGqJ,GAAK,IAAK+4E,GAAQ,GAE1Ep+E,EAAO0C,EAAShH,EAAIM,IAAU,IAAJyB,I,cCnF5B,IAAI8C,EAAW,GAAGA,SAElB9E,EAAOD,QAAU8L,MAAM1J,SAAW,SAAUkE,GAC1C,MAA6B,kBAAtBvB,EAAS1E,KAAKiG,K,gBCHrB,IAagBmK,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,IAAe,EAAQ,KAAsB,EAAQ,KAAgB,EAAQ,IAAiB,EAAQ,KAAoB,EAAQ,IAAU,EAAQ,IAAW,EAAQ,IAAa,EAAQ,KAAa,EAAQ,IAAa,EAAQ,KAAa,EAAQ,KAAW,EAAQ,KAAgB,EAAQ,IAAW,EAAQ,KAAa,EAAQ,IAAa,EAAQ,GAAkB,EAAQ,KAAe,EAAQ,KAAe,EAAQ,KAAuB,EAAQ,KAAe,EAAQ,KAAe,EAAQ,KAAmB,EAAQ,KAAmB,EAAQ,KAAmB,EAAQ,KAAsB,EAAQ,KAAoB,EAAQ,KAAiB,EAAQ,KAAU,EAAQ,KAAgB,EAAQ,KAAU,EAAQ,KAAa,EAAQ,KAYryBA,I,gCCfN,IAagBA,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAY3C,WAEG,GAA0B,mBAAfpN,YAAX,CAKA,IAEI6O,EAFIzB,EACMc,IACQW,UAGlBixE,EAAYjxE,EAAUN,MAGZM,EAAUN,KAAO,SAAUwxE,GAqBrC,GAnBIA,aAAsB//E,cACtB+/E,EAAa,IAAIxgF,WAAWwgF,KAK5BA,aAAsB5Z,WACQ,oBAAtB6Z,mBAAqCD,aAAsBC,mBACnED,aAAsB3Z,YACtB2Z,aAAsBtZ,aACtBsZ,aAAsBE,YACtBF,aAAsBnyE,aACtBmyE,aAAsBnzB,cACtBmzB,aAAsBhzB,gBAEtBgzB,EAAa,IAAIxgF,WAAWwgF,EAAW5+E,OAAQ4+E,EAAW7/E,WAAY6/E,EAAW5/E,aAIjF4/E,aAAsBxgF,WAAY,CAMlC,IAJA,IAAI2gF,EAAuBH,EAAW5/E,WAGlC2O,EAAQ,GACHjS,EAAI,EAAGA,EAAIqjF,EAAsBrjF,IACtCiS,EAAMjS,IAAM,IAAMkjF,EAAWljF,IAAO,GAAMA,EAAI,EAAK,EAIvDijF,EAAU9iF,KAAK2C,KAAMmP,EAAOoxE,QAG5BJ,EAAU95E,MAAMrG,KAAMgI,aAItBlJ,UAAYoQ,GAtDxB,GA0DOzB,EAASc,IAAIW,Y,gBCzEnB,IAagBzB,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAY3C,WAEG,IAAIY,EAAIZ,EAEJyB,EADQb,EAAEE,IACQW,UAClBgB,EAAQ7B,EAAE8B,IAwHd,SAASqwE,EAAWviE,GAChB,OAASA,GAAQ,EAAK,WAAgBA,IAAS,EAAK,SApH1C/N,EAAMuwE,MAAQvwE,EAAMwwE,QAAU,CAcxCnxE,UAAW,SAAUC,GAOjB,IALA,IAAIL,EAAQK,EAAUL,MAClBC,EAAWI,EAAUJ,SAGrBuxE,EAAa,GACRzjF,EAAI,EAAGA,EAAIkS,EAAUlS,GAAK,EAAG,CAClC,IAAI+I,EAAakJ,EAAMjS,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM,MAC1DyjF,EAAW77E,KAAKpB,OAAO0C,aAAaH,IAGxC,OAAO06E,EAAWt4E,KAAK,KAgB3BiI,MAAO,SAAUswE,GAMb,IAJA,IAAIC,EAAiBD,EAASlhF,OAG1ByP,EAAQ,GACHjS,EAAI,EAAGA,EAAI2jF,EAAgB3jF,IAChCiS,EAAMjS,IAAM,IAAM0jF,EAAS77E,WAAW7H,IAAO,GAAMA,EAAI,EAAK,GAGhE,OAAOgS,EAAU1Q,OAAO2Q,EAAwB,EAAjB0xE,KAOvC3wE,EAAM4wE,QAAU,CAcZvxE,UAAW,SAAUC,GAOjB,IALA,IAAIL,EAAQK,EAAUL,MAClBC,EAAWI,EAAUJ,SAGrBuxE,EAAa,GACRzjF,EAAI,EAAGA,EAAIkS,EAAUlS,GAAK,EAAG,CAClC,IAAI+I,EAAYu6E,EAAYrxE,EAAMjS,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM,OACrEyjF,EAAW77E,KAAKpB,OAAO0C,aAAaH,IAGxC,OAAO06E,EAAWt4E,KAAK,KAgB3BiI,MAAO,SAAUswE,GAMb,IAJA,IAAIC,EAAiBD,EAASlhF,OAG1ByP,EAAQ,GACHjS,EAAI,EAAGA,EAAI2jF,EAAgB3jF,IAChCiS,EAAMjS,IAAM,IAAMsjF,EAAWI,EAAS77E,WAAW7H,IAAO,GAAMA,EAAI,EAAK,IAG3E,OAAOgS,EAAU1Q,OAAO2Q,EAAwB,EAAjB0xE,KAzH3C,GAmIOpzE,EAAS0C,IAAIswE,Q,gBClJnB,IAiBOpyE,EAEAa,EANSzB,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAgBpCyB,GAFAb,EAAIZ,GACMc,IACQW,UACVb,EAAE8B,IAKQ4wE,UAAY,CAgB9BxxE,UAAW,SAAUC,EAAWwxE,GAAQ,GAEpC,IAAI7xE,EAAQK,EAAUL,MAClBC,EAAWI,EAAUJ,SACrBkJ,EAAM0oE,EAAUhhF,KAAKihF,UAAYjhF,KAAKijC,KAG1CzzB,EAAUK,QAIV,IADA,IAAIqzB,EAAc,GACThmC,EAAI,EAAGA,EAAIkS,EAAUlS,GAAK,EAO/B,IANA,IAIIimC,GAJSh0B,EAAMjS,IAAM,KAAc,GAAMA,EAAI,EAAK,EAAY,MAI1C,IAHXiS,EAAOjS,EAAI,IAAO,KAAQ,IAAOA,EAAI,GAAK,EAAK,EAAM,MAG1B,EAF3BiS,EAAOjS,EAAI,IAAO,KAAQ,IAAOA,EAAI,GAAK,EAAK,EAAM,IAIzD8G,EAAI,EAAIA,EAAI,GAAO9G,EAAQ,IAAJ8G,EAAWoL,EAAWpL,IAClDk/B,EAAYp+B,KAAKwT,EAAI8qB,OAAQD,IAAa,GAAK,EAAIn/B,GAAO,KAKlE,IAAIq/B,EAAc/qB,EAAI8qB,OAAO,IAC7B,GAAIC,EACA,KAAOH,EAAYxjC,OAAS,GACxBwjC,EAAYp+B,KAAKu+B,GAIzB,OAAOH,EAAY76B,KAAK,KAkB5BiI,MAAO,SAAUgzB,EAAW09C,GAAQ,GAEhC,IAAIz9C,EAAkBD,EAAU5jC,OAC5B4Y,EAAM0oE,EAAUhhF,KAAKihF,UAAYjhF,KAAKijC,KACtCO,EAAaxjC,KAAKyjC,YAEtB,IAAKD,EAAY,CACbA,EAAaxjC,KAAKyjC,YAAc,GAChC,IAAK,IAAIz/B,EAAI,EAAGA,EAAIsU,EAAI5Y,OAAQsE,IAC5Bw/B,EAAWlrB,EAAIvT,WAAWf,IAAMA,EAKxC,IAAIq/B,EAAc/qB,EAAI8qB,OAAO,IAC7B,GAAIC,EAAa,CACb,IAAIK,EAAeJ,EAAUlgC,QAAQigC,IACf,IAAlBK,IACAH,EAAkBG,GAK1B,OAQR,SAAmBJ,EAAWC,EAAiBC,GAG3C,IAFA,IAAIr0B,EAAQ,GACRc,EAAS,EACJ/S,EAAI,EAAGA,EAAIqmC,EAAiBrmC,IACjC,GAAIA,EAAI,EAAG,CACP,IAAIymC,EAAQH,EAAWF,EAAUv+B,WAAW7H,EAAI,KAASA,EAAI,EAAK,EAC9D0mC,EAAQJ,EAAWF,EAAUv+B,WAAW7H,MAAS,EAAKA,EAAI,EAAK,EAC/D2mC,EAAeF,EAAQC,EAC3Bz0B,EAAMc,IAAW,IAAM4zB,GAAiB,GAAM5zB,EAAS,EAAK,EAC5DA,IAGR,OAAOf,EAAU1Q,OAAO2Q,EAAOc,GApBpB6zB,CAAUR,EAAWC,EAAiBC,IAIjDP,KAAM,oEACNg+C,UAAW,oEAmBZxzE,EAAS0C,IAAI4wE,Y,gBCzInB,IAiBO1yE,EAEAa,EACAkD,EACA26B,EAKA64B,EAbSn4D,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,IAgBvDyB,GAFAb,EAAIZ,GACMc,IACQW,UAClBkD,EAAS/D,EAAE4E,KACX85B,EAAS36B,EAAO26B,OAKhB64B,EAASxzD,EAAOwzD,OAAS74B,EAAOt+B,OAAO,CACvC8D,SAAU,WACNvS,KAAKgkC,MAAQ,IAAI90B,EAAUN,KAAK,CAC5B,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,cAI5C+D,YAAa,WACT,IAAIQ,EAAO45B,EAAOp6B,YAAYtV,KAAK2C,MAInC,OAFAmT,EAAK/D,UAAY,EAEV+D,KAkBf9E,EAAEu3D,OAAS74B,EAAOn6B,cAAcgzD,GAgBhCv3D,EAAE6yE,WAAan0C,EAAOh6B,kBAAkB6yD,GAIrCn4D,EAASm4D,S,gBC7Ef,IAiBOv3D,EACA4gC,EACAwpB,EACAC,EACAtmD,EACAwmD,EAKAiN,EAdSp4D,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,IAAe,EAAQ,IAe9EwhC,GADA5gC,EAAIZ,GACMyhC,IACVupB,EAAUxpB,EAAME,KAChBupB,EAAezpB,EAAM//B,UACrBkD,EAAS/D,EAAE4E,KACX2lD,EAASxmD,EAAOwmD,OAKhBiN,EAASzzD,EAAOyzD,OAASjN,EAAOnqD,OAAO,CACvC8D,SAAU,WACNvS,KAAKgkC,MAAQ,IAAI00B,EAAa9pD,KAAK,CAC/B,IAAI6pD,EAAQ7pD,KAAK,WAAY,YAAa,IAAI6pD,EAAQ7pD,KAAK,WAAY,WACvE,IAAI6pD,EAAQ7pD,KAAK,WAAY,WAAa,IAAI6pD,EAAQ7pD,KAAK,UAAY,YACvE,IAAI6pD,EAAQ7pD,KAAK,WAAY,YAAa,IAAI6pD,EAAQ7pD,KAAK,WAAY,YACvE,IAAI6pD,EAAQ7pD,KAAK,WAAY,YAAa,IAAI6pD,EAAQ7pD,KAAK,WAAY,eAI/E+D,YAAa,WACT,IAAIQ,EAAOylD,EAAOjmD,YAAYtV,KAAK2C,MAInC,OAFAmT,EAAK/D,UAAY,GAEV+D,KAkBf9E,EAAEw3D,OAASjN,EAAOhmD,cAAcizD,GAgBhCx3D,EAAE8yE,WAAavoB,EAAO7lD,kBAAkB8yD,GAIrCp4D,EAASo4D,S,gBChFf,IAagBp4D,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,IAY9D,SAAUhI,GAEP,IAAI4I,EAAIZ,EACJa,EAAQD,EAAEE,IACVW,EAAYZ,EAAMY,UAClBmD,EAAS/D,EAAM+D,OAEfomD,EADQpqD,EAAE6gC,IACMC,KAChB/8B,EAAS/D,EAAE4E,KAGXmuE,EAAc,GACdC,EAAc,GACdC,EAAkB,IAGrB,WAGG,IADA,IAAI95E,EAAI,EAAGC,EAAI,EACNrJ,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzBgjF,EAAY55E,EAAI,EAAIC,IAAOrJ,EAAI,IAAMA,EAAI,GAAK,EAAK,GAEnD,IACImjF,GAAQ,EAAI/5E,EAAI,EAAIC,GAAK,EAC7BD,EAFWC,EAAI,EAGfA,EAAI85E,EAIR,IAAS/5E,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAASC,EAAI,EAAGA,EAAI,EAAGA,IACnB45E,EAAW75E,EAAI,EAAIC,GAAKA,GAAM,EAAID,EAAI,EAAIC,GAAK,EAAK,EAM5D,IADA,IAAI+5E,EAAO,EACFtkF,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAIzB,IAHA,IAAIukF,EAAmB,EACnBC,EAAmB,EAEd19E,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,GAAW,EAAPw9E,EAAa,CACb,IAAIG,GAAe,GAAK39E,GAAK,EACzB29E,EAAc,GACdD,GAAoB,GAAKC,EAEzBF,GAAoB,GAAME,EAAc,GAKrC,IAAPH,EAEAA,EAAQA,GAAQ,EAAK,IAErBA,IAAS,EAIjBF,EAAgBpkF,GAAKu7D,EAAQj6D,OAAOijF,EAAkBC,IA5C9D,GAiDA,IAAI39C,EAAI,IACP,WACG,IAAK,IAAI7mC,EAAI,EAAGA,EAAI,GAAIA,IACpB6mC,EAAE7mC,GAAKu7D,EAAQj6D,SAFvB,GASA,IAAIsnE,EAAO1zD,EAAO0zD,KAAOzzD,EAAO5D,OAAO,CASnC6D,IAAKD,EAAOC,IAAI7D,OAAO,CACnBmzE,aAAc,MAGlBrvE,SAAU,WAEN,IADA,IAAIiL,EAAQxd,KAAK6hF,OAAS,GACjB3kF,EAAI,EAAGA,EAAI,GAAIA,IACpBsgB,EAAMtgB,GAAK,IAAIu7D,EAAQ7pD,KAG3B5O,KAAK6R,WAAa,KAAO,EAAI7R,KAAKsS,IAAIsvE,cAAgB,IAG1D1vE,gBAAiB,SAAU+xB,EAAG//B,GAM1B,IAJA,IAAIsZ,EAAQxd,KAAK6hF,OACbC,EAAkB9hF,KAAK6R,UAAY,EAG9B3U,EAAI,EAAGA,EAAI4kF,EAAiB5kF,IAAK,CAEtC,IAAI6kF,EAAO99C,EAAE//B,EAAS,EAAIhH,GACtB8kF,EAAO/9C,EAAE//B,EAAS,EAAIhH,EAAI,GAG9B6kF,EACoC,UAA7BA,GAAO,EAAOA,IAAQ,IACO,YAA7BA,GAAO,GAAOA,IAAQ,GAE7BC,EACsC,UAA/BA,GAAQ,EAAOA,IAAS,IACO,YAA/BA,GAAQ,GAAOA,IAAS,IAI3BC,EAAOzkE,EAAMtgB,IACZkyC,MAAQ4yC,EACbC,EAAK5yC,KAAQ0yC,EAIjB,IAAK,IAAIv0D,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CAErC,IAAK,IAAIhmB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAGxB,IADA,IAAI06E,EAAO,EAAGC,EAAO,EACZ16E,EAAI,EAAGA,EAAI,EAAGA,IAEnBy6E,IADID,EAAOzkE,EAAMhW,EAAI,EAAIC,IACZ2nC,KACb+yC,GAAQF,EAAK5yC,IAIjB,IAAI+yC,EAAKr+C,EAAEv8B,GACX46E,EAAGhzC,KAAO8yC,EACVE,EAAG/yC,IAAO8yC,EAEd,IAAS36E,EAAI,EAAGA,EAAI,EAAGA,IAEnB,KAAI66E,EAAMt+C,GAAGv8B,EAAI,GAAK,GAClB86E,EAAMv+C,GAAGv8B,EAAI,GAAK,GAClB+6E,EAASD,EAAIlzC,KACbozC,EAASF,EAAIjzC,IAKjB,IAFI6yC,EAAOG,EAAIjzC,MAASmzC,GAAU,EAAMC,IAAW,IAC/CL,EAAOE,EAAIhzC,KAASmzC,GAAU,EAAMD,IAAW,IAC1C96E,EAAI,EAAGA,EAAI,EAAGA,KACfw6E,EAAOzkE,EAAMhW,EAAI,EAAIC,IACpB2nC,MAAQ8yC,EACbD,EAAK5yC,KAAQ8yC,EAKrB,IAAK,IAAIM,EAAY,EAAGA,EAAY,GAAIA,IAAa,CACjD,IAKIC,GADAT,EAAOzkE,EAAMilE,IACErzC,KACfuzC,EAAUV,EAAK5yC,IACfuzC,EAAYxB,EAAYqB,GAGxBG,EAAY,IACZV,EAAQQ,GAAWE,EAAcD,IAAa,GAAKC,EACnDT,EAAQQ,GAAWC,EAAcF,IAAa,GAAKE,IAEnDV,EAAQS,GAAYC,EAAY,GAAQF,IAAa,GAAKE,EAC1DT,EAAQO,GAAYE,EAAY,GAAQD,IAAa,GAAKC,GAI9D,IAAIC,EAAU9+C,EAAEs9C,EAAWoB,IAC3BI,EAAQzzC,KAAO8yC,EACfW,EAAQxzC,IAAO8yC,EAInB,IAAIW,EAAK/+C,EAAE,GACPg/C,EAASvlE,EAAM,GAKnB,IAJAslE,EAAG1zC,KAAO2zC,EAAO3zC,KACjB0zC,EAAGzzC,IAAO0zC,EAAO1zC,IAGR7nC,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAASC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAExB,IACIw6E,EAAOzkE,EADPilE,EAAYj7E,EAAI,EAAIC,GAEpBu7E,EAAQj/C,EAAE0+C,GACVQ,EAAUl/C,GAAIv8B,EAAI,GAAK,EAAK,EAAIC,GAChCy7E,EAAUn/C,GAAIv8B,EAAI,GAAK,EAAK,EAAIC,GAGpCw6E,EAAK7yC,KAAO4zC,EAAM5zC,MAAS6zC,EAAQ7zC,KAAO8zC,EAAQ9zC,KAClD6yC,EAAK5yC,IAAO2zC,EAAM3zC,KAAS4zC,EAAQ5zC,IAAO6zC,EAAQ7zC,IAKtD4yC,EAAOzkE,EAAM,GAAjB,IACI2lE,EAAgB7B,EAAgB9zD,GACpCy0D,EAAK7yC,MAAQ+zC,EAAc/zC,KAC3B6yC,EAAK5yC,KAAQ8zC,EAAc9zC,MAInC18B,YAAa,WAET,IAAIhR,EAAO3B,KAAKqR,MACZM,EAAYhQ,EAAKwN,MAEjBu2B,GADa1lC,KAAKsR,YACU,EAAhB3P,EAAKyN,UACjBg0E,EAAiC,GAAjBpjF,KAAK6R,UAGzBF,EAAU+zB,IAAc,IAAM,GAAQ,GAAKA,EAAY,GACvD/zB,GAAYlM,EAAKsK,MAAM21B,EAAY,GAAK09C,GAAiBA,IAAmB,GAAK,IAAM,IACvFzhF,EAAKyN,SAA8B,EAAnBuC,EAAUjS,OAG1BM,KAAKwR,WASL,IANA,IAAIgM,EAAQxd,KAAK6hF,OACbwB,EAAoBrjF,KAAKsS,IAAIsvE,aAAe,EAC5C0B,EAAoBD,EAAoB,EAGxCE,EAAY,GACPrmF,EAAI,EAAGA,EAAIomF,EAAmBpmF,IAAK,CAExC,IAAI+kF,EAAOzkE,EAAMtgB,GACbwlF,EAAUT,EAAK7yC,KACfuzC,EAAUV,EAAK5yC,IAGnBqzC,EAC4C,UAArCA,GAAW,EAAOA,IAAY,IACO,YAArCA,GAAW,GAAOA,IAAY,GAErCC,EAC4C,UAArCA,GAAW,EAAOA,IAAY,IACO,YAArCA,GAAW,GAAOA,IAAY,GAIrCY,EAAUz+E,KAAK69E,GACfY,EAAUz+E,KAAK49E,GAInB,OAAO,IAAIxzE,EAAUN,KAAK20E,EAAWF,IAGzCp0E,MAAO,WAIH,IAHA,IAAIA,EAAQoD,EAAOpD,MAAM5R,KAAK2C,MAE1Bwd,EAAQvO,EAAM4yE,OAAS7hF,KAAK6hF,OAAO5gF,MAAM,GACpC/D,EAAI,EAAGA,EAAI,GAAIA,IACpBsgB,EAAMtgB,GAAKsgB,EAAMtgB,GAAG+R,QAGxB,OAAOA,KAkBfZ,EAAEy3D,KAAOzzD,EAAOO,cAAckzD,GAgB9Bz3D,EAAEm1E,SAAWnxE,EAAOU,kBAAkB+yD,GAhT1C,CAiTErgE,MAGKgI,EAASq4D,O,gBCnUf,IAagBr4D,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ;;;;;;;;;;;AAuB3C,SAAUhI,GAEP,IAAI4I,EAAIZ,EACJa,EAAQD,EAAEE,IACVW,EAAYZ,EAAMY,UAClBmD,EAAS/D,EAAM+D,OACfD,EAAS/D,EAAE4E,KAGXwwE,EAAMv0E,EAAU1Q,OAAO,CACvB,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,EAAI,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAC5D,EAAG,GAAI,GAAK,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAG,GAC3D,EAAI,EAAG,GAAI,GAAK,EAAI,EAAG,GAAK,EAAG,GAAK,EAAI,EAAG,GAAI,GAAK,EAAI,EAAI,EAC5D,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAG,GAAI,GAAK,EAAI,EAAI,EAAG,GAAK,EAAG,GAAI,KAC3DklF,EAAMx0E,EAAU1Q,OAAO,CACvB,EAAG,GAAK,EAAI,EAAI,EAAI,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAI,EAAG,GAAK,EAAG,GAC3D,EAAG,GAAK,EAAI,EAAI,EAAG,GAAK,EAAG,GAAI,GAAI,GAAK,EAAG,GAAK,EAAI,EAAI,EAAI,EAC5D,GAAK,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAI,EAAG,GAC5D,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAG,GAAK,EAAG,GAAK,EAAI,EAAG,GAAI,GAC3D,GAAI,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAI,EAAG,KAC5DmlF,EAAMz0E,EAAU1Q,OAAO,CACtB,GAAI,GAAI,GAAI,GAAK,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAK,EAAI,EAAI,EAAI,EAC9D,EAAG,EAAK,EAAG,GAAI,GAAK,EAAI,EAAG,GAAK,EAAG,GAAI,GAAK,EAAG,GAAK,EAAG,GAAI,GAC3D,GAAI,GAAK,EAAI,EAAG,GAAK,EAAG,GAAI,GAAI,GAAK,EAAG,GAAK,EAAI,EAAG,GAAK,EAAI,EAC3D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAK,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAG,GAC9D,EAAG,GAAK,EAAG,GAAK,EAAI,EAAG,GAAI,GAAK,EAAG,GAAI,GAAI,GAAI,GAAK,EAAI,EAAI,IAC5DolF,EAAM10E,EAAU1Q,OAAO,CACvB,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAK,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAK,EAC5D,EAAG,GAAI,GAAK,EAAG,GAAK,EAAI,EAAG,GAAK,EAAI,EAAG,GAAK,EAAI,EAAG,GAAI,GAAI,GAC3D,EAAI,EAAG,GAAI,GAAK,EAAI,EAAI,EAAG,GAAI,GAAI,GAAK,EAAG,GAAI,GAAI,GAAK,EAAI,EAC5D,GAAK,EAAI,EAAG,GAAI,GAAI,GAAK,EAAG,GAAK,EAAI,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAC7D,EAAI,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAI,EAAG,GAAK,EAAI,EAAG,GAAI,GAAI,GAAI,KAE3DqlF,EAAO30E,EAAU1Q,OAAO,CAAE,EAAY,WAAY,WAAY,WAAY,aAC1EslF,EAAO50E,EAAU1Q,OAAO,CAAE,WAAY,WAAY,WAAY,WAAY,IAK1EmuC,EAAYv6B,EAAOu6B,UAAYt6B,EAAO5D,OAAO,CAC7C8D,SAAU,WACNvS,KAAKgkC,MAAS90B,EAAU1Q,OAAO,CAAC,WAAY,WAAY,WAAY,UAAY,cAGpF0T,gBAAiB,SAAU+xB,EAAG//B,GAG1B,IAAK,IAAIhH,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAEzB,IAAIgnC,EAAWhgC,EAAShH,EACpBinC,EAAaF,EAAEC,GAGnBD,EAAEC,GACgD,UAA3CC,GAAc,EAAOA,IAAe,IACO,YAA3CA,GAAc,GAAOA,IAAe,GAI/C,IASItkB,EAAIG,EAAIG,EAAIE,EAAIK,EAChBqjE,EAAI3rD,EAAI4rD,EAAIC,EAAIC,EAQhB9lF,EAlBAgmC,EAAKpkC,KAAKgkC,MAAM70B,MAChBsrD,EAAKopB,EAAI10E,MACTg1E,EAAKL,EAAI30E,MACTgvD,EAAKslB,EAAIt0E,MACTi1E,EAAKV,EAAIv0E,MACTk1E,EAAKV,EAAIx0E,MACTm1E,EAAKV,EAAIz0E,MAab,IAPA40E,EAAKlkE,EAAKukB,EAAE,GACZhM,EAAKpY,EAAKokB,EAAE,GACZ4/C,EAAK7jE,EAAKikB,EAAE,GACZ6/C,EAAK5jE,EAAK+jB,EAAE,GACZ8/C,EAAKxjE,EAAK0jB,EAAE,GAGHlnC,EAAI,EAAGA,EAAI,GAAIA,GAAK,EACzBkB,EAAKyhB,EAAMokB,EAAE//B,EAAOi6D,EAAGjhE,IAAK,EAE/BkB,GADOlB,EAAE,GACHqpD,EAAGvmC,EAAGG,EAAGE,GAAMo6C,EAAG,GACVv9D,EAAE,GACVspD,EAAGxmC,EAAGG,EAAGE,GAAMo6C,EAAG,GACVv9D,EAAE,GACVqnF,EAAGvkE,EAAGG,EAAGE,GAAMo6C,EAAG,GACVv9D,EAAE,GACVsnF,EAAGxkE,EAAGG,EAAGE,GAAMo6C,EAAG,GAElBgqB,EAAGzkE,EAAGG,EAAGE,GAAMo6C,EAAG,GAIrBr8D,GADAA,EAAKsmF,EADLtmF,GAAM,EACMimF,EAAGnnF,KACRwjB,EAAI,EACXb,EAAKa,EACLA,EAAKL,EACLA,EAAKqkE,EAAKvkE,EAAI,IACdA,EAAKH,EACLA,EAAK5hB,EAELA,EAAK2lF,EAAK9/C,EAAE//B,EAAOkgF,EAAGlnF,IAAK,EAE9BkB,GADOlB,EAAE,GACHunF,EAAGrsD,EAAG4rD,EAAGC,GAAME,EAAG,GACVjnF,EAAE,GACVsnF,EAAGpsD,EAAG4rD,EAAGC,GAAME,EAAG,GACVjnF,EAAE,GACVqnF,EAAGnsD,EAAG4rD,EAAGC,GAAME,EAAG,GACVjnF,EAAE,GACVspD,EAAGpuB,EAAG4rD,EAAGC,GAAME,EAAG,GAElB59B,EAAGnuB,EAAG4rD,EAAGC,GAAME,EAAG,GAIrB/lF,GADAA,EAAKsmF,EADLtmF,GAAM,EACMkmF,EAAGpnF,KACRgnF,EAAI,EACXH,EAAKG,EACLA,EAAKD,EACLA,EAAKS,EAAKV,EAAI,IACdA,EAAK5rD,EACLA,EAAKh6B,EAGTA,EAAQgmC,EAAE,GAAKjkB,EAAK8jE,EAAI,EACxB7/C,EAAE,GAAMA,EAAE,GAAK/jB,EAAK6jE,EAAI,EACxB9/C,EAAE,GAAMA,EAAE,GAAK1jB,EAAKqjE,EAAI,EACxB3/C,EAAE,GAAMA,EAAE,GAAKvkB,EAAKuY,EAAI,EACxBgM,EAAE,GAAMA,EAAE,GAAKpkB,EAAKgkE,EAAI,EACxB5/C,EAAE,GAAMhmC,GAGZuU,YAAa,WAET,IAAIhR,EAAO3B,KAAKqR,MACZM,EAAYhQ,EAAKwN,MAEjBs2B,EAAgC,EAAnBzlC,KAAKsR,YAClBo0B,EAA4B,EAAhB/jC,EAAKyN,SAGrBuC,EAAU+zB,IAAc,IAAM,KAAS,GAAKA,EAAY,GACxD/zB,EAA4C,IAA/B+zB,EAAY,KAAQ,GAAM,IACW,UAA3CD,GAAc,EAAOA,IAAe,IACO,YAA3CA,GAAc,GAAOA,IAAe,GAE3C9jC,EAAKyN,SAAoC,GAAxBuC,EAAUjS,OAAS,GAGpCM,KAAKwR,WAOL,IAJA,IAAI2B,EAAOnT,KAAKgkC,MACZI,EAAIjxB,EAAKhE,MAGJjS,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAExB,IAAI2oC,EAAMzB,EAAElnC,GAGZknC,EAAElnC,GAAqC,UAA7B2oC,GAAO,EAAOA,IAAQ,IACO,YAA7BA,GAAO,GAAOA,IAAQ,GAIpC,OAAO1yB,GAGXlE,MAAO,WACH,IAAIA,EAAQoD,EAAOpD,MAAM5R,KAAK2C,MAG9B,OAFAiP,EAAM+0B,MAAQhkC,KAAKgkC,MAAM/0B,QAElBA,KAKf,SAASs3C,EAAG/+C,EAAGC,EAAG4T,GACd,OAAQ,EAAM,EAAM,EAIxB,SAASmrC,EAAGh/C,EAAGC,EAAG4T,GACd,OAAS,EAAI,GAAU7T,EAAG,EAG9B,SAAS+8E,EAAG/8E,EAAGC,EAAG4T,GACd,OAAS,GAAQ,GAAQ,EAG7B,SAASmpE,EAAGh9E,EAAGC,EAAG4T,GACd,OAAS,EAAM,EAAQ,GAAM,EAGjC,SAASopE,EAAGj9E,EAAGC,EAAG4T,GACd,OAAQ,GAAO,GAAO,GAI1B,SAASqpE,EAAKl9E,EAAE7I,GACZ,OAAQ6I,GAAG7I,EAAM6I,IAAK,GAAG7I,EAkB7B0P,EAAEs+B,UAAYt6B,EAAOO,cAAc+5B,GAgBnCt+B,EAAEs2E,cAAgBtyE,EAAOU,kBAAkB45B,GA1O/C,CA2OElnC,MAGKgI,EAASk/B,Y,gBCxQf,IAiBOt+B,EACAC,EACAE,EACAU,EACAkD,EACAy6B,EACA75B,EAKA4xE,EAfSn3E,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,IAAW,EAAQ,IAe1Ea,GADAD,EAAIZ,GACMc,IACVC,EAAOF,EAAME,KACbU,EAAYZ,EAAMY,UAClBkD,EAAS/D,EAAE4E,KACX45B,EAAOz6B,EAAOy6B,KACd75B,EAAOZ,EAAOY,KAKd4xE,EAASxyE,EAAOwyE,OAASp2E,EAAKC,OAAO,CAQrC6D,IAAK9D,EAAKC,OAAO,CACbqG,QAAS,EACTjC,OAAQg6B,EACRvL,WAAY,IAchB1yB,KAAM,SAAU0D,GACZtS,KAAKsS,IAAMtS,KAAKsS,IAAI7D,OAAO6D,IAe/BqF,QAAS,SAAUD,EAAUT,GAkBzB,IAhBA,IAAI3E,EAAMtS,KAAKsS,IAGX04C,EAAOh4C,EAAKxU,OAAO8T,EAAIO,OAAQ6E,GAG/B6pB,EAAaryB,EAAU1Q,SACvBqmF,EAAa31E,EAAU1Q,OAAO,CAAC,IAG/BgjC,EAAkBD,EAAWpyB,MAC7B21E,EAAkBD,EAAW11E,MAC7B2F,EAAUxC,EAAIwC,QACdwsB,EAAahvB,EAAIgvB,WAGdE,EAAgB9hC,OAASoV,GAAS,CACrC,IAAIc,EAAQo1C,EAAKx4C,OAAOyE,GAAMvE,SAASmyE,GACvC75B,EAAK55C,QAQL,IALA,IAAI2zE,EAAanvE,EAAMzG,MACnB61E,EAAmBD,EAAWrlF,OAG9BulF,EAAervE,EACV1Y,EAAI,EAAGA,EAAIokC,EAAYpkC,IAAK,CACjC+nF,EAAej6B,EAAKt4C,SAASuyE,GAC7Bj6B,EAAK55C,QAML,IAHA,IAAI8zE,EAAoBD,EAAa91E,MAG5BnL,EAAI,EAAGA,EAAIghF,EAAkBhhF,IAClC+gF,EAAW/gF,IAAMkhF,EAAkBlhF,GAI3Cu9B,EAAW75B,OAAOkO,GAClBkvE,EAAgB,KAIpB,OAFAvjD,EAAWnyB,SAAqB,EAAV0F,EAEfysB,KAqBflzB,EAAEu2E,OAAS,SAAUltE,EAAUT,EAAM3E,GACjC,OAAOsyE,EAAOpmF,OAAO8T,GAAKqF,QAAQD,EAAUT,IAK7CxJ,EAASm3E,S,gBC9If,IAagBn3E,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,GAe/DA,EAASpP,KAAK4rE,IAAO,WACjB,IAAIA,EAAMx8D,EAASc,IAAIsF,gBAAgBpF,SA+BvC,SAAS02E,EAA4Bh2E,EAAOjL,EAAQ2N,EAAWoD,GAC3D,IAAImwE,EAGA9vE,EAAKtV,KAAK0V,IAGVJ,GACA8vE,EAAY9vE,EAAGrU,MAAM,GAGrBjB,KAAK0V,SAAMjV,GAEX2kF,EAAYplF,KAAK6V,WAErBZ,EAAOc,aAAaqvE,EAAW,GAG/B,IAAK,IAAIloF,EAAI,EAAGA,EAAI2U,EAAW3U,IAC3BiS,EAAMjL,EAAShH,IAAMkoF,EAAUloF,GAIvC,OApDA+sE,EAAI10D,UAAY00D,EAAIx7D,OAAO,CACvBqH,aAAc,SAAU3G,EAAOjL,GAE3B,IAAI+Q,EAASjV,KAAKyV,QACd5D,EAAYoD,EAAOpD,UAEvBszE,EAA4B9nF,KAAK2C,KAAMmP,EAAOjL,EAAQ2N,EAAWoD,GAGjEjV,KAAK6V,WAAa1G,EAAMlO,MAAMiD,EAAQA,EAAS2N,MAIvDo4D,EAAIz0D,UAAYy0D,EAAIx7D,OAAO,CACvBqH,aAAc,SAAU3G,EAAOjL,GAE3B,IAAI+Q,EAASjV,KAAKyV,QACd5D,EAAYoD,EAAOpD,UAGnBmE,EAAY7G,EAAMlO,MAAMiD,EAAQA,EAAS2N,GAE7CszE,EAA4B9nF,KAAK2C,KAAMmP,EAAOjL,EAAQ2N,EAAWoD,GAGjEjV,KAAK6V,WAAaG,KA2BnBi0D,EAvDS,GA2Dbx8D,EAASpP,KAAK4rE,M,gBC7EpB,IAmBOL,EAEAr0D,EARS9H,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,GAe/DA,EAASpP,KAAKurE,KACNA,EAAMn8D,EAASc,IAAIsF,gBAAgBpF,SAEnC8G,EAAYq0D,EAAIr0D,UAAYq0D,EAAIn7D,OAAO,CACvCqH,aAAc,SAAU3G,EAAOjL,GAE3B,IAAI+Q,EAASjV,KAAKyV,QACd5D,EAAYoD,EAAOpD,UACnByD,EAAKtV,KAAK0V,IACV8gD,EAAUx2D,KAAKqlF,SAGf/vE,IACAkhD,EAAUx2D,KAAKqlF,SAAW/vE,EAAGrU,MAAM,GAGnCjB,KAAK0V,SAAMjV,GAEf,IAAI2kF,EAAY5uB,EAAQv1D,MAAM,GAC9BgU,EAAOc,aAAaqvE,EAAW,GAG/B5uB,EAAQ3kD,EAAY,GAAM2kD,EAAQ3kD,EAAY,GAAK,EAAK,EAGxD,IAAK,IAAI3U,EAAI,EAAGA,EAAI2U,EAAW3U,IAC3BiS,EAAMjL,EAAShH,IAAMkoF,EAAUloF,MAK3C0sE,EAAIp0D,UAAYD,EAETq0D,GAIJn8D,EAASpP,KAAKurE,M,gBCvDpB,IAagBn8D,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ;;;;;;AAiB/DA,EAASpP,KAAKinF,WAAc,WACxB,IAAIA,EAAa73E,EAASc,IAAIsF,gBAAgBpF,SAEjD,SAAS82E,EAAQtnE,GAEhB,GAA8B,MAAxBA,GAAQ,GAAM,KAAgB,CACpC,IAAIuK,EAAMvK,GAAQ,GAAI,IAClB0K,EAAM1K,GAAQ,EAAG,IACjB6K,EAAY,IAAP7K,EAEE,MAAPuK,GAEJA,EAAK,EACM,MAAPG,GAEHA,EAAK,EACM,MAAPG,EAEHA,EAAK,IAIHA,KAKDH,KAKDH,EAGFvK,EAAO,EACPA,GAASuK,GAAM,GACfvK,GAAS0K,GAAM,EACf1K,GAAQ6K,OAIR7K,GAAS,GAAQ,GAEjB,OAAOA,EAaL,IAAI1I,EAAY+vE,EAAW/vE,UAAY+vE,EAAW72E,OAAO,CACrDqH,aAAc,SAAU3G,EAAOjL,GAE3B,IAAI+Q,EAASjV,KAAKyV,QACd5D,EAAYoD,EAAOpD,UACnByD,EAAKtV,KAAK0V,IACV8gD,EAAUx2D,KAAKqlF,SAGf/vE,IACAkhD,EAAUx2D,KAAKqlF,SAAW/vE,EAAGrU,MAAM,GAGnCjB,KAAK0V,SAAMjV,GAvB1B,SAAoB+1D,GAEwB,KAAtCA,EAAQ,GAAK+uB,EAAQ/uB,EAAQ,OAGjCA,EAAQ,GAAK+uB,EAAQ/uB,EAAQ,KAqB7BgvB,CAAWhvB,GAEX,IAAI4uB,EAAY5uB,EAAQv1D,MAAM,GACrBgU,EAAOc,aAAaqvE,EAAW,GAG/B,IAAK,IAAIloF,EAAI,EAAGA,EAAI2U,EAAW3U,IAC3BiS,EAAMjL,EAAShH,IAAMkoF,EAAUloF,MAO3C,OAFAooF,EAAW9vE,UAAYD,EAEhB+vE,EAvFgB,GA6FpB73E,EAASpP,KAAKinF,a,gBCjHpB,IAmBOlb,EAEA70D,EARS9H,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,GAe/DA,EAASpP,KAAK+rE,KACNA,EAAM38D,EAASc,IAAIsF,gBAAgBpF,SAEnC8G,EAAY60D,EAAI70D,UAAY60D,EAAI37D,OAAO,CACvCqH,aAAc,SAAU3G,EAAOjL,GAE3B,IAAI+Q,EAASjV,KAAKyV,QACd5D,EAAYoD,EAAOpD,UACnByD,EAAKtV,KAAK0V,IACV0vE,EAAYplF,KAAKylF,WAGjBnwE,IACA8vE,EAAYplF,KAAKylF,WAAanwE,EAAGrU,MAAM,GAGvCjB,KAAK0V,SAAMjV,GAEfwU,EAAOc,aAAaqvE,EAAW,GAG/B,IAAK,IAAIloF,EAAI,EAAGA,EAAI2U,EAAW3U,IAC3BiS,EAAMjL,EAAShH,IAAMkoF,EAAUloF,MAK3CktE,EAAI50D,UAAYD,EAET60D,GAIJ38D,EAASpP,KAAK+rE,M,gBCnDpB,IAmBOsb,EANSj4E,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,GAe/DA,EAASpP,KAAKqnF,MACNA,EAAMj4E,EAASc,IAAIsF,gBAAgBpF,UAEnC8G,UAAYmwE,EAAIj3E,OAAO,CACvBqH,aAAc,SAAU3G,EAAOjL,GAC3BlE,KAAKyV,QAAQM,aAAa5G,EAAOjL,MAIzCwhF,EAAIlwE,UAAYkwE,EAAIj3E,OAAO,CACvBqH,aAAc,SAAU3G,EAAOjL,GAC3BlE,KAAKyV,QAAQQ,aAAa9G,EAAOjL,MAIlCwhF,GAIJj4E,EAASpP,KAAKqnF,M,gBCrCpB,IAagBj4E,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,GAe/DA,EAAS+F,IAAImyE,SAAW,CACpBnyE,IAAK,SAAU7R,EAAMkQ,GAEjB,IAAID,EAAejQ,EAAKyN,SACpB8G,EAA6B,EAAZrE,EAGjBsE,EAAgBD,EAAiBtE,EAAesE,EAGhD0vE,EAAch0E,EAAeuE,EAAgB,EAGjDxU,EAAKkO,QACLlO,EAAKwN,MAAMy2E,IAAgB,IAAMzvE,GAAkB,GAAMyvE,EAAc,EAAK,EAC5EjkF,EAAKyN,UAAY+G,GAGrBI,MAAO,SAAU5U,GAEb,IAAIwU,EAAwD,IAAxCxU,EAAKwN,MAAOxN,EAAKyN,SAAW,IAAO,GAGvDzN,EAAKyN,UAAY+G,IAKlB1I,EAAS+F,IAAIqyE,W,gBC9CnB,IAagBp4E,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,GAe/DA,EAAS+F,IAAIsyE,SAAW,CACpBtyE,IAAK,SAAU7R,EAAMkQ,GAEjB,IAAIqE,EAA6B,EAAZrE,EAGjBsE,EAAgBD,EAAiBvU,EAAKyN,SAAW8G,EAGrDvU,EAAK+F,OAAO+F,EAASc,IAAIW,UAAUc,OAAOmG,EAAgB,IACrDzO,OAAO+F,EAASc,IAAIW,UAAU1Q,OAAO,CAAC2X,GAAiB,IAAK,KAGrEI,MAAO,SAAU5U,GAEb,IAAIwU,EAAwD,IAAxCxU,EAAKwN,MAAOxN,EAAKyN,SAAW,IAAO,GAGvDzN,EAAKyN,UAAY+G,IAKlB1I,EAAS+F,IAAIsyE,W,gBCzCnB,IAagBr4E,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,GAe/DA,EAAS+F,IAAIuyE,SAAW,CACpBvyE,IAAK,SAAU7R,EAAMkQ,GAEjBlQ,EAAK+F,OAAO+F,EAASc,IAAIW,UAAU1Q,OAAO,CAAC,YAAa,IAGxDiP,EAAS+F,IAAIwyE,YAAYxyE,IAAI7R,EAAMkQ,IAGvC0E,MAAO,SAAU5U,GAEb8L,EAAS+F,IAAIwyE,YAAYzvE,MAAM5U,GAG/BA,EAAKyN,aAKN3B,EAAS+F,IAAIuyE,W,gBCrCnB,IAagBt4E,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,GAe/DA,EAAS+F,IAAIwyE,YAAc,CACvBxyE,IAAK,SAAU7R,EAAMkQ,GAEjB,IAAIqE,EAA6B,EAAZrE,EAGrBlQ,EAAKkO,QACLlO,EAAKyN,UAAY8G,GAAmBvU,EAAKyN,SAAW8G,GAAmBA,IAG3EK,MAAO,SAAU5U,GAEb,IAAIgQ,EAAYhQ,EAAKwN,MAGjBjS,EAAIyE,EAAKyN,SAAW,EACxB,IAASlS,EAAIyE,EAAKyN,SAAW,EAAGlS,GAAK,EAAGA,IACpC,GAAMyU,EAAUzU,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM,IAAO,CACtDyE,EAAKyN,SAAWlS,EAAI,EACpB,SAOTuQ,EAAS+F,IAAIwyE,c,gBC5CnB,IAagBv4E,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,GAe/DA,EAAS+F,IAAIyyE,UAAY,CACrBzyE,IAAK,aAGL+C,MAAO,cAKJ9I,EAAS+F,IAAIyyE,Y,gBC3BnB,IAiBO53E,EAEA2F,EAEA1E,EARS7B,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,GAgBvDuG,GAFA3F,EAAIZ,GACMc,IACWyF,aAErB1E,EADQjB,EAAE8B,IACEb,IACDjB,EAAE0I,OAEWzH,IAAM,CAc9BC,UAAW,SAAUsH,GACjB,OAAOA,EAAazB,WAAWrT,SAASuN,IAgB5CgB,MAAO,SAAUqJ,GACb,IAAIvE,EAAa9F,EAAIgB,MAAMqJ,GAC3B,OAAO3F,EAAaxV,OAAO,CAAE4W,WAAYA,MAM9C3H,EAASsJ,OAAOzH,M,gBC/DtB,IAagB7B,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,IAAiB,EAAQ,IAAU,EAAQ,IAAa,EAAQ,GAY9H,WAEG,IAAIY,EAAIZ,EAEJ+I,EADQnI,EAAEE,IACUiI,YACpBpE,EAAS/D,EAAE4E,KAGXizE,EAAO,GACPC,EAAW,GACXC,EAAY,GACZC,EAAY,GACZC,EAAY,GACZC,EAAY,GACZC,EAAgB,GAChBC,EAAgB,GAChBC,EAAgB,GAChBC,EAAgB,IAGnB,WAGG,IADA,IAAInpF,EAAI,GACCN,EAAI,EAAGA,EAAI,IAAKA,IAEjBM,EAAEN,GADFA,EAAI,IACGA,GAAK,EAEJA,GAAK,EAAK,IAK1B,IAAIsK,EAAI,EACJo/E,EAAK,EACT,IAAS1pF,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAE1B,IAAI2pF,EAAKD,EAAMA,GAAM,EAAMA,GAAM,EAAMA,GAAM,EAAMA,GAAM,EACzDC,EAAMA,IAAO,EAAW,IAALA,EAAa,GAChCX,EAAK1+E,GAAKq/E,EACVV,EAASU,GAAMr/E,EAGf,IAAI+pB,EAAK/zB,EAAEgK,GACP09C,EAAK1nD,EAAE+zB,GACPu1D,EAAKtpF,EAAE0nD,GAGP9mD,EAAa,IAARZ,EAAEqpF,GAAqB,SAALA,EAC3BT,EAAU5+E,GAAMpJ,GAAK,GAAOA,IAAM,EAClCioF,EAAU7+E,GAAMpJ,GAAK,GAAOA,IAAM,GAClCkoF,EAAU9+E,GAAMpJ,GAAK,EAAOA,IAAM,GAClCmoF,EAAU/+E,GAAKpJ,EAGXA,EAAU,SAAL0oF,EAAwB,MAAL5hC,EAAsB,IAAL3zB,EAAmB,SAAJ/pB,EAC5Dg/E,EAAcK,GAAOzoF,GAAK,GAAOA,IAAM,EACvCqoF,EAAcI,GAAOzoF,GAAK,GAAOA,IAAM,GACvCsoF,EAAcG,GAAOzoF,GAAK,EAAOA,IAAM,GACvCuoF,EAAcE,GAAMzoF,EAGfoJ,GAGDA,EAAI+pB,EAAK/zB,EAAEA,EAAEA,EAAEspF,EAAKv1D,KACpBq1D,GAAMppF,EAAEA,EAAEopF,KAHVp/E,EAAIo/E,EAAK,GA1CrB,GAmDA,IAAI1xB,EAAO,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAKpE6xB,EAAM30E,EAAO20E,IAAMvwE,EAAY/H,OAAO,CACtC8D,SAAU,WAIN,IAAIvS,KAAKgnF,UAAYhnF,KAAKinF,iBAAmBjnF,KAAK2U,KAAlD,CAiBA,IAZA,IAAIlW,EAAMuB,KAAKinF,eAAiBjnF,KAAK2U,KACjCuyE,EAAWzoF,EAAI0Q,MACf2F,EAAUrW,EAAI2Q,SAAW,EAMzB+3E,EAAyB,IAHfnnF,KAAKgnF,SAAWlyE,EAAU,GAGhB,GAGpBsyE,EAAcpnF,KAAKqnF,aAAe,GAC7BC,EAAQ,EAAGA,EAAQH,EAAQG,IAC5BA,EAAQxyE,EACRsyE,EAAYE,GAASJ,EAASI,IAE9BlpF,EAAIgpF,EAAYE,EAAQ,GAElBA,EAAQxyE,EASHA,EAAU,GAAKwyE,EAAQxyE,GAAW,IAEzC1W,EAAK8nF,EAAK9nF,IAAM,KAAO,GAAO8nF,EAAM9nF,IAAM,GAAM,MAAS,GAAO8nF,EAAM9nF,IAAM,EAAK,MAAS,EAAK8nF,EAAS,IAAJ9nF,KANpGA,EAAK8nF,GAHL9nF,EAAKA,GAAK,EAAMA,IAAM,MAGN,KAAO,GAAO8nF,EAAM9nF,IAAM,GAAM,MAAS,GAAO8nF,EAAM9nF,IAAM,EAAK,MAAS,EAAK8nF,EAAS,IAAJ9nF,GAGpGA,GAAK82D,EAAMoyB,EAAQxyE,EAAW,IAAM,IAMxCsyE,EAAYE,GAASF,EAAYE,EAAQxyE,GAAW1W,GAM5D,IADA,IAAImpF,EAAiBvnF,KAAKwnF,gBAAkB,GACnCC,EAAW,EAAGA,EAAWN,EAAQM,IAAY,CAGlD,GAFIH,EAAQH,EAASM,EAEjBA,EAAW,EACX,IAAIrpF,EAAIgpF,EAAYE,QAEhBlpF,EAAIgpF,EAAYE,EAAQ,GAI5BC,EAAeE,GADfA,EAAW,GAAKH,GAAS,EACElpF,EAEAooF,EAAcN,EAAK9nF,IAAM,KAAOqoF,EAAcP,EAAM9nF,IAAM,GAAM,MAChEsoF,EAAcR,EAAM9nF,IAAM,EAAK,MAASuoF,EAAcT,EAAS,IAAJ9nF,OAKlG2X,aAAc,SAAUkuB,EAAG//B,GACvBlE,KAAK0nF,cAAczjD,EAAG//B,EAAQlE,KAAKqnF,aAAcjB,EAAWC,EAAWC,EAAWC,EAAWL,IAGjGjwE,aAAc,SAAUguB,EAAG//B,GAEvB,IAAI9F,EAAI6lC,EAAE//B,EAAS,GACnB+/B,EAAE//B,EAAS,GAAK+/B,EAAE//B,EAAS,GAC3B+/B,EAAE//B,EAAS,GAAK9F,EAEhB4B,KAAK0nF,cAAczjD,EAAG//B,EAAQlE,KAAKwnF,gBAAiBhB,EAAeC,EAAeC,EAAeC,EAAeR,GAG5G/nF,EAAI6lC,EAAE//B,EAAS,GACnB+/B,EAAE//B,EAAS,GAAK+/B,EAAE//B,EAAS,GAC3B+/B,EAAE//B,EAAS,GAAK9F,GAGpBspF,cAAe,SAAUzjD,EAAG//B,EAAQkjF,EAAahB,EAAWC,EAAWC,EAAWC,EAAWL,GAczF,IAZA,IAAIyB,EAAU3nF,KAAKgnF,SAGflxB,EAAK7xB,EAAE//B,GAAckjF,EAAY,GACjC18C,EAAKzG,EAAE//B,EAAS,GAAKkjF,EAAY,GACjCz8C,EAAK1G,EAAE//B,EAAS,GAAKkjF,EAAY,GACjCrxB,EAAK9xB,EAAE//B,EAAS,GAAKkjF,EAAY,GAGjCE,EAAQ,EAGH95D,EAAQ,EAAGA,EAAQm6D,EAASn6D,IAAS,CAE1C,IAAIqwB,EAAKuoC,EAAUtwB,IAAO,IAAMuwB,EAAW37C,IAAO,GAAM,KAAQ47C,EAAW37C,IAAO,EAAK,KAAQ47C,EAAe,IAALxwB,GAAaqxB,EAAYE,KAC9HxpC,EAAKsoC,EAAU17C,IAAO,IAAM27C,EAAW17C,IAAO,GAAM,KAAQ27C,EAAWvwB,IAAO,EAAK,KAAQwwB,EAAe,IAALzwB,GAAasxB,EAAYE,KAC9H3oC,EAAKynC,EAAUz7C,IAAO,IAAM07C,EAAWtwB,IAAO,GAAM,KAAQuwB,EAAWxwB,IAAO,EAAK,KAAQywB,EAAe,IAAL77C,GAAa08C,EAAYE,KAC9H1oC,EAAKwnC,EAAUrwB,IAAO,IAAMswB,EAAWvwB,IAAO,GAAM,KAAQwwB,EAAW57C,IAAO,EAAK,KAAQ67C,EAAe,IAAL57C,GAAay8C,EAAYE,KAGlIxxB,EAAKjY,EACLnT,EAAKoT,EACLnT,EAAKgU,EACLoX,EAAKnX,EAILf,GAAOqoC,EAAKpwB,IAAO,KAAO,GAAOowB,EAAMx7C,IAAO,GAAM,MAAS,GAAOw7C,EAAMv7C,IAAO,EAAK,MAAS,EAAKu7C,EAAU,IAALnwB,IAAcqxB,EAAYE,KACnIxpC,GAAOooC,EAAKx7C,IAAO,KAAO,GAAOw7C,EAAMv7C,IAAO,GAAM,MAAS,GAAOu7C,EAAMnwB,IAAO,EAAK,MAAS,EAAKmwB,EAAU,IAALpwB,IAAcsxB,EAAYE,KACnI3oC,GAAOunC,EAAKv7C,IAAO,KAAO,GAAOu7C,EAAMnwB,IAAO,GAAM,MAAS,GAAOmwB,EAAMpwB,IAAO,EAAK,MAAS,EAAKowB,EAAU,IAALx7C,IAAc08C,EAAYE,KACnI1oC,GAAOsnC,EAAKnwB,IAAO,KAAO,GAAOmwB,EAAMpwB,IAAO,GAAM,MAAS,GAAOowB,EAAMx7C,IAAO,EAAK,MAAS,EAAKw7C,EAAU,IAALv7C,IAAcy8C,EAAYE,KAGvIrjD,EAAE//B,GAAc25C,EAChB5Z,EAAE//B,EAAS,GAAK45C,EAChB7Z,EAAE//B,EAAS,GAAKy6C,EAChB1a,EAAE//B,EAAS,GAAK06C,GAGpB9pC,QAAS,IAWbzG,EAAE04E,IAAMvwE,EAAY5D,cAAcm0E,GApNtC,GAwNOt5E,EAASs5E,M,gBCvOf,IAagBt5E,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,IAAiB,EAAQ,IAAU,EAAQ,IAAa,EAAQ,GAY9H,WAEG,IAAIY,EAAIZ,EACJa,EAAQD,EAAEE,IACVW,EAAYZ,EAAMY,UAClBsH,EAAclI,EAAMkI,YACpBpE,EAAS/D,EAAE4E,KAGX20E,EAAM,CACN,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC5B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC5B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC5B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5B,GAAI,GAAI,GAAI,EAAI,GAAI,GAAI,GAAI,GAC5B,GAAI,GAAI,GAAI,EAAI,GAAI,GAAI,GAAI,GAC5B,GAAI,GAAI,GAAI,EAAI,GAAI,GAAI,GAAI,GAI5BC,EAAM,CACN,GAAI,GAAI,GAAI,GAAI,EAAI,EACpB,EAAI,GAAI,GAAI,EAAI,GAAI,GACpB,GAAI,GAAI,GAAI,EAAI,GAAI,EACpB,GAAI,EAAI,GAAI,GAAI,GAAI,EACpB,GAAI,GAAI,GAAI,GAAI,GAAI,GACpB,GAAI,GAAI,GAAI,GAAI,GAAI,GACpB,GAAI,GAAI,GAAI,GAAI,GAAI,GACpB,GAAI,GAAI,GAAI,GAAI,GAAI,IAIpBC,EAAa,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAG1EC,EAAS,CACT,CACIvnD,EAAK,QACL,UAAY,MACZ,UAAY,QACZ,UAAY,EACZ,WAAY,IACZ,WAAY,QACZ,WAAY,QACZ,WAAY,QACZ,WAAY,IACZ,WAAY,QACZ,WAAY,MACZ,WAAY,QACZ,WAAY,MACZ,WAAY,QACZ,WAAY,EACZ,WAAY,MACZ,UAAW,EACX,UAAY,QACZ,UAAY,MACZ,UAAY,MACZ,WAAY,QACZ,WAAY,IACZ,WAAY,QACZ,WAAY,EACZ,WAAY,QACZ,WAAY,MACZ,WAAY,QACZ,WAAY,QACZ,WAAY,QACZ,WAAY,MACZ,WAAY,IACZ,WAAY,QACZ,EAAK,MACL,UAAY,EACZ,UAAY,QACZ,UAAY,QACZ,WAAY,QACZ,WAAY,MACZ,WAAY,IACZ,WAAY,QACZ,WAAY,QACZ,WAAY,QACZ,WAAY,QACZ,WAAY,MACZ,WAAY,IACZ,WAAY,QACZ,WAAY,MACZ,WAAY,EACZ,UAAW,QACX,UAAY,QACZ,UAAY,QACZ,UAAY,IACZ,WAAY,MACZ,WAAY,QACZ,WAAY,EACZ,WAAY,MACZ,WAAY,MACZ,WAAY,QACZ,WAAY,IACZ,WAAY,QACZ,WAAY,QACZ,WAAY,EACZ,WAAY,MACZ,WAAY,SAEhB,CACIA,EAAK,WACL,SAAW,MACX,SAAW,OACX,SAAW,WACX,SAAW,WACX,SAAW,WACX,UAAW,WACX,UAAW,GACX,UAAW,OACX,UAAW,WACX,UAAW,WACX,UAAW,OACX,UAAW,OACX,UAAW,EACX,UAAW,MACX,UAAW,WACX,QAAU,WACV,SAAW,OACX,SAAW,GACX,SAAW,WACX,SAAW,WACX,SAAW,WACX,UAAW,OACX,UAAW,WACX,UAAW,OACX,UAAW,EACX,UAAW,MACX,UAAW,WACX,UAAW,WACX,UAAW,OACX,UAAW,WACX,UAAW,MACX,UAAY,EACZ,UAAY,WACZ,UAAY,WACZ,UAAY,WACZ,UAAY,WACZ,UAAY,GACZ,UAAY,OACZ,UAAY,MACZ,UAAY,MACZ,UAAY,OACZ,UAAY,OACZ,UAAY,WACZ,UAAY,OACZ,UAAY,WACZ,UAAY,WACZ,UAAY,WACZ,UAAY,OACZ,UAAY,OACZ,UAAY,WACZ,UAAY,MACZ,UAAY,WACZ,UAAY,WACZ,UAAY,GACZ,UAAY,WACZ,UAAY,WACZ,UAAY,WACZ,UAAY,WACZ,UAAY,OACZ,UAAY,EACZ,UAAY,MACZ,UAAY,WACZ,UAAY,QAEhB,CACIA,EAAK,IACL,QAAU,EACV,QAAU,SACV,QAAU,MACV,QAAU,MACV,QAAU,SACV,QAAU,SACV,QAAU,SACV,QAAU,SACV,QAAU,SACV,SAAU,MACV,SAAU,SACV,SAAU,SACV,SAAU,MACV,SAAU,EACV,SAAU,IACV,OAAS,SACT,QAAU,SACV,QAAU,EACV,QAAU,SACV,QAAU,SACV,QAAU,MACV,QAAU,MACV,QAAU,IACV,QAAU,EACV,QAAU,IACV,SAAU,SACV,SAAU,MACV,SAAU,MACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAW,SACX,SAAW,MACX,SAAW,MACX,SAAW,SACX,SAAW,IACX,SAAW,SACX,SAAW,SACX,SAAW,EACX,SAAW,SACX,SAAW,SACX,SAAW,EACX,SAAW,MACX,SAAW,SACX,SAAW,IACX,SAAW,MACX,SAAW,SACX,SAAW,SACX,SAAW,IACX,SAAW,SACX,SAAW,EACX,SAAW,MACX,SAAW,SACX,SAAW,IACX,SAAW,SACX,SAAW,MACX,SAAW,SACX,SAAW,MACX,SAAW,SACX,SAAW,SACX,SAAW,SACX,SAAW,EACX,SAAW,OAEf,CACIA,EAAK,WACL,MAAS,WACT,OAAS,QACT,OAAS,WACT,OAAS,EACT,OAAS,QACT,OAAS,WACT,OAAS,QACT,OAAS,WACT,OAAS,QACT,OAAS,GACT,OAAS,WACT,OAAS,WACT,OAAS,KACT,OAAS,KACT,OAAS,WACT,MAAQ,WACR,MAAS,GACT,OAAS,WACT,OAAS,WACT,OAAS,QACT,OAAS,WACT,OAAS,EACT,OAAS,WACT,OAAS,KACT,OAAS,WACT,OAAS,QACT,OAAS,KACT,OAAS,WACT,OAAS,QACT,OAAS,QACT,QAAS,WACT,QAAU,QACV,QAAU,QACV,QAAU,WACV,QAAU,EACV,QAAU,KACV,QAAU,WACV,QAAU,WACV,QAAU,WACV,QAAU,WACV,QAAU,WACV,QAAU,WACV,QAAU,QACV,QAAU,WACV,QAAU,QACV,QAAU,GACV,QAAU,KACV,QAAU,WACV,QAAU,WACV,QAAU,EACV,QAAU,QACV,QAAU,QACV,QAAU,WACV,QAAU,WACV,QAAU,GACV,QAAU,WACV,QAAU,KACV,QAAU,WACV,QAAU,WACV,QAAU,KACV,QAAU,WACV,QAAU,QACV,QAAU,SAEd,CACIA,EAAK,IACL,KAAQ,SACR,KAAQ,OACR,MAAQ,UACR,MAAQ,UACR,MAAQ,SACR,MAAQ,UACR,MAAQ,OACR,MAAQ,SACR,MAAQ,UACR,MAAQ,UACR,MAAQ,UACR,MAAQ,UACR,MAAQ,EACR,MAAQ,SACR,MAAQ,UACR,KAAO,SACP,KAAQ,UACR,MAAQ,IACR,MAAQ,SACR,MAAQ,OACR,MAAQ,UACR,MAAQ,UACR,MAAQ,UACR,MAAQ,UACR,MAAQ,EACR,MAAQ,UACR,MAAQ,SACR,MAAQ,UACR,MAAQ,UACR,MAAQ,SACR,MAAQ,OACR,MAAS,OACT,MAAS,IACT,MAAS,UACT,MAAS,UACT,MAAS,SACT,MAAS,UACT,MAAS,UACT,MAAS,SACT,MAAS,UACT,OAAS,UACT,OAAS,SACT,OAAS,UACT,OAAS,OACT,OAAS,UACT,OAAS,EACT,OAAS,SACT,MAAS,UACT,MAAS,SACT,MAAS,SACT,MAAS,UACT,MAAS,UACT,MAAS,SACT,MAAS,IACT,MAAS,UACT,OAAS,OACT,OAAS,UACT,OAAS,EACT,OAAS,UACT,OAAS,SACT,OAAS,OACT,OAAS,UACT,OAAS,WAEb,CACIA,EAAK,UACL,IAAO,KACP,IAAO,UACP,IAAO,UACP,KAAO,UACP,KAAO,QACP,KAAO,QACP,KAAO,UACP,KAAO,EACP,KAAO,UACP,KAAO,QACP,KAAO,EACP,KAAO,UACP,KAAO,QACP,KAAO,KACP,KAAO,UACP,IAAM,UACN,IAAO,UACP,IAAO,EACP,IAAO,QACP,KAAO,QACP,KAAO,UACP,KAAO,UACP,KAAO,KACP,KAAO,QACP,KAAO,KACP,KAAO,UACP,KAAO,UACP,KAAO,EACP,KAAO,UACP,KAAO,QACP,KAAO,UACP,KAAQ,UACR,KAAQ,UACR,KAAQ,UACR,KAAQ,KACR,KAAQ,QACR,KAAQ,UACR,KAAQ,UACR,KAAQ,QACR,KAAQ,QACR,KAAQ,EACR,KAAQ,EACR,KAAQ,UACR,KAAQ,KACR,KAAQ,UACR,KAAQ,UACR,KAAQ,QACR,KAAQ,EACR,KAAQ,QACR,KAAQ,QACR,KAAQ,UACR,KAAQ,UACR,KAAQ,KACR,KAAQ,UACR,KAAQ,UACR,KAAQ,UACR,KAAQ,UACR,KAAQ,KACR,KAAQ,QACR,KAAQ,QACR,KAAQ,EACR,KAAQ,UACR,KAAQ,WAEZ,CACIA,EAAK,QACL,GAAM,SACN,GAAM,KACN,GAAM,QACN,GAAM,SACN,GAAM,EACN,GAAM,EACN,IAAM,SACN,IAAM,SACN,IAAM,QACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,KACN,IAAM,QACN,IAAM,SACN,EAAK,SACL,GAAM,EACN,GAAM,SACN,GAAM,SACN,GAAM,QACN,GAAM,SACN,IAAM,SACN,IAAM,KACN,IAAM,QACN,IAAM,SACN,IAAM,SACN,IAAM,QACN,IAAM,KACN,IAAM,SACN,IAAM,EACN,IAAM,QACN,IAAO,SACP,IAAO,QACP,IAAO,SACP,IAAO,SACP,IAAO,QACP,IAAO,SACP,IAAO,SACP,IAAO,QACP,IAAO,KACP,IAAO,SACP,IAAO,QACP,IAAO,EACP,IAAO,EACP,IAAO,SACP,IAAO,SACP,IAAO,KACP,IAAO,QACP,IAAO,SACP,IAAO,SACP,IAAO,EACP,IAAO,SACP,IAAO,QACP,IAAO,KACP,IAAO,SACP,IAAO,SACP,IAAO,SACP,IAAO,EACP,IAAO,SACP,IAAO,QACP,IAAO,KACP,IAAO,SACP,IAAO,SAEX,CACIA,EAAK,UACL,EAAK,OACL,EAAK,UACL,EAAK,GACL,EAAK,OACL,EAAK,UACL,EAAK,UACL,EAAK,KACL,EAAK,UACL,EAAK,UACL,GAAK,OACL,GAAK,UACL,GAAK,KACL,GAAK,EACL,GAAK,UACL,GAAK,OACL,WAAY,KACZ,WAAY,UACZ,WAAY,UACZ,WAAY,UACZ,WAAY,UACZ,WAAY,OACZ,WAAY,OACZ,WAAY,GACZ,WAAY,UACZ,WAAY,KACZ,WAAY,OACZ,WAAY,UACZ,WAAY,EACZ,WAAY,UACZ,WAAY,UACZ,WAAY,OACZ,GAAM,OACN,GAAM,UACN,GAAM,GACN,GAAM,KACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,OACN,GAAM,EACN,GAAM,OACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,OACN,GAAM,KACN,GAAM,UACN,WAAY,OACZ,WAAY,KACZ,WAAY,UACZ,WAAY,OACZ,WAAY,GACZ,WAAY,UACZ,WAAY,UACZ,WAAY,UACZ,WAAY,UACZ,WAAY,UACZ,WAAY,UACZ,WAAY,EACZ,WAAY,OACZ,WAAY,KACZ,WAAY,OACZ,WAAY,YAKhBwnD,EAAY,CACZ,WAAY,UAAY,SAAY,QACpC,OAAY,KAAY,IAAY,YAMpCC,EAAM71E,EAAO61E,IAAMzxE,EAAY/H,OAAO,CACtC8D,SAAU,WAON,IALA,IACI20E,EADMlnF,KAAK2U,KACIxF,MAGf+4E,EAAU,GACLhrF,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIirF,EAAYP,EAAI1qF,GAAK,EACzBgrF,EAAQhrF,GAAMgqF,EAASiB,IAAc,KAAQ,GAAKA,EAAY,GAAO,EAKzE,IADA,IAAIC,EAAUpoF,KAAKqoF,SAAW,GACrBC,EAAU,EAAGA,EAAU,GAAIA,IAAW,CAE3C,IAAIC,EAASH,EAAQE,GAAW,GAG5BE,EAAWV,EAAWQ,GAG1B,IAASprF,EAAI,EAAGA,EAAI,GAAIA,IAEpBqrF,EAAQrrF,EAAI,EAAK,IAAMgrF,GAAUL,EAAI3qF,GAAK,EAAKsrF,GAAY,KAAQ,GAAKtrF,EAAI,EAG5EqrF,EAAO,GAAMrrF,EAAI,EAAK,KAAOgrF,EAAQ,IAAQL,EAAI3qF,EAAI,IAAM,EAAKsrF,GAAY,KAAS,GAAKtrF,EAAI,EAOlG,IADAqrF,EAAO,GAAMA,EAAO,IAAM,EAAMA,EAAO,KAAO,GACrCrrF,EAAI,EAAGA,EAAI,EAAGA,IACnBqrF,EAAOrrF,GAAKqrF,EAAOrrF,KAAkB,GAATA,EAAI,GAAS,EAE7CqrF,EAAO,GAAMA,EAAO,IAAM,EAAMA,EAAO,KAAO,GAIlD,IAAIE,EAAazoF,KAAK0oF,YAAc,GACpC,IAASxrF,EAAI,EAAGA,EAAI,GAAIA,IACpBurF,EAAWvrF,GAAKkrF,EAAQ,GAAKlrF,IAIrC6Y,aAAc,SAAUkuB,EAAG//B,GACvBlE,KAAK0nF,cAAczjD,EAAG//B,EAAQlE,KAAKqoF,WAGvCpyE,aAAc,SAAUguB,EAAG//B,GACvBlE,KAAK0nF,cAAczjD,EAAG//B,EAAQlE,KAAK0oF,cAGvChB,cAAe,SAAUzjD,EAAG//B,EAAQkkF,GAEhCpoF,KAAK2oF,QAAU1kD,EAAE//B,GACjBlE,KAAK4oF,QAAU3kD,EAAE//B,EAAS,GAG1B2kF,EAAWxrF,KAAK2C,KAAM,EAAI,WAC1B6oF,EAAWxrF,KAAK2C,KAAM,GAAI,OAC1B8oF,EAAWzrF,KAAK2C,KAAM,EAAI,WAC1B8oF,EAAWzrF,KAAK2C,KAAM,EAAI,UAC1B6oF,EAAWxrF,KAAK2C,KAAM,EAAI,YAG1B,IAAK,IAAIwtB,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CAQrC,IANA,IAAI+6D,EAASH,EAAQ56D,GACjBu7D,EAAS/oF,KAAK2oF,QACdK,EAAShpF,KAAK4oF,QAGdrvE,EAAI,EACCrc,EAAI,EAAGA,EAAI,EAAGA,IACnBqc,GAAKwuE,EAAO7qF,KAAK8rF,EAAST,EAAOrrF,IAAM8qF,EAAU9qF,MAAQ,GAE7D8C,KAAK2oF,QAAUK,EACfhpF,KAAK4oF,QAAUG,EAASxvE,EAI5B,IAAInb,EAAI4B,KAAK2oF,QACb3oF,KAAK2oF,QAAU3oF,KAAK4oF,QACpB5oF,KAAK4oF,QAAUxqF,EAGfyqF,EAAWxrF,KAAK2C,KAAM,EAAI,YAC1B8oF,EAAWzrF,KAAK2C,KAAM,EAAI,UAC1B8oF,EAAWzrF,KAAK2C,KAAM,EAAI,WAC1B6oF,EAAWxrF,KAAK2C,KAAM,GAAI,OAC1B6oF,EAAWxrF,KAAK2C,KAAM,EAAI,WAG1BikC,EAAE//B,GAAUlE,KAAK2oF,QACjB1kD,EAAE//B,EAAS,GAAKlE,KAAK4oF,SAGzB9zE,QAAS,EAETC,OAAQ,EAERlD,UAAW,IAIf,SAASg3E,EAAW3kF,EAAQ4qB,GACxB,IAAI1wB,GAAM4B,KAAK2oF,UAAYzkF,EAAUlE,KAAK4oF,SAAW95D,EACrD9uB,KAAK4oF,SAAWxqF,EAChB4B,KAAK2oF,SAAWvqF,GAAK8F,EAGzB,SAAS4kF,EAAW5kF,EAAQ4qB,GACxB,IAAI1wB,GAAM4B,KAAK4oF,UAAY1kF,EAAUlE,KAAK2oF,SAAW75D,EACrD9uB,KAAK2oF,SAAWvqF,EAChB4B,KAAK4oF,SAAWxqF,GAAK8F,EAWzBmK,EAAE45E,IAAMzxE,EAAY5D,cAAcq1E,GAKlC,IAAIgB,EAAY72E,EAAO62E,UAAYzyE,EAAY/H,OAAO,CAClD8D,SAAU,WAEN,IACI20E,EADMlnF,KAAK2U,KACIxF,MAEnB,GAAwB,IAApB+3E,EAASxnF,QAAoC,IAApBwnF,EAASxnF,QAAgBwnF,EAASxnF,OAAS,EACpE,MAAM,IAAIO,MAAM,iFAIpB,IAAIipF,EAAOhC,EAASjmF,MAAM,EAAG,GACzBkoF,EAAOjC,EAASxnF,OAAS,EAAIwnF,EAASjmF,MAAM,EAAG,GAAKimF,EAASjmF,MAAM,EAAG,GACtEmoF,EAAOlC,EAASxnF,OAAS,EAAIwnF,EAASjmF,MAAM,EAAG,GAAKimF,EAASjmF,MAAM,EAAG,GAG1EjB,KAAKqpF,MAAQpB,EAAI5zE,gBAAgBnF,EAAU1Q,OAAO0qF,IAClDlpF,KAAKspF,MAAQrB,EAAI5zE,gBAAgBnF,EAAU1Q,OAAO2qF,IAClDnpF,KAAKupF,MAAQtB,EAAI5zE,gBAAgBnF,EAAU1Q,OAAO4qF,KAGtDrzE,aAAc,SAAUkuB,EAAG//B,GACvBlE,KAAKqpF,MAAMtzE,aAAakuB,EAAG//B,GAC3BlE,KAAKspF,MAAMrzE,aAAaguB,EAAG//B,GAC3BlE,KAAKupF,MAAMxzE,aAAakuB,EAAG//B,IAG/B+R,aAAc,SAAUguB,EAAG//B,GACvBlE,KAAKupF,MAAMtzE,aAAaguB,EAAG//B,GAC3BlE,KAAKspF,MAAMvzE,aAAakuB,EAAG//B,GAC3BlE,KAAKqpF,MAAMpzE,aAAaguB,EAAG//B,IAG/B4Q,QAAS,EAETC,OAAQ,EAERlD,UAAW,IAWfxD,EAAE46E,UAAYzyE,EAAY5D,cAAcq2E,GArvB5C,GAyvBOx7E,EAASw7E,Y,gBCxwBf,IAagBx7E,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,IAAiB,EAAQ,IAAU,EAAQ,IAAa,EAAQ,GAY9H,WAEG,IAAIY,EAAIZ,EAEJ4H,EADQhH,EAAEE,IACW8G,aACrBjD,EAAS/D,EAAE4E,KAKXu2E,EAAMp3E,EAAOo3E,IAAMn0E,EAAa5G,OAAO,CACvC8D,SAAU,WAQN,IANA,IAAI9T,EAAMuB,KAAK2U,KACXuyE,EAAWzoF,EAAI0Q,MACfs6E,EAAchrF,EAAI2Q,SAGlB68D,EAAIjsE,KAAK0pF,GAAK,GACTxsF,EAAI,EAAGA,EAAI,IAAKA,IACrB+uE,EAAE/uE,GAAKA,EAIFA,EAAI,EAAb,IAAK,IAAW8G,EAAI,EAAG9G,EAAI,IAAKA,IAAK,CACjC,IAAIysF,EAAezsF,EAAIusF,EACnBG,EAAW1C,EAASyC,IAAiB,KAAQ,GAAMA,EAAe,EAAK,EAAM,IAEjF3lF,GAAKA,EAAIioE,EAAE/uE,GAAK0sF,GAAW,IAG3B,IAAIxrF,EAAI6tE,EAAE/uE,GACV+uE,EAAE/uE,GAAK+uE,EAAEjoE,GACTioE,EAAEjoE,GAAK5F,EAIX4B,KAAK6pF,GAAK7pF,KAAK8pF,GAAK,GAGxB53E,gBAAiB,SAAU+xB,EAAG//B,GAC1B+/B,EAAE//B,IAAW6lF,EAAsB1sF,KAAK2C,OAG5C8U,QAAS,EAETC,OAAQ,IAGZ,SAASg1E,IAQL,IANA,IAAI9d,EAAIjsE,KAAK0pF,GACTxsF,EAAI8C,KAAK6pF,GACT7lF,EAAIhE,KAAK8pF,GAGTE,EAAgB,EACXrrF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAExBqF,GAAKA,EAAIioE,EADT/uE,GAAKA,EAAI,GAAK,MACG,IAGjB,IAAIkB,EAAI6tE,EAAE/uE,GACV+uE,EAAE/uE,GAAK+uE,EAAEjoE,GACTioE,EAAEjoE,GAAK5F,EAEP4rF,GAAiB/d,GAAGA,EAAE/uE,GAAK+uE,EAAEjoE,IAAM,MAAS,GAAS,EAAJrF,EAOrD,OAHAqB,KAAK6pF,GAAK3sF,EACV8C,KAAK8pF,GAAK9lF,EAEHgmF,EAWX37E,EAAEm7E,IAAMn0E,EAAazC,cAAc42E,GAKnC,IAAIS,EAAU73E,EAAO63E,QAAUT,EAAI/6E,OAAO,CAMtC6D,IAAKk3E,EAAIl3E,IAAI7D,OAAO,CAChBy7E,KAAM,MAGV33E,SAAU,WACNi3E,EAAIj3E,SAASlV,KAAK2C,MAGlB,IAAK,IAAI9C,EAAI8C,KAAKsS,IAAI43E,KAAMhtF,EAAI,EAAGA,IAC/B6sF,EAAsB1sF,KAAK2C,SAavCqO,EAAE47E,QAAU50E,EAAazC,cAAcq3E,GArH3C,GAyHOx8E,EAAS+7E,M,gBCxIf,IAagB/7E,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,IAAiB,EAAQ,IAAU,EAAQ,IAAa,EAAQ,GAY9H,WAEG,IAAIY,EAAIZ,EAEJ4H,EADQhH,EAAEE,IACW8G,aACrBjD,EAAS/D,EAAE4E,KAGXg5D,EAAK,GACLke,EAAK,GACL/gD,EAAK,GAKLghD,EAASh4E,EAAOg4E,OAAS/0E,EAAa5G,OAAO,CAC7C8D,SAAU,WAMN,IAJA,IAAI44C,EAAInrD,KAAK2U,KAAKxF,MACdmG,EAAKtV,KAAKsS,IAAIgD,GAGTpY,EAAI,EAAGA,EAAI,EAAGA,IACnBiuD,EAAEjuD,GAAuC,UAA/BiuD,EAAEjuD,IAAM,EAAOiuD,EAAEjuD,KAAO,IACO,YAA/BiuD,EAAEjuD,IAAM,GAAOiuD,EAAEjuD,KAAO,GAItC,IAAIupD,EAAIzmD,KAAKqqF,GAAK,CACdl/B,EAAE,GAAKA,EAAE,IAAM,GAAOA,EAAE,KAAO,GAC/BA,EAAE,GAAKA,EAAE,IAAM,GAAOA,EAAE,KAAO,GAC/BA,EAAE,GAAKA,EAAE,IAAM,GAAOA,EAAE,KAAO,GAC/BA,EAAE,GAAKA,EAAE,IAAM,GAAOA,EAAE,KAAO,IAI/B98C,EAAIrO,KAAKsqF,GAAK,CACbn/B,EAAE,IAAM,GAAOA,EAAE,KAAO,GAAa,WAAPA,EAAE,GAA2B,MAAPA,EAAE,GACtDA,EAAE,IAAM,GAAOA,EAAE,KAAO,GAAa,WAAPA,EAAE,GAA2B,MAAPA,EAAE,GACtDA,EAAE,IAAM,GAAOA,EAAE,KAAO,GAAa,WAAPA,EAAE,GAA2B,MAAPA,EAAE,GACtDA,EAAE,IAAM,GAAOA,EAAE,KAAO,GAAa,WAAPA,EAAE,GAA2B,MAAPA,EAAE,IAO3D,IAHAnrD,KAAKuqF,GAAK,EAGDrtF,EAAI,EAAGA,EAAI,EAAGA,IACnBstF,EAAUntF,KAAK2C,MAInB,IAAS9C,EAAI,EAAGA,EAAI,EAAGA,IACnBmR,EAAEnR,IAAMupD,EAAGvpD,EAAI,EAAK,GAIxB,GAAIoY,EAAI,CAEJ,IAAIm1E,EAAKn1E,EAAGnG,MACRu7E,EAAOD,EAAG,GACVE,EAAOF,EAAG,GAGVG,EAAsC,UAA9BF,GAAQ,EAAMA,IAAS,IAAsD,YAA9BA,GAAQ,GAAOA,IAAS,GAC/Ez2C,EAAsC,UAA9B02C,GAAQ,EAAMA,IAAS,IAAsD,YAA9BA,GAAQ,GAAOA,IAAS,GAC/EE,EAAMD,IAAO,GAAY,WAAL32C,EACpBC,EAAMD,GAAM,GAAa,MAAL22C,EAaxB,IAVAv8E,EAAE,IAAMu8E,EACRv8E,EAAE,IAAMw8E,EACRx8E,EAAE,IAAM4lC,EACR5lC,EAAE,IAAM6lC,EACR7lC,EAAE,IAAMu8E,EACRv8E,EAAE,IAAMw8E,EACRx8E,EAAE,IAAM4lC,EACR5lC,EAAE,IAAM6lC,EAGCh3C,EAAI,EAAGA,EAAI,EAAGA,IACnBstF,EAAUntF,KAAK2C,QAK3BkS,gBAAiB,SAAU+xB,EAAG//B,GAE1B,IAAIuiD,EAAIzmD,KAAKqqF,GAGbG,EAAUntF,KAAK2C,MAGfisE,EAAE,GAAKxlB,EAAE,GAAMA,EAAE,KAAO,GAAOA,EAAE,IAAM,GACvCwlB,EAAE,GAAKxlB,EAAE,GAAMA,EAAE,KAAO,GAAOA,EAAE,IAAM,GACvCwlB,EAAE,GAAKxlB,EAAE,GAAMA,EAAE,KAAO,GAAOA,EAAE,IAAM,GACvCwlB,EAAE,GAAKxlB,EAAE,GAAMA,EAAE,KAAO,GAAOA,EAAE,IAAM,GAEvC,IAAK,IAAIvpD,EAAI,EAAGA,EAAI,EAAGA,IAEnB+uE,EAAE/uE,GAAuC,UAA/B+uE,EAAE/uE,IAAM,EAAO+uE,EAAE/uE,KAAO,IACO,YAA/B+uE,EAAE/uE,IAAM,GAAO+uE,EAAE/uE,KAAO,GAGlC+mC,EAAE//B,EAAShH,IAAM+uE,EAAE/uE,IAI3B2U,UAAW,EAEXkD,OAAQ,IAGZ,SAASy1E,IAML,IAJA,IAAI/jC,EAAIzmD,KAAKqqF,GACTh8E,EAAIrO,KAAKsqF,GAGJptF,EAAI,EAAGA,EAAI,EAAGA,IACnBitF,EAAGjtF,GAAKmR,EAAEnR,GAed,IAXAmR,EAAE,GAAMA,EAAE,GAAK,WAAarO,KAAKuqF,GAAM,EACvCl8E,EAAE,GAAMA,EAAE,GAAK,YAAeA,EAAE,KAAO,EAAM87E,EAAG,KAAO,EAAK,EAAI,GAAM,EACtE97E,EAAE,GAAMA,EAAE,GAAK,WAAeA,EAAE,KAAO,EAAM87E,EAAG,KAAO,EAAK,EAAI,GAAM,EACtE97E,EAAE,GAAMA,EAAE,GAAK,YAAeA,EAAE,KAAO,EAAM87E,EAAG,KAAO,EAAK,EAAI,GAAM,EACtE97E,EAAE,GAAMA,EAAE,GAAK,YAAeA,EAAE,KAAO,EAAM87E,EAAG,KAAO,EAAK,EAAI,GAAM,EACtE97E,EAAE,GAAMA,EAAE,GAAK,WAAeA,EAAE,KAAO,EAAM87E,EAAG,KAAO,EAAK,EAAI,GAAM,EACtE97E,EAAE,GAAMA,EAAE,GAAK,YAAeA,EAAE,KAAO,EAAM87E,EAAG,KAAO,EAAK,EAAI,GAAM,EACtE97E,EAAE,GAAMA,EAAE,GAAK,YAAeA,EAAE,KAAO,EAAM87E,EAAG,KAAO,EAAK,EAAI,GAAM,EACtEnqF,KAAKuqF,GAAMl8E,EAAE,KAAO,EAAM87E,EAAG,KAAO,EAAK,EAAI,EAGpCjtF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAI4tF,EAAKrkC,EAAEvpD,GAAKmR,EAAEnR,GAGd6tF,EAAU,MAALD,EACLE,EAAKF,IAAO,GAGZvwB,IAASwwB,EAAKA,IAAQ,IAAMA,EAAKC,IAAQ,IAAMA,EAAKA,EACpDxwB,IAAa,WAALswB,GAAmBA,EAAM,KAAa,MAALA,GAAmBA,EAAM,GAGtE1hD,EAAElsC,GAAKq9D,EAAKC,EAIhB/T,EAAE,GAAMrd,EAAE,IAAOA,EAAE,IAAM,GAAOA,EAAE,KAAO,KAASA,EAAE,IAAM,GAAOA,EAAE,KAAO,IAAQ,EAClFqd,EAAE,GAAMrd,EAAE,IAAOA,EAAE,IAAM,EAAOA,EAAE,KAAO,IAAOA,EAAE,GAAM,EACxDqd,EAAE,GAAMrd,EAAE,IAAOA,EAAE,IAAM,GAAOA,EAAE,KAAO,KAASA,EAAE,IAAM,GAAOA,EAAE,KAAO,IAAQ,EAClFqd,EAAE,GAAMrd,EAAE,IAAOA,EAAE,IAAM,EAAOA,EAAE,KAAO,IAAOA,EAAE,GAAM,EACxDqd,EAAE,GAAMrd,EAAE,IAAOA,EAAE,IAAM,GAAOA,EAAE,KAAO,KAASA,EAAE,IAAM,GAAOA,EAAE,KAAO,IAAQ,EAClFqd,EAAE,GAAMrd,EAAE,IAAOA,EAAE,IAAM,EAAOA,EAAE,KAAO,IAAOA,EAAE,GAAM,EACxDqd,EAAE,GAAMrd,EAAE,IAAOA,EAAE,IAAM,GAAOA,EAAE,KAAO,KAASA,EAAE,IAAM,GAAOA,EAAE,KAAO,IAAQ,EAClFqd,EAAE,GAAMrd,EAAE,IAAOA,EAAE,IAAM,EAAOA,EAAE,KAAO,IAAOA,EAAE,GAAM,EAW5D/6B,EAAE+7E,OAAS/0E,EAAazC,cAAcw3E,GA1K1C,GA8KO38E,EAAS28E,S,gBC7Lf,IAagB38E,EAVhBxQ,EAAOD,SAUSyQ,EAVmB,EAAQ,GAAW,EAAQ,IAAiB,EAAQ,IAAU,EAAQ,IAAa,EAAQ,GAY9H,WAEG,IAAIY,EAAIZ,EAEJ4H,EADQhH,EAAEE,IACW8G,aACrBjD,EAAS/D,EAAE4E,KAGXg5D,EAAK,GACLke,EAAK,GACL/gD,EAAK,GASL6hD,EAAe74E,EAAO64E,aAAe51E,EAAa5G,OAAO,CACzD8D,SAAU,WAEN,IAAI44C,EAAInrD,KAAK2U,KAAKxF,MACdmG,EAAKtV,KAAKsS,IAAIgD,GAGdmxC,EAAIzmD,KAAKqqF,GAAK,CACdl/B,EAAE,GAAKA,EAAE,IAAM,GAAOA,EAAE,KAAO,GAC/BA,EAAE,GAAKA,EAAE,IAAM,GAAOA,EAAE,KAAO,GAC/BA,EAAE,GAAKA,EAAE,IAAM,GAAOA,EAAE,KAAO,GAC/BA,EAAE,GAAKA,EAAE,IAAM,GAAOA,EAAE,KAAO,IAI/B98C,EAAIrO,KAAKsqF,GAAK,CACbn/B,EAAE,IAAM,GAAOA,EAAE,KAAO,GAAa,WAAPA,EAAE,GAA2B,MAAPA,EAAE,GACtDA,EAAE,IAAM,GAAOA,EAAE,KAAO,GAAa,WAAPA,EAAE,GAA2B,MAAPA,EAAE,GACtDA,EAAE,IAAM,GAAOA,EAAE,KAAO,GAAa,WAAPA,EAAE,GAA2B,MAAPA,EAAE,GACtDA,EAAE,IAAM,GAAOA,EAAE,KAAO,GAAa,WAAPA,EAAE,GAA2B,MAAPA,EAAE,IAI3DnrD,KAAKuqF,GAAK,EAGV,IAAK,IAAIrtF,EAAI,EAAGA,EAAI,EAAGA,IACnBstF,EAAUntF,KAAK2C,MAInB,IAAS9C,EAAI,EAAGA,EAAI,EAAGA,IACnBmR,EAAEnR,IAAMupD,EAAGvpD,EAAI,EAAK,GAIxB,GAAIoY,EAAI,CAEJ,IAAIm1E,EAAKn1E,EAAGnG,MACRu7E,EAAOD,EAAG,GACVE,EAAOF,EAAG,GAGVG,EAAsC,UAA9BF,GAAQ,EAAMA,IAAS,IAAsD,YAA9BA,GAAQ,GAAOA,IAAS,GAC/Ez2C,EAAsC,UAA9B02C,GAAQ,EAAMA,IAAS,IAAsD,YAA9BA,GAAQ,GAAOA,IAAS,GAC/EE,EAAMD,IAAO,GAAY,WAAL32C,EACpBC,EAAMD,GAAM,GAAa,MAAL22C,EAaxB,IAVAv8E,EAAE,IAAMu8E,EACRv8E,EAAE,IAAMw8E,EACRx8E,EAAE,IAAM4lC,EACR5lC,EAAE,IAAM6lC,EACR7lC,EAAE,IAAMu8E,EACRv8E,EAAE,IAAMw8E,EACRx8E,EAAE,IAAM4lC,EACR5lC,EAAE,IAAM6lC,EAGCh3C,EAAI,EAAGA,EAAI,EAAGA,IACnBstF,EAAUntF,KAAK2C,QAK3BkS,gBAAiB,SAAU+xB,EAAG//B,GAE1B,IAAIuiD,EAAIzmD,KAAKqqF,GAGbG,EAAUntF,KAAK2C,MAGfisE,EAAE,GAAKxlB,EAAE,GAAMA,EAAE,KAAO,GAAOA,EAAE,IAAM,GACvCwlB,EAAE,GAAKxlB,EAAE,GAAMA,EAAE,KAAO,GAAOA,EAAE,IAAM,GACvCwlB,EAAE,GAAKxlB,EAAE,GAAMA,EAAE,KAAO,GAAOA,EAAE,IAAM,GACvCwlB,EAAE,GAAKxlB,EAAE,GAAMA,EAAE,KAAO,GAAOA,EAAE,IAAM,GAEvC,IAAK,IAAIvpD,EAAI,EAAGA,EAAI,EAAGA,IAEnB+uE,EAAE/uE,GAAuC,UAA/B+uE,EAAE/uE,IAAM,EAAO+uE,EAAE/uE,KAAO,IACO,YAA/B+uE,EAAE/uE,IAAM,GAAO+uE,EAAE/uE,KAAO,GAGlC+mC,EAAE//B,EAAShH,IAAM+uE,EAAE/uE,IAI3B2U,UAAW,EAEXkD,OAAQ,IAGZ,SAASy1E,IAML,IAJA,IAAI/jC,EAAIzmD,KAAKqqF,GACTh8E,EAAIrO,KAAKsqF,GAGJptF,EAAI,EAAGA,EAAI,EAAGA,IACnBitF,EAAGjtF,GAAKmR,EAAEnR,GAed,IAXAmR,EAAE,GAAMA,EAAE,GAAK,WAAarO,KAAKuqF,GAAM,EACvCl8E,EAAE,GAAMA,EAAE,GAAK,YAAeA,EAAE,KAAO,EAAM87E,EAAG,KAAO,EAAK,EAAI,GAAM,EACtE97E,EAAE,GAAMA,EAAE,GAAK,WAAeA,EAAE,KAAO,EAAM87E,EAAG,KAAO,EAAK,EAAI,GAAM,EACtE97E,EAAE,GAAMA,EAAE,GAAK,YAAeA,EAAE,KAAO,EAAM87E,EAAG,KAAO,EAAK,EAAI,GAAM,EACtE97E,EAAE,GAAMA,EAAE,GAAK,YAAeA,EAAE,KAAO,EAAM87E,EAAG,KAAO,EAAK,EAAI,GAAM,EACtE97E,EAAE,GAAMA,EAAE,GAAK,WAAeA,EAAE,KAAO,EAAM87E,EAAG,KAAO,EAAK,EAAI,GAAM,EACtE97E,EAAE,GAAMA,EAAE,GAAK,YAAeA,EAAE,KAAO,EAAM87E,EAAG,KAAO,EAAK,EAAI,GAAM,EACtE97E,EAAE,GAAMA,EAAE,GAAK,YAAeA,EAAE,KAAO,EAAM87E,EAAG,KAAO,EAAK,EAAI,GAAM,EACtEnqF,KAAKuqF,GAAMl8E,EAAE,KAAO,EAAM87E,EAAG,KAAO,EAAK,EAAI,EAGpCjtF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAI4tF,EAAKrkC,EAAEvpD,GAAKmR,EAAEnR,GAGd6tF,EAAU,MAALD,EACLE,EAAKF,IAAO,GAGZvwB,IAASwwB,EAAKA,IAAQ,IAAMA,EAAKC,IAAQ,IAAMA,EAAKA,EACpDxwB,IAAa,WAALswB,GAAmBA,EAAM,KAAa,MAALA,GAAmBA,EAAM,GAGtE1hD,EAAElsC,GAAKq9D,EAAKC,EAIhB/T,EAAE,GAAMrd,EAAE,IAAOA,EAAE,IAAM,GAAOA,EAAE,KAAO,KAASA,EAAE,IAAM,GAAOA,EAAE,KAAO,IAAQ,EAClFqd,EAAE,GAAMrd,EAAE,IAAOA,EAAE,IAAM,EAAOA,EAAE,KAAO,IAAOA,EAAE,GAAM,EACxDqd,EAAE,GAAMrd,EAAE,IAAOA,EAAE,IAAM,GAAOA,EAAE,KAAO,KAASA,EAAE,IAAM,GAAOA,EAAE,KAAO,IAAQ,EAClFqd,EAAE,GAAMrd,EAAE,IAAOA,EAAE,IAAM,EAAOA,EAAE,KAAO,IAAOA,EAAE,GAAM,EACxDqd,EAAE,GAAMrd,EAAE,IAAOA,EAAE,IAAM,GAAOA,EAAE,KAAO,KAASA,EAAE,IAAM,GAAOA,EAAE,KAAO,IAAQ,EAClFqd,EAAE,GAAMrd,EAAE,IAAOA,EAAE,IAAM,EAAOA,EAAE,KAAO,IAAOA,EAAE,GAAM,EACxDqd,EAAE,GAAMrd,EAAE,IAAOA,EAAE,IAAM,GAAOA,EAAE,KAAO,KAASA,EAAE,IAAM,GAAOA,EAAE,KAAO,IAAQ,EAClFqd,EAAE,GAAMrd,EAAE,IAAOA,EAAE,IAAM,EAAOA,EAAE,KAAO,IAAOA,EAAE,GAAM,EAW5D/6B,EAAE48E,aAAe51E,EAAazC,cAAcq4E,GAxKhD,GA4KOx9E,EAASw9E,e,6BCzLjB,IAAI7kD,EAAWppC,EAEfopC,EAAS7oB,QAAU,EAAQ,KAAmBA,QAC9C6oB,EAAS9rB,MAAQ,EAAQ,GACzB8rB,EAASu2B,KAAO,EAAQ,IACxBv2B,EAASQ,MAAQ,EAAQ,IACzBR,EAASvK,OAAS,EAAQ,IAG1BuK,EAASoH,GAAK,EAAQ,KACtBpH,EAAS+wC,MAAQ,EAAQ,M,usCCVzB,IAAI78D,EAAQ,EAAQ,GAChBC,EAAK,EAAQ,IACbsE,EAAW,EAAQ,IACnBrQ,EAAO,EAAQ,IAEfnB,EAASiN,EAAMjN,OAEnB,SAAS4rC,EAAWpJ,GAClBrhC,EAAKnR,KAAK2C,KAAM,QAAS6vC,GAEzB7vC,KAAKuH,EAAI,IAAIgT,EAAGs1B,EAAKtoC,EAAG,IAAIgrB,MAAMvyB,KAAKwhB,KACvCxhB,KAAK+C,EAAI,IAAIwX,EAAGs1B,EAAK9sC,EAAG,IAAIwvB,MAAMvyB,KAAKwhB,KACvCxhB,KAAKkrF,KAAOlrF,KAAKy9B,IAAI7J,UAErB5zB,KAAKo5C,MAAqC,IAA7Bp5C,KAAKuH,EAAEorB,UAAUzW,KAAK,GACnClc,KAAKq5C,OAAmD,IAA1Cr5C,KAAKuH,EAAEorB,UAAU9mB,IAAI7L,KAAKhB,GAAGkd,MAAM,GAGjDlc,KAAKs0C,KAAOt0C,KAAKy5C,iBAAiB5J,GAClC7vC,KAAKmrF,YAAc,IAAIriF,MAAM,GAC7B9I,KAAKorF,YAAc,IAAItiF,MAAM,GAoO/B,SAAS2qC,EAAM7M,EAAOp/B,EAAGC,EAAG4jF,GAC1B78E,EAAKiiC,UAAUpzC,KAAK2C,KAAM4mC,EAAO,UACvB,OAANp/B,GAAoB,OAANC,GAChBzH,KAAKwH,EAAI,KACTxH,KAAKyH,EAAI,KACTzH,KAAK4/C,KAAM,IAEX5/C,KAAKwH,EAAI,IAAI+S,EAAG/S,EAAG,IACnBxH,KAAKyH,EAAI,IAAI8S,EAAG9S,EAAG,IAEf4jF,IACFrrF,KAAKwH,EAAEqrB,SAAS7yB,KAAK4mC,MAAMplB,KAC3BxhB,KAAKyH,EAAEorB,SAAS7yB,KAAK4mC,MAAMplB,MAExBxhB,KAAKwH,EAAEga,MACVxhB,KAAKwH,EAAIxH,KAAKwH,EAAE+qB,MAAMvyB,KAAK4mC,MAAMplB,MAC9BxhB,KAAKyH,EAAE+Z,MACVxhB,KAAKyH,EAAIzH,KAAKyH,EAAE8qB,MAAMvyB,KAAK4mC,MAAMplB,MACnCxhB,KAAK4/C,KAAM,GA6Nf,SAASF,EAAO9Y,EAAOp/B,EAAGC,EAAG4T,GAC3B7M,EAAKiiC,UAAUpzC,KAAK2C,KAAM4mC,EAAO,YACvB,OAANp/B,GAAoB,OAANC,GAAoB,OAAN4T,GAC9Brb,KAAKwH,EAAIxH,KAAK4mC,MAAMnR,IACpBz1B,KAAKyH,EAAIzH,KAAK4mC,MAAMnR,IACpBz1B,KAAKqb,EAAI,IAAId,EAAG,KAEhBva,KAAKwH,EAAI,IAAI+S,EAAG/S,EAAG,IACnBxH,KAAKyH,EAAI,IAAI8S,EAAG9S,EAAG,IACnBzH,KAAKqb,EAAI,IAAId,EAAGc,EAAG,KAEhBrb,KAAKwH,EAAEga,MACVxhB,KAAKwH,EAAIxH,KAAKwH,EAAE+qB,MAAMvyB,KAAK4mC,MAAMplB,MAC9BxhB,KAAKyH,EAAE+Z,MACVxhB,KAAKyH,EAAIzH,KAAKyH,EAAE8qB,MAAMvyB,KAAK4mC,MAAMplB,MAC9BxhB,KAAKqb,EAAEmG,MACVxhB,KAAKqb,EAAIrb,KAAKqb,EAAEkX,MAAMvyB,KAAK4mC,MAAMplB,MAEnCxhB,KAAKwhD,KAAOxhD,KAAKqb,IAAMrb,KAAK4mC,MAAMnR,IAnepC5W,EAASo6B,EAAYzqC,GACrBvR,EAAOD,QAAUi8C,EAEjBA,EAAWn6C,UAAU26C,iBAAmB,SAA0B5J,GAEhE,GAAK7vC,KAAKo5C,OAAUp5C,KAAK8wB,GAAM9wB,KAAKrB,GAAwB,IAAnBqB,KAAKhB,EAAE0kB,KAAK,GAArD,CAIA,IAAI6uB,EACAqJ,EACJ,GAAI/L,EAAK0C,KACPA,EAAO,IAAIh4B,EAAGs1B,EAAK0C,KAAM,IAAIhgB,MAAMvyB,KAAKwhB,SACnC,CACL,IAAI8pE,EAAQtrF,KAAKy7C,cAAcz7C,KAAKhB,GAGpCuzC,GADAA,EAAO+4C,EAAM,GAAGrpE,IAAIqpE,EAAM,IAAM,EAAIA,EAAM,GAAKA,EAAM,IACzC/4D,MAAMvyB,KAAKwhB,KAEzB,GAAIquB,EAAK+L,OACPA,EAAS,IAAIrhC,EAAGs1B,EAAK+L,OAAQ,QACxB,CAEL,IAAI2vC,EAAUvrF,KAAKy7C,cAAcz7C,KAAKrB,GACsB,IAAxDqB,KAAK8wB,EAAE7mB,IAAIshF,EAAQ,IAAI/jF,EAAEya,IAAIjiB,KAAK8wB,EAAEtpB,EAAE4rB,OAAOmf,IAC/CqJ,EAAS2vC,EAAQ,IAEjB3vC,EAAS2vC,EAAQ,GACjBl+E,EAA2D,IAApDrN,KAAK8wB,EAAE7mB,IAAI2xC,GAAQp0C,EAAEya,IAAIjiB,KAAK8wB,EAAEtpB,EAAE4rB,OAAOmf,MAiBpD,MAAO,CACLA,KAAMA,EACNqJ,OAAQA,EACRC,MAdEhM,EAAKgM,MACChM,EAAKgM,MAAMvjC,KAAI,SAASkzE,GAC9B,MAAO,CACLjkF,EAAG,IAAIgT,EAAGixE,EAAIjkF,EAAG,IACjBxE,EAAG,IAAIwX,EAAGixE,EAAIzoF,EAAG,QAIb/C,KAAK87C,cAAcF,MAU/B3C,EAAWn6C,UAAU28C,cAAgB,SAAuB3gC,GAI1D,IAAI0G,EAAM1G,IAAQ9a,KAAKhB,EAAIgB,KAAKwhB,IAAMjH,EAAGyb,KAAKlb,GAC1CowE,EAAO,IAAI3wE,EAAG,GAAGgY,MAAM/Q,GAAKoS,UAC5B63D,EAAQP,EAAKr3D,SAEb50B,EAAI,IAAIsb,EAAG,GAAGgY,MAAM/Q,GAAKqS,SAASH,UAAUN,OAAO83D,GAIvD,MAAO,CAFEO,EAAM34D,OAAO7zB,GAAG0zB,UAChB84D,EAAMz4D,OAAO/zB,GAAG0zB,YAI3BsmB,EAAWn6C,UAAUg9C,cAAgB,SAAuBF,GA2B1D,IAzBA,IAYIr1B,EACA8B,EAEA3B,EACA8B,EAEA3B,EACA8B,EAEA+iE,EAEA1tF,EACAwJ,EAxBAmkF,EAAW3rF,KAAKrB,EAAEywB,MAAM3pB,KAAK6F,MAAMtL,KAAKrB,EAAEuc,YAAc,IAIxDlC,EAAI4iC,EACJpiC,EAAIxZ,KAAKrB,EAAEsQ,QACXqiB,EAAK,IAAI/W,EAAG,GACZoiC,EAAK,IAAIpiC,EAAG,GACZgX,EAAK,IAAIhX,EAAG,GACZqiC,EAAK,IAAIriC,EAAG,GAaZrd,EAAI,EAGa,IAAd8b,EAAEkD,KAAK,IAAU,CACtB,IAAI+H,EAAIzK,EAAEwW,IAAIhX,GACdhb,EAAIwb,EAAE3N,IAAIoY,EAAEha,IAAI+O,IAChBxR,EAAI+pB,EAAG1lB,IAAIoY,EAAEha,IAAIqnB,IACjB,IAAI7pB,EAAIm1C,EAAG/wC,IAAIoY,EAAEha,IAAI0yC,IAErB,IAAKj2B,GAAM1oB,EAAEikB,IAAI0pE,GAAY,EAC3BplE,EAAKmlE,EAAM1mE,MACXqD,EAAKiJ,EACL5K,EAAK1oB,EAAEgnB,MACPwD,EAAKhhB,OACA,GAAIkf,GAAc,KAANxpB,EACjB,MAEFwuF,EAAQ1tF,EAERwb,EAAIR,EACJA,EAAIhb,EACJuzB,EAAKD,EACLA,EAAK9pB,EACLo1C,EAAKD,EACLA,EAAKl1C,EAEPof,EAAK7oB,EAAEgnB,MACP2D,EAAKnhB,EAEL,IAAIokF,EAAOllE,EAAG2H,MAAMjI,IAAIoC,EAAG6F,OAiB3B,OAhBWxH,EAAGwH,MAAMjI,IAAIuC,EAAG0F,OAClBpM,IAAI2pE,IAAS,IACpB/kE,EAAKN,EACLoC,EAAKN,GAIH3B,EAAGnF,WACLmF,EAAKA,EAAG1B,MACRwD,EAAKA,EAAGxD,OAEN6B,EAAGtF,WACLsF,EAAKA,EAAG7B,MACR2D,EAAKA,EAAG3D,OAGH,CACL,CAAEzd,EAAGmf,EAAI3jB,EAAGylB,GACZ,CAAEjhB,EAAGsf,EAAI9jB,EAAG4lB,KAIhBswB,EAAWn6C,UAAU4+C,WAAa,SAAoBtiC,GACpD,IAAIygC,EAAQ77C,KAAKs0C,KAAKuH,MAClBiB,EAAKjB,EAAM,GACXkB,EAAKlB,EAAM,GAEXsB,EAAKJ,EAAGh6C,EAAEkH,IAAImR,GAAGiV,SAASrwB,KAAKrB,GAC/By+C,EAAKN,EAAG/5C,EAAEiiB,MAAM/a,IAAImR,GAAGiV,SAASrwB,KAAKrB,GAErC43C,EAAK4G,EAAGlzC,IAAI6yC,EAAGv1C,GACfivC,EAAK4G,EAAGnzC,IAAI8yC,EAAGx1C,GACf81C,EAAKF,EAAGlzC,IAAI6yC,EAAG/5C,GACfu6C,EAAKF,EAAGnzC,IAAI8yC,EAAGh6C,GAKnB,MAAO,CAAE6Y,GAFAR,EAAEvP,IAAI0qC,GAAI1qC,IAAI2qC,GAEN36B,GADRwhC,EAAGj3B,IAAIk3B,GAAIt4B,QAItBi0B,EAAWn6C,UAAUwpC,WAAa,SAAoB9gC,EAAG6lB,IACvD7lB,EAAI,IAAI+S,EAAG/S,EAAG,KACPga,MACLha,EAAIA,EAAE+qB,MAAMvyB,KAAKwhB,MAEnB,IAAIo7B,EAAKp1C,EAAE+rB,SAASH,OAAO5rB,GAAGurB,QAAQvrB,EAAE4rB,OAAOpzB,KAAKuH,IAAIwrB,QAAQ/yB,KAAK+C,GACjE0E,EAAIm1C,EAAGlpB,UACX,GAA6C,IAAzCjsB,EAAE8rB,SAASP,OAAO4pB,GAAI36B,IAAIjiB,KAAK8vC,MACjC,MAAM,IAAI7vC,MAAM,iBAIlB,IAAIub,EAAQ/T,EAAEkrB,UAAUnX,QAIxB,OAHI6R,IAAQ7R,IAAU6R,GAAO7R,KAC3B/T,EAAIA,EAAEosB,UAED7zB,KAAKooC,MAAM5gC,EAAGC,IAGvBwxC,EAAWn6C,UAAUupC,SAAW,SAAkBD,GAChD,GAAIA,EAAMwX,IACR,OAAO,EAET,IAAIp4C,EAAI4gC,EAAM5gC,EACVC,EAAI2gC,EAAM3gC,EAEVokF,EAAK7rF,KAAKuH,EAAE6rB,OAAO5rB,GACnBg1C,EAAMh1C,EAAE+rB,SAASH,OAAO5rB,GAAGurB,QAAQ84D,GAAI94D,QAAQ/yB,KAAK+C,GACxD,OAA2C,IAApC0E,EAAE8rB,SAASN,QAAQupB,GAAKtgC,KAAK,IAGtC+8B,EAAWn6C,UAAUi4C,gBACjB,SAAyB5F,EAAQQ,EAAQC,GAGvC,IAFA,IAAI2L,EAAUv9C,KAAKmrF,YACf3tC,EAAUx9C,KAAKorF,YACVluF,EAAI,EAAGA,EAAIi0C,EAAOzxC,OAAQxC,IAAK,CACtC,IAAI8gB,EAAQhe,KAAK09C,WAAW/L,EAAOz0C,IAC/B8B,EAAImyC,EAAOj0C,GACXq1C,EAAOvzC,EAAEwzC,WAETx0B,EAAMpC,GAAG2F,WACXvD,EAAMpC,GAAGkJ,OACT9lB,EAAIA,EAAEgmB,KAAI,IAERhH,EAAMnC,GAAG0F,WACXvD,EAAMnC,GAAGiJ,OACTytB,EAAOA,EAAKvtB,KAAI,IAGlBu4B,EAAY,EAAJrgD,GAAS8B,EACjBu+C,EAAY,EAAJrgD,EAAQ,GAAKq1C,EACrBiL,EAAY,EAAJtgD,GAAS8gB,EAAMpC,GACvB4hC,EAAY,EAAJtgD,EAAQ,GAAK8gB,EAAMnC,GAK7B,IAHA,IAAIlW,EAAM3F,KAAKyxC,YAAY,EAAG8L,EAASC,EAAa,EAAJtgD,EAAO00C,GAG9C5tC,EAAI,EAAGA,EAAQ,EAAJ9G,EAAO8G,IACzBu5C,EAAQv5C,GAAK,KACbw5C,EAAQx5C,GAAK,KAEf,OAAO2B,GAwBbkZ,EAAS40B,EAAOjlC,EAAKiiC,WAErBwI,EAAWn6C,UAAUspC,MAAQ,SAAe5gC,EAAGC,EAAG4jF,GAChD,OAAO,IAAI53C,EAAMzzC,KAAMwH,EAAGC,EAAG4jF,IAG/BpyC,EAAWn6C,UAAUixC,cAAgB,SAAuB5uC,EAAKqgB,GAC/D,OAAOiyB,EAAMc,SAASv0C,KAAMmB,EAAKqgB,IAGnCiyB,EAAM30C,UAAU0zC,SAAW,WACzB,GAAKxyC,KAAK4mC,MAAM0N,KAAhB,CAGA,IAAIhO,EAAMtmC,KAAK0wC,YACf,GAAIpK,GAAOA,EAAIiM,KACb,OAAOjM,EAAIiM,KAEb,IAAIA,EAAOvyC,KAAK4mC,MAAMwB,MAAMpoC,KAAKwH,EAAE4rB,OAAOpzB,KAAK4mC,MAAM0N,KAAK/B,MAAOvyC,KAAKyH,GACtE,GAAI6+B,EAAK,CACP,IAAIM,EAAQ5mC,KAAK4mC,MACbklD,EAAU,SAAS9sF,GACrB,OAAO4nC,EAAMwB,MAAMppC,EAAEwI,EAAE4rB,OAAOwT,EAAM0N,KAAK/B,MAAOvzC,EAAEyI,IAEpD6+B,EAAIiM,KAAOA,EACXA,EAAK7B,YAAc,CACjB6B,KAAM,KACNt3B,IAAKqrB,EAAIrrB,KAAO,CACd4a,IAAKyQ,EAAIrrB,IAAI4a,IACbsb,OAAQ7K,EAAIrrB,IAAIk2B,OAAO74B,IAAIwzE,IAE7Bl7C,QAAStK,EAAIsK,SAAW,CACtBG,KAAMzK,EAAIsK,QAAQG,KAClBI,OAAQ7K,EAAIsK,QAAQO,OAAO74B,IAAIwzE,KAIrC,OAAOv5C,IAGTkB,EAAM30C,UAAU+J,OAAS,WACvB,OAAK7I,KAAK0wC,YAGH,CAAE1wC,KAAKwH,EAAGxH,KAAKyH,EAAGzH,KAAK0wC,aAAe,CAC3CE,QAAS5wC,KAAK0wC,YAAYE,SAAW,CACnCG,KAAM/wC,KAAK0wC,YAAYE,QAAQG,KAC/BI,OAAQnxC,KAAK0wC,YAAYE,QAAQO,OAAOlwC,MAAM,IAEhDga,IAAKjb,KAAK0wC,YAAYz1B,KAAO,CAC3B4a,IAAK71B,KAAK0wC,YAAYz1B,IAAI4a,IAC1Bsb,OAAQnxC,KAAK0wC,YAAYz1B,IAAIk2B,OAAOlwC,MAAM,MATrC,CAAEjB,KAAKwH,EAAGxH,KAAKyH,IAc1BgsC,EAAMc,SAAW,SAAkB3N,EAAOzlC,EAAKqgB,GAC1B,iBAARrgB,IACTA,EAAM4qF,KAAKz7E,MAAMnP,IACnB,IAAIwE,EAAMihC,EAAMwB,MAAMjnC,EAAI,GAAIA,EAAI,GAAIqgB,GACtC,IAAKrgB,EAAI,GACP,OAAOwE,EAET,SAASqmF,EAAU7qF,GACjB,OAAOylC,EAAMwB,MAAMjnC,EAAI,GAAIA,EAAI,GAAIqgB,GAGrC,IAAI8kB,EAAMnlC,EAAI,GAYd,OAXAwE,EAAI+qC,YAAc,CAChB6B,KAAM,KACN3B,QAAStK,EAAIsK,SAAW,CACtBG,KAAMzK,EAAIsK,QAAQG,KAClBI,OAAQ,CAAExrC,GAAM+B,OAAO4+B,EAAIsK,QAAQO,OAAO74B,IAAI0zE,KAEhD/wE,IAAKqrB,EAAIrrB,KAAO,CACd4a,IAAKyQ,EAAIrrB,IAAI4a,IACbsb,OAAQ,CAAExrC,GAAM+B,OAAO4+B,EAAIrrB,IAAIk2B,OAAO74B,IAAI0zE,MAGvCrmF,GAGT8tC,EAAM30C,UAAUoJ,QAAU,WACxB,OAAIlI,KAAK4pC,aACA,sBACF,gBAAkB5pC,KAAKwH,EAAEmrB,UAAU5wB,SAAS,GAAI,GACnD,OAAS/B,KAAKyH,EAAEkrB,UAAU5wB,SAAS,GAAI,GAAK,KAGlD0xC,EAAM30C,UAAU8qC,WAAa,WAC3B,OAAO5pC,KAAK4/C,KAGdnM,EAAM30C,UAAUsnB,IAAM,SAAapnB,GAEjC,GAAIgB,KAAK4/C,IACP,OAAO5gD,EAGT,GAAIA,EAAE4gD,IACJ,OAAO5/C,KAGT,GAAIA,KAAKqyB,GAAGrzB,GACV,OAAOgB,KAAK0yC,MAGd,GAAI1yC,KAAKglB,MAAMqN,GAAGrzB,GAChB,OAAOgB,KAAK4mC,MAAMwB,MAAM,KAAM,MAGhC,GAAwB,IAApBpoC,KAAKwH,EAAEya,IAAIjjB,EAAEwI,GACf,OAAOxH,KAAK4mC,MAAMwB,MAAM,KAAM,MAEhC,IAAI7qC,EAAIyC,KAAKyH,EAAEurB,OAAOh0B,EAAEyI,GACN,IAAdlK,EAAE2e,KAAK,KACT3e,EAAIA,EAAE61B,OAAOpzB,KAAKwH,EAAEwrB,OAAOh0B,EAAEwI,GAAGosB,YAClC,IAAImnB,EAAKx9C,EAAEg2B,SAASN,QAAQjzB,KAAKwH,GAAGyrB,QAAQj0B,EAAEwI,GAC1CyzC,EAAK19C,EAAE61B,OAAOpzB,KAAKwH,EAAEwrB,OAAO+nB,IAAK9nB,QAAQjzB,KAAKyH,GAClD,OAAOzH,KAAK4mC,MAAMwB,MAAM2S,EAAIE,IAG9BxH,EAAM30C,UAAU4zC,IAAM,WACpB,GAAI1yC,KAAK4/C,IACP,OAAO5/C,KAGT,IAAIisF,EAAMjsF,KAAKyH,EAAEqrB,OAAO9yB,KAAKyH,GAC7B,GAAoB,IAAhBwkF,EAAI/vE,KAAK,GACX,OAAOlc,KAAK4mC,MAAMwB,MAAM,KAAM,MAEhC,IAAI7gC,EAAIvH,KAAK4mC,MAAMr/B,EAEfgqB,EAAKvxB,KAAKwH,EAAE+rB,SACZ24D,EAAQD,EAAIr4D,UACZr2B,EAAIg0B,EAAGuB,OAAOvB,GAAIwB,QAAQxB,GAAIwB,QAAQxrB,GAAG6rB,OAAO84D,GAEhDnxC,EAAKx9C,EAAEg2B,SAASN,QAAQjzB,KAAKwH,EAAEsrB,OAAO9yB,KAAKwH,IAC3CyzC,EAAK19C,EAAE61B,OAAOpzB,KAAKwH,EAAEwrB,OAAO+nB,IAAK9nB,QAAQjzB,KAAKyH,GAClD,OAAOzH,KAAK4mC,MAAMwB,MAAM2S,EAAIE,IAG9BxH,EAAM30C,UAAU+qC,KAAO,WACrB,OAAO7pC,KAAKwH,EAAEmrB,WAGhB8gB,EAAM30C,UAAUuzC,KAAO,WACrB,OAAOryC,KAAKyH,EAAEkrB,WAGhB8gB,EAAM30C,UAAUmL,IAAM,SAAamR,GAEjC,OADAA,EAAI,IAAIb,EAAGa,EAAG,IACVpb,KAAK4pC,aACA5pC,KACAA,KAAKyyC,YAAYr3B,GACjBpb,KAAK4mC,MAAM+J,aAAa3wC,KAAMob,GAC9Bpb,KAAK4mC,MAAM0N,KACXt0C,KAAK4mC,MAAMmQ,gBAAgB,CAAE/2C,MAAQ,CAAEob,IAEvCpb,KAAK4mC,MAAMyK,SAASrxC,KAAMob,IAGrCq4B,EAAM30C,UAAU8rC,OAAS,SAAgBhvB,EAAI46B,EAAI36B,GAC/C,IAAIs1B,EAAS,CAAEnxC,KAAMw2C,GACjB7E,EAAS,CAAE/1B,EAAIC,GACnB,OAAI7b,KAAK4mC,MAAM0N,KACNt0C,KAAK4mC,MAAMmQ,gBAAgB5F,EAAQQ,GAEnC3xC,KAAK4mC,MAAM6K,YAAY,EAAGN,EAAQQ,EAAQ,IAGrD8B,EAAM30C,UAAUsrC,QAAU,SAAiBxuB,EAAI46B,EAAI36B,GACjD,IAAIs1B,EAAS,CAAEnxC,KAAMw2C,GACjB7E,EAAS,CAAE/1B,EAAIC,GACnB,OAAI7b,KAAK4mC,MAAM0N,KACNt0C,KAAK4mC,MAAMmQ,gBAAgB5F,EAAQQ,GAAQ,GAE3C3xC,KAAK4mC,MAAM6K,YAAY,EAAGN,EAAQQ,EAAQ,GAAG,IAGxD8B,EAAM30C,UAAUuzB,GAAK,SAAYrzB,GAC/B,OAAOgB,OAAShB,GACTgB,KAAK4/C,MAAQ5gD,EAAE4gD,MACV5/C,KAAK4/C,KAA2B,IAApB5/C,KAAKwH,EAAEya,IAAIjjB,EAAEwI,IAAgC,IAApBxH,KAAKyH,EAAEwa,IAAIjjB,EAAEyI,KAGhEgsC,EAAM30C,UAAUkmB,IAAM,SAAamnE,GACjC,GAAInsF,KAAK4/C,IACP,OAAO5/C,KAET,IAAI2F,EAAM3F,KAAK4mC,MAAMwB,MAAMpoC,KAAKwH,EAAGxH,KAAKyH,EAAEosB,UAC1C,GAAIs4D,GAAensF,KAAK0wC,YAAa,CACnC,IAAIpK,EAAMtmC,KAAK0wC,YACX07C,EAAS,SAASptF,GACpB,OAAOA,EAAEgmB,OAEXrf,EAAI+qC,YAAc,CAChBz1B,IAAKqrB,EAAIrrB,KAAO,CACd4a,IAAKyQ,EAAIrrB,IAAI4a,IACbsb,OAAQ7K,EAAIrrB,IAAIk2B,OAAO74B,IAAI8zE,IAE7Bx7C,QAAStK,EAAIsK,SAAW,CACtBG,KAAMzK,EAAIsK,QAAQG,KAClBI,OAAQ7K,EAAIsK,QAAQO,OAAO74B,IAAI8zE,KAIrC,OAAOzmF,GAGT8tC,EAAM30C,UAAUizC,IAAM,WACpB,OAAI/xC,KAAK4/C,IACA5/C,KAAK4mC,MAAM+B,OAAO,KAAM,KAAM,MAE7B3oC,KAAK4mC,MAAM+B,OAAO3oC,KAAKwH,EAAGxH,KAAKyH,EAAGzH,KAAK4mC,MAAMnR,MAwBzD5W,EAAS6gC,EAAQlxC,EAAKiiC,WAEtBwI,EAAWn6C,UAAU6pC,OAAS,SAAgBnhC,EAAGC,EAAG4T,GAClD,OAAO,IAAIqkC,EAAO1/C,KAAMwH,EAAGC,EAAG4T,IAGhCqkC,EAAO5gD,UAAUsyC,IAAM,WACrB,GAAIpxC,KAAK4pC,aACP,OAAO5pC,KAAK4mC,MAAMwB,MAAM,KAAM,MAEhC,IAAIikD,EAAOrsF,KAAKqb,EAAEuY,UACd04D,EAAQD,EAAK94D,SACbs4D,EAAK7rF,KAAKwH,EAAE4rB,OAAOk5D,GACnBC,EAAKvsF,KAAKyH,EAAE2rB,OAAOk5D,GAAOl5D,OAAOi5D,GAErC,OAAOrsF,KAAK4mC,MAAMwB,MAAMyjD,EAAIU,IAG9B7sC,EAAO5gD,UAAUkmB,IAAM,WACrB,OAAOhlB,KAAK4mC,MAAM+B,OAAO3oC,KAAKwH,EAAGxH,KAAKyH,EAAEosB,SAAU7zB,KAAKqb,IAGzDqkC,EAAO5gD,UAAUsnB,IAAM,SAAapnB,GAElC,GAAIgB,KAAK4pC,aACP,OAAO5qC,EAGT,GAAIA,EAAE4qC,aACJ,OAAO5pC,KAGT,IAAIwsF,EAAMxtF,EAAEqc,EAAEkY,SACVoqB,EAAK39C,KAAKqb,EAAEkY,SACZpX,EAAKnc,KAAKwH,EAAE4rB,OAAOo5D,GACnBpwE,EAAKpd,EAAEwI,EAAE4rB,OAAOuqB,GAChBjT,EAAK1qC,KAAKyH,EAAE2rB,OAAOo5D,EAAIp5D,OAAOp0B,EAAEqc,IAChCsvB,EAAK3rC,EAAEyI,EAAE2rB,OAAOuqB,EAAGvqB,OAAOpzB,KAAKqb,IAE/B/H,EAAI6I,EAAG6W,OAAO5W,GACdpe,EAAI0sC,EAAG1X,OAAO2X,GAClB,GAAkB,IAAdr3B,EAAE4I,KAAK,GACT,OAAkB,IAAdle,EAAEke,KAAK,GACFlc,KAAK4mC,MAAM+B,OAAO,KAAM,KAAM,MAE9B3oC,KAAK0yC,MAGhB,IAAImhC,EAAKvgE,EAAEigB,SACPugD,EAAKD,EAAGzgD,OAAO9f,GACfkG,EAAI2C,EAAGiX,OAAOygD,GAEd94B,EAAK/8C,EAAEu1B,SAASR,QAAQ+gD,GAAI7gD,QAAQzZ,GAAGyZ,QAAQzZ,GAC/CyhC,EAAKj9C,EAAEo1B,OAAO5Z,EAAEyZ,QAAQ8nB,IAAK9nB,QAAQyX,EAAGtX,OAAO0gD,IAC/CnyB,EAAK3hD,KAAKqb,EAAE+X,OAAOp0B,EAAEqc,GAAG+X,OAAO9f,GAEnC,OAAOtT,KAAK4mC,MAAM+B,OAAOoS,EAAIE,EAAI0G,IAGnCjC,EAAO5gD,UAAUoyC,SAAW,SAAkBlyC,GAE5C,GAAIgB,KAAK4pC,aACP,OAAO5qC,EAAE+yC,MAGX,GAAI/yC,EAAE4qC,aACJ,OAAO5pC,KAGT,IAAI29C,EAAK39C,KAAKqb,EAAEkY,SACZpX,EAAKnc,KAAKwH,EACV4U,EAAKpd,EAAEwI,EAAE4rB,OAAOuqB,GAChBjT,EAAK1qC,KAAKyH,EACVkjC,EAAK3rC,EAAEyI,EAAE2rB,OAAOuqB,GAAIvqB,OAAOpzB,KAAKqb,GAEhC/H,EAAI6I,EAAG6W,OAAO5W,GACdpe,EAAI0sC,EAAG1X,OAAO2X,GAClB,GAAkB,IAAdr3B,EAAE4I,KAAK,GACT,OAAkB,IAAdle,EAAEke,KAAK,GACFlc,KAAK4mC,MAAM+B,OAAO,KAAM,KAAM,MAE9B3oC,KAAK0yC,MAGhB,IAAImhC,EAAKvgE,EAAEigB,SACPugD,EAAKD,EAAGzgD,OAAO9f,GACfkG,EAAI2C,EAAGiX,OAAOygD,GAEd94B,EAAK/8C,EAAEu1B,SAASR,QAAQ+gD,GAAI7gD,QAAQzZ,GAAGyZ,QAAQzZ,GAC/CyhC,EAAKj9C,EAAEo1B,OAAO5Z,EAAEyZ,QAAQ8nB,IAAK9nB,QAAQyX,EAAGtX,OAAO0gD,IAC/CnyB,EAAK3hD,KAAKqb,EAAE+X,OAAO9f,GAEvB,OAAOtT,KAAK4mC,MAAM+B,OAAOoS,EAAIE,EAAI0G,IAGnCjC,EAAO5gD,UAAU0yC,KAAO,SAAchnC,GACpC,GAAY,IAARA,EACF,OAAOxK,KACT,GAAIA,KAAK4pC,aACP,OAAO5pC,KACT,IAAKwK,EACH,OAAOxK,KAAK0yC,MAEd,IAAIx1C,EACJ,GAAI8C,KAAK4mC,MAAMwS,OAASp5C,KAAK4mC,MAAMyS,OAAQ,CACzC,IAAIr7C,EAAIgC,KACR,IAAK9C,EAAI,EAAGA,EAAIsN,EAAKtN,IACnBc,EAAIA,EAAE00C,MACR,OAAO10C,EAKT,IAAIuJ,EAAIvH,KAAK4mC,MAAMr/B,EACf2jF,EAAOlrF,KAAK4mC,MAAMskD,KAElBuB,EAAKzsF,KAAKwH,EACVklF,EAAK1sF,KAAKyH,EACVklF,EAAK3sF,KAAKqb,EACVuxE,EAAMD,EAAGp5D,SAASA,SAGlBs5D,EAAMH,EAAG55D,OAAO45D,GACpB,IAAKxvF,EAAI,EAAGA,EAAIsN,EAAKtN,IAAK,CACxB,IAAI4vF,EAAML,EAAGl5D,SACTw5D,EAAOF,EAAIt5D,SACXy5D,EAAOD,EAAKx5D,SACZh2B,EAAIuvF,EAAIh6D,OAAOg6D,GAAK/5D,QAAQ+5D,GAAK/5D,QAAQxrB,EAAE6rB,OAAOw5D,IAElD9uC,EAAK2uC,EAAGr5D,OAAO25D,GACfhyC,EAAKx9C,EAAEg2B,SAASN,QAAQ6qB,EAAGhrB,OAAOgrB,IAClCa,EAAKb,EAAG7qB,QAAQ8nB,GAChBkyC,EAAM1vF,EAAE61B,OAAOurB,GACnBsuC,EAAMA,EAAIl6D,QAAQk6D,GAAKh6D,QAAQ+5D,GAC/B,IAAIrrC,EAAKkrC,EAAIz5D,OAAOu5D,GAChBzvF,EAAI,EAAIsN,IACVoiF,EAAMA,EAAIx5D,OAAO45D,IAEnBP,EAAK1xC,EACL4xC,EAAKhrC,EACLkrC,EAAMI,EAGR,OAAOjtF,KAAK4mC,MAAM+B,OAAO8jD,EAAII,EAAIz5D,OAAO83D,GAAOyB,IAGjDjtC,EAAO5gD,UAAU4zC,IAAM,WACrB,OAAI1yC,KAAK4pC,aACA5pC,KAELA,KAAK4mC,MAAMwS,MACNp5C,KAAKktF,WACLltF,KAAK4mC,MAAMyS,OACXr5C,KAAKmtF,YAELntF,KAAKqoD,QAGhB3I,EAAO5gD,UAAUouF,SAAW,WAC1B,IAAInyC,EACAE,EACA0G,EAEJ,GAAI3hD,KAAKwhD,KAAM,CAMb,IAAIxL,EAAKh2C,KAAKwH,EAAE+rB,SAEZ2iB,EAAKl2C,KAAKyH,EAAE8rB,SAEZ65D,EAAOl3C,EAAG3iB,SAEVt0B,EAAIe,KAAKwH,EAAEsrB,OAAOojB,GAAI3iB,SAASN,QAAQ+iB,GAAI/iB,QAAQm6D,GACvDnuF,EAAIA,EAAE8zB,QAAQ9zB,GAEd,IAAI3B,EAAI04C,EAAGljB,OAAOkjB,GAAIjjB,QAAQijB,GAE1B53C,EAAId,EAAEi2B,SAASN,QAAQh0B,GAAGg0B,QAAQh0B,GAGlCouF,EAAQD,EAAKr6D,QAAQq6D,GAEzBC,GADAA,EAAQA,EAAMt6D,QAAQs6D,IACRt6D,QAAQs6D,GAGtBtyC,EAAK38C,EAEL68C,EAAK39C,EAAE81B,OAAOn0B,EAAEg0B,QAAQ70B,IAAI60B,QAAQo6D,GAEpC1rC,EAAK3hD,KAAKyH,EAAEqrB,OAAO9yB,KAAKyH,OACnB,CAML,IAAIF,EAAIvH,KAAKwH,EAAE+rB,SAEXxwB,EAAI/C,KAAKyH,EAAE8rB,SAEXh2B,EAAIwF,EAAEwwB,SAEN/1B,EAAIwC,KAAKwH,EAAEsrB,OAAO/vB,GAAGwwB,SAASN,QAAQ1rB,GAAG0rB,QAAQ11B,GACrDC,EAAIA,EAAEu1B,QAAQv1B,GAEd,IAAIqJ,EAAIU,EAAEurB,OAAOvrB,GAAGwrB,QAAQxrB,GAExBgS,EAAI1S,EAAE0sB,SAGNigD,EAAKj2E,EAAEw1B,QAAQx1B,GAEnBi2E,GADAA,EAAKA,EAAGzgD,QAAQygD,IACRzgD,QAAQygD,GAGhBz4B,EAAKxhC,EAAE0Z,QAAQz1B,GAAGy1B,QAAQz1B,GAE1By9C,EAAKp0C,EAAEusB,OAAO51B,EAAEy1B,QAAQ8nB,IAAK9nB,QAAQugD,GAGrC7xB,GADAA,EAAK3hD,KAAKyH,EAAE2rB,OAAOpzB,KAAKqb,IAChB0X,QAAQ4uB,GAGlB,OAAO3hD,KAAK4mC,MAAM+B,OAAOoS,EAAIE,EAAI0G,IAGnCjC,EAAO5gD,UAAUquF,UAAY,WAC3B,IAAIpyC,EACAE,EACA0G,EAEJ,GAAI3hD,KAAKwhD,KAAM,CAMb,IAAIxL,EAAKh2C,KAAKwH,EAAE+rB,SAEZ2iB,EAAKl2C,KAAKyH,EAAE8rB,SAEZ65D,EAAOl3C,EAAG3iB,SAEVt0B,EAAIe,KAAKwH,EAAEsrB,OAAOojB,GAAI3iB,SAASN,QAAQ+iB,GAAI/iB,QAAQm6D,GACvDnuF,EAAIA,EAAE8zB,QAAQ9zB,GAEd,IAAI3B,EAAI04C,EAAGljB,OAAOkjB,GAAIjjB,QAAQijB,GAAIjjB,QAAQ/yB,KAAK4mC,MAAMr/B,GAEjDnJ,EAAId,EAAEi2B,SAASN,QAAQh0B,GAAGg0B,QAAQh0B,GAEtC87C,EAAK38C,EAEL,IAAIivF,EAAQD,EAAKr6D,QAAQq6D,GAEzBC,GADAA,EAAQA,EAAMt6D,QAAQs6D,IACRt6D,QAAQs6D,GACtBpyC,EAAK39C,EAAE81B,OAAOn0B,EAAEg0B,QAAQ70B,IAAI60B,QAAQo6D,GAEpC1rC,EAAK3hD,KAAKyH,EAAEqrB,OAAO9yB,KAAKyH,OACnB,CAKL,IAAI+pB,EAAQxxB,KAAKqb,EAAEkY,SAEfivB,EAAQxiD,KAAKyH,EAAE8rB,SAEfgf,EAAOvyC,KAAKwH,EAAE4rB,OAAOovB,GAErBzE,EAAQ/9C,KAAKwH,EAAEwrB,OAAOxB,GAAO4B,OAAOpzB,KAAKwH,EAAEsrB,OAAOtB,IACtDusB,EAAQA,EAAMjrB,OAAOirB,GAAOhrB,QAAQgrB,GAEpC,IAAI4E,EAAQpQ,EAAKxf,QAAQwf,GAErBqQ,GADJD,EAAQA,EAAM5vB,QAAQ4vB,IACJ7vB,OAAO6vB,GACzB5H,EAAKgD,EAAMxqB,SAASN,QAAQ2vB,GAE5BjB,EAAK3hD,KAAKyH,EAAEqrB,OAAO9yB,KAAKqb,GAAGkY,SAASN,QAAQuvB,GAAOvvB,QAAQzB,GAE3D,IAAI87D,EAAU9qC,EAAMjvB,SAGpB+5D,GADAA,GADAA,EAAUA,EAAQv6D,QAAQu6D,IACRv6D,QAAQu6D,IACRv6D,QAAQu6D,GAC1BryC,EAAK8C,EAAM3qB,OAAOuvB,EAAM1vB,QAAQ8nB,IAAK9nB,QAAQq6D,GAG/C,OAAOttF,KAAK4mC,MAAM+B,OAAOoS,EAAIE,EAAI0G,IAGnCjC,EAAO5gD,UAAUupD,KAAO,WACtB,IAAI9gD,EAAIvH,KAAK4mC,MAAMr/B,EAGfklF,EAAKzsF,KAAKwH,EACVklF,EAAK1sF,KAAKyH,EACVklF,EAAK3sF,KAAKqb,EACVuxE,EAAMD,EAAGp5D,SAASA,SAElBu5D,EAAML,EAAGl5D,SACTg6D,EAAMb,EAAGn5D,SAETh2B,EAAIuvF,EAAIh6D,OAAOg6D,GAAK/5D,QAAQ+5D,GAAK/5D,QAAQxrB,EAAE6rB,OAAOw5D,IAElDY,EAAOf,EAAG35D,OAAO25D,GAEjB3uC,GADJ0vC,EAAOA,EAAKz6D,QAAQy6D,IACNp6D,OAAOm6D,GACjBxyC,EAAKx9C,EAAEg2B,SAASN,QAAQ6qB,EAAGhrB,OAAOgrB,IAClCa,EAAKb,EAAG7qB,QAAQ8nB,GAEhB0yC,EAAOF,EAAIh6D,SAGfk6D,GADAA,GADAA,EAAOA,EAAK16D,QAAQ06D,IACR16D,QAAQ06D,IACR16D,QAAQ06D,GACpB,IAAIxyC,EAAK19C,EAAE61B,OAAOurB,GAAI1rB,QAAQw6D,GAC1B9rC,EAAK+qC,EAAG55D,OAAO45D,GAAIt5D,OAAOu5D,GAE9B,OAAO3sF,KAAK4mC,MAAM+B,OAAOoS,EAAIE,EAAI0G,IAGnCjC,EAAO5gD,UAAU4uF,KAAO,WACtB,IAAK1tF,KAAK4mC,MAAMwS,MACd,OAAOp5C,KAAK0yC,MAAMtsB,IAAIpmB,MAMxB,IAAIg2C,EAAKh2C,KAAKwH,EAAE+rB,SAEZ2iB,EAAKl2C,KAAKyH,EAAE8rB,SAEZgvB,EAAKviD,KAAKqb,EAAEkY,SAEZ65D,EAAOl3C,EAAG3iB,SAEVj2B,EAAI04C,EAAGljB,OAAOkjB,GAAIjjB,QAAQijB,GAE1B23C,EAAKrwF,EAAEi2B,SAEP1sB,EAAI7G,KAAKwH,EAAEsrB,OAAOojB,GAAI3iB,SAASN,QAAQ+iB,GAAI/iB,QAAQm6D,GAKnDQ,GAFJ/mF,GADAA,GADAA,EAAIA,EAAEksB,QAAQlsB,IACRisB,OAAOjsB,GAAGksB,QAAQlsB,IAClBosB,QAAQ06D,IAEHp6D,SAEPn1B,EAAIgvF,EAAKr6D,QAAQq6D,GAGrBhvF,GADAA,GADAA,EAAIA,EAAE20B,QAAQ30B,IACR20B,QAAQ30B,IACR20B,QAAQ30B,GAEd,IAAI4a,EAAI1b,EAAEy1B,QAAQlsB,GAAG0sB,SAASN,QAAQ06D,GAAI16D,QAAQ26D,GAAI36D,QAAQ70B,GAE1DyvF,EAAO33C,EAAG9iB,OAAOpa,GAErB60E,GADAA,EAAOA,EAAK96D,QAAQ86D,IACR96D,QAAQ86D,GACpB,IAAI9yC,EAAK/6C,KAAKwH,EAAE4rB,OAAOw6D,GAAI36D,QAAQ46D,GAEnC9yC,GADAA,EAAKA,EAAGhoB,QAAQgoB,IACRhoB,QAAQgoB,GAEhB,IAAIE,EAAKj7C,KAAKyH,EAAE2rB,OAAOpa,EAAEoa,OAAOh1B,EAAE60B,QAAQja,IAAIia,QAAQpsB,EAAEusB,OAAOw6D,KAG/D3yC,GADAA,GADAA,EAAKA,EAAGloB,QAAQkoB,IACRloB,QAAQkoB,IACRloB,QAAQkoB,GAEhB,IAAI0G,EAAK3hD,KAAKqb,EAAEyX,OAAOjsB,GAAG0sB,SAASN,QAAQsvB,GAAItvB,QAAQ26D,GAEvD,OAAO5tF,KAAK4mC,MAAM+B,OAAOoS,EAAIE,EAAI0G,IAGnCjC,EAAO5gD,UAAUmL,IAAM,SAAamR,EAAG0yE,GAGrC,OAFA1yE,EAAI,IAAIb,EAAGa,EAAG0yE,GAEP9tF,KAAK4mC,MAAMyK,SAASrxC,KAAMob,IAGnCskC,EAAO5gD,UAAUuzB,GAAK,SAAYrzB,GAChC,GAAe,WAAXA,EAAE0C,KACJ,OAAO1B,KAAKqyB,GAAGrzB,EAAE+yC,OAEnB,GAAI/xC,OAAShB,EACX,OAAO,EAGT,IAAI2+C,EAAK39C,KAAKqb,EAAEkY,SACZi5D,EAAMxtF,EAAEqc,EAAEkY,SACd,GAA2D,IAAvDvzB,KAAKwH,EAAE4rB,OAAOo5D,GAAKv5D,QAAQj0B,EAAEwI,EAAE4rB,OAAOuqB,IAAKzhC,KAAK,GAClD,OAAO,EAGT,IAAIuiC,EAAKd,EAAGvqB,OAAOpzB,KAAKqb,GACpB0yE,EAAMvB,EAAIp5D,OAAOp0B,EAAEqc,GACvB,OAA8D,IAAvDrb,KAAKyH,EAAE2rB,OAAO26D,GAAK96D,QAAQj0B,EAAEyI,EAAE2rB,OAAOqrB,IAAKviC,KAAK,IAGzDwjC,EAAO5gD,UAAUkvF,OAAS,SAAgBxmF,GACxC,IAAIymF,EAAKjuF,KAAKqb,EAAEkY,SACZpG,EAAK3lB,EAAE+qB,MAAMvyB,KAAK4mC,MAAMplB,KAAK4R,OAAO66D,GACxC,GAAuB,IAAnBjuF,KAAKwH,EAAEya,IAAIkL,GACb,OAAO,EAIT,IAFA,IAAI+gE,EAAK1mF,EAAEyH,QACP7Q,EAAI4B,KAAK4mC,MAAM2J,KAAKnd,OAAO66D,KACtB,CAEP,GADAC,EAAGhoE,KAAKlmB,KAAK4mC,MAAMjoC,GACfuvF,EAAGjsE,IAAIjiB,KAAK4mC,MAAM5nC,IAAM,EAC1B,OAAO,EAGT,GADAmuB,EAAG4F,QAAQ30B,GACY,IAAnB4B,KAAKwH,EAAEya,IAAIkL,GACb,OAAO,IAIbuyB,EAAO5gD,UAAUoJ,QAAU,WACzB,OAAIlI,KAAK4pC,aACA,uBACF,iBAAmB5pC,KAAKwH,EAAEzF,SAAS,GAAI,GAC1C,OAAS/B,KAAKyH,EAAE1F,SAAS,GAAI,GAC7B,OAAS/B,KAAKqb,EAAEtZ,SAAS,GAAI,GAAK,KAGxC29C,EAAO5gD,UAAU8qC,WAAa,WAE5B,OAA0B,IAAnB5pC,KAAKqb,EAAEa,KAAK,K,6BCt6BrB,IAAI3B,EAAK,EAAQ,IACbsE,EAAW,EAAQ,IACnBrQ,EAAO,EAAQ,IAEf8L,EAAQ,EAAQ,GAEpB,SAASkgC,EAAU3K,GACjBrhC,EAAKnR,KAAK2C,KAAM,OAAQ6vC,GAExB7vC,KAAKuH,EAAI,IAAIgT,EAAGs1B,EAAKtoC,EAAG,IAAIgrB,MAAMvyB,KAAKwhB,KACvCxhB,KAAK+C,EAAI,IAAIwX,EAAGs1B,EAAK9sC,EAAG,IAAIwvB,MAAMvyB,KAAKwhB,KACvCxhB,KAAKm0C,GAAK,IAAI55B,EAAG,GAAGgY,MAAMvyB,KAAKwhB,KAAKoS,UACpC5zB,KAAKy9B,IAAM,IAAIljB,EAAG,GAAGgY,MAAMvyB,KAAKwhB,KAChCxhB,KAAKqjD,IAAMrjD,KAAKm0C,GAAG/gB,OAAOpzB,KAAKuH,EAAEurB,OAAO9yB,KAAKy9B,MAc/C,SAASgW,EAAM7M,EAAOp/B,EAAG6T,GACvB7M,EAAKiiC,UAAUpzC,KAAK2C,KAAM4mC,EAAO,cACvB,OAANp/B,GAAoB,OAAN6T,GAChBrb,KAAKwH,EAAIxH,KAAK4mC,MAAMnR,IACpBz1B,KAAKqb,EAAIrb,KAAK4mC,MAAMkJ,OAEpB9vC,KAAKwH,EAAI,IAAI+S,EAAG/S,EAAG,IACnBxH,KAAKqb,EAAI,IAAId,EAAGc,EAAG,IACdrb,KAAKwH,EAAEga,MACVxhB,KAAKwH,EAAIxH,KAAKwH,EAAE+qB,MAAMvyB,KAAK4mC,MAAMplB,MAC9BxhB,KAAKqb,EAAEmG,MACVxhB,KAAKqb,EAAIrb,KAAKqb,EAAEkX,MAAMvyB,KAAK4mC,MAAMplB,OAvBvC3C,EAAS27B,EAAWhsC,GACpBvR,EAAOD,QAAUw9C,EAEjBA,EAAU17C,UAAUupC,SAAW,SAAkBD,GAC/C,IAAI5gC,EAAI4gC,EAAMyM,YAAYrtC,EACtB+pB,EAAK/pB,EAAE+rB,SACPipB,EAAMjrB,EAAG6B,OAAO5rB,GAAGsrB,OAAOvB,EAAG6B,OAAOpzB,KAAKuH,IAAIurB,OAAOtrB,GAGxD,OAA+B,IAFvBg1C,EAAI9oB,UAEHH,SAAStR,IAAIu6B,IAiBxB39B,EAAS40B,EAAOjlC,EAAKiiC,WAErB+J,EAAU17C,UAAU6oC,YAAc,SAAqBx+B,EAAOgH,GAC5D,OAAOnQ,KAAKooC,MAAM9tB,EAAMI,QAAQvR,EAAOgH,GAAM,IAG/CqqC,EAAU17C,UAAUspC,MAAQ,SAAe5gC,EAAG6T,GAC5C,OAAO,IAAIo4B,EAAMzzC,KAAMwH,EAAG6T,IAG5Bm/B,EAAU17C,UAAUixC,cAAgB,SAAuB5uC,GACzD,OAAOsyC,EAAMc,SAASv0C,KAAMmB,IAG9BsyC,EAAM30C,UAAU+nC,WAAa,aAI7B4M,EAAM30C,UAAUqzC,QAAU,WACxB,OAAOnyC,KAAK6pC,OAAOnvB,QAAQ,KAAM1a,KAAK4mC,MAAM5nC,EAAEwB,eAGhDizC,EAAMc,SAAW,SAAkB3N,EAAOzlC,GACxC,OAAO,IAAIsyC,EAAM7M,EAAOzlC,EAAI,GAAIA,EAAI,IAAMylC,EAAMnR,MAGlDge,EAAM30C,UAAUoJ,QAAU,WACxB,OAAIlI,KAAK4pC,aACA,sBACF,gBAAkB5pC,KAAKwH,EAAEmrB,UAAU5wB,SAAS,GAAI,GACnD,OAAS/B,KAAKqb,EAAEsX,UAAU5wB,SAAS,GAAI,GAAK,KAGlD0xC,EAAM30C,UAAU8qC,WAAa,WAE3B,OAA0B,IAAnB5pC,KAAKqb,EAAEa,KAAK,IAGrBu3B,EAAM30C,UAAU4zC,IAAM,WAKpB,IAEIgP,EAFI1hD,KAAKwH,EAAEsrB,OAAO9yB,KAAKqb,GAEhBkY,SAIPsxB,EAFI7kD,KAAKwH,EAAEwrB,OAAOhzB,KAAKqb,GAEhBkY,SAEPh2B,EAAImkD,EAAG1uB,OAAO6xB,GAEd9J,EAAK2G,EAAGtuB,OAAOyxB,GAEflD,EAAKpkD,EAAE61B,OAAOyxB,EAAG/xB,OAAO9yB,KAAK4mC,MAAMyc,IAAIjwB,OAAO71B,KAClD,OAAOyC,KAAK4mC,MAAMwB,MAAM2S,EAAI4G,IAG9BlO,EAAM30C,UAAUsnB,IAAM,WACpB,MAAM,IAAInmB,MAAM,sCAGlBwzC,EAAM30C,UAAUqvF,QAAU,SAAiBnvF,EAAG8wB,GAK5C,IAAIvoB,EAAIvH,KAAKwH,EAAEsrB,OAAO9yB,KAAKqb,GAEvBtY,EAAI/C,KAAKwH,EAAEwrB,OAAOhzB,KAAKqb,GAEvB9d,EAAIyB,EAAEwI,EAAEsrB,OAAO9zB,EAAEqc,GAIjBypC,EAFI9lD,EAAEwI,EAAEwrB,OAAOh0B,EAAEqc,GAEV+X,OAAO7rB,GAEdw9C,EAAKxnD,EAAE61B,OAAOrwB,GAEdg4C,EAAKjrB,EAAKzU,EAAE+X,OAAO0xB,EAAGhyB,OAAOiyB,GAAIxxB,UAEjCouB,EAAK7xB,EAAKtoB,EAAE4rB,OAAO0xB,EAAG7xB,QAAQ8xB,GAAIxxB,UACtC,OAAOvzB,KAAK4mC,MAAMwB,MAAM2S,EAAI4G,IAG9BlO,EAAM30C,UAAUmL,IAAM,SAAamR,GAMjC,IALA,IAAIhd,EAAIgd,EAAEnM,QACN1H,EAAIvH,KACJ+C,EAAI/C,KAAK4mC,MAAMwB,MAAM,KAAM,MAGtBptB,EAAO,GAAkB,IAAd5c,EAAE8d,KAAK,GAAU9d,EAAEsd,OAAO,GAC5CV,EAAKlW,KAAK1G,EAAEmd,MAAM,IAEpB,IAAK,IAAIre,EAAI8d,EAAKtb,OAAS,EAAGxC,GAAK,EAAGA,IACpB,IAAZ8d,EAAK9d,IAEPqK,EAAIA,EAAE4mF,QAAQprF,EARV/C,MAUJ+C,EAAIA,EAAE2vC,QAGN3vC,EAAIwE,EAAE4mF,QAAQprF,EAbV/C,MAeJuH,EAAIA,EAAEmrC,OAGV,OAAO3vC,GAGT0wC,EAAM30C,UAAU8rC,OAAS,WACvB,MAAM,IAAI3qC,MAAM,sCAGlBwzC,EAAM30C,UAAUsvF,QAAU,WACxB,MAAM,IAAInuF,MAAM,sCAGlBwzC,EAAM30C,UAAUuzB,GAAK,SAAYg8D,GAC/B,OAAyC,IAAlCruF,KAAK6pC,OAAO5nB,IAAIosE,EAAMxkD,SAG/B4J,EAAM30C,UAAU+1C,UAAY,WAG1B,OAFA70C,KAAKwH,EAAIxH,KAAKwH,EAAE4rB,OAAOpzB,KAAKqb,EAAEuY,WAC9B5zB,KAAKqb,EAAIrb,KAAK4mC,MAAMnR,IACbz1B,MAGTyzC,EAAM30C,UAAU+qC,KAAO,WAIrB,OAFA7pC,KAAK60C,YAEE70C,KAAKwH,EAAEmrB,Y,6BC9KhB,IAAIrY,EAAQ,EAAQ,GAChBC,EAAK,EAAQ,IACbsE,EAAW,EAAQ,IACnBrQ,EAAO,EAAQ,IAEfnB,EAASiN,EAAMjN,OAEnB,SAASqtC,EAAa7K,GAEpB7vC,KAAKslD,QAA2B,IAAP,EAATzV,EAAKtoC,GACrBvH,KAAKwlD,MAAQxlD,KAAKslD,UAA6B,IAAR,EAATzV,EAAKtoC,GACnCvH,KAAK6uB,SAAW7uB,KAAKwlD,MAErBh3C,EAAKnR,KAAK2C,KAAM,UAAW6vC,GAE3B7vC,KAAKuH,EAAI,IAAIgT,EAAGs1B,EAAKtoC,EAAG,IAAI6oB,KAAKpwB,KAAKwhB,IAAIlkB,GAC1C0C,KAAKuH,EAAIvH,KAAKuH,EAAEgrB,MAAMvyB,KAAKwhB,KAC3BxhB,KAAKzC,EAAI,IAAIgd,EAAGs1B,EAAKtyC,EAAG,IAAIg1B,MAAMvyB,KAAKwhB,KACvCxhB,KAAKo9C,GAAKp9C,KAAKzC,EAAEg2B,SACjBvzB,KAAKxC,EAAI,IAAI+c,EAAGs1B,EAAKryC,EAAG,IAAI+0B,MAAMvyB,KAAKwhB,KACvCxhB,KAAKsuF,GAAKtuF,KAAKxC,EAAEs1B,OAAO9yB,KAAKxC,GAE7B6P,GAAQrN,KAAKslD,SAAwC,IAA7BtlD,KAAKzC,EAAEo1B,UAAUzW,KAAK,IAC9Clc,KAAKuuF,KAAwB,IAAP,EAAT1+C,EAAKtyC,GAwFpB,SAASk2C,EAAM7M,EAAOp/B,EAAGC,EAAG4T,EAAGjd,GAC7BoQ,EAAKiiC,UAAUpzC,KAAK2C,KAAM4mC,EAAO,cACvB,OAANp/B,GAAoB,OAANC,GAAoB,OAAN4T,GAC9Brb,KAAKwH,EAAIxH,KAAK4mC,MAAMkJ,KACpB9vC,KAAKyH,EAAIzH,KAAK4mC,MAAMnR,IACpBz1B,KAAKqb,EAAIrb,KAAK4mC,MAAMnR,IACpBz1B,KAAK5B,EAAI4B,KAAK4mC,MAAMkJ,KACpB9vC,KAAKwhD,MAAO,IAEZxhD,KAAKwH,EAAI,IAAI+S,EAAG/S,EAAG,IACnBxH,KAAKyH,EAAI,IAAI8S,EAAG9S,EAAG,IACnBzH,KAAKqb,EAAIA,EAAI,IAAId,EAAGc,EAAG,IAAMrb,KAAK4mC,MAAMnR,IACxCz1B,KAAK5B,EAAIA,GAAK,IAAImc,EAAGnc,EAAG,IACnB4B,KAAKwH,EAAEga,MACVxhB,KAAKwH,EAAIxH,KAAKwH,EAAE+qB,MAAMvyB,KAAK4mC,MAAMplB,MAC9BxhB,KAAKyH,EAAE+Z,MACVxhB,KAAKyH,EAAIzH,KAAKyH,EAAE8qB,MAAMvyB,KAAK4mC,MAAMplB,MAC9BxhB,KAAKqb,EAAEmG,MACVxhB,KAAKqb,EAAIrb,KAAKqb,EAAEkX,MAAMvyB,KAAK4mC,MAAMplB,MAC/BxhB,KAAK5B,IAAM4B,KAAK5B,EAAEojB,MACpBxhB,KAAK5B,EAAI4B,KAAK5B,EAAEm0B,MAAMvyB,KAAK4mC,MAAMplB,MACnCxhB,KAAKwhD,KAAOxhD,KAAKqb,IAAMrb,KAAK4mC,MAAMnR,IAG9Bz1B,KAAK4mC,MAAM/X,WAAa7uB,KAAK5B,IAC/B4B,KAAK5B,EAAI4B,KAAKwH,EAAE4rB,OAAOpzB,KAAKyH,GACvBzH,KAAKwhD,OACRxhD,KAAK5B,EAAI4B,KAAK5B,EAAEg1B,OAAOpzB,KAAKqb,EAAEuY,cAjHtC/U,EAAS67B,EAAclsC,GACvBvR,EAAOD,QAAU09C,EAEjBA,EAAa57C,UAAUyoD,MAAQ,SAAezsC,GAC5C,OAAI9a,KAAKwlD,MACA1qC,EAAI+Y,SAEJ7zB,KAAKuH,EAAE6rB,OAAOtY,IAGzB4/B,EAAa57C,UAAU0vF,MAAQ,SAAe1zE,GAC5C,OAAI9a,KAAKuuF,KACAzzE,EAEA9a,KAAKzC,EAAE61B,OAAOtY,IAIzB4/B,EAAa57C,UAAU6pC,OAAS,SAAgBnhC,EAAGC,EAAG4T,EAAGjd,GACvD,OAAO4B,KAAKooC,MAAM5gC,EAAGC,EAAG4T,EAAGjd,IAG7Bs8C,EAAa57C,UAAUwpC,WAAa,SAAoB9gC,EAAG6lB,IACzD7lB,EAAI,IAAI+S,EAAG/S,EAAG,KACPga,MACLha,EAAIA,EAAE+qB,MAAMvyB,KAAKwhB,MAEnB,IAAI+P,EAAK/pB,EAAE+rB,SACPipB,EAAMx8C,KAAKo9C,GAAGpqB,OAAOhzB,KAAKuH,EAAE6rB,OAAO7B,IACnCgrB,EAAMv8C,KAAKy1B,IAAIzC,OAAOhzB,KAAKo9C,GAAGhqB,OAAOpzB,KAAKxC,GAAG41B,OAAO7B,IAEpDqrB,EAAKJ,EAAIppB,OAAOmpB,EAAI3oB,WACpBnsB,EAAIm1C,EAAGlpB,UACX,GAA6C,IAAzCjsB,EAAE8rB,SAASP,OAAO4pB,GAAI36B,IAAIjiB,KAAK8vC,MACjC,MAAM,IAAI7vC,MAAM,iBAElB,IAAIub,EAAQ/T,EAAEkrB,UAAUnX,QAIxB,OAHI6R,IAAQ7R,IAAU6R,GAAO7R,KAC3B/T,EAAIA,EAAEosB,UAED7zB,KAAKooC,MAAM5gC,EAAGC,IAGvBizC,EAAa57C,UAAU0pD,WAAa,SAAoB/gD,EAAG4lB,IACzD5lB,EAAI,IAAI8S,EAAG9S,EAAG,KACP+Z,MACL/Z,EAAIA,EAAE8qB,MAAMvyB,KAAKwhB,MAGnB,IAAIo7B,EAAKn1C,EAAE8rB,SACPgpB,EAAMK,EAAG5pB,OAAOhzB,KAAKo9C,IACrBZ,EAAMI,EAAGxpB,OAAOpzB,KAAKxC,GAAG41B,OAAOpzB,KAAKo9C,IAAIpqB,OAAOhzB,KAAKuH,GACpDgqB,EAAKgrB,EAAInpB,OAAOopB,EAAI5oB,WAExB,GAA0B,IAAtBrC,EAAGtP,IAAIjiB,KAAK8vC,MAAa,CAC3B,GAAIziB,EACF,MAAM,IAAIptB,MAAM,iBAEhB,OAAOD,KAAKooC,MAAMpoC,KAAK8vC,KAAMroC,GAGjC,IAAID,EAAI+pB,EAAGmC,UACX,GAA6C,IAAzClsB,EAAE+rB,SAASP,OAAOzB,GAAItP,IAAIjiB,KAAK8vC,MACjC,MAAM,IAAI7vC,MAAM,iBAKlB,OAHIuH,EAAEmrB,UAAUnX,UAAY6R,IAC1B7lB,EAAIA,EAAEqsB,UAED7zB,KAAKooC,MAAM5gC,EAAGC,IAGvBizC,EAAa57C,UAAUupC,SAAW,SAAkBD,GAClD,GAAIA,EAAMwB,aACR,OAAO,EAGTxB,EAAMyM,YAEN,IAAItjB,EAAK6W,EAAM5gC,EAAE+rB,SACbqpB,EAAKxU,EAAM3gC,EAAE8rB,SACbgpB,EAAMhrB,EAAG6B,OAAOpzB,KAAKuH,GAAGurB,OAAO8pB,GAC/BJ,EAAMx8C,KAAKo9C,GAAGhqB,OAAOpzB,KAAKy1B,IAAI3C,OAAO9yB,KAAKxC,EAAE41B,OAAO7B,GAAI6B,OAAOwpB,KAElE,OAAwB,IAAjBL,EAAIt6B,IAAIu6B,IAkCjB39B,EAAS40B,EAAOjlC,EAAKiiC,WAErBiK,EAAa57C,UAAUixC,cAAgB,SAAuB5uC,GAC5D,OAAOsyC,EAAMc,SAASv0C,KAAMmB,IAG9Bu5C,EAAa57C,UAAUspC,MAAQ,SAAe5gC,EAAGC,EAAG4T,EAAGjd,GACrD,OAAO,IAAIq1C,EAAMzzC,KAAMwH,EAAGC,EAAG4T,EAAGjd,IAGlCq1C,EAAMc,SAAW,SAAkB3N,EAAOzlC,GACxC,OAAO,IAAIsyC,EAAM7M,EAAOzlC,EAAI,GAAIA,EAAI,GAAIA,EAAI,KAG9CsyC,EAAM30C,UAAUoJ,QAAU,WACxB,OAAIlI,KAAK4pC,aACA,sBACF,gBAAkB5pC,KAAKwH,EAAEmrB,UAAU5wB,SAAS,GAAI,GACnD,OAAS/B,KAAKyH,EAAEkrB,UAAU5wB,SAAS,GAAI,GACvC,OAAS/B,KAAKqb,EAAEsX,UAAU5wB,SAAS,GAAI,GAAK,KAGlD0xC,EAAM30C,UAAU8qC,WAAa,WAE3B,OAA0B,IAAnB5pC,KAAKwH,EAAE0U,KAAK,KACO,IAAvBlc,KAAKyH,EAAEwa,IAAIjiB,KAAKqb,IAChBrb,KAAKwhD,MAAqC,IAA7BxhD,KAAKyH,EAAEwa,IAAIjiB,KAAK4mC,MAAMrpC,KAGxCk2C,EAAM30C,UAAU2vF,QAAU,WAMxB,IAAIlnF,EAAIvH,KAAKwH,EAAE+rB,SAEXxwB,EAAI/C,KAAKyH,EAAE8rB,SAEXh2B,EAAIyC,KAAKqb,EAAEkY,SACfh2B,EAAIA,EAAEw1B,QAAQx1B,GAEd,IAAIC,EAAIwC,KAAK4mC,MAAM2gB,MAAMhgD,GAErBV,EAAI7G,KAAKwH,EAAEsrB,OAAO9yB,KAAKyH,GAAG8rB,SAASN,QAAQ1rB,GAAG0rB,QAAQlwB,GAEtD+tB,EAAItzB,EAAEs1B,OAAO/vB,GAEbwW,EAAIuX,EAAEkC,OAAOz1B,GAEb+V,EAAI9V,EAAEw1B,OAAOjwB,GAEbg4C,EAAKl0C,EAAEusB,OAAO7Z,GAEd0hC,EAAKnqB,EAAEsC,OAAO9f,GAEdw0C,EAAKjhD,EAAEusB,OAAO9f,GAEdquC,EAAKpoC,EAAE6Z,OAAOtC,GAClB,OAAO9wB,KAAK4mC,MAAMwB,MAAM2S,EAAIE,EAAI0G,EAAImG,IAGtCrU,EAAM30C,UAAU4vF,SAAW,WAQzB,IAMI3zC,EACAE,EACA0G,EACA96C,EACAyM,EACAtP,EAXAjB,EAAI/C,KAAKwH,EAAEsrB,OAAO9yB,KAAKyH,GAAG8rB,SAE1Bh2B,EAAIyC,KAAKwH,EAAE+rB,SAEX/1B,EAAIwC,KAAKyH,EAAE8rB,SAQf,GAAIvzB,KAAK4mC,MAAM0e,QAAS,CAItB,IAAI/rC,GAFJ1S,EAAI7G,KAAK4mC,MAAM2gB,MAAMhqD,IAEXu1B,OAAOt1B,GACbwC,KAAKwhD,MAEPzG,EAAKh4C,EAAEiwB,OAAOz1B,GAAGy1B,OAAOx1B,GAAG41B,OAAO7Z,EAAEyZ,OAAOhzB,KAAK4mC,MAAMnJ,MAEtDwd,EAAK1hC,EAAE6Z,OAAOvsB,EAAEmsB,OAAOx1B,IAEvBmkD,EAAKpoC,EAAEga,SAASP,OAAOzZ,GAAGyZ,OAAOzZ,KAGjCjG,EAAItT,KAAKqb,EAAEkY,SAEXvvB,EAAIuV,EAAEyZ,OAAO1f,GAAG2f,QAAQ3f,GAExBynC,EAAKh4C,EAAEiwB,OAAOz1B,GAAG01B,QAAQz1B,GAAG41B,OAAOpvB,GAEnCi3C,EAAK1hC,EAAE6Z,OAAOvsB,EAAEmsB,OAAOx1B,IAEvBmkD,EAAKpoC,EAAE6Z,OAAOpvB,SAIhB6C,EAAItJ,EAAEu1B,OAAOt1B,GAEb8V,EAAItT,KAAK4mC,MAAM4nD,MAAMxuF,KAAKqb,GAAGkY,SAE7BvvB,EAAI6C,EAAEmsB,OAAO1f,GAAG0f,OAAO1f,GAEvBynC,EAAK/6C,KAAK4mC,MAAM4nD,MAAMzrF,EAAEkwB,QAAQpsB,IAAIusB,OAAOpvB,GAE3Ci3C,EAAKj7C,KAAK4mC,MAAM4nD,MAAM3nF,GAAGusB,OAAO71B,EAAE01B,QAAQz1B,IAE1CmkD,EAAK96C,EAAEusB,OAAOpvB,GAEhB,OAAOhE,KAAK4mC,MAAMwB,MAAM2S,EAAIE,EAAI0G,IAGlClO,EAAM30C,UAAU4zC,IAAM,WACpB,OAAI1yC,KAAK4pC,aACA5pC,KAGLA,KAAK4mC,MAAM/X,SACN7uB,KAAKyuF,UAELzuF,KAAK0uF,YAGhBj7C,EAAM30C,UAAU6vF,QAAU,SAAiB3vF,GAMzC,IAAIuI,EAAIvH,KAAKyH,EAAEurB,OAAOhzB,KAAKwH,GAAG4rB,OAAOp0B,EAAEyI,EAAEurB,OAAOh0B,EAAEwI,IAE9CzE,EAAI/C,KAAKyH,EAAEqrB,OAAO9yB,KAAKwH,GAAG4rB,OAAOp0B,EAAEyI,EAAEqrB,OAAO9zB,EAAEwI,IAE9CjK,EAAIyC,KAAK5B,EAAEg1B,OAAOpzB,KAAK4mC,MAAM0nD,IAAIl7D,OAAOp0B,EAAEZ,GAE1CZ,EAAIwC,KAAKqb,EAAE+X,OAAOp0B,EAAEqc,EAAEyX,OAAO9zB,EAAEqc,IAE/BxU,EAAI9D,EAAEiwB,OAAOzrB,GAEbgS,EAAI/b,EAAEw1B,OAAOz1B,GAEbuzB,EAAItzB,EAAEs1B,OAAOv1B,GAEb+V,EAAIvQ,EAAE+vB,OAAOvrB,GAEbwzC,EAAKl0C,EAAEusB,OAAO7Z,GAEd0hC,EAAKnqB,EAAEsC,OAAO9f,GAEdw0C,EAAKjhD,EAAEusB,OAAO9f,GAEdquC,EAAKpoC,EAAE6Z,OAAOtC,GAClB,OAAO9wB,KAAK4mC,MAAMwB,MAAM2S,EAAIE,EAAI0G,EAAImG,IAGtCrU,EAAM30C,UAAU8vF,SAAW,SAAkB5vF,GAO3C,IAgBIi8C,EACA0G,EAjBAp6C,EAAIvH,KAAKqb,EAAE+X,OAAOp0B,EAAEqc,GAEpBtY,EAAIwE,EAAEgsB,SAENh2B,EAAIyC,KAAKwH,EAAE4rB,OAAOp0B,EAAEwI,GAEpBhK,EAAIwC,KAAKyH,EAAE2rB,OAAOp0B,EAAEyI,GAEpBZ,EAAI7G,KAAK4mC,MAAMppC,EAAE41B,OAAO71B,GAAG61B,OAAO51B,GAElC+b,EAAIxW,EAAEiwB,OAAOnsB,GAEbiqB,EAAI/tB,EAAE+vB,OAAOjsB,GAEbwtB,EAAMr0B,KAAKwH,EAAEsrB,OAAO9yB,KAAKyH,GAAG2rB,OAAOp0B,EAAEwI,EAAEsrB,OAAO9zB,EAAEyI,IAAIwrB,QAAQ11B,GAAG01B,QAAQz1B,GACvEu9C,EAAKxzC,EAAE6rB,OAAO7Z,GAAG6Z,OAAOiB,GAc5B,OAXIr0B,KAAK4mC,MAAM0e,SAEbrK,EAAK1zC,EAAE6rB,OAAOtC,GAAGsC,OAAO51B,EAAEw1B,OAAOhzB,KAAK4mC,MAAM2gB,MAAMhqD,KAElDokD,EAAKpoC,EAAE6Z,OAAOtC,KAGdmqB,EAAK1zC,EAAE6rB,OAAOtC,GAAGsC,OAAO51B,EAAEw1B,OAAOz1B,IAEjCokD,EAAK3hD,KAAK4mC,MAAM4nD,MAAMj1E,GAAG6Z,OAAOtC,IAE3B9wB,KAAK4mC,MAAMwB,MAAM2S,EAAIE,EAAI0G,IAGlClO,EAAM30C,UAAUsnB,IAAM,SAAapnB,GACjC,OAAIgB,KAAK4pC,aACA5qC,EACLA,EAAE4qC,aACG5pC,KAELA,KAAK4mC,MAAM/X,SACN7uB,KAAK2uF,QAAQ3vF,GAEbgB,KAAK4uF,SAAS5vF,IAGzBy0C,EAAM30C,UAAUmL,IAAM,SAAamR,GACjC,OAAIpb,KAAKyyC,YAAYr3B,GACZpb,KAAK4mC,MAAM+J,aAAa3wC,KAAMob,GAE9Bpb,KAAK4mC,MAAMyK,SAASrxC,KAAMob,IAGrCq4B,EAAM30C,UAAU8rC,OAAS,SAAgBhvB,EAAI5c,EAAG6c,GAC9C,OAAO7b,KAAK4mC,MAAM6K,YAAY,EAAG,CAAEzxC,KAAMhB,GAAK,CAAE4c,EAAIC,GAAM,GAAG,IAG/D43B,EAAM30C,UAAUsrC,QAAU,SAAiBxuB,EAAI5c,EAAG6c,GAChD,OAAO7b,KAAK4mC,MAAM6K,YAAY,EAAG,CAAEzxC,KAAMhB,GAAK,CAAE4c,EAAIC,GAAM,GAAG,IAG/D43B,EAAM30C,UAAU+1C,UAAY,WAC1B,GAAI70C,KAAKwhD,KACP,OAAOxhD,KAGT,IAAIi3C,EAAKj3C,KAAKqb,EAAEuY,UAOhB,OANA5zB,KAAKwH,EAAIxH,KAAKwH,EAAE4rB,OAAO6jB,GACvBj3C,KAAKyH,EAAIzH,KAAKyH,EAAE2rB,OAAO6jB,GACnBj3C,KAAK5B,IACP4B,KAAK5B,EAAI4B,KAAK5B,EAAEg1B,OAAO6jB,IACzBj3C,KAAKqb,EAAIrb,KAAK4mC,MAAMnR,IACpBz1B,KAAKwhD,MAAO,EACLxhD,MAGTyzC,EAAM30C,UAAUkmB,IAAM,WACpB,OAAOhlB,KAAK4mC,MAAMwB,MAAMpoC,KAAKwH,EAAEqsB,SAC7B7zB,KAAKyH,EACLzH,KAAKqb,EACLrb,KAAK5B,GAAK4B,KAAK5B,EAAEy1B,WAGrB4f,EAAM30C,UAAU+qC,KAAO,WAErB,OADA7pC,KAAK60C,YACE70C,KAAKwH,EAAEmrB,WAGhB8gB,EAAM30C,UAAUuzC,KAAO,WAErB,OADAryC,KAAK60C,YACE70C,KAAKyH,EAAEkrB,WAGhB8gB,EAAM30C,UAAUuzB,GAAK,SAAYg8D,GAC/B,OAAOruF,OAASquF,GACyB,IAAlCruF,KAAK6pC,OAAO5nB,IAAIosE,EAAMxkD,SACY,IAAlC7pC,KAAKqyC,OAAOpwB,IAAIosE,EAAMh8C,SAG/BoB,EAAM30C,UAAUkvF,OAAS,SAAgBxmF,GACvC,IAAI2lB,EAAK3lB,EAAE+qB,MAAMvyB,KAAK4mC,MAAMplB,KAAK4R,OAAOpzB,KAAKqb,GAC7C,GAAuB,IAAnBrb,KAAKwH,EAAEya,IAAIkL,GACb,OAAO,EAIT,IAFA,IAAI+gE,EAAK1mF,EAAEyH,QACP7Q,EAAI4B,KAAK4mC,MAAM2J,KAAKnd,OAAOpzB,KAAKqb,KAC3B,CAEP,GADA6yE,EAAGhoE,KAAKlmB,KAAK4mC,MAAMjoC,GACfuvF,EAAGjsE,IAAIjiB,KAAK4mC,MAAM5nC,IAAM,EAC1B,OAAO,EAGT,GADAmuB,EAAG4F,QAAQ30B,GACY,IAAnB4B,KAAKwH,EAAEya,IAAIkL,GACb,OAAO,IAKbsmB,EAAM30C,UAAUsyC,IAAMqC,EAAM30C,UAAU+1C,UACtCpB,EAAM30C,UAAUoyC,SAAWuC,EAAM30C,UAAUsnB,K,6BChb3CppB,EAAQ4vC,KAAO,EAAQ,KACvB5vC,EAAQw3D,OAAS,EAAQ,KACzBx3D,EAAQ8vC,OAAS,EAAQ,IACzB9vC,EAAQm3D,OAAS,EAAQ,KACzBn3D,EAAQo3D,OAAS,EAAQ,K,6BCJzB,IAAI95C,EAAQ,EAAQ,IAChB+5C,EAAS,EAAQ,IACjBkJ,EAAY,EAAQ,IAEpBj+C,EAAShF,EAAMgF,OACfC,EAAQjF,EAAMiF,MACdG,EAAUpF,EAAMoF,QAChBw9C,EAAOK,EAAUL,KACjBtxB,EAAYyoB,EAAOzoB,UAEnBijD,EAAS,CACX,WAAY,WACZ,WAAY,YAGd,SAAShiD,IACP,KAAM7sC,gBAAgB6sC,GACpB,OAAO,IAAIA,EAEbjB,EAAUvuC,KAAK2C,MACfA,KAAKsT,EAAI,CACP,WAAY,WAAY,WACxB,UAAY,YACdtT,KAAKwrD,EAAI,IAAI1iD,MAAM,IAGrBwR,EAAMuE,SAASguB,EAAMjB,GACrB3uC,EAAOD,QAAU6vC,EAEjBA,EAAKh7B,UAAY,IACjBg7B,EAAKd,QAAU,IACfc,EAAKb,aAAe,GACpBa,EAAKZ,UAAY,GAEjBY,EAAK/tC,UAAUstC,QAAU,SAAiB9+B,EAAKhL,GAG7C,IAFA,IAAIkpD,EAAIxrD,KAAKwrD,EAEJtuD,EAAI,EAAGA,EAAI,GAAIA,IACtBsuD,EAAEtuD,GAAKoQ,EAAIhL,EAAQpF,GAErB,KAAMA,EAAIsuD,EAAE9rD,OAAQxC,IAClBsuD,EAAEtuD,GAAKoiB,EAAOksC,EAAEtuD,EAAI,GAAKsuD,EAAEtuD,EAAI,GAAKsuD,EAAEtuD,EAAI,IAAMsuD,EAAEtuD,EAAI,IAAK,GAE7D,IAAIqK,EAAIvH,KAAKsT,EAAE,GACXvQ,EAAI/C,KAAKsT,EAAE,GACX/V,EAAIyC,KAAKsT,EAAE,GACX9V,EAAIwC,KAAKsT,EAAE,GACXzM,EAAI7G,KAAKsT,EAAE,GAEf,IAAKpW,EAAI,EAAGA,EAAIsuD,EAAE9rD,OAAQxC,IAAK,CAC7B,IAAI+B,KAAO/B,EAAI,IACXkB,EAAIshB,EAAQJ,EAAO/X,EAAG,GAAI21D,EAAKj+D,EAAG8D,EAAGxF,EAAGC,GAAIqJ,EAAG2kD,EAAEtuD,GAAI2xF,EAAO5vF,IAChE4H,EAAIrJ,EACJA,EAAID,EACJA,EAAI+hB,EAAOvc,EAAG,IACdA,EAAIwE,EACJA,EAAInJ,EAGN4B,KAAKsT,EAAE,GAAKiM,EAAMvf,KAAKsT,EAAE,GAAI/L,GAC7BvH,KAAKsT,EAAE,GAAKiM,EAAMvf,KAAKsT,EAAE,GAAIvQ,GAC7B/C,KAAKsT,EAAE,GAAKiM,EAAMvf,KAAKsT,EAAE,GAAI/V,GAC7ByC,KAAKsT,EAAE,GAAKiM,EAAMvf,KAAKsT,EAAE,GAAI9V,GAC7BwC,KAAKsT,EAAE,GAAKiM,EAAMvf,KAAKsT,EAAE,GAAIzM,IAG/BgmC,EAAK/tC,UAAUytC,QAAU,SAAgBp8B,GACvC,MAAY,QAARA,EACKmK,EAAM2E,QAAQjf,KAAKsT,EAAG,OAEtBgH,EAAM8E,QAAQpf,KAAKsT,EAAG,S,6BCtEjC,IAAIgH,EAAQ,EAAQ,IAChByyB,EAAS,EAAQ,IAErB,SAAS64B,IACP,KAAM5lE,gBAAgB4lE,GACpB,OAAO,IAAIA,EAEb74B,EAAO1vC,KAAK2C,MACZA,KAAKsT,EAAI,CACP,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,YAExCgH,EAAMuE,SAAS+mD,EAAQ74B,GACvB9vC,EAAOD,QAAU4oE,EAEjBA,EAAO/zD,UAAY,IACnB+zD,EAAO75B,QAAU,IACjB65B,EAAO55B,aAAe,IACtB45B,EAAO35B,UAAY,GAEnB25B,EAAO9mE,UAAUytC,QAAU,SAAgBp8B,GAEzC,MAAY,QAARA,EACKmK,EAAM2E,QAAQjf,KAAKsT,EAAErS,MAAM,EAAG,GAAI,OAElCqZ,EAAM8E,QAAQpf,KAAKsT,EAAErS,MAAM,EAAG,GAAI,S,6BCzB7C,IAAIqZ,EAAQ,EAAQ,IAEhBs+C,EAAS,EAAQ,IAErB,SAASiN,IACP,KAAM7lE,gBAAgB6lE,GACpB,OAAO,IAAIA,EAEbjN,EAAOv7D,KAAK2C,MACZA,KAAKsT,EAAI,CACP,WAAY,WACZ,WAAY,UACZ,WAAY,UACZ,UAAY,WACZ,WAAY,WACZ,WAAY,WACZ,WAAY,WACZ,WAAY,YAEhBgH,EAAMuE,SAASgnD,EAAQjN,GACvB37D,EAAOD,QAAU6oE,EAEjBA,EAAOh0D,UAAY,KACnBg0D,EAAO95B,QAAU,IACjB85B,EAAO75B,aAAe,IACtB65B,EAAO55B,UAAY,IAEnB45B,EAAO/mE,UAAUytC,QAAU,SAAgBp8B,GACzC,MAAY,QAARA,EACKmK,EAAM2E,QAAQjf,KAAKsT,EAAErS,MAAM,EAAG,IAAK,OAEnCqZ,EAAM8E,QAAQpf,KAAKsT,EAAErS,MAAM,EAAG,IAAK,S,6BC/B9C,IAAIqZ,EAAQ,EAAQ,IAChB+5C,EAAS,EAAQ,IAEjB/0C,EAAShF,EAAMgF,OACfC,EAAQjF,EAAMiF,MACdC,EAAUlF,EAAMkF,QAChBC,EAAUnF,EAAMmF,QAChBmsB,EAAYyoB,EAAOzoB,UAEvB,SAASe,IACP,KAAM3sC,gBAAgB2sC,GACpB,OAAO,IAAIA,EAEbf,EAAUvuC,KAAK2C,MAEfA,KAAKsT,EAAI,CAAE,WAAY,WAAY,WAAY,UAAY,YAC3DtT,KAAKkf,OAAS,SA0DhB,SAAS3F,EAAEvV,EAAGwD,EAAGC,EAAG4T,GAClB,OAAIrX,GAAK,GACAwD,EAAIC,EAAI4T,EACRrX,GAAK,GACJwD,EAAIC,GAAQD,EAAK6T,EAClBrX,GAAK,IACJwD,GAAMC,GAAM4T,EACbrX,GAAK,GACJwD,EAAI6T,EAAM5T,GAAM4T,EAEjB7T,GAAKC,GAAM4T,GAGtB,SAAS8vC,EAAEnnD,GACT,OAAIA,GAAK,GACA,EACAA,GAAK,GACL,WACAA,GAAK,GACL,WACAA,GAAK,GACL,WAEA,WAGX,SAASs5E,EAAGt5E,GACV,OAAIA,GAAK,GACA,WACAA,GAAK,GACL,WACAA,GAAK,GACL,WACAA,GAAK,GACL,WAEA,EA5FXsW,EAAMuE,SAAS8tB,EAAWf,GAC1B5uC,EAAQyvC,UAAYE,EAEpBA,EAAU96B,UAAY,IACtB86B,EAAUZ,QAAU,IACpBY,EAAUX,aAAe,IACzBW,EAAUV,UAAY,GAEtBU,EAAU7tC,UAAUstC,QAAU,SAAgB9+B,EAAKhL,GAWjD,IAVA,IAAIquB,EAAI3wB,KAAKsT,EAAE,GACXsd,EAAI5wB,KAAKsT,EAAE,GACXjF,EAAIrO,KAAKsT,EAAE,GACXud,EAAI7wB,KAAKsT,EAAE,GACX4pE,EAAIl9E,KAAKsT,EAAE,GACXilE,EAAK5nD,EACLwsD,EAAKvsD,EACL+6B,EAAKt9C,EACL+uE,EAAKvsD,EACLwsD,EAAKH,EACAl5E,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAI+/B,EAAIxkB,EACND,EACEG,EAAQkR,EAAGpX,EAAEvV,EAAG4sB,EAAGviB,EAAGwiB,GAAIvjB,EAAItP,EAAEgG,GAAK1B,GAAQ6oD,EAAEnnD,IAC/C/E,EAAE+E,IACJk5E,GACFvsD,EAAIusD,EACJA,EAAIrsD,EACJA,EAAIvR,EAAOjR,EAAG,IACdA,EAAIuiB,EACJA,EAAImT,EACJA,EAAIxkB,EACFD,EACEG,EAAQ84D,EAAIh/D,EAAE,GAAKvV,EAAGm5E,EAAIxxB,EAAIyxB,GAAK9vE,EAAI2vE,EAAGj5E,GAAK1B,GAAQg7E,EAAGt5E,IAC1Ds0E,EAAGt0E,IACLq5E,GACF9E,EAAK8E,EACLA,EAAKD,EACLA,EAAK99D,EAAOqsC,EAAI,IAChBA,EAAKwxB,EACLA,EAAKp5C,EAEPA,EAAIvkB,EAAQxf,KAAKsT,EAAE,GAAIjF,EAAG+uE,GAC1Bp9E,KAAKsT,EAAE,GAAKkM,EAAQxf,KAAKsT,EAAE,GAAIud,EAAGwsD,GAClCr9E,KAAKsT,EAAE,GAAKkM,EAAQxf,KAAKsT,EAAE,GAAI4pE,EAAG3E,GAClCv4E,KAAKsT,EAAE,GAAKkM,EAAQxf,KAAKsT,EAAE,GAAIqd,EAAGwsD,GAClCn9E,KAAKsT,EAAE,GAAKkM,EAAQxf,KAAKsT,EAAE,GAAIsd,EAAG+6B,GAClC3rD,KAAKsT,EAAE,GAAKywB,GAGd4I,EAAU7tC,UAAUytC,QAAU,SAAgBp8B,GAC5C,MAAY,QAARA,EACKmK,EAAM2E,QAAQjf,KAAKsT,EAAG,UAEtBgH,EAAM8E,QAAQpf,KAAKsT,EAAG,WA0CjC,IAAItV,EAAI,CACN,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAClD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EACnD,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAClD,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAGhDi/E,EAAK,CACP,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAClD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EACnD,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAClD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAClD,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,IAGhDh+E,EAAI,CACN,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EACrD,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GACpD,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EACrD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GACpD,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAGnDq5E,EAAK,CACP,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GACpD,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EACrD,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EACrD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,K,6BC9ItD,IAAIh+D,EAAQ,EAAQ,IAChBjN,EAAS,EAAQ,IAErB,SAASyhF,EAAK37E,EAAM1U,EAAK0R,GACvB,KAAMnQ,gBAAgB8uF,GACpB,OAAO,IAAIA,EAAK37E,EAAM1U,EAAK0R,GAC7BnQ,KAAKkT,KAAOC,EACZnT,KAAK6R,UAAYsB,EAAKtB,UAAY,EAClC7R,KAAK+rC,QAAU54B,EAAK44B,QAAU,EAC9B/rC,KAAKoT,MAAQ,KACbpT,KAAKqT,MAAQ,KAEbrT,KAAKyhB,MAAMnH,EAAMI,QAAQjc,EAAK0R,IAEhClT,EAAOD,QAAU8xF,EAEjBA,EAAKhwF,UAAU2iB,MAAQ,SAAchjB,GAE/BA,EAAIiB,OAASM,KAAK6R,YACpBpT,GAAM,IAAIuB,KAAKkT,MAAOV,OAAO/T,GAAK4tC,UACpCh/B,EAAO5O,EAAIiB,QAAUM,KAAK6R,WAG1B,IAAK,IAAI3U,EAAIuB,EAAIiB,OAAQxC,EAAI8C,KAAK6R,UAAW3U,IAC3CuB,EAAIqG,KAAK,GAEX,IAAK5H,EAAI,EAAGA,EAAIuB,EAAIiB,OAAQxC,IAC1BuB,EAAIvB,IAAM,GAIZ,IAHA8C,KAAKoT,OAAQ,IAAIpT,KAAKkT,MAAOV,OAAO/T,GAG/BvB,EAAI,EAAGA,EAAIuB,EAAIiB,OAAQxC,IAC1BuB,EAAIvB,IAAM,IACZ8C,KAAKqT,OAAQ,IAAIrT,KAAKkT,MAAOV,OAAO/T,IAGtCqwF,EAAKhwF,UAAU0T,OAAS,SAAgBlF,EAAK6C,GAE3C,OADAnQ,KAAKoT,MAAMZ,OAAOlF,EAAK6C,GAChBnQ,MAGT8uF,EAAKhwF,UAAUutC,OAAS,SAAgBl8B,GAEtC,OADAnQ,KAAKqT,MAAMb,OAAOxS,KAAKoT,MAAMi5B,UACtBrsC,KAAKqT,MAAMg5B,OAAOl8B,K,cC7C3BlT,EAAOD,QAAU,CACf4zC,QAAS,CACPG,KAAM,EACNI,OAAQ,CACN,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,kEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,sEAINl2B,IAAK,CACH4a,IAAK,EACLsb,OAAQ,CACN,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,iEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,wE,6BCrwBR,IAAI52B,EAAK,EAAQ,IACb4rB,EAAW,EAAQ,KACnB7r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AY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,QAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,SAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,SAAY,WAAY,WACpC,WAAY,QAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,SAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,SACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,SAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,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WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,SAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,SAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,aAEtC,IAAIA,YAAY,CACd,WAAY,UAAY,WAAY,WACpC,WAAY,SAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,SAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,SAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,SAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,aAEtC,IAAIA,YAAY,CACd,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,SAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,UACpC,UAAY,WAAY,SAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,SAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,SAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,SAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,SAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,SACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,aAEtC,IAAIA,YAAY,CACd,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,SACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,SAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,UAAY,WAAY,UACpC,UAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,SAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,UAAY,UACpC,WAAY,UAAY,UAAY,UACpC,WAAY,U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C,EAAM,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,EAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAC1C,GAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,EAC1C,EAAM,GAAM,GAAM,EAAM,EAAM,GAAM,GAAM,EAC1C,GAAM,EAAM,EAAM,GAAM,GAAM,EAAM,EAAM,EAC1C,EAAM,GAAM,EAAM,EAAM,GAAM,EAAM,EAAM,GAC1C,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,EAE1C,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAM,EAC1C,EAAM,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,GAC1C,EAAM,EAAM,GAAM,EAAM,GAAM,EAAM,EAAM,GAC1C,GAAM,GAAM,EAAM,GAAM,EAAM,GAAM,EAAM,EAC1C,GAAM,EAAM,EAAM,GAAM,EAAM,GAAM,EAAM,EAC1C,EAAM,EAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAC1C,GAAM,EAAM,EAAM,GAAM,EAAM,GAAM,GAAM,EAC1C,EAAM,GAAM,GAAM,EAAM,GAAM,EAAM,EAAM,GAE1C,EAAM,GAAM,GAAM,EAAM,GAAM,GAAM,EAAM,EAC1C,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,GAAM,EAC1C,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,GAAM,EAAM,GAAM,GAAM,EAAM,GAAM,GAAM,EAC1C,GAAM,EAAM,EAAM,GAAM,EAAM,EAAM,EAAM,EAC1C,GAAM,GAAM,GAAM,EAAM,EAAM,GAAM,GAAM,EAC1C,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAC1C,EAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAE1C,EAAM,GAAM,GAAM,GAAM,EAAM,EAAM,EAAM,GAC1C,EAAM,EAAM,GAAM,EAAM,GAAM,GAAM,EAAM,EAC1C,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,GAC1C,GAAM,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,EAC1C,EAAM,GAAM,EAAM,EAAM,EAAM,GAAM,GAAM,EAC1C,GAAM,EAAM,GAAM,GAAM,EAAM,EAAM,EAAM,GAC1C,GAAM,EAAM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AAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,EAAY,EACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,SAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,SAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,aAGhCsrH,EAAK,IAAItrH,YAAY,CACzB,WAAY,UAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,SAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,SAAY,WAAY,WACpC,WAAY,WAAY,SAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,SACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,EAAY,EACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,SAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,SACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,SAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,UAAY,SAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,SACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,SAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,aAGhCurH,EAAK,IAAIvrH,YAAY,CACzB,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,SAAY,SAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,SAAY,SACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,SAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,SAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,UAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,UAAY,WAAY,EAAY,EACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,UAAY,UAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,SAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,SAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,YAGhCwrH,EAAK,IAAIxrH,YAAY,CACzB,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,SAAY,SAAY,WAAY,WACpC,WAAY,UAAY,SAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,SAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,SAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,SAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,SACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,EAAY,EACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,SACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,SACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,SAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,aAGhCyrH,EAAK,IAAIzrH,YAAY,CACzB,WAAY,UAAY,SAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,SAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,SAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,SAAY,UAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,SAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,UACpC,SAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,SACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,EAAY,EACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,SAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,SACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,SACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,aAGhC0rH,EAAK,IAAI1rH,YAAY,CACzB,UAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,SAAY,UAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,SAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,SACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,SAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,EAAY,EACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,SAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,UAAY,WACpC,UAAY,WAAY,WAAY,SACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,SAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,SAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,aAGhC2rH,EAAK,IAAI3rH,YAAY,CACzB,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,SAAY,SAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,SAAY,SACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,SAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,SAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,SACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,UAAY,EAAY,EACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,UAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,SACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,UAAY,SAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,SAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,YAGhC4rH,EAAK,IAAI5rH,YAAY,CACzB,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,SAAY,SAAY,WAAY,WACpC,UAAY,WAAY,WAAY,SACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,SACpC,WAAY,WAAY,WAAY,WACpC,SAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,SAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,SAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,EAAY,EACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,SAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,SAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,aAOtC,MAAMo4D,EACJ,cACErmE,KAAKwd,MAAQ,IAAIvP,YAAY,IAC7BjO,KAAKsN,IAAM,IAAIW,YAAY,IAC3BjO,KAAK4V,MAAQtW,EAAOkH,MAAM,IAC1BxG,KAAK8B,MArjCS,EAwjChB,OACE,IAAK,IAAI5E,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKwd,MAAMtgB,GAAK,EAElB,OADA8C,KAAK8B,KAAO,EACL9B,KAGT,OAAO2B,GAGL,OAFA0L,EAAO/N,EAAO8B,SAASO,IACvB3B,KAAKosC,QAAQzqC,EAAMA,EAAKjC,QACjBM,KAGT,QACE,OAAOA,KAAKorD,OAAO9rD,EAAOkH,MAAM,KAGlC,QAAQ7E,EAAMN,GACZgM,GA1kCc,IA0kCPrN,KAAK8B,KAAoB,+BAEhC,IAAI8F,EAAkB,GAAZ5H,KAAK8B,KACXwgB,EAAM,EAIV,GAFAtiB,KAAK8B,MAAQT,EAETuG,EAAM,EAAG,CACX,IAAIyjD,EAAO,GAAKzjD,EAWhB,GATIyjD,EAAOhqD,IACTgqD,EAAOhqD,GAETM,EAAKJ,KAAKvB,KAAK4V,MAAOhO,EAAK0a,EAAKA,EAAM+oC,GAEtCzjD,GAAOyjD,EACPhqD,GAAOgqD,EACP/oC,GAAO+oC,EAEHzjD,EAAM,GACR,OAEF5H,KAAKsrD,WAAWtrD,KAAK4V,MAAO,GAG9B,KAAOvU,GAAO,IACZrB,KAAKsrD,WAAW3pD,EAAM2gB,GACtBA,GAAO,GACPjhB,GAAO,GAGLA,EAAM,GACRM,EAAKJ,KAAKvB,KAAK4V,MAAO,EAAG0M,EAAKA,EAAMjhB,GAGxC,OAAO4H,GACLoE,GA9mCc,IA8mCPrN,KAAK8B,KAAoB,+BAEhC,MAAM8F,EAAkB,GAAZ5H,KAAK8B,KACXT,EAAkB,EAAZrB,KAAK8B,KAEjBypD,EAASN,EAAO5pD,GAAO,EAAI,cAAkB,EAAG,IAChDkqD,EAASN,EAAM5pD,IAAQ,EAAG,IAE1BrB,KAAKosC,QAAQ8e,EAAS,GAAM,GAAKtjD,EAAO,KACxC5H,KAAKosC,QAAQ6e,EAAM,IAEnB,IAAK,IAAI/tD,EAAI,EAAGA,EAAI,GAAIA,IACtBquD,EAAStiD,EAAKjJ,KAAKwd,MAAMtgB,GAAQ,EAAJA,GAC7B8C,KAAKwd,MAAMtgB,GAAK,EAGlB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKsN,IAAIpQ,GAAK,EAEhB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAK4V,MAAM1Y,GAAK,EAIlB,OAFA8C,KAAK8B,MApoCS,EAsoCPmH,EAGT,WAAWsV,EAAO3W,GAChB,MAAMgO,EAAQ5V,KAAKsN,IAEnB,IAAK,IAAIpQ,EAAI,EAAGA,EAAI,GAAIA,IACtB0Y,EAAM1Y,IA2HWolB,EA3HS1a,EAAU,EAAJ1K,EA4Hd,UADPyE,EA3HQ4c,GA4HV+D,KACS,MAAd3gB,EAAK2gB,KACS,IAAd3gB,EAAK2gB,KACL3gB,EAAK2gB,IAJf,IAAiB3gB,EAAM2gB,EAzHnB,MAAM6oC,EAAI,IAAIl9C,YAAY,IACpB68D,EAAI,IAAI78D,YAAY,IACpBuP,EAAQ,IAAIvP,YAAY,IAE9B,IAAK,IAAI/Q,EAAI,EAAGA,EAAI,GAAIA,IACtBiuD,EAAEjuD,GAAK8C,KAAKwd,MAAMtgB,GAClBsgB,EAAMtgB,GAAK0Y,EAAM1Y,GAAKiuD,EAAEjuD,GAG1B,IAAK,IAAIc,EAAI,EAAGA,EAAI,GAAQA,IAAK,CAC/B,IAAK,IAAId,EAAI,EAAGA,EAAI,EAAGA,IACrB4tE,EAAM,EAAJ5tE,EAAQ,GAAK,EACXo8H,EAA8C,GAAzCnuE,GAAG,EAAIjuD,GAAK,EAAI,EAAI,KAAO,GAAM,KAAY,GAClDq8H,EAA8C,GAAzCpuE,GAAG,EAAIjuD,GAAK,EAAI,EAAI,KAAO,GAAM,KAAY,GAClDs8H,EAA8C,GAAzCruE,GAAG,EAAIjuD,GAAK,EAAI,EAAI,KAAQ,EAAK,KAAY,GAClDu8H,EAA8C,GAAzCtuE,GAAG,EAAIjuD,GAAK,EAAI,EAAI,KAAQ,EAAK,KAAY,GAClDw8H,EAA8C,GAAzCvuE,GAAG,EAAIjuD,GAAK,EAAI,EAAI,KAAO,GAAM,KAAY,GAClDy8H,EAA8C,GAAzCxuE,GAAG,EAAIjuD,GAAK,EAAI,EAAI,KAAO,GAAM,KAAY,GAClD08H,EAA8C,GAAzCzuE,GAAG,EAAIjuD,GAAK,EAAI,EAAI,KAAQ,EAAK,KAAY,GAClD28H,EAA8C,GAAzC1uE,GAAG,EAAIjuD,GAAK,EAAI,EAAI,KAAQ,EAAK,KAAY,IAC3C,IAANA,EAAUm8H,EAAO,EAAJr7H,EAAQ,GAAK,GAE/B8sE,EAAM,EAAJ5tE,EAAQ,GAAK,EACXo8H,EAA8C,GAAzCnuE,GAAG,EAAIjuD,GAAK,EAAI,EAAI,KAAO,GAAM,KAAY,GAClDq8H,EAA8C,GAAzCpuE,GAAG,EAAIjuD,GAAK,EAAI,EAAI,KAAO,GAAM,KAAY,GAClDs8H,EAA8C,GAAzCruE,GAAG,EAAIjuD,GAAK,EAAI,EAAI,KAAQ,EAAK,KAAY,GAClDu8H,EAA8C,GAAzCtuE,GAAG,EAAIjuD,GAAK,EAAI,EAAI,KAAQ,EAAK,KAAY,GAClDw8H,EAA8C,GAAzCvuE,GAAG,EAAIjuD,GAAK,EAAI,EAAI,KAAO,GAAM,KAAY,GAClDy8H,EAA8C,GAAzCxuE,GAAG,EAAIjuD,GAAK,EAAI,EAAI,KAAO,GAAM,KAAY,GAClD08H,EAA8C,GAAzCzuE,GAAG,EAAIjuD,GAAK,EAAI,EAAI,KAAQ,EAAK,KAAY,GAClD28H,EAA8C,GAAzC1uE,GAAG,EAAIjuD,GAAK,EAAI,EAAI,KAAQ,EAAK,KAAY,IAC3C,IAANA,EAAUm8H,EAAO,EAAJr7H,EAAQ,GAAK,GAGjC,IAAK,IAAId,EAAI,EAAGA,EAAI,GAAIA,IACtBiuD,EAAEjuD,GAAK4tE,EAAE5tE,GAEX,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IACrB4tE,EAAM,EAAJ5tE,EAAQ,GAAK,EACXo8H,EAAkD,GAA7C97G,GAAO,EAAItgB,GAAK,EAAI,EAAI,KAAO,GAAM,KAAY,GACtDq8H,EAAkD,GAA7C/7G,GAAO,EAAItgB,GAAK,EAAI,EAAI,KAAO,GAAM,KAAY,GACtDs8H,EAAkD,GAA7Ch8G,GAAO,EAAItgB,GAAK,EAAI,EAAI,KAAQ,EAAK,KAAY,GACtDu8H,EAAkD,GAA7Cj8G,GAAO,EAAItgB,GAAK,EAAI,EAAI,KAAQ,EAAK,KAAY,GACtDw8H,EAAkD,GAA7Cl8G,GAAO,EAAItgB,GAAK,EAAI,EAAI,KAAO,GAAM,KAAY,GACtDy8H,EAAkD,GAA7Cn8G,GAAO,EAAItgB,GAAK,EAAI,EAAI,KAAO,GAAM,KAAY,GACtD08H,EAAkD,GAA7Cp8G,GAAO,EAAItgB,GAAK,EAAI,EAAI,KAAQ,EAAK,KAAY,GACtD28H,EAAkD,GAA7Cr8G,GAAO,EAAItgB,GAAK,EAAI,EAAI,KAAQ,EAAK,KAAY,GACtDiuD,EAAM,EAAJjuD,EAAQ,GAEd4tE,EAAM,EAAJ5tE,EAAQ,GAAK,EACXo8H,EAAkD,GAA7C97G,GAAO,EAAItgB,GAAK,EAAI,EAAI,KAAO,GAAM,KAAY,GACtDq8H,EAAkD,GAA7C/7G,GAAO,EAAItgB,GAAK,EAAI,EAAI,KAAO,GAAM,KAAY,GACtDs8H,EAAkD,GAA7Ch8G,GAAO,EAAItgB,GAAK,EAAI,EAAI,KAAQ,EAAK,KAAY,GACtDu8H,EAAkD,GAA7Cj8G,GAAO,EAAItgB,GAAK,EAAI,EAAI,KAAQ,EAAK,KAAY,GACtDw8H,EAAkD,GAA7Cl8G,GAAO,EAAItgB,GAAK,EAAI,EAAI,KAAO,GAAM,KAAY,GACtDy8H,EAAkD,GAA7Cn8G,GAAO,EAAItgB,GAAK,EAAI,EAAI,KAAO,GAAM,KAAY,GACtD08H,EAAkD,GAA7Cp8G,GAAO,EAAItgB,GAAK,EAAI,EAAI,KAAQ,EAAK,KAAY,GACtD28H,EAAkD,GAA7Cr8G,GAAO,EAAItgB,GAAK,EAAI,EAAI,KAAQ,EAAK,KAAY,GACtDiuD,EAAM,EAAJjuD,EAAQ,GAGhB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACtBsgB,EAAMtgB,GAAK4tE,EAAE5tE,GAGjB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACtB8C,KAAKwd,MAAMtgB,IAAMsgB,EAAMtgB,GAAK0Y,EAAM1Y,GAGtC,cACE,OAAO,IAAImpE,EAGb,cACE,OAAO,IAAIrzD,EAAKqzD,EAAW,IAG7B,cAAc1kE,GACZ,OAAO0kE,EAAU7zC,IAAI5jB,OAAO4D,OAAO7Q,GAAM4R,QAG3C,YAAYwO,EAAMC,GAGhB,OAFA3U,EAAO/N,EAAO8B,SAAS2gB,IAAyB,KAAhBA,EAAKriB,QACrC2N,EAAO/N,EAAO8B,SAAS4gB,IAA2B,KAAjBA,EAAMtiB,QAChC2mE,EAAU7zC,IAAI5jB,OAAO4D,OAAOuP,GAAMvP,OAAOwP,GAAOzO,QAGzD,aAAa/L,EAAGC,EAAG4T,GACjB,MAAM,IAACmX,GAAO6zC,EASd,OAPA7zC,EAAI5jB,OACJ4jB,EAAIhgB,OAAOhL,GACXgrB,EAAIhgB,OAAO/K,GAEP4T,GACFmX,EAAIhgB,OAAO6I,GAENmX,EAAIjf,QAGb,WAAW5R,EAAMlD,GACf,OAAO4nE,EAAUrb,OAAOp8C,KAAKnQ,GAAK+T,OAAO7Q,GAAM4R,SA2BnD,SAASg4C,EAAS5pD,EAAMmZ,EAAKwH,GAK3B,OAJA3gB,EAAK2gB,KAASxH,IAAQ,GACtBnZ,EAAK2gB,KAASxH,IAAQ,GACtBnZ,EAAK2gB,KAASxH,IAAQ,EACtBnZ,EAAK2gB,KAASxH,EACPwH,EAxBT+jD,EAAU7/B,OAAS,EACnB6/B,EAAU9/B,GAAK,YACf8/B,EAAUvkE,KAAO,GACjBukE,EAAUrrD,KAAO,IACjBqrD,EAAUx0D,UAAY,GACtBw0D,EAAUv2B,KAAOxwC,EAAOkH,MAAM,GAAI,GAClC6/D,EAAU7zC,IAAM,IAAI6zC,EAyBpBppE,EAAOD,QAAUqpE,I;;;;;GC9yCjBppE,EAAOD,QAAU,EAAQ,M;;;;;;;;;;GCKzB,MAAMu2G,EAAO,EAAQ,IAMrBt2G,EAAOD,QAAU,IAAIu2G,EAAK,OAAQ,U,qiBCjBlC,aAEA,QACA,SACA,SAEMumB,EAAoC,CACxCC,WAAY,GACZC,KAAM,GACNt0E,IAAK,GACLhjB,KAAM,EAAC,GACPu3F,QAAS,GACTC,eAAe,EACfC,OAAQ,CAAEC,OAAQ,GAAIC,QAAS,GAAI98G,QAAS,GAAI+8G,SAAU,GAAIC,kBAAmB,IAGnF,EAKE,SAAYv5D,GAAZ,WAMA,KAAAw5D,mBAAqB,WACnB,EAAKC,cAAgB,EAAH,GAAQX,IAG5B,KAAAvyB,SAAW,SAAC5tF,GAAwB,SAAK+gH,WAAW/gH,IAEpD,KAAAghH,YAAc,SAAChhH,GAAwB,SAAK+gH,gBAAWj6H,EAAWkZ,IAElE,KAAAihH,UAAY,SAACjhH,GAAwB,SAAK+gH,gBAAWj6H,OAAWA,EAAWkZ,IAE3E,KAAAkhH,SAAW,SAAClhH,GAAwB,SAAK+gH,gBAAWj6H,OAAWA,OAAWA,EAAWkZ,IAErF,KAAAmhH,YAAc,SAACnhH,GAAwB,SAAK+gH,gBAAWj6H,OAAWA,OAAWA,OAAWA,EAAWkZ,IAEnG,KAAAohH,YAAc,SAACphH,GACb,EAAK8gH,cAAgB,EAAH,KAAQ,EAAKA,eAAa,CAAEN,OAAQxgH,KAIxD,KAAAqhH,QAAU,WAAM,WAAAt8C,aAAY,EAAK+7C,cAAcV,aAEvC,KAAAW,WAAa,SAACO,EAAmBC,EAAsBC,EAAoBC,EAAmBC,GACpG,IAIIC,EAJEC,GAA6B,IAAA/4F,cAAa,EAAKi4F,eACjDe,GAAsC,OACtB/6H,IAAhB46H,IAA2BG,EAA6C,UAAhBH,GAA2C,aAAhBA,GAA8C,YAAhBA,GAA6C,aAAhBA,GAIlJC,GAAc,IAAAhrH,OAAM,EAAKmrH,QAAQ95H,KAAM,EAAK84H,cAAec,EAAmBC,EAA4BP,EAAUC,EAAaC,EAAWC,EAAUC,EAAa,EAAKr6D,IAExK,EAAK06D,kBAAkBJ,IAGjB,KAAAI,kBAAoB,SAACJ,GAE3B,EAAKb,cAAgB,EAAH,KAAQ,EAAKA,eAAa,CAAEV,WAAY,EAAF,KAAM,EAAKU,cAAcV,YAAY,GAAF,CAAEuB,EAAYL,WAAW,GAAAU,aAAcL,EAAYK,eAG1I,EAAKlB,cAAcP,cACrB,EAAKO,cAAgB,EAAH,KAAQ,EAAKA,eAAa,CAAEkB,aAAc,0CAK1DL,EAAYtB,KAAK4B,eAAiB,IACpC,EAAKnB,cAAgB,EAAH,KAAQ,EAAKA,eAAa,CAAET,KAAM,EAAKS,cAAcT,KAAK/4H,MAAM,EAAG,EAAKw5H,cAAcT,KAAKt6H,OAAS47H,EAAYtB,KAAK4B,mBAIrIN,EAAY51E,IAAIm2E,sBAClB,EAAKpB,cAAgB,EAAH,KAAQ,EAAKA,eAAa,CAAE/0E,IAAK,EAAK+0E,cAAc/0E,IAAIzkD,MAAM,EAAG,EAAKw5H,cAAc/0E,IAAIhmD,OAAS,MAIrH,EAAK+6H,cAAgB,EAAH,KAAQ,EAAKA,eAAa,CAAET,KAAM,EAAKS,cAAcT,KAAKtyH,OAAO4zH,EAAYtB,KAAK8B,gBAGhGR,EAAY51E,IAAIq2E,UAAS,EAAKtB,cAAgB,EAAH,KAAQ,EAAKA,eAAa,CAAE/0E,IAAK,EAAF,KAAM,EAAK+0E,cAAc/0E,KAAK,GAAF,CAAE41E,EAAY51E,IAAIq2E,UAAO,MAG/HT,EAAY54F,OAAM,EAAK+3F,cAAgB,EAAH,KAAQ,EAAKA,eAAa,CAAE/3F,KAAM44F,EAAY54F,QAGlF44F,EAAYrB,UAAS,EAAKQ,cAAgB,EAAH,KAAQ,EAAKA,eAAa,CAAER,QAASqB,EAAYrB,WAGxFqB,EAAYpB,gBACd,EAAKO,cAAgB,EAAH,KAAQ,EAAKA,eAAa,CAAEP,eAAe,EAAMyB,aAAc,4CAxEnF37H,KAAKghE,GAAKA,EACVhhE,KAAKy7H,QAAU,IAAI,EAAAO,QAAQh7D,GAC3BhhE,KAAKy6H,cAAgB,EAAH,GAAQX,IARjB,EAAAjiE,a,+FClBb,YAEA,QACA,SACA,SACA,SAiBA,EAIE,SAAYmJ,GAAZ,WAKA,KAAAi7D,SAAW,SAACh+G,GAAqC,SAAKtc,KAAKkgC,MAAK,SAACrkC,GAAM,OAAAA,EAAEygB,OAASA,MAClF,KAAAi+G,SAAW,SAACj+G,G,MACJvR,EAA0B,QAAnB,IAAKuvH,SAASh+G,UAAK,eAAE+jB,OAClC,YAAgBvhC,IAATiM,GAAsB,EAAIA,GAEnC,KAAAyvH,QAAU,SAACl+G,GAAY,MAAa,OAAmB,QAAnB,IAAKg+G,SAASh+G,UAAK,eAAEpE,MAAO,IAEhE,KAAAuiH,SAAW,SAAC1vH,GAAqC,SAAK/K,KAAKkgC,MAAK,SAACrkC,GAAM,OAAAA,EAAEwkC,SAAWt1B,MACpF,KAAA2vH,SAAW,SAAC3vH,GAAY,MAAa,OAAmB,QAAnB,IAAK0vH,SAAS1vH,UAAK,eAAEuR,OAAQ,IAZhEje,KAAKghE,GAAKA,EACVhhE,KAAK2B,KArBO,SAACq/D,GACf,OAAIA,EAAGC,UAAY,EAAAxJ,WAAW6kE,IACxBt7D,EAAGu7D,MAAQ,EAAA7kE,mBAAmB8kE,OAAe,EAAA7kE,qBAE1C,EAAA8kE,wBAILz7D,EAAGu7D,MAAQ,EAAA7kE,mBAAmB8kE,OAAe,EAAAl+C,oBAE1C,EAAAo+C,uBAWOC,CAAQ37D,IANX,EAAAg7D,W,+UCrBb,YAEa,EAAAS,wBAAuB,KAAiB,EAAA9kE,sBAAoB,I,8UCFzE,aAEa,EAAA+kE,uBAAsB,OAC9B,EAAAp+C,qBAAmB,IAMtB,CACErgE,KAAM,0BACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YACE,kPAEJ,CACEnkD,KAAM,uBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,qJAEf,CACEnkD,KAAM,uBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,iHAEf,CACEnkD,KAAM,8BACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YACE,oZAEJ,CACEnkD,KAAM,0BACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,wFAEf,CACEnkD,KAAM,0BACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YACE,ykBAIJ,CACEnkD,KAAM,2BACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,sJAIf,CACEnkD,KAAM,wBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,6HAEf,CACEnkD,KAAM,wBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,8GAEf,CACEnkD,KAAM,wBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,wIAEf,CACEnkD,KAAM,+BACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YACE,kYAIJ,CACEnkD,KAAM,oBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,2CAEf,CACEnkD,KAAM,qBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,4CAEf,CACEnkD,KAAM,sBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,6CAEf,CACEnkD,KAAM,uBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,8CAEf,CACEnkD,KAAM,cACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,sDAKf,CACEnkD,KAAM,WACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YACE,uLAEJ,CACEnkD,KAAM,WACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YACE,uLAEJ,CACEnkD,KAAM,WACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YACE,qLAEJ,CACEnkD,KAAM,WACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YACE,oUAEJ,CACEnkD,KAAM,WACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YACE,6LAEJ,CACEnkD,KAAM,gBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,4FAEf,CACEnkD,KAAM,uBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,6FAEf,CACEnkD,KAAM,mBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,4FAEf,CACEnkD,KAAM,0BACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,6FAEf,CACEnkD,KAAM,qBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,4FAEf,CACEnkD,KAAM,qBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YAAa,0FAEf,CACEnkD,KAAM,gBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YACE,6MAMJ,CACEnkD,KAAM,iBACN+jB,OAAQ,IACRnoB,IAAK,OACLuoD,YACE,mS,4aC9MN,cAIA,QACA,SACA,SAEa,EAAA9xD,MAAQ,SACnBsxB,EACA64F,EACAc,EACAC,EACAoB,EACAC,EACAC,EACAC,EACAC,EACAz/G,GAEA,IAAI0/G,EAAwC,CAC1CjD,KAAM,CAAE8B,aAAc,GAAIF,eAAgB,GAC1Cl2E,IAAK,CAAEm2E,qBAAqB,IAG1BZ,EAAmB,GAEvB,IAEE,QAAyBx6H,IAArBu8H,EAAgC,CAClC,IAAMtwF,GAAmB,IAAAwwF,kBAAiBN,EAAeC,EAAkBC,EAAgBC,GAG3F,OAFA9B,GAAW,IAAAx8C,aAAY/xC,EAAQ7yB,KAE3B0hH,EAA0B,CAAEN,SAAQ,EAAEjB,KAAM,CAAE8B,aAAc,CAACpvF,GAAUkvF,eAAgB,GAAKl2E,IAAK,CAAEm2E,qBAAqB,IAChH,EAAP,KAAYoB,GAAoB,CAAEhC,SAAQ,IAIjD,IAAIkC,EAAS,GACb,GAAIH,EAAiBpvF,WAAW,OAC9BuvF,EAASH,EACT/B,GAAW,IAAAh5F,aAAYk7F,EAAQv7F,QAC1B,GAAIo7F,EAAiBpvF,WAAW,MACrCuvF,GAAS,IAAAx7F,aAAYq7F,EAAkBp7F,OAClC,IAAI1+B,MAAM85H,GACf,MAAO,CAAE/B,SAAQ,EAAEU,aAAc,qCAAsC3B,KAAM,CAAE8B,aAAc,GAAIF,eAAgB,GAAKl2E,IAAK,CAAEm2E,qBAAqB,IAElJsB,GAAS,IAAAp7F,cAAa59B,OAAO64H,GAAmBp7F,GAGlD,QAAenhC,IAAX08H,GAAmC,KAAXA,EAAe,KAAM,kBAGjD,OADI5B,GAAqBC,KAA4ByB,GAAuB,IAAAG,aAAYD,EAAQ1C,EAAe74F,EAAarkB,IACrH,EAAP,KAAY0/G,GAAoB,CAAEhC,SAAQ,IAC1C,MAAOoC,GACP,MAAO,CAAEpC,SAAQ,EAAEU,aAAc0B,EAAcrD,KAAM,CAAE8B,aAAc,GAAIF,eAAgB,GAAKl2E,IAAK,CAAEm2E,qBAAqB,MAIjH,EAAAqB,iBAAmB,SAACN,EAAwBC,EAA2BC,EAAyBC,GAO3G,QAAsBt8H,IAAlBm8H,EAA6B,OAAO,UAAQ5iH,QAAQ4iH,GAGxD,QAAyBn8H,IAArBo8H,EAAgC,OAAO,UAAQ3iH,WAAW2iH,GAG9D,QAAuBp8H,IAAnBq8H,EAA8B,OAAO,UAAQ3iH,SAAS2iH,GAG1D,QAAsBr8H,IAAlBs8H,EAA6B,OAAO,UAAQ9iH,QAAQ8iH,GAExD,KAAM,2D,y7BC7ER,cACA,YACA,YACA,WACA,YACA,WACA,YACA,YACA,YACA,YAEA,YAEA,QACA,QAEa,EAAAK,YAAc,SAACn/G,EAAcw8G,EAA4BgB,EAAmBz6D,GACvF,IAAMs8D,EAAgC7C,EAAcT,KAC9CuD,EAA2BD,EAAmB59H,OAMpD,GACW,SAATue,GACS,aAATA,GACS,SAATA,GACS,YAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACS,UAATA,GACS,UAATA,GACS,UAATA,GACS,UAATA,GACS,UAATA,GACS,UAATA,GACS,UAATA,EACA,CACA,IAAMu/G,EAAgB/B,EAAQ55F,MAAK,SAAC47F,GAAO,OAAAA,EAAGx/G,OAASA,KAMvD,MAAO,CAAE+7G,KAAM,CAAE8B,aALXA,EAA0B,CAAC,UAAQ5hH,YAAWsjH,aAAa,EAAbA,EAAenoG,SAAU,IAK9CumG,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IASrC,GAAa,WAAT59G,EAIF,MAAO,CAAE+7G,KAAM,CAAE8B,aAAc,GAAIF,eAH7BA,EAAyB,GAGsBl2E,IAF/CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,UAAT59G,EAAkB,CACpB,IAAMw1G,GAAQ,IAAAjxF,cAAai4F,GAEvBiD,EAAQ,CAAEh7F,KAAM+3F,EAAc/3F,KAAMu3F,QAASQ,EAAcR,SAC/D,IAAc,IAAVxG,EACFiK,EAAMzD,QAAQn1H,MAAK,OACd,CACL,GAAIy4H,EAA2B,EAAG,KAAM,yDACxCG,EAAQh7F,EAAKi7F,OAAOlD,GAGtB,MAAO,CACLT,KAAM,CAAE8B,aAAc,GAAIF,eAAgBnI,EAAQ,EAAI,GACtD/tE,IAAK,CAAEm2E,qBAAqB,GAC5Bn5F,KAAMg7F,EAAMh7F,KACZu3F,QAASyD,EAAMzD,SAInB,GAAa,aAATh8G,EAAqB,CACjBw1G,GAAQ,IAAAjxF,cAAai4F,GAEvBiD,EAAQ,CAAEh7F,KAAM+3F,EAAc/3F,KAAMu3F,QAASQ,EAAcR,SAC/D,IAAc,IAAVxG,EACFiK,EAAMzD,QAAQn1H,MAAK,OACd,CACL,GAAIy4H,EAA2B,EAAG,KAAM,4DACxCG,EAAQh7F,EAAKk7F,UAAUnD,GAGzB,MAAO,CACLT,KAAM,CAAE8B,aAAc,GAAIF,eAAgBnI,EAAQ,EAAI,GACtD/tE,IAAK,CAAEm2E,qBAAqB,GAC5Bn5F,KAAMg7F,EAAMh7F,KACZu3F,QAASyD,EAAMzD,SAInB,GAAa,YAATh8G,EAAoB,CACtB,GAAkC,IAA9Bw8G,EAAc/3F,KAAKhjC,OAAc,KAAM,iFAG3C,MAAO,CACLs6H,KAAM,CAAE8B,aAAc,GAAIF,eAAgB,GAC1Cl2E,IAAK,CAAEm2E,qBAAqB,GAC5Bn5F,MALIg7F,EAAQh7F,EAAKm7F,SAASpD,IAKd/3F,KACZu3F,QAASyD,EAAMzD,SAInB,GAAa,aAATh8G,EAAqB,CACvB,GAAkC,IAA9Bw8G,EAAc/3F,KAAKhjC,OAAc,KAAM,oFAG3C,MAAO,CACLs6H,KAAM,CAAE8B,aAAc,GAAIF,eAAgB,GAC1Cl2E,IAAK,CAAEm2E,qBAAqB,GAC5Bn5F,MALIg7F,EAAQh7F,EAAKo7F,UAAUrD,IAKf/3F,KACZu3F,QAASyD,EAAMzD,SAInB,GAAa,cAATh8G,EAAsB,CACxB,GAAIq/G,EAAmB59H,OAAS,EAAG,KAAM,+DAIzC,OAFiBgjC,EAAKq7F,WAAWT,EAAmBA,EAAmB59H,OAAS,IAOvE,CAAEs6H,KAAM,CAAE8B,aAJXA,EAA0B,GAIDF,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAI5B,CAAE7B,KAAM,CAAE8B,aAAc,GAAIF,eAAgB,GAAKl2E,IAAK,CAAEm2E,qBAAqB,GAAS3B,eAAe,GAIhH,GAAa,cAATj8G,EAAsB,KAAM,wCAMhC,GAAa,kBAATA,EAA0B,CAC5B,GAAIs/G,EAA2B,EAAG,KAAM,iEAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,GAIDF,eAFzBA,EAAyB,GAEkBl2E,IAD3CA,EAAM,CAAEq2E,QAASuB,EAAmBC,EAA2B,GAAI1B,qBAAqB,IAIhG,GAAa,oBAAT59G,EAA4B,CAE9B,GADgCw8G,EAAc/0E,IAAIhmD,OACpB,EAAG,KAAM,sEAMvC,MAAO,CAAEs6H,KAAM,CAAE8B,aAJXA,EAA0B,CAACkC,EAAOC,aAAaxD,EAAc/0E,IAAI+0E,EAAc/0E,IAAIhmD,OAAS,KAInEk8H,eAFzBA,EAAyB,GAEkBl2E,IAD3CA,EAAM,CAAEm2E,qBAAqB,IAIrC,GAAa,aAAT59G,EAAqB,CACvB,GAAIs/G,EAA2B,EAAG,KAAM,4DAKxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,GAIDF,eAHzBA,EAAyB,GAGkBl2E,IAD3CA,EAAM,CAAEm2E,qBAAqB,IAIrC,GAAa,YAAT59G,EAAoB,CACtB,GAAIs/G,EAA2B,EAAG,KAAM,2DAKxC,MAAO,CAAEvD,KAAM,CAAE8B,aAHXA,EAA0BkC,EAAOE,OAAOZ,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,IAG/G3B,eAFzBA,EAAyB,GAEkBl2E,IAD3CA,EAAM,CAAEm2E,qBAAqB,IAIrC,GAAa,YAAT59G,EAAoB,CACtB,GAAIs/G,EAA2B,EAAG,KAAM,2DAUxC,MAAO,CAAEvD,KAAM,CAAE8B,aARXA,EAA0BkC,EAAOG,SACrCb,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,IAKjB3B,eAFzBA,EAAyB,GAEkBl2E,IAD3CA,EAAM,CAAEm2E,qBAAqB,IAIrC,GAAa,aAAT59G,EAAqB,CACvB,GAAIs/G,EAA2B,EAAG,KAAM,4DAKxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0BkC,EAAOI,QAAQd,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,IAIhH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,aAAT59G,EAAqB,CACvB,GAAIs/G,EAA2B,EAAG,KAAM,4DAWxC,MAAO,CAAEvD,KAAM,CAAE8B,aATXA,EAA0BkC,EAAOK,QACrCf,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,IAKjB3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,aAAT59G,EAAqB,CACvB,GAAIs/G,EAA2B,EAAG,KAAM,4DAExC,IAAIzB,EAA0B,GAQ9B,OAPoBkC,EAAOM,MAAMhB,EAAmBC,EAA2B,MAE3D,KAAIzB,EAAe,CAACkC,EAAOM,MAAMhB,EAAmBC,EAA2B,MAK5F,CAAEvD,KAAM,CAAE8B,aAAY,EAAEF,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,aAAT59G,EAKF,MAAO,CAAE+7G,KAAM,CAAE8B,aAJXA,EAA0B,CAACkC,EAAO/uB,MAAMsuB,IAIf3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,YAAT59G,EAAoB,CACtB,GAAIs/G,EAA2B,EAAG,KAAM,2DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,GAIDF,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,WAAT59G,EAAmB,CACrB,GAAIs/G,EAA2B,EAAG,KAAM,0DAKxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACkC,EAAOO,IAAIjB,EAAmBC,EAA2B,KAI3D3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,WAAT59G,EAAmB,CACrB,GAAIs/G,EAA2B,EAAG,KAAM,0DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACkC,EAAOQ,IAAIlB,EAAmBC,EAA2B,KAI3D3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,YAAT59G,EAAoB,CACtB,GAAIs/G,EAA2B,EAAG,KAAM,2DAKxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACkC,EAAOllC,KAAKwkC,EAAmBC,EAA2B,KAI5D3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,YAAT59G,EAAoB,CACtB,GAAIs/G,EAA2B,EAAG,KAAM,2DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0BkC,EAAOl7H,KAAKw6H,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,IAI7G3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,YAAT59G,EAAoB,CACtB,GAAIs/G,EAA2B,EAAG,KAAM,2DAcxC,MAAO,CAAEvD,KAAM,CAAE8B,aAZXA,EAA0BkC,EAAOS,OACrCnB,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,IAMjB3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,WAAT59G,EAAmB,CACrB,GAAIs/G,EAA2B,EAAG,KAAM,0DAWxC,MAAO,CAAEvD,KAAM,CAAE8B,aATXA,EAA0BkC,EAAOU,IACrCpB,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,IAMjB3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,YAAT59G,EAAoB,CACtB,GAAIs/G,EAA2B,EAAG,KAAM,2DAExC,IAAIoB,EAAiCrB,EAAmBC,EAA2B,GAAGzjH,OAKtF,IAHI8kH,EAAyB,KAAkBtB,GAAkB,IACvCzkD,WAEPp4E,IAAfk+H,EAGF,KAAM,8CAFN,GAAIA,GAAcC,EAA0Bl/H,OAAQ,KAAM,+EAU5D,MAAO,CAAEs6H,KAAM,CAAE8B,aALXA,EAA0BkC,EAAOa,KAAKD,EAA2BD,GAKxC/C,eAHzBA,EAAyB0B,EAAmB59H,QAGDgmD,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,YAAT59G,EAAoB,CACtB,GAAIs/G,EAA2B,EAAG,KAAM,2DAExC,IACIqB,EADAD,EAAiCrB,EAAmBC,EAA2B,GAAGzjH,OAItF,IAHI8kH,EAAyB,KAAkBtB,GAAkB,IACvCzkD,WAEPp4E,IAAfk+H,EAGF,KAAM,8CAFN,GAAIA,GAAcC,EAA0Bl/H,OAAQ,KAAM,+EAU5D,MAAO,CAAEs6H,KAAM,CAAE8B,aALXA,EAA0BkC,EAAOc,KAAKF,EAA2BD,GAKxC/C,eAHzBA,EAAyB0B,EAAmB59H,QAGDgmD,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,YAAT59G,EAAoB,CACtB,GAAIs/G,EAA2B,EAAG,KAAM,2DAOxC,MAAO,CAAEvD,KAAM,CAAE8B,aALXA,EAA0BkC,EAAOe,KAAKzB,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,IAK7G3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IASrC,GAAa,WAAT59G,EAAmB,CACrB,GAAIs/G,EAA2B,EAAG,KAAM,0DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACkD,EAAQC,YAAY3B,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAItH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,cAAT59G,EAAsB,CACxB,GAAIs/G,EAA2B,EAAG,KAAM,6DAQxC,MAAO,CAAEvD,KAAM,CAAE8B,aANXA,EAA0B,CAC9BkD,EAAQx6H,OAAO84H,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAKpI3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,aAAT59G,EAAqB,CACvB,GAAIs/G,EAA2B,EAAG,KAAM,4DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACkD,EAAQh9G,MAAMs7G,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIhH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,YAAT59G,EAAoB,CACtB,GAAIs/G,EAA2B,EAAG,KAAM,2DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACkD,EAAQj9G,KAAKu7G,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAI/G3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,YAAT59G,EAAoB,CACtB,GAAIs/G,EAA2B,EAAG,KAAM,2DAKxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACkD,EAAQl9H,KAAKw7H,EAAmBC,EAA2B,KAI7D3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,mBAAT59G,EAA2B,CAC7B,GAAIs/G,EAA2B,EAAG,KAAM,kEAQxC,MAAO,CAAEvD,KAAM,CAAE8B,aANXA,EAA0B,CAC9BkD,EAAQE,WAAW5B,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAKxI3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAUrC,GAAa,cAAT59G,EAAsB,CACxB,GAAIs/G,EAA2B,EAAG,KAAM,6DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACrhC,EAAQjzD,OAAO81F,EAAmBC,EAA2B,KAI/D3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,WAAT59G,EAAmB,CACrB,GAAIs/G,EAA2B,EAAG,KAAM,0DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACrhC,EAAQl1E,IAAI+3G,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAI9G3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,UAAT59G,EAAkB,CACpB,GAAIs/G,EAA2B,EAAG,KAAM,yDAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACrhC,EAAQt1E,GAAGm4G,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAI7G3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,WAAT59G,EAAmB,CACrB,GAAIs/G,EAA2B,EAAG,KAAM,0DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACrhC,EAAQ90E,IAAI23G,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAI9G3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,aAAT59G,EAAqB,CACvB,GAAIs/G,EAA2B,EAAG,KAAM,4DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACrhC,EAAQh5D,MAAM67F,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIhH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,mBAAT59G,EAA2B,CAC7B,GAAIq/G,EAAmB59H,OAAS,EAAG,KAAM,oEAIzC,OAF8I,IAA7H+6F,EAAQh5D,MAAM67F,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,IAAIzjH,OAO1H,CAAEkgH,KAAM,CAAE8B,aAJXA,EAA0B,GAIDF,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAI5B,CACL7B,KAAM,CAAE8B,aAAc,GAAIF,eAAgB,GAC1Cl2E,IAAK,CAAEm2E,qBAAqB,GAC5B3B,eAAe,GASrB,GAAa,YAATj8G,EAAoB,CACtB,GAAIs/G,EAA2B,EAAG,KAAM,2DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYC,KAAK9B,EAAmBC,EAA2B,KAIjE3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,YAAT59G,EAAoB,CACtB,GAAIs/G,EAA2B,EAAG,KAAM,2DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYE,KAAK/B,EAAmBC,EAA2B,KAIjE3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,cAAT59G,EAAsB,CACxB,GAAIs/G,EAA2B,EAAG,KAAM,6DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAY/yC,OAAOkxC,EAAmBC,EAA2B,KAInE3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,WAAT59G,EAAmB,CACrB,GAAIs/G,EAA2B,EAAG,KAAM,0DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAY36G,IAAI84G,EAAmBC,EAA2B,KAIhE3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,WAAT59G,EAAmB,CACrB,GAAIs/G,EAA2B,EAAG,KAAM,0DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYtkC,IAAIyiC,EAAmBC,EAA2B,KAIhE3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,iBAAT59G,EAAyB,CAC3B,GAAIs/G,EAA2B,EAAG,KAAM,gEAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYG,UAAUhC,EAAmBC,EAA2B,KAItE3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,WAAT59G,EAAmB,CACrB,GAAIs/G,EAA2B,EAAG,KAAM,0DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAY/4G,IAAIk3G,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIlH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,WAAT59G,EAAmB,CACrB,GAAIs/G,EAA2B,EAAG,KAAM,0DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYtzH,IAAIyxH,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIlH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,WAAT59G,EAAmB,CACrB,GAAIs/G,EAA2B,EAAG,KAAM,0DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYl1H,IAAIqzH,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIlH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,WAAT59G,EAAmB,CACrB,GAAIs/G,EAA2B,EAAG,KAAM,0DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYnvG,IAAIstG,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIlH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,cAAT59G,EAAsB,CACxB,GAAIs/G,EAA2B,EAAG,KAAM,6DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYI,OAAOjC,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIrH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,cAAT59G,EAAsB,CACxB,GAAIs/G,EAA2B,EAAG,KAAM,6DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYK,OAAOlC,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIrH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,eAAT59G,EAAuB,CACzB,GAAIs/G,EAA2B,EAAG,KAAM,8DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYM,QAAQnC,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAItH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,cAAT59G,EAAsB,CACxB,GAAIs/G,EAA2B,EAAG,KAAM,6DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYO,OAAOpC,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIrH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,gBAAT59G,EAAwB,CAC1B,GAAIs/G,EAA2B,EAAG,KAAM,+DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYQ,SAASrC,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIvH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,sBAAT59G,EAA8B,CAChC,GAAIs/G,EAA2B,EAAG,KAAM,qEAMxC,MAAO,CACLvD,KAAM,CAAE8B,aAAc,GAAIF,eAJtBA,EAAyB,GAK7Bl2E,IAJIA,EAAM,CAAEm2E,qBAAqB,GAKjC3B,gBAPmK,IAA1IiF,EAAYS,eAAetC,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,IAAIzjH,SAW5J,GAAa,mBAATmE,EAA2B,CAC7B,GAAIs/G,EAA2B,EAAG,KAAM,kEAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYU,YAAYvC,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAI1H3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,gBAAT59G,EAAwB,CAC1B,GAAIs/G,EAA2B,EAAG,KAAM,+DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYW,SAASxC,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIvH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,mBAAT59G,EAA2B,CAC7B,GAAIs/G,EAA2B,EAAG,KAAM,kEAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYY,WAAWzC,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIzH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,uBAAT59G,EAA+B,CACjC,GAAIs/G,EAA2B,EAAG,KAAM,sEAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYa,gBAAgB1C,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAI9H3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,0BAAT59G,EAAkC,CACpC,GAAIs/G,EAA2B,EAAG,KAAM,yEAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYc,kBAAkB3C,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIhI3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,WAAT59G,EAAmB,CACrB,GAAIs/G,EAA2B,EAAG,KAAM,0DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYz5H,IAAI43H,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIlH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,WAAT59G,EAAmB,CACrB,GAAIs/G,EAA2B,EAAG,KAAM,0DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACqD,EAAYh3H,IAAIm1H,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIlH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,cAAT59G,EAAsB,CACxB,GAAIs/G,EAA2B,EAAG,KAAM,6DAaxC,MAAO,CAAEvD,KAAM,CAAE8B,aAXXA,EAA0B,CAC9BqD,EAAYe,OACV5C,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,KAOnB3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IASrC,GAAa,YAAT59G,EAAoB,CACtB,GAAIs/G,EAA2B,EAAG,KAAM,2DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAAC,UAAQ9hH,QAAQtM,EAAOk/B,KAAK0wF,EAAmBC,EAA2B,IAAIx7H,aAIhF65H,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,cAAT59G,EAAsB,CACxB,GAAIs/G,EAA2B,EAAG,KAAM,6DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAAC,UAAQ9hH,QAAQtM,EAAOo/B,OAAOwwF,EAAmBC,EAA2B,IAAIx7H,aAIlF65H,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,iBAAT59G,EAAyB,CAC3B,GAAIs/G,EAA2B,EAAG,KAAM,gEAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAAC,UAAQ9hH,QAAQtM,EAAO++B,UAAU6wF,EAAmBC,EAA2B,IAAIx7H,aAIrF65H,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,eAAT59G,EAAuB,CACzB,GAAIs/G,EAA2B,EAAG,KAAM,8DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAAC,UAAQ9hH,QAAQtM,EAAOs/B,QAAQswF,EAAmBC,EAA2B,IAAIx7H,aAInF65H,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,eAAT59G,EAAuB,CACzB,GAAIs/G,EAA2B,EAAG,KAAM,8DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAAC,UAAQ9hH,QAAQtM,EAAO0/B,QAAQkwF,EAAmBC,EAA2B,IAAIx7H,aAInF65H,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,gBAAT59G,EAAwB,CAC1B,GAAIs/G,EAA2B,EAAG,KAAM,+DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACpuH,EAAO2gC,SAASivF,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIlH3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,sBAAT59G,EAA8B,CAChC,GAAIs/G,EAA2B,EAAG,KAAM,qEAExC,IAAIrD,GAAyB,EAGvB0B,EAAyB,EACzBl2E,EAAM,CAAEm2E,qBAAqB,GAInC,OAF8B,IAJEnuH,EAAO2gC,SAASivF,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,IAI7HzjH,SAAcogH,GAAgB,GAE1C,CAAEF,KAAM,CAAE8B,aAAc,GAAIF,eAAc,GAAIl2E,IAAG,EAAEw0E,cAAa,GAGzE,GAAa,yBAATj8G,EAAiC,CACnC,GAAIs/G,EAA2B,EAAG,KAAM,wEAEpCzB,EAAe,GAkBnB,MAAO,CAAE9B,KAAM,CAAE8B,aAhBfA,EADE96D,GAAMA,EAAGu7D,MAAQ,EAAA7kE,mBAAmByoE,UACvB,CACbzyH,EAAOqhC,gBACLuuF,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,KAInC,CACb7vH,EAAO4/B,YAAYgwF,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAO1I3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,+BAAT59G,EAAuC,CACzC,GAAIs/G,EAA2B,EAAG,KAAM,8EACpCrD,GAAyB,EAsB7B,OAL4B,KAdxBl5D,GAAMA,EAAGu7D,MAAQ,EAAA7kE,mBAAmByoE,UACvBzyH,EAAOqhC,gBACpBuuF,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,IAGjC7vH,EAAO4/B,YACpBgwF,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,KAIjCzjH,SAAcogH,GAAgB,GAKxC,CAAEF,KAAM,CAAE8B,aAAc,GAAIF,eAH7BA,EAAyB,GAGsBl2E,IAF/CA,EAAM,CAAEm2E,qBAAqB,GAEuB3B,cAAa,GAIzE,GAAa,mBAATj8G,EAA2B,CAC7B,GAAIs/G,EAA2B,EAAG,KAAM,kEACpCrD,GAAyB,EAa7B,OAL4B,IANExsH,EAAO6gC,YACnC+uF,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,GAC9CD,EAAmBC,EAA2B,IAG/BzjH,SAAcogH,GAAgB,GAKxC,CAAEF,KAAM,CAAE8B,aAAc,GAAIF,eAH7BA,EAAyB,GAGsBl2E,IAF/CA,EAAM,CAAEm2E,qBAAqB,GAEuB3B,cAAa,GAOzE,GAAa,2BAATj8G,EAAmC,CACrC,GAAIs/G,EAA2B,EAAG,KAAM,0EACpCrD,GAAyB,EAO7B,MAAO,CAAEF,KAAM,CAAE8B,aALXA,EAA0B,CAACsE,EAASC,oBAAoB/C,EAAmBC,EAA2B,KAK7E3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,GAEmB3B,cAAa,GAGrE,GAAa,2BAATj8G,EAAmC,CACrC,GAAIs/G,EAA2B,EAAG,KAAM,0EACpCrD,GAAyB,EAO7B,MAAO,CAAEF,KAAM,CAAE8B,aALXA,EAA0B,CAACsE,EAASE,oBAAoBhD,EAAmBC,EAA2B,KAK7E3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,GAEmB3B,cAAa,GAQrE,GAAa,4BAATj8G,EAAoC,CACtC,GAAIs/G,EAA2B,EAAG,KAAM,2EAExC,IAAK9C,EAAcN,OAAQ,KAAM,yEAMjC,MAAO,CAAEH,KAAM,CAAE8B,aAJXA,EAA0ByE,EAAcC,qBAAqBlD,EAAmBC,EAA2B,GAAI9C,EAAcN,OAAOC,QAI3GwB,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,yBAAT59G,EAAiC,CACnC,GAAIs/G,EAA2B,EAAG,KAAM,wEAExC,IAAK9C,EAAcN,OAAQ,KAAM,sEAMjC,MAAO,CAAEH,KAAM,CAAE8B,aAJXA,EAA0ByE,EAAcE,kBAAkBnD,EAAmBC,EAA2B,GAAI9C,EAAcN,OAAOC,QAIxGwB,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,yBAAT59G,EAAiC,CACnC,GAAIs/G,EAA2B,EAAG,KAAM,wEAExC,IAAK9C,EAAcN,OAAQ,KAAM,sEAMjC,MAAO,CAAEH,KAAM,CAAE8B,aAJXA,EAA0ByE,EAAcG,kBAAkBpD,EAAmBC,EAA2B,GAAI9C,EAAcN,OAAOC,QAIxGwB,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,gCAAT59G,EAAwC,CAC1C,GAAIs/G,EAA2B,EAAG,KAAM,+EAExC,IAAK9C,EAAcN,OAAQ,KAAM,6EAMjC,MAAO,CAAEH,KAAM,CAAE8B,aAJXA,EAA0ByE,EAAcI,yBAAyBrD,EAAmBC,EAA2B,GAAI9C,EAAcN,OAAOC,QAI/GwB,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,4BAAT59G,EAAoC,CACtC,GAAIs/G,EAA2B,EAAG,KAAM,2EAExC,IAAK9C,EAAcN,OAAQ,KAAM,yEAMjC,MAAO,CAAEH,KAAM,CAAE8B,aAJXA,EAA0B,CAACyE,EAAcK,qBAAqBtD,EAAmBC,EAA2B,GAAI9C,EAAcN,OAAOC,SAI5GwB,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,4BAAT59G,EAAoC,CACtC,GAAIs/G,EAA2B,EAAG,KAAM,2EAExC,IAAK9C,EAAcN,OAAQ,KAAM,yEAMjC,MAAO,CAAEH,KAAM,CAAE8B,aAJXA,EAA0B,CAACyE,EAAcM,qBAAqBvD,EAAmBC,EAA2B,GAAI9C,EAAcN,OAAOC,SAI5GwB,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,6BAAT59G,EAAqC,CACvC,IAAKw8G,EAAcN,OAAQ,KAAM,+EAOjC,MAAO,CAAEH,KAAM,CAAE8B,aAJXA,EAA0B,CADN,UAAQ5hH,WAAWugH,EAAcN,OAAOI,oBAKnCqB,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,0BAAT59G,EAAkC,CACpC,GAAIs/G,EAA2B,EAAG,KAAM,yEAExC,IAAK9C,EAAcN,OAAQ,KAAM,uEAMjC,MAAO,CAAEH,KAAM,CAAE8B,aAJXA,EAA0ByE,EAAcO,mBAAmBxD,EAAmBC,EAA2B,GAAI9C,EAAcN,OAAOE,SAIzGuB,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,0BAAT59G,EAAkC,CACpC,GAAIs/G,EAA2B,EAAG,KAAM,yEAExC,IAAK9C,EAAcN,OAAQ,KAAM,uEAMjC,MAAO,CAAEH,KAAM,CAAE8B,aAJXA,EAA0ByE,EAAcQ,mBAAmBzD,EAAmBC,EAA2B,GAAI9C,EAAcN,OAAOE,SAIzGuB,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,0BAAT59G,EAAkC,CACpC,GAAIs/G,EAA2B,EAAG,KAAM,yEAExC,IAAK9C,EAAcN,OAAQ,KAAM,uEAMjC,MAAO,CAAEH,KAAM,CAAE8B,aAJXA,EAA0B,CAACyE,EAAcS,mBAAmB1D,EAAmBC,EAA2B,GAAI9C,EAAcN,OAAOE,UAI1GuB,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,iCAAT59G,EAAyC,CAC3C,GAAIs/G,EAA2B,EAAG,KAAM,gFAExC,IAAK9C,EAAcN,OAAQ,KAAM,8EAMjC,MAAO,CAAEH,KAAM,CAAE8B,aAJXA,EAA0ByE,EAAcU,0BAA0B3D,EAAmBC,EAA2B,GAAI9C,EAAcN,OAAOE,SAIhHuB,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,sBAAT59G,EAA8B,CAChC,IAAKw8G,EAAcN,OAAQ,KAAM,mEAEjC,IAAKM,EAAcN,OAAO58G,QAAS,KAAM,2EAEzC,IAAM2jH,EAAoB5hI,EAAOa,KAAKs6H,EAAcN,OAAO58G,QAAS,OAAOlF,UAAUtW,SAAS,OAM9F,MAAO,CAAEi4H,KAAM,CAAE8B,aAJXA,EAA0B,CAAC,UAAQ9hH,QAAQknH,IAIlBtF,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,uBAAT59G,EAA+B,CACjC,IAAKw8G,EAAcN,OAAQ,KAAM,oEAEjC,IAAKM,EAAcN,OAAOG,SAAU,KAAM,6EAE1C,IAAM6G,EAAqB7hI,EAAOa,KAAKs6H,EAAcN,OAAOG,SAAU,OAAOjiH,UAAUtW,SAAS,OAMhG,MAAO,CAAEi4H,KAAM,CAAE8B,aAJXA,EAA0B,CAAC,UAAQ9hH,QAAQmnH,IAIlBvF,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,wBAAT59G,EAAgC,CAClC,IAAKw8G,EAAcN,OAAQ,KAAM,qEAEjC,IAAMiH,EAA8B3G,EAAcN,OAAOC,OAAO16H,OAMhE,MAAO,CAAEs6H,KAAM,CAAE8B,aAJXA,EAA0B,CAAC,UAAQ5hH,WAAWknH,IAIrBxF,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,yBAAT59G,EAAiC,CACnC,IAAKw8G,EAAcN,OAAQ,KAAM,sEAEjC,IAAMkH,EAA+B5G,EAAcN,OAAOE,QAAQ36H,OAMlE,MAAO,CAAEs6H,KAAM,CAAE8B,aAJXA,EAA0B,CAAC,UAAQ5hH,WAAWmnH,IAIrBzF,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IASrC,GAAa,aAAT59G,EAAqB,CACvB,GAAIs/G,EAA2B,EAAG,KAAM,4DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAAewF,EAAcC,MAAMjE,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,IAI1G3B,eAHzBA,EAAiD,IAAxBE,EAAap8H,OAAe,EAAIo8H,EAAap8H,QAG3BgmD,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,aAAT59G,EAAqB,CACvB,GAAIs/G,EAA2B,EAAG,KAAM,4DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAAewF,EAAcE,MAAMlE,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,IAI1G3B,eAHzBA,EAAiD,IAAxBE,EAAap8H,OAAe,EAAI,GAGdgmD,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,aAAT59G,EAAqB,CACvB,GAAIs/G,EAA2B,EAAG,KAAM,4DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAAewF,EAAcG,MAAMnE,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,IAI1G3B,eAHzBA,EAAiD,IAAxBE,EAAap8H,OAAe,EAAI,GAGdgmD,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,aAAT59G,EAAqB,CACvB,GAAIs/G,EAA2B,EAAG,KAAM,4DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAAewF,EAAcI,MAAMpE,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,IAI1G3B,eAHzBA,EAAiD,IAAxBE,EAAap8H,OAAe,EAAI,GAGdgmD,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,aAAT59G,EAAqB,CACvB,GAAIs/G,EAA2B,EAAG,KAAM,4DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0BwF,EAAcK,MAAMrE,EAAmBC,EAA2B,IAInE3B,eAHzBA,EAAiD,IAAxBE,EAAap8H,OAAe,EAAI,GAGdgmD,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,kBAAT59G,EAA0B,CAC5B,GAAIs/G,EAA2B,EAAG,KAAM,+DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACwF,EAAcM,WAAWtE,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAI3H3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,yBAAT59G,EAAiC,CACnC,GAAIs/G,EAA2B,EAAG,KAAM,wEAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACwF,EAAcO,kBAAkBvE,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIlI3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,qBAAT59G,EAA6B,CAC/B,GAAIs/G,EAA2B,EAAG,KAAM,oEAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACwF,EAAcQ,cAAcxE,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAI9H3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,4BAAT59G,EAAoC,CACtC,GAAIs/G,EAA2B,EAAG,KAAM,2EAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACwF,EAAcS,qBAAqBzE,EAAmBC,EAA2B,GAAID,EAAmBC,EAA2B,KAIrI3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,uBAAT59G,EAA+B,CACjC,GAAIs/G,EAA2B,EAAG,KAAM,sEAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACkG,EAAWngE,UAAUy7D,EAAmBC,EAA2B,KAIrE3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,uBAAT59G,EAA+B,CACjC,GAAIs/G,EAA2B,EAAG,KAAM,sEAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACkG,EAAWlgE,UAAUw7D,EAAmBC,EAA2B,KAIrE3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAKrC,GAAa,kBAAT59G,EAA0B,CAC5B,GAAIs/G,EAA2B,EAAG,KAAM,8DAMxC,MAAO,CAAEvD,KAAM,CAAE8B,aAJXA,EAA0B,CAACkG,EAAW7/D,WAAWm7D,EAAmBC,EAA2B,KAItE3B,eAHzBA,EAAyB,GAGkBl2E,IAF3CA,EAAM,CAAEm2E,qBAAqB,IAQrC,KAAM,qB,0aCvvCR,cAEa,EAAAuD,KAAO,SAAC1yF,GACnB,QAAuBjsC,IAAnBisC,EAAQ5yB,OAAsB,CAChC,IAAMmoH,EAAsBv1F,EAAQ5yB,OAAS,EAC7C,OAAO,UAAQI,WAAW+nH,GAG5B,KAAM,yDAGK,EAAA5C,KAAO,SAAC3yF,GACnB,QAAuBjsC,IAAnBisC,EAAQ5yB,OAAsB,CAChC,IAAMmoH,EAAsBv1F,EAAQ5yB,OAAS,EAC7C,OAAO,UAAQI,WAAW+nH,GAG5B,KAAM,yDAGK,EAAA71C,OAAS,SAAC1/C,GACrB,QAAuBjsC,IAAnBisC,EAAQ5yB,OAAsB,CAChC,IAAMooH,GAAwC,EAAlBx1F,EAAQ5yB,OACpC,OAAO,UAAQI,WAAWgoH,GAG5B,KAAM,yDAGK,EAAA19G,IAAM,SAACkoB,GAClB,QAAuBjsC,IAAnBisC,EAAQ5yB,OAAsB,CAChC,IAAMqoH,EAAmB18H,KAAK+e,IAAIkoB,EAAQ5yB,QAC1C,OAAO,UAAQI,WAAWioH,GAG5B,KAAM,yDAGK,EAAAtnC,IAAM,SAACnuD,GAClB,QAAuBjsC,IAAnBisC,EAAQ5yB,OAAsB,CAChC,IAAMsoH,GAAoB11F,EAAQ5yB,OAElC,OAAO,UAAQI,WAAWkoH,EAAU,EAAI,GAG1C,KAAM,yDAGK,EAAA9C,UAAY,SAAC5yF,GACxB,QAAuBjsC,IAAnBisC,EAAQ5yB,OAAsB,CAChC,IAAMsoH,GAAoB11F,EAAQ5yB,OAElC,OAAO,UAAQI,WAAWkoH,EAAU,EAAI,GAG1C,KAAM,yDAGK,EAAAh8G,IAAM,SAACsmB,EAAkB4B,GACpC,QAAuB7tC,IAAnBisC,EAAQ5yB,aAA4CrZ,IAApB6tC,EAASx0B,OAAsB,CACjE,IAAMuoH,EAAqB31F,EAAQ5yB,OAASw0B,EAASx0B,OACrD,OAAO,UAAQI,WAAWmoH,GAG5B,KAAM,yDAGK,EAAAx2H,IAAM,SAAC6gC,EAAkB4B,GACpC,QAAuB7tC,IAAnBisC,EAAQ5yB,aAA4CrZ,IAApB6tC,EAASx0B,OAAsB,CACjE,IAAMwoH,EAAmB51F,EAAQ5yB,OAASw0B,EAASx0B,OACnD,OAAO,UAAQI,WAAWooH,GAG5B,KAAM,yDAGK,EAAAr4H,IAAM,SAACyiC,EAAkB4B,GACpC,QAAuB7tC,IAAnBisC,EAAQ5yB,aAA4CrZ,IAApB6tC,EAASx0B,OAAsB,CACjE,IAAMyoH,EAAmB71F,EAAQ5yB,OAASw0B,EAASx0B,OACnD,OAAO,UAAQI,WAAWqoH,GAG5B,KAAM,yDAGK,EAAAvyG,IAAM,SAAC0c,EAAkB4B,GACpC,QAAuB7tC,IAAnBisC,EAAQ5yB,aAA4CrZ,IAApB6tC,EAASx0B,OAAsB,CACjE,GAAwB,IAApBw0B,EAASx0B,OAAc,KAAM,oCAEjC,IAAI0oH,EAAmB91F,EAAQ5yB,OAASw0B,EAASx0B,OAGjD,OADA0oH,EAAWA,EAAW,EAAI/8H,KAAK6F,MAAMk3H,GAAY/8H,KAAKsK,KAAKyyH,GACpD,UAAQtoH,WAAWsoH,GAG5B,KAAM,yDAGK,EAAAjD,OAAS,SAAC7yF,EAAkB4B,GACvC,QAAuB7tC,IAAnBisC,EAAQ5yB,aAA4CrZ,IAApB6tC,EAASx0B,OAAsB,CACjE,IAAM2oH,EAAsB/1F,EAAQ5yB,QAAUw0B,EAASx0B,OACvD,OAAO,UAAQI,WAAWuoH,GAG5B,KAAM,yDAGK,EAAAjD,OAAS,SAAC9yF,EAAkB4B,GACvC,QAAuB7tC,IAAnBisC,EAAQ5yB,aAA4CrZ,IAApB6tC,EAASx0B,OAAsB,CACjE,IAAM4oH,EAAsBh2F,EAAQ5yB,QAAUw0B,EAASx0B,OACvD,OAAO,UAAQI,WAAWwoH,GAG5B,KAAM,yDAGK,EAAAjD,QAAU,SAAC/yF,EAAkB4B,GACxC,QAAuB7tC,IAAnBisC,EAAQ5yB,aAA4CrZ,IAApB6tC,EAASx0B,OAC3C,OAAuB,IAAnB4yB,EAAQ5yB,QAAoC,IAApBw0B,EAASx0B,OAAqB,UAAQI,WAAW,GACtE,UAAQA,WAAW,GAG5B,KAAM,yDAGK,EAAAwlH,OAAS,SAAChzF,EAAkB4B,GACvC,QAAuB7tC,IAAnBisC,EAAQ5yB,aAA4CrZ,IAApB6tC,EAASx0B,OAC3C,OAAuB,IAAnB4yB,EAAQ5yB,QAAoC,IAApBw0B,EAASx0B,OAAqB,UAAQI,WAAW,GACtE,UAAQA,WAAW,GAG5B,KAAM,yDAGK,EAAAylH,SAAW,SAACjzF,EAAkB4B,GACzC,QAAuB7tC,IAAnBisC,EAAQ5yB,aAA4CrZ,IAApB6tC,EAASx0B,OAC3C,OAAO,UAAQI,WAAWwyB,EAAQ5yB,SAAWw0B,EAASx0B,OAAS,EAAI,GAGrE,KAAM,yDAGK,EAAA8lH,eAAiB,SAAClzF,EAAkB4B,GAC/C,OAAO,IAAAqxF,UAASjzF,EAAS4B,IAGd,EAAAuxF,YAAc,SAACnzF,EAAkB4B,GAC5C,IAAM7M,EAA+C,KAAvC,IAAAk+F,UAASjzF,EAAS4B,GAAUx0B,OAC1C,OAAO,UAAQI,WAAWunB,EAAQ,EAAI,IAG3B,EAAAq+F,SAAW,SAACpzF,EAAkB4B,GACzC,QAAuB7tC,IAAnBisC,EAAQ5yB,aAA4CrZ,IAApB6tC,EAASx0B,OAC3C,OAAO,UAAQI,WAAWwyB,EAAQ5yB,OAASw0B,EAASx0B,OAAS,EAAI,GAGnE,KAAM,yDAGK,EAAAimH,WAAa,SAACrzF,EAAkB4B,GAC3C,QAAuB7tC,IAAnBisC,EAAQ5yB,aAA4CrZ,IAApB6tC,EAASx0B,OAC3C,OAAO,UAAQI,WAAWwyB,EAAQ5yB,OAASw0B,EAASx0B,OAAS,EAAI,GAGnE,KAAM,yDAGK,EAAAkmH,gBAAkB,SAACtzF,EAAkB4B,GAChD,QAAuB7tC,IAAnBisC,EAAQ5yB,aAA4CrZ,IAApB6tC,EAASx0B,OAC3C,OAAO,UAAQI,WAAWwyB,EAAQ5yB,QAAUw0B,EAASx0B,OAAS,EAAI,GAGpE,KAAM,yDAGK,EAAAmmH,kBAAoB,SAACvzF,EAAkB4B,GAClD,QAAuB7tC,IAAnBisC,EAAQ5yB,aAA4CrZ,IAApB6tC,EAASx0B,OAC3C,OAAO,UAAQI,WAAWwyB,EAAQ5yB,QAAUw0B,EAASx0B,OAAS,EAAI,GAGpE,KAAM,yDAGK,EAAApU,IAAM,SAACgnC,EAAkB4B,GACpC,QAAuB7tC,IAAnBisC,EAAQ5yB,aAA4CrZ,IAApB6tC,EAASx0B,OAAsB,CACjE,GAAI4yB,EAAQ5yB,QAAUw0B,EAASx0B,OAAQ,OAAOw0B,EAE9C,GAAIA,EAASx0B,OAAS4yB,EAAQ5yB,OAAQ,OAAO4yB,EAG/C,KAAM,yDAGK,EAAAvkC,IAAM,SAACukC,EAAkB4B,GACpC,QAAuB7tC,IAAnBisC,EAAQ5yB,aAA4CrZ,IAApB6tC,EAASx0B,OAAsB,CACjE,GAAI4yB,EAAQ5yB,QAAUw0B,EAASx0B,OAAQ,OAAO4yB,EAE9C,GAAI4B,EAASx0B,OAAS4yB,EAAQ5yB,OAAQ,OAAOw0B,EAG/C,KAAM,yDAGK,EAAA4xF,OAAS,SAACxzF,EAAkB4B,EAAmBE,GAC1D,IAAMm0F,EAAgBj2F,EAAQ5yB,OACxB8oH,EAAWt0F,EAASx0B,OACpB+oH,EAAWr0F,EAAS10B,OAE1B,QAAsBrZ,IAAlBkiI,QAA4CliI,IAAbmiI,QAAuCniI,IAAboiI,EAC3D,OAAIF,GAAiBC,GAAYD,GAAiBE,EAAiB,UAAQ3oH,WAAW,GAE/E,UAAQA,WAAW,GAG5B,KAAM,0D,2MCtNR,cACA,QAEa,EAAAstB,OAAS,SAACkF,GACrB,IAAMo2F,GAAa,IAAAphG,UAASgL,EAAQ9yB,KAEpC,OAAO,UAAQK,QAAQ6oH,IAGZ,EAAAv9G,IAAM,SAACmnB,EAAkB4B,GACpC,IAAMy0F,EAAUr2F,EAAQ9yB,IAClBopH,EAAU10F,EAAS10B,IAEzB,GAAImpH,EAAQrjI,SAAWsjI,EAAQtjI,OAAQ,CACrC,IAAMujI,EAAeF,EAAQ/kH,MAAM,IAAI1F,KAAI,SAAC9Q,GAAM,OAACA,KAC7C07H,EAAeF,EAAQhlH,MAAM,IAAI1F,KAAI,SAAC9Q,GAAM,OAACA,KAC/C27H,EAAuB,GAE3B,IAAK,IAAIjmI,KAAK+lI,EACZE,GAAgBF,EAAa/lI,GAAKgmI,EAAahmI,GAGjD,OAAO,UAAQ+c,QAAQkpH,GAIzB,KAAM,uDAGK,EAAAh+G,GAAK,SAACunB,EAAkB4B,GACnC,IAAMy0F,EAAUr2F,EAAQ9yB,IAClBopH,EAAU10F,EAAS10B,IAEzB,GAAImpH,EAAQrjI,SAAWsjI,EAAQtjI,OAAQ,CACrC,IAAMujI,EAAeF,EAAQ/kH,MAAM,IAAI1F,KAAI,SAAC9Q,GAAM,OAACA,KAC7C07H,EAAeF,EAAQhlH,MAAM,IAAI1F,KAAI,SAAC9Q,GAAM,OAACA,KAC/C27H,EAAuB,GAE3B,IAAK,IAAIjmI,KAAK+lI,EACZE,GAAgBF,EAAa/lI,GAAKgmI,EAAahmI,GAGjD,OAAO,UAAQ+c,QAAQkpH,GAIzB,KAAM,uDAGK,EAAAx9G,IAAM,SAAC+mB,EAAkB4B,GACpC,IAAMy0F,EAAUr2F,EAAQ9yB,IAClBopH,EAAU10F,EAAS10B,IAEzB,GAAImpH,EAAQrjI,SAAWsjI,EAAQtjI,OAAQ,CACrC,IAAMujI,EAAeF,EAAQ/kH,MAAM,IAAI1F,KAAI,SAAC9Q,GAAM,OAACA,KAC7C07H,EAAeF,EAAQhlH,MAAM,IAAI1F,KAAI,SAAC9Q,GAAM,OAACA,KAC/C27H,EAAuB,GAE3B,IAAK,IAAIjmI,KAAK+lI,EACZE,GAAgBF,EAAa/lI,GAAKgmI,EAAahmI,GAGjD,OAAO,UAAQ+c,QAAQkpH,GAIzB,KAAM,uDAGK,EAAA1hG,MAAQ,SAACiL,EAAkB4B,GACtC,IAAM80F,EAAa12F,EAAQ7yB,MAAQy0B,EAASz0B,KAAO6yB,EAAQ9yB,MAAQ00B,EAAS10B,IAC5E,OAAO,UAAQM,WAAWkpH,EAAa,EAAI,K,yRCvE7C,cACA,WACA,QAGa,EAAA7B,MAAQ,SAAC70F,EAAkB4B,GACtC,GAA4B,GAAxB5B,EAAQvjC,MAAMzJ,QAAwC,GAAzB4uC,EAASnlC,MAAMzJ,OAAa,KAAM,0CAEnE,IAAM6H,EAAI,IAAI,UAAGmlC,EAAQ9yB,IAAK,GACxB7W,EAAI,IAAI,UAAGurC,EAAS10B,IAAK,GAEzBypH,EAAqC,MAA5B97H,EAAExF,SAAS,GAAGqhC,OAAO,GAEpC,IAAMigG,GAAUtgI,EAAE8uB,GAAG,EAAAiR,eAAej3B,IAAItE,KAAS87H,GAAUtgI,EAAEkvB,GAAG,EAAA8Q,eAAel3B,IAAItE,IACjF,MAAO,CAAC,UAAQ2S,WAAW,IAE3B,IAEMopH,EAFa/7H,EAAE6e,IAAIrjB,GACQhB,SAAS,EAAG,IACDd,OAAO,IAEnD,MAAO,CAAC,UAAQgZ,QAAQqpH,GAAwB,UAAQppH,WAAW,KAI1D,EAAAsnH,MAAQ,SAAC90F,EAAkB4B,GACtC,GAA4B,GAAxB5B,EAAQvjC,MAAMzJ,QAAwC,GAAzB4uC,EAASnlC,MAAMzJ,OAAa,KAAM,0CAEnE,IAAM6H,EAAI,IAAI,UAAGmlC,EAAQ9yB,IAAK,GACxB7W,EAAI,IAAI,UAAGurC,EAAS10B,IAAK,GAEzB2pH,EAAqC,MAA5BxgI,EAAEhB,SAAS,GAAGqhC,OAAO,GAEpC,IAAMmgG,GAAUh8H,EAAE0qB,GAAG,EAAA8Q,eAAe3c,IAAIrjB,KAASwgI,GAAUh8H,EAAEsqB,GAAG,EAAAiR,eAAe1c,IAAIrjB,IACjF,MAAO,CAAC,UAAQmX,WAAW,IAE3B,IAAMooH,EAAW/6H,EAAEsE,IAAI9I,GAEnBygI,EAAclB,EAASvgI,SAAS,EAAG,IACnCugI,EAASv9G,UAASy+G,EAAclB,EAASh+G,OAAO,IAAIviB,SAAS,EAAG,KAEpE,IAAM0hI,EAAsBD,EAAYviI,OAAO,IAE/C,MAAO,CAAC,UAAQgZ,QAAQwpH,GAAsB,UAAQvpH,WAAW,KAIxD,EAAAunH,MAAQ,SAAC/0F,EAAkB4B,GACtC,GAA6B,IAAzB5B,EAAQvjC,MAAMzJ,QAA0C,IAA1B4uC,EAASnlC,MAAMzJ,OAAc,KAAM,0CAErE,IAAM6H,EAAI,IAAI,UAAGmlC,EAAQ9yB,IAAK,GACxB7W,EAAI,IAAI,UAAGurC,EAAS10B,IAAK,GAEzBypH,EAAqC,MAA5B97H,EAAExF,SAAS,GAAGqhC,OAAO,GAEpC,IACIigG,GAAUtgI,EAAE8uB,GAAG,EAAA+Q,UAAYr7B,EAAEsqB,GAAG,EAAAiR,eAAe9S,IAAIjtB,MACnDsgI,GAAUtgI,EAAEkvB,GAAG,EAAA2Q,UAAY7/B,EAAEkvB,GAAG,EAAA8Q,eAAe/S,IAAIzoB,KACpD87H,GAAUtgI,EAAE8uB,GAAG,EAAA+Q,UAAYr7B,EAAE0qB,GAAG,EAAA8Q,eAAe/S,IAAIjtB,KACnDsgI,GAAUtgI,EAAEkvB,GAAG,EAAA2Q,UAAY7/B,EAAEkvB,GAAG,EAAA6Q,eAAe9S,IAAIzoB,IAEpD,MAAO,CAAC,UAAQ2S,WAAW,IAE3B,IAEMwpH,EAFWn8H,EAAE0C,IAAIlH,GACIhB,SAAS,EAAG,IACCd,OAAO,IAE/C,MAAO,CAAC,UAAQgZ,QAAQypH,GAAsB,UAAQxpH,WAAW,KAIxD,EAAAwnH,MAAQ,SAACh1F,EAAkB4B,GACtC,GAA4B,GAAxB5B,EAAQvjC,MAAMzJ,QAAwC,GAAzB4uC,EAASnlC,MAAMzJ,OAAa,KAAM,0CAEnE,IAAM6H,EAAI,IAAI,UAAGmlC,EAAQ9yB,IAAK,GACxB7W,EAAI,IAAI,UAAGurC,EAAS10B,IAAK,GAE/B,GAAI7W,EAAEsvB,GAAG,EAAAuQ,UAAa7/B,EAAEsvB,GAAG,EAAA2Q,gBAAkBz7B,EAAE8qB,GAAG,EAAA0Q,gBAChD,MAAO,CAAC,UAAQ7oB,WAAW,IAG7B,IAAIlc,EAAIuJ,EAAE+T,IAAIvY,GACVkhB,EAAI1c,EAAEyoB,IAAIjtB,GAUd,OARI/E,EAAEi0B,GAAG,EAAA2Q,UAAY7/B,EAAE8uB,GAAG,EAAA+Q,UACxB5kC,EAAIA,EAAEooB,IAAIrjB,GACVkhB,EAAIA,EAAEpY,IAAI,IAAI,UAAG,KACR7N,EAAEi0B,GAAG,EAAA2Q,UAAY7/B,EAAEkvB,GAAG,EAAA2Q,WAC/B5kC,EAAIA,EAAE6N,IAAI9I,GACVkhB,EAAIA,EAAEmC,IAAI,IAAI,UAAG,KAGZ,CAAC,UAAQnM,QAAQjc,EAAE+D,SAAS,EAAG,KAAM,UAAQkY,QAAQgK,EAAEliB,SAAS,EAAG,KAAM,UAAQmY,WAAW,KAGxF,EAAAynH,MAAQ,SAACj1F,GACpB,GAA4B,GAAxBA,EAAQvjC,MAAMzJ,OAAa,KAAM,0CAErC,IAAMiC,EAAO,IAAI,UAAG+qC,EAAQ9yB,IAAK,GAEjC,GAAIjY,EAAK0wB,GAAG,EAAA0Q,gBAAiB,MAAO,CAAC,UAAQ7oB,WAAW,IAExD,IAIMynD,EAJchgE,EAAKqjB,MAEWV,OAAO,IAEDviB,SAAS,EAAG,IAEtD,MAAO,CAAC,UAAQkY,QAAQ0nD,GAAoB,UAAQznD,WAAW,KAGpD,EAAA0nH,WAAa,SAACl1F,EAAkB4B,GAC3C,GAA4B,GAAxB5B,EAAQvjC,MAAMzJ,QAAwC,GAAzB4uC,EAASnlC,MAAMzJ,OAAa,KAAM,0CAEnE,IAAMikI,EAAO,IAAI,UAAGj3F,EAAQ9yB,IAAK,GAC3BgqH,EAAO,IAAI,UAAGt1F,EAAS10B,IAAK,GAE5BypH,EAAmC,MAA1B32F,EAAQ9yB,IAAIwpB,OAAO,GAC5BmgG,EAAoC,MAA3Bj1F,EAAS10B,IAAIwpB,OAAO,GAEnC,OAAIigG,IAAWE,EACN,UAAQrpH,WAAW,IAChBmpH,GAAUE,EACb,UAAQrpH,WAAW,GACjBmpH,GAAUE,EACZ,UAAQrpH,WAAW0pH,EAAK5+G,MAAMiN,GAAG0xG,EAAK3+G,OAAS,EAAI,GAGrD,UAAQ9K,WAAWypH,EAAK1xG,GAAG2xG,GAAQ,EAAI,IAGnC,EAAA/B,kBAAoB,SAACn1F,EAAkB4B,GAClD,GAA4B,GAAxB5B,EAAQvjC,MAAMzJ,QAAwC,GAAzB4uC,EAASnlC,MAAMzJ,OAAa,KAAM,0CAEnE,IAAMikI,EAAO,IAAI,UAAGj3F,EAAQ9yB,IAAK,GAC3BgqH,EAAO,IAAI,UAAGt1F,EAAS10B,IAAK,GAE5BypH,EAAmC,MAA1B32F,EAAQ9yB,IAAIwpB,OAAO,GAC5BmgG,EAAoC,MAA3Bj1F,EAAS10B,IAAIwpB,OAAO,GAEnC,OAAIigG,IAAWE,EACN,UAAQrpH,WAAW,IAChBmpH,GAAUE,EACb,UAAQrpH,WAAW,GACjBmpH,GAAUE,EACZ,UAAQrpH,WAAW0pH,EAAK5+G,MAAMmN,IAAIwxG,EAAK3+G,OAAS,EAAI,GAGtD,UAAQ9K,WAAWypH,EAAKxxG,IAAIyxG,GAAQ,EAAI,IAGpC,EAAA9B,cAAgB,SAACp1F,EAAkB4B,GAC9C,GAA4B,GAAxB5B,EAAQvjC,MAAMzJ,QAAwC,GAAzB4uC,EAASnlC,MAAMzJ,OAAa,KAAM,0CAEnE,IAAMikI,EAAO,IAAI,UAAGj3F,EAAQ9yB,IAAK,GAC3BgqH,EAAO,IAAI,UAAGt1F,EAAS10B,IAAK,GAE5BypH,EAAmC,MAA1B32F,EAAQ9yB,IAAIwpB,OAAO,GAC5BmgG,EAAoC,MAA3Bj1F,EAAS10B,IAAIwpB,OAAO,GAEnC,OAAIigG,IAAWE,EACN,UAAQrpH,WAAW,IAChBmpH,GAAUE,EACb,UAAQrpH,WAAW,GACjBmpH,GAAUE,EACZ,UAAQrpH,WAAW0pH,EAAK5+G,MAAM6M,GAAG8xG,EAAK3+G,OAAS,EAAI,GAGrD,UAAQ9K,WAAWypH,EAAK9xG,GAAG+xG,GAAQ,EAAI,IAGnC,EAAA7B,qBAAuB,SAACr1F,EAAkB4B,GACrD,GAA4B,GAAxB5B,EAAQvjC,MAAMzJ,QAAwC,GAAzB4uC,EAASnlC,MAAMzJ,OAAa,KAAM,0CAEnE,IAAMikI,EAAO,IAAI,UAAGj3F,EAAQ9yB,IAAK,GAC3BgqH,EAAO,IAAI,UAAGt1F,EAAS10B,IAAK,GAE5BypH,EAAmC,MAA1B32F,EAAQ9yB,IAAIwpB,OAAO,GAC5BmgG,EAAoC,MAA3Bj1F,EAAS10B,IAAIwpB,OAAO,GAEnC,OAAIigG,IAAWE,EACN,UAAQrpH,WAAW,IAChBmpH,GAAUE,EACb,UAAQrpH,WAAW,GACjBmpH,GAAUE,EACZ,UAAQrpH,WAAW0pH,EAAK5+G,MAAM+M,IAAI4xG,EAAK3+G,OAAS,EAAI,GAGtD,UAAQ9K,WAAWypH,EAAK5xG,IAAI6xG,GAAQ,EAAI,K,8WCzLjD,YAEa,EAAA7F,WAAa,SAACrxF,GAA8B,MAAgB,KAAhBA,EAAQ7yB,KAA8B,OAAhB6yB,EAAQ7yB,KAE1E,EAAA8jH,OAAS,SAACl7F,GACrB,IAAMohG,EAAgBphG,EAAYu3F,KAAKv3F,EAAYu3F,KAAKt6H,OAAS,GAC3DokI,GAAyB,IAAA/F,YAAW8F,GAG1C,MAAO,CAAEnhG,KAFO,EAAH,KAAOD,EAAYC,MAAM,GAAF,CAAEohG,IAAa,GAE3B7J,QAAS,KAGtB,EAAA2D,UAAY,SAACn7F,GACxB,IAAMohG,EAAgBphG,EAAYu3F,KAAKv3F,EAAYu3F,KAAKt6H,OAAS,GAC3DokI,IAA0B,IAAA/F,YAAW8F,GAG3C,MAAO,CAAEnhG,KAFO,EAAH,KAAOD,EAAYC,MAAM,GAAF,CAAEohG,IAAa,GAE3B7J,QAAS,KAGtB,EAAA4D,SAAW,SAACp7F,GACvB,GAAmC,IAA/BA,EAAYw3F,QAAQv6H,OAAc,CACpC,IAAIqkI,EAAU,EAAH,GAAOthG,EAAYC,MAAI,GAGlC,OAFAqhG,EAAQlrD,MAED,CAAEn2C,KADTqhG,EAAU,EAAH,KAAOA,GAAS,GAAF,GAAG,IAAAvhG,cAAaC,KAAY,GACzBw3F,QAAS,IAGnC,MAAO,CAAEv3F,KAAMD,EAAYC,KAAMu3F,QAASx3F,EAAYw3F,UAG3C,EAAA6D,UAAY,SAACr7F,GACxB,GAAmC,IAA/BA,EAAYw3F,QAAQv6H,OAAc,CACpC,IAAMqkI,EAAU,EAAH,GAAOthG,EAAYC,MAAI,GACpC,MAAO,CAAEA,KAAMqhG,EAAQ5xH,OAAO,EAAG4xH,EAAQrkI,OAAS,GAAIu6H,QAAS,IAGjE,IAAM+J,EAAa,EAAH,GAAOvhG,EAAYw3F,SAAO,GAC1C,MAAO,CAAEv3F,KAAMD,EAAYC,KAAMu3F,QAAS+J,EAAW7xH,OAAO,EAAG6xH,EAAWtkI,OAAS,M,qNCxCrF,cAEa,EAAA2gI,oBAAsB,SAAC3zF,GAClC,QAAuBjsC,IAAnBisC,EAAQ5yB,OACV,OAAO,UAAQI,WAAW,GAG5B,KAAM,uEAGK,EAAAomH,oBAAsB,SAAC5zF,GAClC,QAAuBjsC,IAAnBisC,EAAQ5yB,OACV,OAAO,UAAQI,WAAW,GAG5B,KAAM,wE,mOCfR,cAEa,EAAA+kH,YAAc,SAACvyF,EAAkB4B,GAC5C,MAAoB,KAAhB5B,EAAQ7yB,KAA+B,KAAjBy0B,EAASz0B,IAAmB,UAAQK,WAAW,GAElE,UAAQF,QAAQ0yB,EAAQ7yB,IAAMy0B,EAASz0B,MAGnC,EAAArV,OAAS,SAACkoC,EAAkB4B,EAAmBE,GAC1D,IAAM17B,EAAU45B,EAAQ7yB,IAClB4E,EAAQ6vB,EAASx0B,OACjBhY,EAAO0sC,EAAS10B,OAEtB,QAAcrZ,IAAVge,QAAgChe,IAATqB,EAAoB,CAC7C,IAAMooD,EAASp3C,EAAQtO,OAAe,EAARia,EAAkB,EAAP3c,GAEzC,OAAO,UAAQkY,QAAQkwC,GAGzB,KAAM,kCAGK,EAAAloC,MAAQ,SAAC0qB,EAAkB4B,GACtC,QAAwB7tC,IAApB6tC,EAASx0B,OAAsB,CACjC,IAAMhH,EAAU45B,EAAQ7yB,IAClB,EAAyB,EAAlBy0B,EAASx0B,OAEtB,GAAI,EAAO,EAAG,KAAM,yCACpB,GAAIhH,EAAQpT,OAAS,EAAM,KAAM,6CACjC,GAAa,IAAT,EAAY,OAAO,UAAQwa,WAAW,GAE1C,IAAMgwC,EAASp3C,EAAQ7R,OAAc,EAAR,GAE7B,OAAO,UAAQ+Y,QAAQkwC,GAGzB,KAAM,wBAGK,EAAAnoC,KAAO,SAAC2qB,EAAkB4B,GACrC,QAAwB7tC,IAApB6tC,EAASx0B,OAAsB,CACjC,IAAMhH,EAAU45B,EAAQ7yB,IAClB,EAAyB,EAAlBy0B,EAASx0B,OAEtB,GAAI,EAAO,EAAG,KAAM,0CACpB,GAAIhH,EAAQpT,OAAS,EAAM,KAAM,6CACpB,IAAT,GAAY,UAAQwa,WAAW,GAEnC,IAAMgwC,EAASp3C,EAAQtO,OAAO,EAAG,GAEjC,OAAO,UAAQwV,QAAQkwC,GAGzB,KAAM,+BAGK,EAAApoD,KAAO,SAAC4qC,GACnB,IAAMu1F,EAAcv1F,EAAQ7yB,IAAIna,OAAS,EACzC,OAAO,UAAQwa,WAAW+nH,IAGf,EAAA/C,WAAa,SAACxyF,EAAkB4B,EAAmBE,GAC9D,QAAwB/tC,IAApB6tC,EAASx0B,aAA4CrZ,IAApB+tC,EAAS10B,OAAsB,CAClE,IAAMhH,EAAU45B,EAAQ7yB,IACpB4E,EAA0B,EAAlB6vB,EAASx0B,OACjB,EAA2B,EAAlB00B,EAAS10B,OAEhBmqH,EAAcnxH,EAAQpT,OAExB+e,EAAQ,IAAGA,EAAQ,GAEnB,EAAS,IAAG,EAAS,GAErBA,GAASwlH,GAAa,UAAQ/pH,WAAW,GAEzCuE,EAAQ,EAASwlH,IACnB,EAASA,EAAcxlH,GAGzB,IAAMyrC,EAASp3C,EAAQtO,OAAOia,EAAO,GAErC,OAAO,UAAQzE,QAAQkwC,GAGzB,KAAM,0C,0gBCpFR,cAEa,EAAA+zE,aAAe,SAACvxF,GAA8B,OAAAA,GAE9C,EAAAwxF,OAAS,SAACxxF,EAAkB4B,GAAiC,OAAC5B,EAAS4B,IAEvE,EAAA6vF,SAAW,SAACzxF,EAAkB4B,EAAmBE,GAAiC,OAAC9B,EAAS4B,EAAUE,IAEtG,EAAA4vF,QAAU,SAAC1xF,EAAkB4B,GAAiC,OAAC5B,EAAS4B,IAExE,EAAAowF,IAAM,SAAChyF,EAAkB4B,EAAmBE,GAAiC,OAACF,EAAUE,EAAU9B,IAElG,EAAA+xF,OAAS,SAAC/xF,EAAkB4B,EAAmBE,EAAmB01F,EAAmBC,EAAmBC,GAAiC,OACpJ51F,EACA01F,EACAC,EACAC,EACA13F,EACA4B,IAGW,EAAA+vF,QAAU,SAAC3xF,EAAkB4B,EAAmBE,EAAmB01F,GAAiC,OAAC51F,EAAU5B,EAASw3F,EAAU11F,IAElI,EAAAygE,MAAQ,SAACvvG,GAA4B,iBAAQwa,WAAWxa,IAExD,EAAA6+H,IAAM,SAAC7xF,GAA8B,OAAAA,GAErC,EAAA4xF,MAAQ,SAAC5xF,GACpB,YAAuBjsC,IAAnBisC,EAAQ5yB,QAA2C,IAAnB4yB,EAAQ5yB,OACnC,GAGF4yB,GAGI,EAAA8xF,IAAM,SAAC9xF,GAA8B,OAAAA,GAErC,EAAAosD,KAAO,SAACpsD,GAA8B,OAAAA,GAEtC,EAAAmyF,KAAO,SAACwF,EAAyB1F,GAAkC,cAAI0F,GAAc,GAAF,CAAEA,EAAahsH,UAAUsmH,KAAW,IAEvH,EAAAG,KAAO,SAACuF,EAAyB1F,GAC5C,IAAM2F,EAA6B,KAAID,GAAY,GAAEhsH,UAC/CksH,EAAuBD,EAAgB3F,GAK7C,OAHA2F,EAAgBnyH,OAAOwsH,EAAY,GACnC2F,EAAgBhtC,QAAQitC,GAEjBD,EAAgBjsH,WAGZ,EAAAvV,KAAO,SAAC4pC,EAAkB4B,GAAiC,OAAC5B,EAAS4B,IAErE,EAAAywF,KAAO,SAACryF,EAAkB4B,GAAiC,OAACA,EAAU5B,EAAS4B,K,k7BCrD5F,cAEA,WAEa,EAAAkyF,qBAAuB,SAAC9zF,EAAkB83F,GACrD,IAAIC,EAAsB/3F,EAAQ5yB,OACd,OAAhB4yB,EAAQ7yB,MACV4qH,EAAsB,GAExB,IAAMC,EAAgBF,EAAS9kI,OAE/B,QAA4Be,IAAxBgkI,EAAmC,KAAM,mCAE7C,GAAIA,EAAsB,EAAG,KAAM,sDAEnC,GAAsB,IAAlBC,EAAqB,KAAM,+DAE/B,GAAIA,EAAgBD,EAAsB,EAAG,KAAM,wDAEnD,IAAME,EAA2BH,EAASC,GAAqBG,aACzDC,EAAmBL,EAASC,GAAqBK,KAEvD,IAAKH,EAA0B,KAAM,6DAErC,IAAKE,EAAkB,KAAM,mDAE7B,MAAO,CAAC,UAAQ7qH,QAAQ2qH,GAA2B,UAAQ3qH,QAAQ6qH,GAAmB,UAAQ7qH,QAAQ,QAG3F,EAAAymH,kBAAoB,SAAC/zF,EAAkB83F,GAClD,IAAIC,EAAsB/3F,EAAQ5yB,OACd,OAAhB4yB,EAAQ7yB,MACV4qH,EAAsB,GAExB,IAAMC,EAAgBF,EAAS9kI,OAE/B,QAA4Be,IAAxBgkI,EAAmC,KAAM,mCAE7C,GAAIA,EAAsB,EAAG,KAAM,sDAEnC,GAAsB,IAAlBC,EAAqB,KAAM,+DAI/B,GAAIA,EAAgBD,EAAsB,EAAG,KAAM,wDAEnD,IAAMM,EAAsBP,EAASC,GAAqBO,QAE1D,IAAKD,EAAqB,KAAM,uDAEhC,MAAO,CAAC,UAAQ/qH,QAAQ+qH,GAAsB,UAAQ7qH,WAAW,KAGtD,EAAAwmH,kBAAoB,SAACh0F,EAAkB83F,GAClD,IAAIC,EAAsB/3F,EAAQ5yB,OACd,OAAhB4yB,EAAQ7yB,MACV4qH,EAAsB,GAExB,IAAMC,EAAgBF,EAAS9kI,OAE/B,QAA4Be,IAAxBgkI,EAAmC,KAAM,mCAE7C,GAAIA,EAAsB,EAAG,KAAM,sDAEnC,GAAsB,IAAlBC,EAAqB,KAAM,+DAE/B,GAAIA,EAAgBD,EAAsB,EAAG,KAAM,wDAEnD,IAAMQ,EAAqBT,EAASC,GAAqB5kC,OAEzD,IAAKolC,EAAoB,KAAM,qDAE/B,IAAMC,EAAgB5lI,EAAOa,KAAK8kI,EAAoB,OAAO5sH,UAAUtW,SAAS,OAEhF,MAAO,CAAC,UAAQiY,QAAQkrH,GAAgB,UAAQhrH,WAAW,KAGhD,EAAAymH,yBAA2B,SAACj0F,EAAkB83F,GACzD,IAAIC,EAAsB/3F,EAAQ5yB,OACd,OAAhB4yB,EAAQ7yB,MACV4qH,EAAsB,GAExB,IAAMC,EAAgBF,EAAS9kI,OAE/B,QAA4Be,IAAxBgkI,EAAmC,KAAM,mCAE7C,GAAIA,EAAsB,EAAG,KAAM,sDAEnC,GAAsB,IAAlBC,EAAqB,KAAM,+DAE/B,GAAIA,EAAgBD,EAAsB,EAAG,KAAM,wDAEnD,IAAKD,EAASC,GAAqBhjE,aAAc,KAAM,2DAEvD,IAAM0jE,EAAsBX,EAASC,GAAqBhjE,aAEpD2jE,EAAiBD,EAAoB3gI,OAAO,EAAG,GAC/C6gI,EAAiBF,EAAoB/mH,UAAU,GAC/CknH,EAAuB,UAAQtrH,QAAQqrH,GAAgBl8H,MAAMzJ,OAE/DwqD,EAAoB,GAExB,GAAuB,OAAnBk7E,GAAqD,KAAzBE,GAAwD,KAAzBA,EAGxD,GAAuB,OAAnBF,GAAoD,KAAzBE,EACpCp7E,EAAS,CAAC,UAAQlwC,QAAQqrH,GAAiB,UAAQnrH,WAAW,QACzD,CAEL,IAAMqrH,EAAe73H,EAAOo/B,OAAO,UAAQ9yB,QAAQmrH,IAAsBpjI,WACzEmoD,EAAS,CAAC,UAAQlwC,QAAQurH,GAAe,UAAQrrH,YAAY,SAP7DgwC,EAAS,CAAC,UAAQlwC,QAAQqrH,GAAiB,UAAQnrH,WAAW,IAShE,OAAOgwC,GAGI,EAAA22E,qBAAuB,SAACn0F,EAAkB83F,GACrD,IAAIC,EAAsB/3F,EAAQ5yB,OACd,OAAhB4yB,EAAQ7yB,MACV4qH,EAAsB,GAExB,IAAMC,EAAgBF,EAAS9kI,OAE/B,QAA4Be,IAAxBgkI,EAAmC,KAAM,mCAE7C,GAAIA,EAAsB,EAAG,KAAM,sDAEnC,GAAsB,IAAlBC,EAAqB,KAAM,+DAE/B,GAAIA,EAAgBD,EAAsB,EAAG,KAAM,wDAEnD,OAAO,UAAQvqH,WAAW,IAGf,EAAA0mH,qBAAuB,SAACl0F,EAAkB83F,GACrD,IAAIC,EAAsB/3F,EAAQ5yB,OACd,OAAhB4yB,EAAQ7yB,MACV4qH,EAAsB,GAExB,IAAMC,EAAgBF,EAAS9kI,OAE/B,QAA4Be,IAAxBgkI,EAAmC,KAAM,mCAE7C,GAAIA,EAAsB,EAAG,KAAM,sDAEnC,GAAsB,IAAlBC,EAAqB,KAAM,+DAE/B,GAAIA,EAAgBD,EAAsB,EAAG,KAAM,wDAEnD,IAAMe,EAAuBhB,EAASC,GAAqBgB,SAE3D,IAAKD,EAAsB,KAAM,uDAEjC,IAAME,EAAkBpmI,EAAOa,KAAKqlI,EAAsB,OAAOntH,UAAUtW,SAAS,OAEpF,OAAO,UAAQiY,QAAQ0rH,IAGZ,EAAA5E,mBAAqB,SAACp0F,EAAkBi5F,GACnD,IAAIC,EAAuBl5F,EAAQ5yB,OACf,OAAhB4yB,EAAQ7yB,MACV+rH,EAAuB,GAEzB,IAAMC,EAAiBF,EAAUjmI,OAEjC,QAA6Be,IAAzBmlI,EAAoC,KAAM,oCAE9C,GAAIA,EAAuB,EAAG,KAAM,uDAEpC,GAAuB,IAAnBC,EAAsB,KAAM,gEAEhC,GAAIA,EAAiBD,EAAuB,EAAG,KAAM,0DAErD,IAAME,EAAuBH,EAAUC,GAAsBZ,QAE7D,IAAKc,EAAsB,KAAM,8DAEjC,MAAO,CAAC,UAAQ9rH,QAAQ8rH,GAAuB,UAAQ5rH,WAAW,KAGvD,EAAA6mH,mBAAqB,SAACr0F,EAAkBi5F,GACnD,IAAIC,EAAuBl5F,EAAQ5yB,OACf,OAAhB4yB,EAAQ7yB,MACV+rH,EAAuB,GAEzB,IAAMC,EAAiBF,EAAUjmI,OAEjC,QAA6Be,IAAzBmlI,EAAoC,KAAM,oCAE9C,GAAIA,EAAuB,EAAG,KAAM,uDAEpC,GAAuB,IAAnBC,EAAsB,KAAM,gEAEhC,GAAIA,EAAiBD,EAAuB,EAAG,KAAM,0DAErD,IAAMG,EAAsBJ,EAAUC,GAAsB/lC,OAE5D,IAAKkmC,EAAqB,KAAM,qDAEhC,IAAMC,EAAiB1mI,EAAOa,KAAK4lI,EAAqB,OAAO1tH,UAAUtW,SAAS,OAElF,MAAO,CAAC,UAAQiY,QAAQgsH,GAAiB,UAAQ9rH,WAAW,KAGjD,EAAA8mH,mBAAqB,SAACt0F,EAAkBi5F,GACnD,IAAIC,EAAuBl5F,EAAQ5yB,OACf,OAAhB4yB,EAAQ7yB,MACV+rH,EAAuB,GAEzB,IAAMC,EAAiBF,EAAUjmI,OAEjC,QAA6Be,IAAzBmlI,EAAoC,KAAM,oCAE9C,GAAIA,EAAuB,EAAG,KAAM,uDAEpC,GAAuB,IAAnBC,EAAsB,KAAM,gEAEhC,GAAIA,EAAiBD,EAAuB,EAAG,KAAM,0DAErD,OAAO,UAAQ1rH,WAAW,IAGf,EAAA+mH,0BAA4B,SAACv0F,EAAkBi5F,GAC1D,IAAIC,EAAuBl5F,EAAQ5yB,OACf,OAAhB4yB,EAAQ7yB,MACV+rH,EAAuB,GAEzB,IAAMC,EAAiBF,EAAUjmI,OAEjC,QAA6Be,IAAzBmlI,EAAoC,KAAM,oCAE9C,GAAIA,EAAuB,EAAG,KAAM,uDAEpC,GAAuB,IAAnBC,EAAsB,KAAM,gEAEhC,GAAIA,EAAiBD,EAAuB,EAAG,KAAM,0DAErD,IAAKD,EAAUC,GAAsBnkE,aAAc,KAAM,2DAEzD,IAAM0jE,EAAsBQ,EAAUC,GAAsBnkE,aAEtD2jE,EAAiBD,EAAoB3gI,OAAO,EAAG,GAC/C6gI,EAAiBF,EAAoB/mH,UAAU,GAC/CknH,EAAuB,UAAQtrH,QAAQqrH,GAAgBl8H,MAAMzJ,OAE/DwqD,EAAoB,GAExB,GAAuB,OAAnBk7E,GAAqD,KAAzBE,GAAwD,KAAzBA,EAGxD,GAAuB,OAAnBF,GAAoD,KAAzBE,EACpCp7E,EAAS,CAAC,UAAQlwC,QAAQqrH,GAAiB,UAAQnrH,WAAW,QACzD,CAEL,IAAMqrH,EAAe73H,EAAOo/B,OAAO,UAAQ9yB,QAAQmrH,IAAsBpjI,WACzEmoD,EAAS,CAAC,UAAQlwC,QAAQurH,GAAe,UAAQrrH,YAAY,SAP7DgwC,EAAS,CAAC,UAAQlwC,QAAQqrH,GAAiB,UAAQnrH,WAAW,IAShE,OAAOgwC,K","file":"scriptWiz.umd.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 59);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/*!\n * assert.js - assert for bcrypto\n * Copyright (c) 2020, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\n/*\n * Assert\n */\n\nfunction assert(val, msg) {\n  if (!val) {\n    const err = new Error(msg || 'Assertion failed');\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(err, assert);\n\n    throw err;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = assert;\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));","/*!\n * hmac.js - hmac for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hash.js:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/hash.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/HMAC\n *   https://tools.ietf.org/html/rfc2104\n *   https://github.com/indutny/hash.js/blob/master/lib/hash/hmac.js\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/**\n * HMAC\n */\n\nclass HMAC {\n  /**\n   * Create an HMAC.\n   * @param {Function} Hash\n   * @param {Number} size\n   * @param {Array} [x=[]]\n   * @param {Array} [y=[]]\n   */\n\n  constructor(Hash, size, x = [], y = []) {\n    assert(typeof Hash === 'function');\n    assert((size >>> 0) === size);\n    assert(Array.isArray(x));\n    assert(Array.isArray(y));\n\n    this.hash = Hash;\n    this.size = size;\n    this.x = x;\n    this.y = y;\n\n    this.inner = new Hash();\n    this.outer = new Hash();\n  }\n\n  /**\n   * Initialize HMAC context.\n   * @param {Buffer} data\n   */\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n\n    // Shorten key\n    if (key.length > this.size) {\n      const Hash = this.hash;\n      const h = new Hash();\n\n      h.init(...this.x);\n      h.update(key);\n\n      key = h.final(...this.y);\n\n      assert(key.length <= this.size);\n    }\n\n    // Pad key\n    const pad = Buffer.alloc(this.size);\n\n    for (let i = 0; i < key.length; i++)\n      pad[i] = key[i] ^ 0x36;\n\n    for (let i = key.length; i < pad.length; i++)\n      pad[i] = 0x36;\n\n    this.inner.init(...this.x);\n    this.inner.update(pad);\n\n    for (let i = 0; i < key.length; i++)\n      pad[i] = key[i] ^ 0x5c;\n\n    for (let i = key.length; i < pad.length; i++)\n      pad[i] = 0x5c;\n\n    this.outer.init(...this.x);\n    this.outer.update(pad);\n\n    return this;\n  }\n\n  /**\n   * Update HMAC context.\n   * @param {Buffer} data\n   */\n\n  update(data) {\n    this.inner.update(data);\n    return this;\n  }\n\n  /**\n   * Finalize HMAC context.\n   * @returns {Buffer}\n   */\n\n  final() {\n    this.outer.update(this.inner.final(...this.y));\n    return this.outer.final(...this.y);\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = HMAC;\n",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./evpkdf\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            var block;\n\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            var modeCreator;\n\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var finalProcessedBlocks;\n\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            var wordArray;\n\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            var salt;\n\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));","/*!\n * random.js - random for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/random');\n","module.exports=function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=4)}([function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.hexBoundaries=t.hexToBytes=t.hexLE=t.hexFixBytes=void 0;var r=n(2);t.hexFixBytes=function(e){return e.length%2==0?e:e.padStart(2*Math.ceil(e.length/2),\"0\")};var o=function(e){return e.length%2==0&&!/[^a-fA-F0-9]/u.test(e)};t.hexLE=function(e){return(0,r.bytesToHex)((0,t.hexToBytes)(e).reverse())};t.hexToBytes=function(e){return Uint8Array.from(function(e){if(!o(e))throw\"hexToHexBytes: invalid hex string\";var t=e.match(/.{1,2}/g);return null===t?[]:t.map((function(e){return e}))}(e).map((function(e){return function(e){if(!o(e))throw\"hexToByte: invalid hex string\";return parseInt(e,16)}(e)})))};t.hexBoundaries=function(e){var t=Math.pow(2,8*e-9),n=Math.pow(2,8*e-1);if(0<e&&e<5)return{minPos:t,maxPos:n-1,minNeg:1-n,maxNeg:-1*t}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.MAX_INTEGER=void 0,t.MAX_INTEGER=2147483647},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.bytesToBin=t.bytesToNumber=t.bytesToString=t.bytesToHex=void 0;var r=n(0),o=n(3);t.bytesToHex=function(e){return e.reduce((function(e,t){return e+function(e){if(!function(e){return 0<=e||e<=255}(e))throw\"byteToHex: invalid byte number\";return e.toString(16).padStart(2,\"0\")}(t)}),\"\")};t.bytesToString=function(e){for(var t=[],n=0,r=0;n<e.length;){var o=e[n++];if(o<128)t[r++]=String.fromCharCode(o);else if(o>191&&o<224){var i=e[n++];t[r++]=String.fromCharCode((31&o)<<6|63&i)}else if(o>239&&o<365){var u=((7&o)<<18|(63&(i=e[n++]))<<12|(63&(a=e[n++]))<<6|63&e[n++])-65536;t[r++]=String.fromCharCode(55296+(u>>10)),t[r++]=String.fromCharCode(56320+(1023&u))}else{i=e[n++];var a=e[n++];t[r++]=String.fromCharCode((15&o)<<12|(63&i)<<6|63&a)}}return t.join(\"\")};t.bytesToNumber=function(e){if(0==e.length)return 0;if(!(4<e.length)){var n=(0,t.bytesToHex)(e);if((0,o.numberIsValid)(n,e.length)){var i=(0,r.hexBoundaries)(e.length);if(void 0!==i){var u=parseInt((0,r.hexLE)(n),16);return i.minPos<=u&&u<=i.maxPos||0===u?u:Math.pow(2,8*e.length-1)-u}}}};t.bytesToBin=function(e){return e.reduce((function(e,t){return t.toString(2).padStart(8,\"0\")+e}),\"\")}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.numberIsValid=t.numberToBytes=void 0;var r=n(0),o=function(e,t){return Math.log(t)/Math.log(e)},i=function(e,t){var n=e%t;return{numeral:n,nextValue:(e-n)/t}};t.numberToBytes=function(e){var t,n=0===(t=e)?0:0<t?Math.ceil((o(2,t+1)+1)/8):t<0?Math.floor((o(2,-t)+1)/8+1):0;return function(e,t){var n=new Uint8Array(t);if(e.length>t){var r=Math.pow(2,8)-1;n.fill(r)}else n.set(e);return n}(function(e){for(var t=Math.pow(2,8),n=e,r=[];n>=t;){var o=i(n,t),u=o.numeral,a=o.nextValue;r.push(u),n=a}return n>0&&r.push(n),Uint8Array.from(r)}(e<0?Math.pow(2,8*n-1)-e:e),n)};t.numberIsValid=function(e,t){var n=parseInt((0,r.hexLE)(e),16);return(1!==t||0!=n&&128!=n)&&((2!==t||!(1<=n&&n<=127||32768<=n&&n<=32895))&&((3!==t||!(1<=n&&n<=32767||8388608<=n&&n<=8421375))&&(4!==t||!(1<=n&&n<=8388607||2147483648<=n&&n<=2155872255))))}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.MAX_INTEGER=t.hexLE=void 0;var r=n(1);Object.defineProperty(t,\"MAX_INTEGER\",{enumerable:!0,get:function(){return r.MAX_INTEGER}});var o=n(0);Object.defineProperty(t,\"hexLE\",{enumerable:!0,get:function(){return o.hexLE}});var i=n(5);t.default=i.WizData},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.WizData=void 0;var r=n(1),o=n(6),i=n(2),u=n(0),a=n(3),f=n(7),s=function(){function e(e,t,n,s,c){var d=\"\",l=new Uint8Array([]),v=\"\",y=\"\",b=void 0,h=void 0;void 0!==e?(d=e,l=(0,u.hexToBytes)(e),v=(0,i.bytesToBin)(l),y=e,b=(0,i.bytesToNumber)(l)):void 0!==t?(d=t,l=(0,o.binToBytes)(t),v=t,y=(0,i.bytesToHex)(l),b=(0,i.bytesToNumber)(l)):void 0!==n?(d=n,l=(0,a.numberToBytes)(n),v=(0,i.bytesToBin)(l),y=(0,i.bytesToHex)(l),b=n):void 0!==s?(d=s,l=(0,f.stringToBytes)(s),v=(0,i.bytesToBin)(l),y=(0,i.bytesToHex)(l),b=(0,i.bytesToNumber)(l),h=s):void 0!==c&&(l=c,y=(0,i.bytesToHex)(c),v=(0,i.bytesToBin)(l),d=c.join(\",\")),this.input=d,this.bytes=l,this.bin=v,this.hex=y,void 0!==b&&-r.MAX_INTEGER<=b&&b<=r.MAX_INTEGER&&(this.number=b),this.text=h}return e.fromHex=function(t){return new e(t,void 0,void 0,void 0)},e.fromBin=function(t){return new e(void 0,t,void 0,void 0)},e.fromNumber=function(t){return new e(void 0,void 0,t,void 0)},e.fromText=function(t){return new e(void 0,void 0,void 0,t)},e.fromBytes=function(t){return new e(void 0,void 0,void 0,void 0,t)},e}();t.WizData=s},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.binToBytes=t.binFixBytes=void 0;t.binFixBytes=function(e){return e.length%8==0?e:e.padStart(8*Math.ceil(e.length/8),\"0\")};t.binToBytes=function(e){return Uint8Array.from(function(e){if(!function(e){return!/[^01]/u.test(e)&&e.length%8==0}(e))throw\"binToBinBytes: invalid bin string\";var t=e.match(/.{1,8}/g);return null===t?[]:t.map((function(e){return e}))}(e).reverse().map((function(e){return function(e){return parseInt(e,2)}(e)})))}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.stringToBytes=void 0;t.stringToBytes=function(e){for(var t=[],n=0,r=0;r<e.length;r++){var o=e.charCodeAt(r);o<128?t[n++]=o:o<2048?(t[n++]=o>>6|192,t[n++]=63&o|128):55296==(64512&o)&&r+1<e.length&&56320==(64512&e.charCodeAt(r+1))?(o=65536+((1023&o)<<10)+(1023&e.charCodeAt(r+=1)),t[n++]=o>>18|240,t[n++]=o>>12&63|128,t[n++]=o>>6&63|128,t[n++]=63&o|128):(t[n++]=o>>12|224,t[n++]=o>>6&63|128,t[n++]=63&o|128)}return new Uint8Array(t)}}]);\n//# sourceMappingURL=index.js.map","/*!\n * bn.js - big numbers for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/bn');\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","/*!\n * pem.js - PEM for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail\n *   https://tools.ietf.org/html/rfc1421\n *   https://tools.ietf.org/html/rfc1422\n *   https://tools.ietf.org/html/rfc1423\n *   https://tools.ietf.org/html/rfc1424\n *   https://tools.ietf.org/html/rfc4880\n *   https://tls.mbed.org/kb/cryptography/asn1-key-structures-in-der-and-pem\n *   https://github.com/crypto-browserify/EVP_BytesToKey/blob/master/index.js\n *   https://github.com/openssl/openssl/blob/master/include/openssl/pem.h\n *   https://github.com/openssl/openssl/blob/master/crypto/pem/pem_lib.c\n *   https://github.com/openssl/openssl/blob/master/crypto/evp/evp_key.c\n *   https://github.com/openssl/openssl/blob/master/crypto/pem/pem_pkey.c\n */\n\n/* eslint spaced-comment: \"off\" */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst base64 = require('./base64');\nconst lines = require('./lines');\n\n/*\n * Constants\n */\n\nconst EMPTY = Buffer.alloc(0);\n\n/**\n * PEMBlock\n */\n\nclass PEMBlock {\n  constructor(type, data) {\n    if (type == null)\n      type = 'PRIVACY-ENHANCED MESSAGE';\n\n    if (data == null)\n      data = EMPTY;\n\n    assert(typeof type === 'string');\n    assert(Buffer.isBuffer(data));\n\n    this.type = type;\n    this.headers = new Map();\n    this.data = data;\n  }\n\n  toString(armor) {\n    return encode(this.type, this.headers, this.data, armor);\n  }\n\n  fromString(str, armor) {\n    const iter = decode(str, armor);\n    const it = iter.next();\n\n    if (it.done)\n      throw new Error('No PEM data found.');\n\n    const block = it.value;\n\n    this.type = block.type;\n    this.headers = block.headers;\n    this.data = block.data;\n\n    return this;\n  }\n\n  getProcType() {\n    const hdr = this.headers.get('Proc-Type');\n\n    if (!hdr)\n      return null;\n\n    return ProcType.fromString(hdr);\n  }\n\n  setProcType(version, state) {\n    assert(version != null && state);\n    const proc = new ProcType(version, state);\n    this.headers.set('Proc-Type', proc.toString());\n    return this;\n  }\n\n  unsetProcType() {\n    this.headers.delete('Proc-Type');\n    return this;\n  }\n\n  getDEKInfo() {\n    const hdr = this.headers.get('DEK-Info');\n\n    if (!hdr)\n      return null;\n\n    return DEKInfo.fromString(hdr);\n  }\n\n  setDEKInfo(name, iv) {\n    assert(name);\n    const info = new DEKInfo(name, iv);\n    this.headers.set('DEK-Info', info.toString());\n    return this;\n  }\n\n  unsetDEKInfo() {\n    this.headers.delete('DEK-Info');\n    return this;\n  }\n\n  isEncrypted() {\n    let type;\n\n    try {\n      type = this.getProcType();\n    } catch (e) {\n      return false;\n    }\n\n    if (!type)\n      return false;\n\n    return type.version === 4\n        && type.state === 'ENCRYPTED';\n  }\n\n  static fromString(str, armor) {\n    return new this().fromString(str, armor);\n  }\n}\n\n/**\n * ProcType\n */\n\nclass ProcType {\n  constructor(version, state) {\n    if (version == null)\n      version = 0;\n\n    if (state == null)\n      state = 'NONE';\n\n    assert((version >>> 0) === version);\n    assert(typeof state === 'string');\n\n    this.version = version;\n    this.state = state.toUpperCase();\n  }\n\n  toString() {\n    return `${this.version},${this.state}`;\n  }\n\n  fromString(str) {\n    assert(typeof str === 'string');\n\n    const parts = str.split(',', 3);\n\n    if (parts.length !== 2)\n      throw new Error('Invalid Proc-Type.');\n\n    this.version = parseU32(parts[0]);\n    this.state = parts[1].toUpperCase();\n\n    return this;\n  }\n\n  static fromString(str) {\n    return new this().fromString(str);\n  }\n}\n\n/**\n * DEKInfo\n */\n\nclass DEKInfo {\n  constructor(name, iv) {\n    if (name == null)\n      name = 'AES-128-ECB';\n\n    if (iv == null)\n      iv = EMPTY;\n\n    assert(typeof name === 'string');\n    assert(Buffer.isBuffer(iv));\n\n    this.name = name.toUpperCase();\n    this.iv = iv;\n  }\n\n  toString() {\n    const name = this.name;\n\n    if (this.iv.length === 0)\n      return name;\n\n    const iv = this.iv.toString('hex');\n\n    return `${name},${iv.toUpperCase()}`;\n  }\n\n  fromString(str) {\n    assert(typeof str === 'string');\n\n    const parts = str.split(',', 3);\n\n    if (parts.length < 1 || parts.length > 2)\n      throw new Error('Invalid DEK-Info.');\n\n    const name = parts[0];\n\n    if (name.length === 0)\n      throw new Error('Invalid DEK-Info name.');\n\n    this.name = name.toUpperCase();\n    this.iv = EMPTY;\n\n    if (parts.length > 1) {\n      const hex = parts[1];\n      const iv = Buffer.from(hex, 'hex');\n\n      if (iv.length !== (hex.length >>> 1))\n        throw new Error('Invalid DEK-Info IV.');\n\n      this.iv = iv;\n    }\n\n    return this;\n  }\n\n  static fromString(str) {\n    return new this().fromString(str);\n  }\n}\n\n/*\n * PEM\n */\n\nfunction encode(type, headers, data, armor = false) {\n  assert(typeof type === 'string');\n  assert(headers instanceof Map);\n  assert(Buffer.isBuffer(data));\n  assert(typeof armor === 'boolean');\n\n  let str = '';\n\n  str += `-----BEGIN ${type}-----\\n`;\n\n  if (headers.size > 0) {\n    for (const [key, value] of headers)\n      str += `${key}: ${value}\\n`;\n\n    str += '\\n';\n  }\n\n  const s = base64.encode(data);\n\n  for (let i = 0; i < s.length; i += 64)\n    str += s.substring(i, i + 64) + '\\n';\n\n  if (armor) {\n    const crc = crc24(data);\n\n    str += `=${base64.encode(crc)}\\n`;\n  }\n\n  str += `-----END ${type}-----\\n`;\n\n  return str;\n}\n\nfunction *decode(str, armor = false) {\n  assert(typeof str === 'string');\n  assert(typeof armor === 'boolean');\n\n  let chunk = '';\n  let block = null;\n  let crc = null;\n\n  for (const [, line] of lines(str)) {\n    const index = line.indexOf(':');\n\n    if (index !== -1) {\n      if (!block)\n        throw new Error('PEM parse error (misplaced header).');\n\n      const key = line.substring(0, index).trim();\n      const value = line.substring(index + 1).trim();\n\n      block.headers.set(key, value);\n\n      continue;\n    }\n\n    if (line.length >= 15 && line.substring(0, 5) === '-----') {\n      if (line.slice(-5) !== '-----')\n        throw new Error('PEM parse error (invalid preamble).');\n\n      const preamble = line.slice(5, -5);\n\n      if (preamble.substring(0, 6) === 'BEGIN ') {\n        if (block)\n          throw new Error('PEM parse error (un-ended block).');\n\n        const type = preamble.substring(6).trim();\n\n        block = new PEMBlock();\n        block.type = type;\n\n        continue;\n      }\n\n      if (preamble.substring(0, 4) === 'END ') {\n        if (!block)\n          throw new Error('PEM parse error (unexpected end).');\n\n        const type = preamble.substring(4).trim();\n\n        if (block.type !== type)\n          throw new Error('PEM parse error (type mismatch).');\n\n        block.data = base64.decode(chunk);\n\n        if (crc && !crc24(block.data).equals(crc))\n          throw new Error('PEM parse error (invalid armor checksum).');\n\n        yield block;\n\n        chunk = '';\n        block = null;\n        crc = null;\n\n        continue;\n      }\n\n      throw new Error('PEM parse error (unknown preamble).');\n    }\n\n    if (!block)\n      throw new Error('PEM parse error (unexpected data).');\n\n    if (line.length === 5 && line.charCodeAt(0) === 0x3d /*'='*/) {\n      if (!armor)\n        continue;\n\n      if (crc)\n        throw new Error('PEM parse error (unexpected armor checksum).');\n\n      crc = base64.decode(line.substring(1));\n\n      continue;\n    }\n\n    if (line.length > 96)\n      throw new Error('PEM parse error (line too long).');\n\n    chunk += line.replace(/[\\t\\v ]/g, '');\n  }\n\n  if (block || crc)\n    throw new Error('PEM parse error (un-ended block).');\n\n  if (chunk.length !== 0)\n    throw new Error('PEM parse error (trailing data).');\n}\n\nfunction toPEM(data, type, armor) {\n  assert(Buffer.isBuffer(data));\n  assert(typeof type === 'string');\n\n  const block = new PEMBlock();\n  block.type = type;\n  block.data = data;\n\n  return block.toString(armor);\n}\n\nfunction fromPEM(str, type, armor) {\n  assert(typeof str === 'string');\n  assert(typeof type === 'string');\n\n  const block = PEMBlock.fromString(str, armor);\n\n  if (block.type !== type)\n    throw new Error('PEM type mismatch.');\n\n  return block.data;\n}\n\n/*\n * Helpers\n */\n\nfunction crc24(data) {\n  assert(Buffer.isBuffer(data));\n\n  let crc = 0xb704ce;\n\n  for (let i = 0; i < data.length; i++) {\n    const ch = data[i];\n\n    crc ^= ch << 16;\n\n    for (let j = 0; j < 8; j++) {\n      crc <<= 1;\n\n      if (crc & 0x1000000)\n        crc ^= 0x1864cfb;\n    }\n  }\n\n  crc &= 0xffffff;\n\n  const buf = Buffer.alloc(3);\n\n  buf[2] = crc;\n  crc >>>= 8;\n  buf[1] = crc;\n  crc >>>= 8;\n  buf[0] = crc;\n\n  return buf;\n}\n\nfunction parseU32(str) {\n  assert(typeof str === 'string');\n\n  if (str.length < 1 || str.length > 10)\n    throw new Error('Invalid integer.');\n\n  let word = 0;\n\n  for (let i = 0; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch < 0x30 || ch > 0x39)\n      throw new Error('Invalid integer.');\n\n    word *= 10;\n    word += ch - 0x30;\n\n    if (i > 0 && word === 0)\n      throw new Error('Invalid integer.');\n\n    if (word > 0xffffffff)\n      throw new Error('Invalid integer.');\n  }\n\n  return word;\n}\n\n/*\n * Expose\n */\n\nexports.PEMBlock = PEMBlock;\nexports.ProcType = ProcType;\nexports.DEKInfo = DEKInfo;\nexports.encode = encode;\nexports.decode = decode;\nexports.toPEM = toPEM;\nexports.fromPEM = fromPEM;\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","/*!\n * sha256.js - sha256 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/sha256');\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*!\n * asn1.js - ASN1 encoding for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/asn1.js:\n *   Copyright Fedor Indutny, 2013.\n *   https://github.com/indutny/asn1.js\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009 The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Abstract_Syntax_Notation_One\n *   https://en.wikipedia.org/wiki/X.690#BER_encoding\n *   https://en.wikipedia.org/wiki/X.690#DER_encoding\n *   http://luca.ntop.org/Teaching/Appunti/asn1.html\n *   ftp://ftp.rsasecurity.com/pub/pkcs/ascii/layman.asc\n *   https://tools.ietf.org/html/rfc2560\n *   https://tools.ietf.org/html/rfc5280\n *   https://github.com/indutny/asn1.js/blob/master/rfc/2560/index.js\n *   https://github.com/indutny/asn1.js/blob/master/rfc/5280/index.js\n *   https://github.com/indutny/asn1.js/blob/master/lib/asn1/base/node.js\n *   https://github.com/indutny/asn1.js/blob/master/lib/asn1/encoders/der.js\n *   https://github.com/indutny/asn1.js/blob/master/lib/asn1/decoders/der.js\n *   https://github.com/openssl/openssl/blob/master/include/openssl/asn1.h\n *   https://github.com/golang/go/blob/master/src/encoding/asn1/asn1.go\n *   https://github.com/golang/go/blob/master/src/encoding/asn1/marshal.go\n */\n\n/* eslint no-prototype-builtins: \"off\" */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst bio = require('bufio');\nconst objects = require('../internal/objects');\n\n/*\n * Constants\n */\n\nconst EMPTY = Buffer.alloc(0);\nconst ZERO = Buffer.alloc(1, 0x00);\nconst EMPTY_OID = new Uint32Array(2);\nconst MIN_TIME = -62167219200; // 0000-01-01T00:00:00.000Z\nconst MAX_TIME = 253402300799; // 9999-12-31T23:59:59.000Z\nconst MIN_OFFSET = -43200; // UTC-12:00\nconst MAX_OFFSET = 50400; // UTC+14:00\n\n// Missing types:\n//   EOC: 0\n//   OBJDESC: 7\n//   EXTERNAL: 8\n//   REAL: 9\n//   EMBED: 11\n//   ROID: 13\n//   VIDEOSTRING: 21\n//   GRAPHSTRING: 25\n//   ISO64STRING: 26\n//   UNISTRING: 28\n//   CHARSTRING: 29\n//   BMPSTRING: 30\n\nconst types = {\n  BOOLEAN: 1,\n  INTEGER: 2,\n  BITSTRING: 3,\n  OCTSTRING: 4,\n  NULL: 5,\n  OID: 6,\n  ENUM: 10,\n  UTF8STRING: 12,\n  SEQUENCE: 16,\n  SET: 17,\n  NUMSTRING: 18,\n  PRINTSTRING: 19,\n  T61STRING: 20,\n  IA5STRING: 22,\n  UTCTIME: 23,\n  GENTIME: 24,\n  GENSTRING: 27\n};\n\nconst typesByVal = {\n  1: 'BOOLEAN',\n  2: 'INTEGER',\n  3: 'BITSTRING',\n  4: 'OCTSTRING',\n  5: 'NULL',\n  6: 'OID',\n  10: 'ENUM',\n  12: 'UTF8STRING',\n  16: 'SEQUENCE',\n  17: 'SET',\n  18: 'NUMSTRING',\n  19: 'PRINTSTRING',\n  20: 'T61STRING',\n  22: 'IA5STRING',\n  23: 'UTCTIME',\n  24: 'GENTIME',\n  27: 'GENSTRING'\n};\n\nconst classes = {\n  UNIVERSAL: 0,\n  APPLICATION: 1,\n  CONTEXT: 2,\n  PRIVATE: 3\n};\n\nconst classesByVal = {\n  0: 'UNIVERSAL',\n  1: 'APPLICATION',\n  2: 'CONTEXT',\n  3: 'PRIVATE'\n};\n\nconst TARGET = 0xff;\nconst OPTIONAL = 1 << 8;\nconst MODE = 0xff << 9;\nconst NORMAL = 0 << 9;\nconst EXPLICIT = 1 << 9;\nconst IMPLICIT = 2 << 9;\n\n/**\n * Node\n */\n\nclass Node extends bio.Struct {\n  constructor() {\n    super();\n    this.flags = 0;\n  }\n\n  get mode() {\n    return this.flags & MODE;\n  }\n\n  set mode(value) {\n    this.flags &= ~MODE;\n    this.flags |= value;\n  }\n\n  get opt() {\n    return (this.flags & OPTIONAL) !== 0;\n  }\n\n  set opt(value) {\n    if (value)\n      this.flags |= OPTIONAL;\n    else\n      this.flags &= ~OPTIONAL;\n  }\n\n  get target() {\n    return this.flags & TARGET;\n  }\n\n  set target(value) {\n    this.flags &= ~TARGET;\n    this.flags |= value;\n  }\n\n  get isRaw() {\n    return false;\n  }\n\n  explicit(target) {\n    assert((target >>> 0) === target);\n    this.mode = EXPLICIT;\n    this.target = target;\n    return this;\n  }\n\n  implicit(target) {\n    assert((target >>> 0) === target);\n    this.mode = IMPLICIT;\n    this.target = target;\n    return this;\n  }\n\n  optional(value = true) {\n    assert(typeof value === 'boolean');\n    this.opt = value;\n    return this;\n  }\n\n  clean() {\n    return false;\n  }\n\n  getBodySize(extra) {\n    return 0;\n  }\n\n  writeBody(bw, extra) {\n    return bw;\n  }\n\n  readBody(br, extra) {\n    return this;\n  }\n\n  encodeBody(extra) {\n    const size = this.getBodySize();\n    const bw = bio.write(size);\n    this.writeBody(bw, extra);\n    return bw.render();\n  }\n\n  decodeBody(data, extra) {\n    const br = bio.read(data);\n    return this.readBody(br, extra);\n  }\n\n  set() {\n    return this;\n  }\n\n  from(options, ...extra) {\n    if (options == null)\n      return this;\n\n    return this.set(options, ...extra);\n  }\n\n  error(str) {\n    if (this.opt)\n      return this;\n\n    const err = new Error(str);\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(err, this.error);\n\n    throw err;\n  }\n\n  getSize(extra) {\n    if (this.opt && this.clean())\n      return 0;\n\n    const body = this.getBodySize(extra);\n\n    let size = 0;\n\n    size += sizeHeader(body);\n    size += body;\n\n    if (this.mode === EXPLICIT)\n      size += sizeHeader(size);\n\n    return size;\n  }\n\n  write(bw, extra) {\n    if (this.opt && this.clean())\n      return bw;\n\n    const body = this.getBodySize();\n\n    switch (this.mode) {\n      case EXPLICIT: {\n        const size = sizeHeader(body) + body;\n        writeHeader(bw, this.target, classes.CONTEXT, false, size);\n        // fall through\n      }\n      case NORMAL: {\n        const primitive = this.type !== types.SEQUENCE\n                       && this.type !== types.SET;\n        writeHeader(bw, this.type, classes.UNIVERSAL, primitive, body);\n        break;\n      }\n      case IMPLICIT: {\n        const primitive = this.type !== types.SEQUENCE\n                       && this.type !== types.SET;\n        writeHeader(bw, this.target, classes.CONTEXT, primitive, body);\n        break;\n      }\n      default: {\n        throw new assert.AssertionError('Invalid mode.');\n      }\n    }\n\n    return this.writeBody(bw, extra);\n  }\n\n  read(br, extra) {\n    switch (this.mode) {\n      case EXPLICIT: {\n        const hdr = peekHeader(br, this.opt);\n\n        if (!hdr)\n          return this;\n\n        if (hdr.cls !== classes.CONTEXT)\n          return this.error(`Unexpected class: ${hdr.cls}.`);\n\n        if (hdr.primitive)\n          return this.error('Unexpected primitive flag.');\n\n        if (hdr.type !== this.target)\n          return this.error(`Unexpected type: ${hdr.type}.`);\n\n        br.seek(hdr.len);\n        br = br.readChild(hdr.size);\n\n        // Fall through.\n      }\n\n      case NORMAL: {\n        const hdr = peekHeader(br, this.opt);\n\n        if (!hdr)\n          return this;\n\n        if (hdr.cls !== classes.UNIVERSAL)\n          return this.error(`Unexpected class: ${hdr.cls}.`);\n\n        const primitive = this.type !== types.SEQUENCE\n                       && this.type !== types.SET;\n\n        if (hdr.primitive !== primitive)\n          return this.error('Unexpected primitive flag.');\n\n        if (hdr.type !== this.type)\n          return this.error(`Unexpected type: ${hdr.type}.`);\n\n        if (this.isRaw) {\n          const size = hdr.len + hdr.size;\n\n          this.raw = br.readBytes(size);\n\n          br.seek(-size);\n        }\n\n        br.seek(hdr.len);\n\n        const child = br.readChild(hdr.size);\n\n        return this.readBody(child, extra);\n      }\n\n      case IMPLICIT: {\n        const hdr = peekHeader(br, this.opt);\n\n        if (!hdr)\n          return this;\n\n        if (hdr.cls !== classes.CONTEXT)\n          return this.error(`Unexpected class: ${hdr.cls}.`);\n\n        const primitive = this.type !== types.SEQUENCE\n                       && this.type !== types.SET;\n\n        if (hdr.primitive !== primitive)\n          return this.error('Unexpected primitive flag.');\n\n        if (hdr.type !== this.target)\n          return this.error(`Unexpected type: ${hdr.type}.`);\n\n        br.seek(hdr.len);\n\n        const child = br.readChild(hdr.size);\n\n        return this.readBody(child, extra);\n      }\n\n      default: {\n        throw new assert.AssertionError('Invalid mode.');\n      }\n    }\n  }\n\n  fromArray(value) {\n    return this;\n  }\n\n  fromNumber(num) {\n    return this;\n  }\n\n  fromPEM(num) {\n    return this;\n  }\n\n  static decodeBody(value) {\n    return new this().decodeBody(value);\n  }\n\n  static fromArray(value) {\n    return new this().fromArray(value);\n  }\n\n  static fromNumber(num) {\n    return new this().fromNumber(num);\n  }\n\n  static fromPEM(str) {\n    return new this().fromPEM(str);\n  }\n}\n\n/**\n * Sequence\n */\n\nclass Sequence extends Node {\n  constructor(...options) {\n    super();\n    this.raw = null;\n    this.from(...options);\n  }\n\n  get type() {\n    return types.SEQUENCE;\n  }\n};\n\n/**\n * Set\n */\n\nclass Set extends Node {\n  constructor(...options) {\n    super();\n    this.raw = null;\n    this.from(...options);\n  }\n\n  get type() {\n    return types.SET;\n  }\n};\n\n/**\n * Any\n */\n\nclass Any extends Node {\n  constructor(...options) {\n    super();\n    this.node = new Null();\n    this.raw = null;\n    this.from(...options);\n  }\n\n  get isRaw() {\n    return true;\n  }\n\n  explicit(target) {\n    throw new Error('Cannot set explicit on any.');\n  }\n\n  implicit(target) {\n    throw new Error('Cannot set implicit on any.');\n  }\n\n  get type() {\n    return this.node.type;\n  }\n\n  getSize(extra) {\n    this.node.flags = this.flags;\n    return this.node.getSize(extra);\n  }\n\n  write(bw, extra) {\n    assert(bw);\n    assert(this.mode === NORMAL);\n    this.node.flags = this.flags;\n    this.node.write(bw, extra);\n    return bw;\n  }\n\n  read(br, extra) {\n    assert(br);\n    assert(this.mode === NORMAL);\n\n    const hdr = peekHeader(br, this.opt);\n\n    if (!hdr) {\n      this.node.flags = this.flags;\n      return this;\n    }\n\n    const Node = typeToClass(hdr.type);\n\n    this.node = new Node();\n    this.node.flags = this.flags;\n    this.node.read(br, extra);\n\n    return this;\n  }\n\n  getBodySize(extra) {\n    this.node.flags = this.flags;\n    return this.node.getBodySize(extra);\n  }\n\n  writeBody(bw, extra) {\n    this.node.flags = this.flags;\n    this.node.writeBody(bw, extra);\n    return bw;\n  }\n\n  readBody(br, extra) {\n    this.node.flags = this.flags;\n    this.node.readBody(br, extra);\n    return this;\n  }\n\n  set(node) {\n    if (node == null)\n      node = new Null();\n\n    assert(node instanceof Node);\n\n    this.node = node;\n    this.node.flags = this.flags;\n\n    return this;\n  }\n\n  clean() {\n    return this.node.type === types.NULL;\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      node: this.node\n    };\n  }\n}\n\n/**\n * Choice\n */\n\nclass Choice extends Node {\n  constructor(node, ...options) {\n    super();\n    assert(node instanceof Node);\n    this.node = node;\n    this.from(...options);\n  }\n\n  get type() {\n    return this.node.type;\n  }\n\n  choices() {\n    throw new Error('Unimplemented.');\n  }\n\n  getSize(extra) {\n    return this.node.getSize(extra);\n  }\n\n  write(bw, extra) {\n    assert(bw);\n    this.node.flags = this.flags;\n    this.node.write(bw, extra);\n    return bw;\n  }\n\n  read(br, extra) {\n    assert(br);\n\n    const choices = this.choices();\n\n    assert(Array.isArray(choices));\n    assert(choices.length >= 1);\n\n    const hdr = peekHeader(br, this.opt);\n\n    if (!hdr)\n      return this;\n\n    if (choices.indexOf(hdr.type) === -1)\n      throw new Error(`Could not satisfy choice for: ${hdr.type}.`);\n\n    const Node = typeToClass(hdr.type);\n    const el = new Node();\n    el.flags = this.flags;\n\n    this.node = el.read(br, extra);\n\n    return this;\n  }\n\n  getBodySize(extra) {\n    return this.node.getBodySize(extra);\n  }\n\n  writeBody(bw, extra) {\n    this.node.writeBody(bw, extra);\n    return bw;\n  }\n\n  readBody(br, extra) {\n    this.node.readBody(br, extra);\n    return this;\n  }\n\n  set(...options) {\n    return this.node.set(...options);\n  }\n\n  clean() {\n    return this.node.clean();\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      node: this.node\n    };\n  }\n}\n\n/**\n * String\n */\n\nconst Str = class String extends Node {\n  constructor(...options) {\n    super();\n    this.value = '';\n    this.from(...options);\n  }\n\n  get encoding() {\n    return 'binary';\n  }\n\n  getBodySize() {\n    return Buffer.byteLength(this.value, this.encoding);\n  }\n\n  writeBody(bw) {\n    bw.writeString(this.value, this.encoding);\n    return bw;\n  }\n\n  readBody(br) {\n    const str = br.readString(br.left(), this.encoding);\n\n    switch (this.type) {\n      case types.NUMSTRING: {\n        if (!isNumString(str))\n          throw new Error('Invalid num string.');\n        break;\n      }\n\n      case types.PRINTSTRING: {\n        if (!isPrintString(str))\n          throw new Error('Invalid print string.');\n        break;\n      }\n\n      case types.IA5STRING: {\n        if (!isIA5String(str))\n          throw new Error('Invalid print string.');\n        break;\n      }\n    }\n\n    this.value = str;\n\n    return this;\n  }\n\n  set(value) {\n    if (value == null)\n      value = '';\n\n    assert(typeof value === 'string');\n\n    this.value = value;\n\n    return this;\n  }\n\n  clean() {\n    return this.value.length === 0;\n  }\n\n  format() {\n    return `<${this.constructor.name}: ${this.value}>`;\n  }\n};\n\n/**\n * Boolean\n */\n\nconst Bool = class Boolean extends Node {\n  constructor(...options) {\n    super();\n    this.value = false;\n    this.from(...options);\n  }\n\n  get type() {\n    return types.BOOLEAN;\n  }\n\n  getBodySize() {\n    return 1;\n  }\n\n  writeBody(bw) {\n    bw.writeU8(this.value ? 0xff : 0x00);\n    return bw;\n  }\n\n  readBody(br) {\n    if (br.left() !== 1)\n      throw new Error('Non-minimal boolean.');\n\n    const value = br.readU8();\n\n    if (value !== 0x00 && value !== 0xff)\n      throw new Error('Invalid boolean.');\n\n    this.value = value === 0xff;\n\n    return this;\n  }\n\n  set(value) {\n    if (value == null)\n      value = false;\n\n    assert(typeof value === 'boolean');\n\n    this.value = value;\n\n    return this;\n  }\n\n  clean() {\n    return this.value === false;\n  }\n\n  format() {\n    return `<${this.constructor.name}: ${this.value}>`;\n  }\n};\n\n/**\n * Integer\n */\n\nclass Integer extends Node {\n  constructor(...options) {\n    super();\n    this.value = ZERO;\n    this.negative = false;\n    this.from(...options);\n  }\n\n  get type() {\n    return types.INTEGER;\n  }\n\n  getBodySize() {\n    const b = this.value;\n\n    if (b.length === 0)\n      return 1;\n\n    let pad = 0;\n    let size = 0;\n\n    if (!this.negative && b[0] > 127) {\n      pad = 1;\n    } else if (this.negative) {\n      if (b[0] > 128) {\n        pad = 1;\n      } else if (b[0] === 128) {\n        pad = 0;\n        for (let i = 1; i < b.length; i++)\n          pad |= b[i];\n        pad = pad ? 1 : 0;\n      }\n    }\n\n    size += pad;\n    size += b.length;\n\n    return size;\n  }\n\n  writeBody(bw) {\n    const b = this.value;\n\n    if (b.length === 0) {\n      bw.writeU8(0x00);\n      return bw;\n    }\n\n    let pad = 0;\n    let pb = 0;\n\n    if (!this.negative && b[0] > 127) {\n      pad = 1;\n      pb = 0;\n    } else if (this.negative) {\n      pb = 0xff;\n      if (b[0] > 128) {\n        pad = 1;\n      } else if (b[0] === 128) {\n        pad = 0;\n        for (let i = 1; i < b.length; i++)\n          pad |= b[i];\n        pb = pad !== 0 ? 0xff : 0;\n        pad = pb & 1;\n      }\n    }\n\n    if (pad)\n      bw.writeU8(pb);\n\n    const start = bw.offset;\n\n    bw.writeBytes(b);\n\n    if (pb)\n      twosComplement(bw.data, start, bw.offset);\n\n    return this;\n  }\n\n  readBody(br) {\n    let p = br.readBytes(br.left());\n\n    if (p.length === 0)\n      throw new Error('Zero length integer.');\n\n    const neg = p[0] & 0x80;\n\n    if (p.length === 1) {\n      if (neg)\n        p[0] = (p[0] ^ 0xff) + 1;\n\n      this.negative = neg !== 0;\n      this.value = p;\n\n      return this;\n    }\n\n    if (p[0] === 0x00 && (p[1] & 0x80) === 0)\n      throw new Error('Non-minimal integer.');\n\n    if (p[0] === 0xff && (p[1] & 0x80) === 0x80)\n      throw new Error('Non-minimal integer.');\n\n    let pad = 0;\n\n    if (p[0] === 0x00) {\n      pad = 1;\n    } else if (p[0] === 0xff) {\n      for (let i = 1; i < p.length; i++)\n        pad |= p[i];\n      pad = pad !== 0 ? 1 : 0;\n    }\n\n    if (pad && neg === (p[1] & 0x80))\n      throw new Error('Invalid integer padding.');\n\n    if (pad)\n      p = p.slice(1);\n\n    if (neg)\n      twosComplement(p, 0, p.length);\n\n    this.negative = neg !== 0;\n    this.value = trimLeft(p);\n\n    return this;\n  }\n\n  set(value, negative) {\n    if (typeof value === 'number')\n      return this.fromNumber(value);\n\n    if (value == null)\n      value = ZERO;\n\n    assert(Buffer.isBuffer(value));\n\n    this.value = trimLeft(value);\n    this.negative = false;\n\n    if (negative != null) {\n      assert(typeof negative === 'boolean');\n      this.negative = negative;\n    }\n\n    return this;\n  }\n\n  clean() {\n    return !this.negative && this.value.equals(ZERO);\n  }\n\n  formatValue() {\n    return this.value.toString('hex');\n  }\n\n  toNumber() {\n    let num = bio.readUBE(this.value, 0, this.value.length);\n\n    if (this.negative)\n      num = -num;\n\n    return num;\n  }\n\n  fromNumber(num) {\n    assert(Number.isSafeInteger(num));\n\n    const buf = Buffer.alloc(8);\n\n    let neg = false;\n\n    if (num < 0) {\n      neg = true;\n      num = -num;\n    }\n\n    bio.writeU64BE(buf, num, 0);\n\n    this.value = trimLeft(buf);\n    this.negative = neg;\n\n    return this;\n  }\n\n  format() {\n    const name = this.constructor.name;\n\n    if (this.value.length <= 6)\n      return `<${name}: ${this.toNumber()}>`;\n\n    const sign = this.negative ? '-' : '';\n    const hex = this.value.toString('hex');\n\n    return `<${name}: ${sign}0x${hex}>`;\n  }\n}\n\n/**\n * Unsigned\n */\n\nclass Unsigned extends Integer {\n  constructor(...options) {\n    super(...options);\n  }\n\n  getBodySize() {\n    assert(!this.negative);\n    return super.getBodySize();\n  }\n\n  writeBody(bw) {\n    assert(!this.negative);\n    return super.writeBody(bw);\n  }\n\n  readBody(br) {\n    super.readBody(br);\n    assert(!this.negative);\n    return this;\n  }\n\n  set(value) {\n    return super.set(value);\n  }\n\n  toNumber() {\n    assert(!this.negative);\n    return super.toNumber();\n  }\n\n  fromNumber(num) {\n    super.fromNumber(num);\n    assert(!this.negative);\n    return this;\n  }\n}\n\n/**\n * BitString\n */\n\nclass BitString extends Node {\n  constructor(...options) {\n    super();\n    this.bits = 0;\n    this.value = EMPTY;\n    this.from(...options);\n  }\n\n  get type() {\n    return types.BITSTRING;\n  }\n\n  getBodySize() {\n    return 1 + this.value.length;\n  }\n\n  writeBody(bw) {\n    const prefix = (8 - (this.bits & 7)) & 7;\n    bw.writeU8(prefix);\n    bw.writeBytes(this.value);\n    return bw;\n  }\n\n  readBody(br) {\n    const data = br.readBytes(br.left());\n\n    if (data.length === 0)\n      throw new Error('Zero length bit string.');\n\n    const padding = data[0];\n\n    if (padding > 7\n        || (data.length === 1 && padding > 0)\n        || (data[data.length - 1] & ((1 << padding) - 1)) !== 0) {\n      throw new Error('Invalid padding bits.');\n    }\n\n    this.bits = (data.length - 1) * 8 - padding;\n    this.value = data.slice(1);\n\n    return this;\n  }\n\n  rightAlign() {\n    const data = this.value;\n    const shift = 8 - (this.bits & 7);\n\n    if (shift === 8 || data.length === 0)\n      return data;\n\n    const out = Buffer.alloc(data.length);\n\n    out[0] = data[0] >>> shift;\n\n    for (let i = 1; i < data.length; i++) {\n      out[i] = data[i - 1] << (8 - shift);\n      out[i] |= data[i] >>> shift;\n    }\n\n    return out;\n  }\n\n  getBit(i) {\n    assert((i >>> 0) === i);\n\n    if (i < 0 || i > this.bits)\n      return 0;\n\n    const x = i >>> 3;\n    const y = 7 - (i & 7);\n\n    return (this.value[x] >>> y) & 1;\n  }\n\n  setBit(i, val) {\n    assert((i >>> 0) === i);\n\n    if (i < 0 || i > this.bits)\n      return this;\n\n    const x = i >>> 3;\n    const y = 7 - (i & 7);\n\n    if (val)\n      this.value[x] |= 1 << y;\n    else\n      this.value[x] &= ~(1 << y);\n\n    return this;\n  }\n\n  set(value) {\n    if (value == null)\n      value = EMPTY;\n\n    if (typeof value === 'number') {\n      assert((value >>> 0) === value);\n      this.bits = value;\n      this.value = Buffer.alloc((value + 7) >>> 3);\n    } else {\n      assert(Buffer.isBuffer(value));\n      this.bits = value.length * 8;\n      this.value = value;\n    }\n\n    return this;\n  }\n\n  clean() {\n    return this.bits === 0 && this.value.length === 0;\n  }\n\n  format() {\n    let value = this.rightAlign();\n\n    if (value.length > 32)\n      value = value.slice(0, 32);\n\n    return `<${this.constructor.name}: ${this.bits}:${value.toString('hex')}>`;\n  }\n}\n\n/**\n * OctString\n */\n\nclass OctString extends Node {\n  constructor(...options) {\n    super();\n    this.value = EMPTY;\n    this.from(...options);\n  }\n\n  get type() {\n    return types.OCTSTRING;\n  }\n\n  getBodySize() {\n    return this.value.length;\n  }\n\n  writeBody(bw) {\n    bw.writeBytes(this.value);\n    return bw;\n  }\n\n  readBody(br) {\n    this.value = br.readBytes(br.left());\n    return this;\n  }\n\n  set(value) {\n    if (value == null)\n      value = EMPTY;\n\n    assert(Buffer.isBuffer(value));\n\n    this.value = value;\n\n    return this;\n  }\n\n  clean() {\n    return this.value.length === 0;\n  }\n\n  format() {\n    let value = this.value;\n\n    if (value.length > 32)\n      value = value.slice(0, 32);\n\n    return `<${this.constructor.name}: ${value.toString('hex')}>`;\n  }\n}\n\n/**\n * Null\n */\n\nclass Null extends Node {\n  constructor(...options) {\n    super();\n    this.from(...options);\n  }\n\n  get type() {\n    return types.NULL;\n  }\n\n  getBodySize() {\n    return 0;\n  }\n\n  writeBody(bw) {\n    return bw;\n  }\n\n  readBody(br) {\n    if (br.left() !== 0)\n      throw new Error('Non-minimal NULL.');\n\n    return this;\n  }\n\n  clean() {\n    return true;\n  }\n\n  format() {\n    return `<${this.constructor.name}>`;\n  }\n}\n\n/**\n * OID\n */\n\nclass OID extends Node {\n  constructor(...options) {\n    super();\n    this.value = EMPTY_OID;\n    this.from(...options);\n  }\n\n  get type() {\n    return types.OID;\n  }\n\n  getBodySize() {\n    const oid = this.value;\n\n    if (oid.length < 2 || oid[0] > 2 || (oid[0] < 2 && oid[1] >= 40))\n      throw new Error('Invalid OID.');\n\n    let size = sizeBase128(oid[0] * 40 + oid[1]);\n\n    for (let i = 2; i < oid.length; i++)\n      size += sizeBase128(oid[i]);\n\n    return size;\n  }\n\n  writeBody(bw) {\n    const oid = this.value;\n    const data = bw.data;\n\n    if (oid.length < 2 || oid[0] > 2 || (oid[0] < 2 && oid[1] >= 40))\n      throw new Error('Invalid OID.');\n\n    let off = bw.offset;\n\n    off = writeBase128(data, oid[0] * 40 + oid[1], off);\n\n    for (let i = 2; i < oid.length; i++)\n      off = writeBase128(data, oid[i], off);\n\n    bw.offset = off;\n\n    return bw;\n  }\n\n  readBody(br) {\n    const data = br.readBytes(br.left(), true);\n\n    if (data.length === 0)\n      throw new Error('Zero length OID.');\n\n    const s = new Uint32Array(data.length + 1);\n\n    let [v, off] = readBase128(data, 0);\n\n    if (v < 80) {\n      s[0] = (v / 40) >>> 0;\n      s[1] = v % 40;\n    } else {\n      s[0] = 2;\n      s[1] = v - 80;\n    }\n\n    let i = 2;\n\n    for (; off < data.length; i++) {\n      [v, off] = readBase128(data, off);\n      s[i] = v;\n    }\n\n    this.value = s.subarray(0, i);\n\n    return this;\n  }\n\n  equals(oid) {\n    assert(oid instanceof OID);\n    return isEqual(this.value, oid.value);\n  }\n\n  set(value) {\n    if (value == null)\n      value = EMPTY_OID;\n\n    if (typeof value === 'string')\n      return this.fromString(value);\n\n    if (Array.isArray(value))\n      return this.fromArray(value);\n\n    assert(value instanceof Uint32Array);\n\n    this.value = value;\n\n    return this;\n  }\n\n  clean() {\n    return isEqual(this.value, EMPTY_OID);\n  }\n\n  toArray() {\n    const arr = [];\n\n    for (let i = 0; i < this.value.length; i++)\n      arr.push(this.value[i]);\n\n    return arr;\n  }\n\n  fromArray(arr) {\n    assert(Array.isArray(arr));\n\n    const out = new Uint32Array(arr.length);\n\n    for (let i = 0; i < arr.length; i++) {\n      const val = arr[i];\n      assert((val >>> 0) === val);\n      out[i] = val;\n    }\n\n    this.value = out;\n\n    return this;\n  }\n\n  toString() {\n    let str = '';\n\n    for (let i = 0; i < this.value.length; i++) {\n      if (i > 0)\n        str += '.';\n\n      str += this.value[i].toString(10);\n    }\n\n    return str;\n  }\n\n  fromString(str) {\n    assert(typeof str === 'string');\n\n    if (objects.attrs.hasOwnProperty(str))\n      str = objects.attrs[str];\n    else if (objects.keyAlgs.hasOwnProperty(str))\n      str = objects.keyAlgs[str];\n    else if (objects.hashes.hasOwnProperty(str))\n      str = objects.hashes[str];\n    else if (objects.curves.hasOwnProperty(str))\n      str = objects.curves[str];\n\n    const parts = str.split('.');\n    const out = new Uint32Array(parts.length);\n\n    for (let i = 0; i < parts.length; i++) {\n      const part = parts[i];\n      out[i] = parseU32(part);\n    }\n\n    this.value = out;\n\n    return this;\n  }\n\n  getAttributeName() {\n    return objects.attrsByVal[this.toString()] || null;\n  }\n\n  getSignatureAlgorithmName() {\n    return objects.sigAlgsByVal[this.toString()] || null;\n  }\n\n  getSignatureHash() {\n    return objects.sigToHash[this.toString()] || null;\n  }\n\n  getSignatureHashName() {\n    const oid = this.getSignatureHash();\n\n    if (!oid)\n      return null;\n\n    return objects.hashesByVal[oid] || null;\n  }\n\n  getKeyAlgorithmName() {\n    return objects.keyAlgsByVal[this.toString()] || null;\n  }\n\n  getHashName() {\n    return objects.hashesByVal[this.toString()] || null;\n  }\n\n  getCurveName() {\n    return objects.curvesByVal[this.toString()] || null;\n  }\n\n  format() {\n    const oid = this.toString();\n    const name = objects.attrsByVal[oid]\n              || objects.sigAlgsByVal[oid]\n              || objects.keyAlgsByVal[oid]\n              || objects.hashesByVal[oid]\n              || objects.curvesByVal[oid]\n              || 'UNKNOWN';\n\n    const str = `${oid} (${name})`;\n\n    return `<${this.constructor.name}: ${str}>`;\n  }\n}\n\n/**\n * Enum\n */\n\nclass Enum extends Integer {\n  constructor(...options) {\n    super(...options);\n  }\n\n  get type() {\n    return types.ENUM;\n  }\n}\n\n/**\n * Utf8String\n */\n\nclass Utf8String extends Str {\n  constructor(...options) {\n    super(...options);\n  }\n\n  get type() {\n    return types.UTF8STRING;\n  }\n\n  get encoding() {\n    return 'utf8';\n  }\n}\n\n/**\n * RawSequence\n */\n\nclass RawSequence extends Node {\n  constructor(...options) {\n    super();\n    this.value = EMPTY;\n    this.from(...options);\n  }\n\n  get type() {\n    return types.SEQUENCE;\n  }\n\n  getBodySize() {\n    return this.value.length;\n  }\n\n  writeBody(bw) {\n    bw.writeBytes(this.value);\n    return bw;\n  }\n\n  readBody(br) {\n    this.value = br.readBytes(br.left());\n    return this;\n  }\n\n  set(value) {\n    if (value == null)\n      value = EMPTY;\n\n    if (Array.isArray(value))\n      return this.fromArray(value);\n\n    assert(Buffer.isBuffer(value));\n\n    this.value = value;\n\n    return this;\n  }\n\n  clean() {\n    return this.value.length === 0;\n  }\n\n  *children() {\n    const br = bio.read(this.value);\n\n    while (br.left())\n      yield Any.read(br).node;\n  }\n\n  toArray() {\n    const out = [];\n\n    for (const el of this.children())\n      out.push(el);\n\n    return out;\n  }\n\n  fromArray(value) {\n    assert(Array.isArray(value));\n\n    let size = 0;\n\n    for (const el of value) {\n      assert(el instanceof Node);\n      size += el.getSize();\n    }\n\n    const bw = bio.write(size);\n\n    for (const el of value)\n      el.write(bw);\n\n    this.value = bw.render();\n\n    return this;\n  }\n\n  format() {\n    return this.toArray();\n  }\n}\n\n/**\n * RawSet\n */\n\nclass RawSet extends RawSequence {\n  constructor(...options) {\n    super(...options);\n  }\n\n  get type() {\n    return types.SET;\n  }\n}\n\n/**\n * NumString\n */\n\nclass NumString extends Str {\n  constructor(...options) {\n    super(...options);\n  }\n\n  get type() {\n    return types.NUMSTRING;\n  }\n}\n\n/**\n * PrintString\n */\n\nclass PrintString extends Str {\n  constructor(...options) {\n    super(...options);\n  }\n\n  get type() {\n    return types.PRINTSTRING;\n  }\n}\n\n/**\n * T61String\n */\n\nclass T61String extends Str {\n  constructor(...options) {\n    super(...options);\n  }\n\n  get type() {\n    return types.T61STRING;\n  }\n}\n\n/**\n * IA5String\n */\n\nclass IA5String extends Str {\n  constructor(...options) {\n    super(...options);\n  }\n\n  get type() {\n    return types.IA5STRING;\n  }\n}\n\n/**\n * Time\n */\n\nclass Time extends Node {\n  constructor(...options) {\n    super();\n    this.value = 0;\n    this.offset = 0;\n    this.from(...options);\n  }\n\n  set(value, offset) {\n    if (value == null)\n      value = 0;\n\n    if (offset == null)\n      offset = 0;\n\n    if (typeof value === 'string')\n      return this.fromString(value);\n\n    assert(isTime(value));\n    assert(isOffset(offset));\n\n    this.value = value;\n    this.offset = offset;\n\n    return this;\n  }\n\n  clean() {\n    return this.value === 0 && this.offset === 0;\n  }\n\n  unix() {\n    return this.value - this.offset;\n  }\n\n  toString() {\n    const date = new Date(this.value * 1000);\n    const str = date.toISOString().slice(0, -5);\n    return str + serializeOffset(this.offset);\n  }\n\n  fromString(str) {\n    assert(typeof str === 'string');\n\n    const ms = Date.parse(str);\n\n    if (ms !== ms)\n      throw new Error('Invalid date string.');\n\n    const time = Math.floor(ms / 1000);\n\n    if (!isTime(time))\n      throw new Error('Invalid time.');\n\n    this.value = time;\n    this.offset = 0;\n\n    return this;\n  }\n\n  format() {\n    const name = this.constructor.name;\n    const value = this.value;\n\n    let off = this.offset.toString(10);\n\n    if (this.offset >= 0)\n      off = '+' + off;\n\n    return `<${name}: ${value}${off} (${this.toString()})>`;\n  }\n}\n\n/**\n * UTCTime\n */\n\nclass UTCTime extends Time {\n  constructor(...options) {\n    super(...options);\n  }\n\n  get type() {\n    return types.UTCTIME;\n  }\n\n  getBodySize() {\n    return this.offset === 0 ? 13 : 17;\n  }\n\n  writeBody(bw) {\n    assert(isTime(this.value));\n\n    const date = new Date(this.value * 1000);\n\n    let str = '';\n\n    str += two(date.getUTCFullYear() % 100);\n    str += two(date.getUTCMonth() + 1);\n    str += two(date.getUTCDate());\n    str += two(date.getUTCHours());\n    str += two(date.getUTCMinutes());\n    str += two(date.getUTCSeconds());\n    str += serializeOffset(this.offset);\n\n    bw.writeString(str, 'binary');\n\n    return bw;\n  }\n\n  readBody(br) {\n    const size = br.left();\n\n    if (size !== 13 && size !== 17)\n      throw new Error('Invalid UTCTIME.');\n\n    const str = br.readString(size, 'binary');\n    const year = parseU32(str.substring(0, 2));\n    const mon = parseU32(str.substring(2, 4));\n    const day = parseU32(str.substring(4, 6));\n    const hour = parseU32(str.substring(6, 8));\n    const min = parseU32(str.substring(8, 10));\n    const sec = parseU32(str.substring(10, 12));\n\n    this.value = toSeconds(year, mon, day, hour, min, sec, true);\n    this.offset = parseOffset(str.substring(12));\n\n    return this;\n  }\n}\n\n/**\n * GenTime\n */\n\nclass GenTime extends Time {\n  constructor(...options) {\n    super(...options);\n  }\n\n  get type() {\n    return types.GENTIME;\n  }\n\n  getBodySize() {\n    return this.offset === 0 ? 15 : 19;\n  }\n\n  writeBody(bw) {\n    assert(isTime(this.value));\n\n    const date = new Date(this.value * 1000);\n\n    let str = '';\n    str += date.getUTCFullYear().toString(10);\n    str += two(date.getUTCMonth() + 1);\n    str += two(date.getUTCDate());\n    str += two(date.getUTCHours());\n    str += two(date.getUTCMinutes());\n    str += two(date.getUTCSeconds());\n    str += serializeOffset(this.offset);\n\n    bw.writeString(str, 'binary');\n\n    return bw;\n  }\n\n  readBody(br) {\n    const size = br.left();\n\n    if (size !== 15 && size !== 19)\n      throw new Error('Invalid GENTIME.');\n\n    const str = br.readString(size, 'binary');\n    const year = parseU32(str.substring(0, 4));\n    const mon = parseU32(str.substring(4, 6));\n    const day = parseU32(str.substring(6, 8));\n    const hour = parseU32(str.substring(8, 10));\n    const min = parseU32(str.substring(10, 12));\n    const sec = parseU32(str.substring(12, 14));\n\n    this.value = toSeconds(year, mon, day, hour, min, sec, false);\n    this.offset = parseOffset(str.substring(14));\n\n    return this;\n  }\n}\n\n/**\n * GenString\n */\n\nclass GenString extends Str {\n  constructor(...options) {\n    super(...options);\n  }\n\n  get type() {\n    return types.GENSTRING;\n  }\n}\n\n/**\n * API\n */\n\nfunction typeToClass(type) {\n  assert((type >>> 0) === type);\n\n  switch (type) {\n    case types.BOOLEAN:\n      return Bool;\n    case types.INTEGER:\n      return Integer;\n    case types.BITSTRING:\n      return BitString;\n    case types.OCTSTRING:\n      return OctString;\n    case types.NULL:\n      return Null;\n    case types.OID:\n      return OID;\n    case types.ENUM:\n      return Enum;\n    case types.UTF8STRING:\n      return Utf8String;\n    case types.SEQUENCE:\n      return RawSequence;\n    case types.SET:\n      return RawSet;\n    case types.NUMSTRING:\n      return NumString;\n    case types.PRINTSTRING:\n      return PrintString;\n    case types.T61STRING:\n      return T61String;\n    case types.IA5STRING:\n      return IA5String;\n    case types.UTCTIME:\n      return UTCTime;\n    case types.GENTIME:\n      return GenTime;\n    case types.GENSTRING:\n      return GenString;\n    default:\n      throw new Error(`Unknown type: ${type}.`);\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction sizeHeader(size) {\n  assert((size >>> 0) === size);\n\n  if (size <= 0x7f)\n    return 1 + 1;\n\n  if (size <= 0xff)\n    return 1 + 1 + 1;\n\n  if (size <= 0xffff)\n    return 1 + 1 + 2;\n\n  assert(size <= 0xffffff);\n\n  return 1 + 1 + 3;\n}\n\nfunction writeHeader(bw, type, cls, primitive, size) {\n  assert(bw);\n  assert((type >>> 0) === type);\n  assert((cls >>> 0) === cls);\n  assert(typeof primitive === 'boolean');\n  assert((size >>> 0) === size);\n\n  if (!primitive)\n    type |= 0x20;\n\n  type |= cls << 6;\n\n  // Short form.\n  if (size <= 0x7f) {\n    bw.writeU8(type);\n    bw.writeU8(size);\n\n    return bw;\n  }\n\n  // Long form (1 byte).\n  if (size <= 0xff) {\n    bw.writeU8(type);\n    bw.writeU8(0x80 | 1);\n    bw.writeU8(size);\n\n    return bw;\n  }\n\n  // Long form (2 bytes).\n  if (size <= 0xffff) {\n    bw.writeU8(type);\n    bw.writeU8(0x80 | 2);\n    bw.writeU16BE(size);\n\n    return bw;\n  }\n\n  assert(size <= 0xffffff);\n\n  // Long form (3 bytes).\n  bw.writeU8(type);\n  bw.writeU8(0x80 | 3);\n  bw.writeU24BE(size);\n\n  return bw;\n}\n\nfunction readHeader(br) {\n  const start = br.offset;\n  const field = br.readU8();\n  const cls = field >>> 6;\n  const primitive = (field & 0x20) === 0;\n\n  let type = field & 0x1f;\n\n  if (type === 0x1f) {\n    [type, br.offset] = readBase128(br.data, br.offset);\n\n    if (type < 0x1f)\n      throw new Error('Non-minimal type.');\n  }\n\n  switch (cls) {\n    case classes.UNIVERSAL:\n    case classes.CONTEXT:\n      break;\n    default:\n      throw new Error('Unknown class.');\n  }\n\n  const size = readSize(br);\n  const len = br.offset - start;\n\n  return {\n    type,\n    cls,\n    primitive,\n    size,\n    len\n  };\n}\n\nfunction peekHeader(br, optional) {\n  const offset = br.offset;\n\n  let hdr = null;\n  let err = null;\n\n  try {\n    hdr = readHeader(br);\n  } catch (e) {\n    err = e;\n  }\n\n  br.offset = offset;\n\n  if (!optional && !hdr)\n    throw err;\n\n  return hdr;\n}\n\nfunction readSize(br) {\n  const field = br.readU8();\n  const bytes = field & 0x7f;\n\n  // Definite form\n  if ((field & 0x80) === 0) {\n    // Short form\n    return bytes;\n  }\n\n  // Indefinite form.\n  if (bytes === 0)\n    throw new Error('Indefinite length.');\n\n  let len = 0;\n\n  for (let i = 0; i < bytes; i++) {\n    const ch = br.readU8();\n\n    if (len >= (1 << 24))\n      throw new Error('Length too large.');\n\n    len *= 0x100;\n    len += ch;\n\n    if (len === 0)\n      throw new Error('Unexpected leading zeroes.');\n  }\n\n  if (len < 0x80)\n    throw new Error('Non-minimal length.');\n\n  return len;\n}\n\nfunction sizeBase128(n) {\n  assert((n >>> 0) === n);\n\n  if (n === 0)\n    return 1;\n\n  let len = 0;\n\n  while (n > 0) {\n    len += 1;\n    n >>>= 7;\n  }\n\n  return len;\n}\n\nfunction writeBase128(data, n, off) {\n  assert(Buffer.isBuffer(data));\n  assert((n >>> 0) === n);\n  assert((off >>> 0) === off);\n\n  const l = sizeBase128(n);\n\n  for (let i = l - 1; i >= 0; i--) {\n    let o = n >>> (i * 7);\n\n    o &= 0x7f;\n\n    if (i !== 0)\n      o |= 0x80;\n\n    if (off >= data.length)\n      throw new bio.EncodingError(off, 'Out of bounds write');\n\n    data[off] = o;\n    off += 1;\n  }\n\n  return off;\n}\n\nfunction readBase128(data, off) {\n  assert(Buffer.isBuffer(data));\n  assert((off >>> 0) === off);\n\n  let shifted = 0;\n  let num = 0;\n\n  for (; off < data.length; shifted++) {\n    if (shifted === 5)\n      throw new Error('Base128 integer too large.');\n\n    const b = data[off];\n\n    num *= 128;\n    num += b & 0x7f;\n\n    off += 1;\n\n    if ((b & 0x80) === 0) {\n      if (num > 0xffffffff)\n        throw new Error('Base128 integer too large.');\n\n      return [num, off];\n    }\n  }\n\n  throw new Error('Base128 integer too short.');\n}\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num.toString(10);\n  return num.toString(10);\n}\n\nfunction isNumString(str) {\n  assert(typeof str === 'string');\n\n  for (let i = 0; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch >= 0x30 && ch <= 0x39)\n      continue;\n\n    if (ch === 0x20)\n      continue;\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction isPrintString(str) {\n  assert(typeof str === 'string');\n\n  for (let i = 0; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    // 0 - 9\n    if (ch >= 0x30 && ch <= 0x39)\n      continue;\n\n    // A - Z\n    if (ch >= 0x41 && ch <= 0x5a)\n      continue;\n\n    // a - z\n    if (ch >= 0x61 && ch <= 0x7a)\n      continue;\n\n    switch (ch) {\n      case 0x20: // ' '\n      case 0x26: // & - nonstandard\n      case 0x27: // '\n      case 0x28: // (\n      case 0x29: // )\n      case 0x2a: // * - nonstandard\n      case 0x2b: // +\n      case 0x2c: // ,\n      case 0x2d: // -\n      case 0x2e: // .\n      case 0x2f: // /\n      case 0x3a: // :\n      case 0x3d: // =\n      case 0x3f: // ?\n        continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction isIA5String(str) {\n  assert(typeof str === 'string');\n\n  for (let i = 0; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch >= 0x80)\n      return false;\n  }\n\n  return true;\n}\n\nfunction parseU32(str) {\n  assert(typeof str === 'string');\n\n  let word = 0;\n\n  if (str.length === 0 || str.length > 10)\n    throw new Error('Invalid integer.');\n\n  for (let i = 0; i < str.length; i++) {\n    const ch = str.charCodeAt(i) - 0x30;\n\n    if (ch < 0 || ch > 9)\n      throw new Error('Invalid integer.');\n\n    word *= 10;\n    word += ch;\n\n    if (word > 0xffffffff)\n      throw new Error('Invalid integer.');\n  }\n\n  return word;\n}\n\nfunction isEqual(a, b) {\n  assert(a instanceof Uint32Array);\n  assert(b instanceof Uint32Array);\n\n  if (a.length !== b.length)\n    return false;\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i])\n      return false;\n  }\n\n  return true;\n}\n\nfunction trimLeft(buf) {\n  assert(Buffer.isBuffer(buf));\n\n  if (buf.length === 0)\n    return Buffer.from([0x00]);\n\n  if (buf[0] !== 0x00)\n    return buf;\n\n  for (let i = 1; i < buf.length; i++) {\n    if (buf[i] !== 0x00)\n      return buf.slice(i);\n  }\n\n  return buf.slice(-1);\n}\n\nfunction twosComplement(num, start, end) {\n  assert(Buffer.isBuffer(num));\n  assert((start >>> 0) === start);\n  assert((end >>> 0) === end);\n  assert(start <= end);\n\n  let carry = 1;\n\n  for (let i = end - 1; i >= start; i--) {\n    carry += num[i] ^ 0xff;\n    num[i] = carry & 0xff;\n    carry >>>= 8;\n  }\n\n  return num;\n}\n\nfunction isTime(time) {\n  if (!Number.isSafeInteger(time))\n    return false;\n\n  // ASN.1 time ranges from;\n  //   0000-01-01T00:00:00.000Z\n  // to:\n  //   9999-12-31T00:59:59.000Z\n  if (time < MIN_TIME || time > MAX_TIME)\n    return false;\n\n  return true;\n}\n\nfunction toSeconds(year, mon, day, hour, min, sec, utc) {\n  assert((year >>> 0) === year);\n  assert((mon >>> 0) === mon);\n  assert((day >>> 0) === day);\n  assert((hour >>> 0) === hour);\n  assert((min >>> 0) === min);\n  assert((sec >>> 0) === sec);\n  assert(typeof utc === 'boolean');\n\n  if (utc) {\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  }\n\n  // Highest valid date:\n  //   new Date(8640000000000000)\n  if (year > 275760)\n    throw new Error('Invalid year.');\n\n  if (mon < 1 || mon > 12 || day < 1 || day > 32)\n    throw new Error('Invalid month or day.');\n\n  if (hour > 23 || min > 59 || sec > 59)\n    throw new Error('Invalid hours, minutes, or seconds.');\n\n  const ms = Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n\n  assert(ms === ms);\n\n  const time = ms / 1000;\n\n  assert(isTime(time));\n\n  return time;\n}\n\nfunction isOffset(offset) {\n  if (!Number.isSafeInteger(offset))\n    return false;\n\n  // UTC timezones range from -12:00 to +14:00.\n  if (offset < MIN_OFFSET || offset > MAX_OFFSET)\n    return false;\n\n  return true;\n}\n\nfunction serializeOffset(offset) {\n  assert(isOffset(offset));\n\n  if (offset === 0)\n    return 'Z';\n\n  let str = '';\n\n  if (offset < 0) {\n    str += '-';\n    offset = -offset;\n  } else {\n    str += '+';\n  }\n\n  const minutes = (offset / 60) >>> 0;\n  const hour = (minutes / 60) >>> 0;\n  const min = minutes % 60;\n\n  str += two(hour);\n  str += two(min);\n\n  return str;\n}\n\nfunction parseOffset(str) {\n  assert(typeof str === 'string');\n\n  if (str.length === 0)\n    throw new Error('Invalid time offset.');\n\n  const zone = str[0];\n\n  switch (zone) {\n    case 'Z': {\n      if (str.length !== 1)\n        throw new Error('Non-minimal time offset.');\n\n      return 0;\n    }\n    case '+':\n    case '-': {\n      if (str.length !== 5)\n        throw new Error('Non-minimal time offset.');\n\n      const hour = parseU32(str.substring(1, 3));\n      const min = parseU32(str.substring(3, 5));\n      const minutes = hour * 60 + min;\n\n      let offset = minutes * 60;\n\n      if (zone === '-')\n        offset = -offset;\n\n      if (!isOffset(offset))\n        throw new Error('Not a time zone.');\n\n      return offset;\n    }\n  }\n\n  throw new Error('Invalid time offset.');\n}\n\n/*\n * Expose\n */\n\nexports.EMPTY = EMPTY;\nexports.ZERO = ZERO;\nexports.EMPTY_OID = EMPTY_OID;\n\nexports.types = types;\nexports.typesByVal = typesByVal;\nexports.classes = classes;\nexports.classesByVal = classesByVal;\nexports.objects = objects;\n\nexports.TARGET = TARGET;\nexports.OPTIONAL = OPTIONAL;\nexports.MODE = MODE;\nexports.NORMAL = NORMAL;\nexports.EXPLICIT = EXPLICIT;\nexports.IMPLICIT = IMPLICIT;\n\nexports.Node = Node;\nexports.Sequence = Sequence;\nexports.Set = Set;\nexports.Any = Any;\nexports.Choice = Choice;\nexports.Str = Str;\nexports.String = Str;\nexports.Bool = Bool;\nexports.Boolean = Bool;\nexports.Integer = Integer;\nexports.Unsigned = Unsigned;\nexports.BitString = BitString;\nexports.OctString = OctString;\nexports.Null = Null;\nexports.OID = OID;\nexports.Enum = Enum;\nexports.Utf8String = Utf8String;\nexports.RawSequence = RawSequence;\nexports.RawSet = RawSet;\nexports.NumString = NumString;\nexports.PrintString = PrintString;\nexports.T61String = T61String;\nexports.IA5String = IA5String;\nexports.Time = Time;\nexports.UTCTime = UTCTime;\nexports.GenTime = GenTime;\nexports.GenString = GenString;\n\nexports.typeToClass = typeToClass;\n",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            var block;\n\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","import { WizDataList } from \"../model\";\nimport { Opcode } from \"../opcodes/model/Opcode\";\nimport { BigInteger } from \"big-integer\";\nimport bigInt from \"big-integer\";\nimport WizData from \"@script-wiz/wiz-data\";\nimport BN from \"bn.js\";\nimport { convert64 } from \"../core/conversion\";\n\nexport const flipbits = (str: string): string => {\n  return str\n    .split(\"\")\n    .map((b: any) => (1 - b).toString())\n    .join(\"\");\n};\n\nexport const opHexToWord = (hex: string, opWordCodes: Opcode[]): string => {\n  const word = opWordCodes.find((owc) => owc.hex === hex)?.word;\n  return word || \"\";\n};\n\nexport const opcodeToWord = (opcode: number, opWordCodes: Opcode[]): string => {\n  return opWordCodes.find((owc) => owc.opcode === opcode)?.word || \"\";\n};\n\nexport const opWordToHex = (word: string, opWordCodes: Opcode[]): string => {\n  const hex = opWordCodes.find((owc) => owc.word === word)?.hex.substr(2);\n  return hex || \"\";\n};\n\nexport const toHexString = (byteArray: Uint8Array) => {\n  return Array.from(byteArray, function (byte) {\n    return (\"0\" + (byte & 0xff).toString(16)).slice(-2);\n  }).join(\"\");\n};\n\nexport const log2 = (a: BigInteger) => {\n  const s = a.toString(16);\n  const c = s.charCodeAt(0) - \"0\".charCodeAt(0);\n  if (c <= 0) {\n    throw new RangeError();\n  }\n  return (s.length - 1) * 4 + (31 - Math.clz32(Math.min(c, 8)));\n};\n\n// y^2 = x^3 + 7\nexport const formattedPubkey = (pubkey: string): WizData => {\n  if (pubkey.length !== 64) throw \"Pubkey length must be equal 32 byte\";\n\n  const pubkeyBigInt: BigInteger = bigInt(pubkey, 16);\n\n  const pubkeyPow = pubkeyBigInt.pow(3);\n\n  const addedPubkey = pubkeyPow.add(bigInt(7));\n\n  const log2Result = log2(addedPubkey);\n\n  if (log2Result % 2 === 0) {\n    return WizData.fromHex(\"02\" + pubkey);\n  }\n\n  return WizData.fromHex(\"03\" + pubkey);\n};\n\n// supports all opcodes\nexport const currentScope = (wizDataList: WizDataList): boolean => wizDataList.flow[wizDataList.flow.length - 1];\nexport const EMOJI_REGEX = /([\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2694-\\u2697]|\\uD83E[\\uDD10-\\uDD5D])/g;\n\nexport const ZERO_64 = new BN(convert64(WizData.fromHex(\"00\")).bin, 2);\nexport const MAX_INTEGER_64 = new BN(\"1111111111111111111111111111111111111111111111111111111101111111\", 2);\nexport const MIN_INTEGER_64 = new BN(\"0000000000000000000000000000000000000000000000000000000010000000\", 2);\nexport const NEGATIVE_1_64 = new BN(\"0000000000000000000000000000000000000000000000000000000010000001\", 2);\n","/*!\n * keccak.js - keccak for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/keccak');\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));","/*!\n * enforce.js - type enforcement for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/*\n * Enforce\n */\n\nfunction enforce(value, name, type) {\n  if (!value) {\n    const err = new TypeError(`'${name}' must be a(n) ${type}.`);\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(err, enforce);\n\n    throw err;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = enforce;\n","/*!\n * ecdsa.js - ECDSA for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/elliptic:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/elliptic\n *\n * References:\n *\n *   [SEC1] SEC 1: Elliptic Curve Cryptography, Version 2.0\n *     Certicom Research\n *     http://www.secg.org/sec1-v2.pdf\n *\n *   [FIPS186] Suite B Implementer's Guide to FIPS 186-3 (ECDSA)\n *     https://tinyurl.com/fips186-guide\n *\n *   [GECC] Guide to Elliptic Curve Cryptography\n *     D. Hankerson, A. Menezes, and S. Vanstone\n *     https://tinyurl.com/guide-to-ecc\n *\n *   [RFC6979] Deterministic Usage of the Digital Signature\n *             Algorithm (DSA) and Elliptic Curve Digital\n *             Signature Algorithm (ECDSA)\n *     T. Pornin\n *     https://tools.ietf.org/html/rfc6979\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst BN = require('../bn');\nconst rng = require('../random');\nconst asn1 = require('../internal/asn1');\nconst Schnorr = require('./schnorr-legacy');\nconst HmacDRBG = require('../hmac-drbg');\nconst elliptic = require('./elliptic');\n\n/**\n * ECDSA\n */\n\nclass ECDSA {\n  constructor(name, hash, xof, pre) {\n    assert(typeof name === 'string');\n    assert(hash);\n    assert(xof);\n\n    this.id = name;\n    this.type = 'ecdsa';\n    this.hash = hash;\n    this.xof = xof;\n    this.native = 0;\n\n    this._pre = pre || null;\n    this._curve = null;\n    this._schnorr = null;\n  }\n\n  get curve() {\n    if (!this._curve) {\n      this._curve = elliptic.curve(this.id, this._pre);\n      this._curve.precompute(rng);\n      this._pre = null;\n    }\n    return this._curve;\n  }\n\n  get schnorr() {\n    if (!this._schnorr)\n      this._schnorr = new Schnorr(this.curve, this.xof);\n    return this._schnorr;\n  }\n\n  get size() {\n    return this.curve.fieldSize;\n  }\n\n  get bits() {\n    return this.curve.fieldBits;\n  }\n\n  privateKeyGenerate() {\n    const a = this.curve.randomScalar(rng);\n    return this.curve.encodeScalar(a);\n  }\n\n  privateKeyVerify(key) {\n    assert(Buffer.isBuffer(key));\n\n    let a;\n    try {\n      a = this.curve.decodeScalar(key);\n    } catch (e) {\n      return false;\n    }\n\n    return !a.isZero() && a.cmp(this.curve.n) < 0;\n  }\n\n  privateKeyExport(key) {\n    const pub = this.publicKeyCreate(key, false);\n    const {x, y} = this.publicKeyExport(pub);\n\n    return {\n      d: Buffer.from(key),\n      x,\n      y\n    };\n  }\n\n  privateKeyImport(json) {\n    assert(json && typeof json === 'object');\n\n    const a = BN.decode(json.d, this.curve.endian);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    return this.curve.encodeScalar(a);\n  }\n\n  privateKeyTweakAdd(key, tweak) {\n    const t = this.curve.decodeScalar(tweak);\n\n    if (t.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid scalar.');\n\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const k = a.add(t).imod(this.curve.n);\n\n    if (k.isZero())\n      throw new Error('Invalid private key.');\n\n    return this.curve.encodeScalar(k);\n  }\n\n  privateKeyTweakMul(key, tweak) {\n    const t = this.curve.decodeScalar(tweak);\n\n    if (t.isZero() || t.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid scalar.');\n\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const k = a.mul(t).imod(this.curve.n);\n\n    if (k.isZero())\n      throw new Error('Invalid private key.');\n\n    return this.curve.encodeScalar(k);\n  }\n\n  privateKeyNegate(key) {\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const k = a.neg().imod(this.curve.n);\n\n    return this.curve.encodeScalar(k);\n  }\n\n  privateKeyInvert(key) {\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const k = a.invert(this.curve.n);\n\n    return this.curve.encodeScalar(k);\n  }\n\n  publicKeyCreate(key, compress) {\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const A = this.curve.g.mulBlind(a);\n\n    return A.encode(compress);\n  }\n\n  publicKeyConvert(key, compress) {\n    const A = this.curve.decodePoint(key);\n    return A.encode(compress);\n  }\n\n  publicKeyFromUniform(bytes, compress) {\n    const u = this.curve.decodeUniform(bytes);\n    const A = this.curve.pointFromUniform(u);\n\n    return A.encode(compress);\n  }\n\n  publicKeyToUniform(key, hint = rng.randomInt()) {\n    const A = this.curve.decodePoint(key);\n    const u = this.curve.pointToUniform(A, hint);\n\n    return this.curve.encodeUniform(u, hint >>> 8);\n  }\n\n  publicKeyFromHash(bytes, compress) {\n    const A = this.curve.pointFromHash(bytes);\n    return A.encode(compress);\n  }\n\n  publicKeyToHash(key) {\n    const A = this.curve.decodePoint(key);\n    return this.curve.pointToHash(A, 0, rng);\n  }\n\n  publicKeyVerify(key) {\n    assert(Buffer.isBuffer(key));\n\n    try {\n      this.curve.decodePoint(key);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  publicKeyExport(key) {\n    const {x, y} = this.curve.decodePoint(key);\n\n    return {\n      x: this.curve.encodeField(x.fromRed()),\n      y: this.curve.encodeField(y.fromRed())\n    };\n  }\n\n  publicKeyImport(json, compress) {\n    assert(json && typeof json === 'object');\n\n    const x = BN.decode(json.x, this.curve.endian);\n\n    if (x.cmp(this.curve.p) >= 0)\n      throw new Error('Invalid point.');\n\n    if (json.y != null) {\n      const y = BN.decode(json.y, this.curve.endian);\n\n      if (y.cmp(this.curve.p) >= 0)\n        throw new Error('Invalid point.');\n\n      const A = this.curve.point(x, y);\n\n      if (!A.validate())\n        throw new Error('Invalid point.');\n\n      return A.encode(compress);\n    }\n\n    const A = this.curve.pointFromX(x, json.sign);\n\n    return A.encode(compress);\n  }\n\n  publicKeyTweakAdd(key, tweak, compress) {\n    const t = this.curve.decodeScalar(tweak);\n\n    if (t.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid scalar.');\n\n    const A = this.curve.decodePoint(key);\n    const T = this.curve.g.jmul(t);\n    const P = T.add(A);\n\n    return P.encode(compress);\n  }\n\n  publicKeyTweakMul(key, tweak, compress) {\n    const t = this.curve.decodeScalar(tweak);\n\n    if (t.isZero() || t.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid scalar.');\n\n    const A = this.curve.decodePoint(key);\n    const P = A.mul(t);\n\n    return P.encode(compress);\n  }\n\n  publicKeyCombine(keys, compress) {\n    assert(Array.isArray(keys));\n\n    let P = this.curve.jpoint();\n\n    for (const key of keys) {\n      const A = this.curve.decodePoint(key);\n\n      P = P.add(A);\n    }\n\n    return P.encode(compress);\n  }\n\n  publicKeyNegate(key, compress) {\n    const A = this.curve.decodePoint(key);\n    const P = A.neg();\n\n    return P.encode(compress);\n  }\n\n  signatureNormalize(sig) {\n    const [r, s] = this._decodeCompact(sig);\n\n    if (s.cmp(this.curve.nh) > 0)\n      s.ineg().imod(this.curve.n);\n\n    return this._encodeCompact(r, s);\n  }\n\n  signatureNormalizeDER(sig) {\n    const [r, s] = this._decodeDER(sig, false);\n\n    if (s.cmp(this.curve.nh) > 0)\n      s.ineg().imod(this.curve.n);\n\n    return this._encodeDER(r, s);\n  }\n\n  signatureExport(sig) {\n    const [r, s] = this._decodeCompact(sig);\n    return this._encodeDER(r, s);\n  }\n\n  signatureImport(sig) {\n    const [r, s] = this._decodeDER(sig, false);\n    return this._encodeCompact(r, s);\n  }\n\n  isLowS(sig) {\n    assert(Buffer.isBuffer(sig));\n\n    let s;\n    try {\n      [, s] = this._decodeCompact(sig);\n    } catch (e) {\n      return false;\n    }\n\n    return s.cmp(this.curve.nh) <= 0;\n  }\n\n  isLowDER(sig) {\n    assert(Buffer.isBuffer(sig));\n\n    let s;\n    try {\n      [, s] = this._decodeDER(sig, false);\n    } catch (e) {\n      return false;\n    }\n\n    return s.cmp(this.curve.nh) <= 0;\n  }\n\n  sign(msg, key) {\n    const [r, s] = this._sign(msg, key);\n    return this._encodeCompact(r, s);\n  }\n\n  signRecoverable(msg, key) {\n    const [r, s, param] = this._sign(msg, key);\n    return [this._encodeCompact(r, s), param];\n  }\n\n  signDER(msg, key) {\n    const [r, s] = this._sign(msg, key);\n    return this._encodeDER(r, s);\n  }\n\n  signRecoverableDER(msg, key) {\n    const [r, s, param] = this._sign(msg, key);\n    return [this._encodeDER(r, s), param];\n  }\n\n  _sign(msg, key) {\n    // ECDSA Signing.\n    //\n    // [SEC1] Page 44, Section 4.1.3.\n    // [GECC] Algorithm 4.29, Page 184, Section 4.4.1.\n    // [RFC6979] Page 9, Section 2.4.\n    // [RFC6979] Page 10, Section 3.2.\n    //\n    // Assumptions:\n    //\n    //   - Let `m` be an integer reduced from bytes.\n    //   - Let `a` be a secret non-zero scalar.\n    //   - Let `k` be a random non-zero scalar.\n    //   - R != O, r != 0, s != 0.\n    //\n    // Computation:\n    //\n    //   k = random integer in [1,n-1]\n    //   R = G * k\n    //   r = x(R) mod n\n    //   s = (r * a + m) / k mod n\n    //   s = -s mod n, if s > n / 2\n    //   S = (r, s)\n    //\n    // We can blind the scalar arithmetic\n    // with a random integer `b` like so:\n    //\n    //   b = random integer in [1,n-1]\n    //   s = (r * (a * b) + m * b) / (k * b) mod n\n    //\n    // Note that `k` must remain secret,\n    // otherwise an attacker can compute:\n    //\n    //   a = (s * k - m) / r mod n\n    //\n    // This means that if two signatures\n    // share the same `r` value, an attacker\n    // can compute:\n    //\n    //   k = (m1 - m2) / (+-s1 - +-s2) mod n\n    //   a = (s1 * k - m1) / r mod n\n    //\n    // Assuming:\n    //\n    //   s1 = (r * a + m1) / k mod n\n    //   s2 = (r * a + m2) / k mod n\n    //\n    // To mitigate this, `k` can be generated\n    // deterministically using the HMAC-DRBG\n    // construction described in [RFC6979].\n    const {n, nh} = this.curve;\n    const G = this.curve.g;\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const m = this._reduce(msg);\n    const nonce = this.curve.encodeScalar(m);\n    const drbg = new HmacDRBG(this.hash, key, nonce);\n\n    for (;;) {\n      const bytes = drbg.generate(this.curve.scalarSize);\n      const k = this._truncate(bytes);\n\n      if (k.isZero() || k.cmp(n) >= 0)\n        continue;\n\n      const R = G.mulBlind(k);\n\n      if (R.isInfinity())\n        continue;\n\n      const x = R.getX();\n      const r = x.mod(n);\n\n      if (r.isZero())\n        continue;\n\n      const b = this.curve.randomScalar(rng);\n      const ki = k.mul(b).fermat(n);\n      const ba = a.mul(b).imod(n);\n      const bm = m.mul(b).imod(n);\n      const sk = r.mul(ba).iadd(bm).imod(n);\n      const s = sk.mul(ki).imod(n);\n\n      if (s.isZero())\n        continue;\n\n      let param = R.isOdd() | (!x.eq(r) << 1);\n\n      if (s.cmp(nh) > 0) {\n        s.ineg().imod(n);\n        param ^= 1;\n      }\n\n      return [r, s, param];\n    }\n  }\n\n  verify(msg, sig, key) {\n    assert(Buffer.isBuffer(msg));\n    assert(Buffer.isBuffer(sig));\n    assert(Buffer.isBuffer(key));\n\n    let r, s;\n    try {\n      [r, s] = this._decodeCompact(sig);\n    } catch (e) {\n      return false;\n    }\n\n    try {\n      return this._verify(msg, r, s, key);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  verifyDER(msg, sig, key) {\n    assert(Buffer.isBuffer(msg));\n    assert(Buffer.isBuffer(sig));\n    assert(Buffer.isBuffer(key));\n\n    let r, s;\n    try {\n      [r, s] = this._decodeDER(sig, false);\n    } catch (e) {\n      return false;\n    }\n\n    try {\n      return this._verify(msg, r, s, key);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  _verify(msg, r, s, key) {\n    // ECDSA Verification.\n    //\n    // [SEC1] Page 46, Section 4.1.4.\n    // [GECC] Algorithm 4.30, Page 184, Section 4.4.1.\n    //\n    // Assumptions:\n    //\n    //   - Let `m` be an integer reduced from bytes.\n    //   - Let `r` and `s` be signature elements.\n    //   - Let `A` be a valid group element.\n    //   - r != 0, r < n.\n    //   - s != 0, s < n.\n    //   - R != O.\n    //\n    // Computation:\n    //\n    //   u1 = m / s mod n\n    //   u2 = r / s mod n\n    //   R = G * u1 + A * u2\n    //   r == x(R) mod n\n    //\n    // Note that the signer can verify their\n    // own signatures more efficiently with:\n    //\n    //   R = G * ((u1 + u2 * a) mod n)\n    //\n    // Furthermore, we can avoid affinization\n    // of `R` by scaling `r` by `z^2` and\n    // repeatedly adding `n * z^2` to it up\n    // to a certain threshold.\n    const {n} = this.curve;\n    const G = this.curve.g;\n    const m = this._reduce(msg);\n    const A = this.curve.decodePoint(key);\n\n    if (r.isZero() || r.cmp(n) >= 0)\n      return false;\n\n    if (s.isZero() || s.cmp(n) >= 0)\n      return false;\n\n    const si = s.invert(n);\n    const u1 = m.mul(si).imod(n);\n    const u2 = r.mul(si).imod(n);\n    const R = G.jmulAdd(u1, A, u2);\n\n    return R.eqR(r);\n  }\n\n  recover(msg, sig, param, compress) {\n    assert(Buffer.isBuffer(msg));\n    assert(Buffer.isBuffer(sig));\n    assert((param >>> 0) === param);\n    assert((param & 3) === param, 'The recovery param is more than two bits.');\n\n    let r, s;\n    try {\n      [r, s] = this._decodeCompact(sig);\n    } catch (e) {\n      return null;\n    }\n\n    let A;\n    try {\n      A = this._recover(msg, r, s, param);\n    } catch (e) {\n      return null;\n    }\n\n    return A.encode(compress);\n  }\n\n  recoverDER(msg, sig, param, compress) {\n    assert(Buffer.isBuffer(msg));\n    assert(Buffer.isBuffer(sig));\n    assert((param >>> 0) === param);\n    assert((param & 3) === param, 'The recovery param is more than two bits.');\n\n    let r, s;\n    try {\n      [r, s] = this._decodeDER(sig, false);\n    } catch (e) {\n      return null;\n    }\n\n    let A;\n    try {\n      A = this._recover(msg, r, s, param);\n    } catch (e) {\n      return null;\n    }\n\n    return A.encode(compress);\n  }\n\n  _recover(msg, r, s, param) {\n    // ECDSA Public Key Recovery.\n    //\n    // [SEC1] Page 47, Section 4.1.6.\n    //\n    // Assumptions:\n    //\n    //   - Let `m` be an integer reduced from bytes.\n    //   - Let `r` and `s` be signature elements.\n    //   - Let `i` be an integer in [0,3].\n    //   - x^3 + a * x + b is square in F(p).\n    //   - If i > 1 then r < (p mod n).\n    //   - r != 0, r < n.\n    //   - s != 0, s < n.\n    //   - A != O.\n    //\n    // Computation:\n    //\n    //   x = r + n, if i > 1\n    //     = r, otherwise\n    //   R' = (x, sqrt(x^3 + a * x + b))\n    //   R = -R', if i mod 2 == 1\n    //     = +R', otherwise\n    //   s1 = m / r mod n\n    //   s2 = s / r mod n\n    //   A = R * s2 - G * s1\n    //\n    // Note that this implementation will have\n    // trouble on curves where `p / n > 1`.\n    const {n, pmodn} = this.curve;\n    const G = this.curve.g;\n    const m = this._reduce(msg);\n\n    if (r.isZero() || r.cmp(n) >= 0)\n      throw new Error('Invalid R value.');\n\n    if (s.isZero() || s.cmp(n) >= 0)\n      throw new Error('Invalid S value.');\n\n    const sign = (param & 1) !== 0;\n    const high = param >>> 1;\n\n    let x = r;\n\n    if (high) {\n      if (this.curve.highOrder)\n        throw new Error('Invalid high bit.');\n\n      if (x.cmp(pmodn) >= 0)\n        throw new Error('Invalid R value.');\n\n      x = x.add(n);\n    }\n\n    const R = this.curve.pointFromX(x, sign);\n    const ri = r.invert(n);\n    const s1 = m.mul(ri).ineg().imod(n);\n    const s2 = s.mul(ri).imod(n);\n    const A = G.mulAdd(s1, R, s2);\n\n    if (A.isInfinity())\n      throw new Error('Invalid point.');\n\n    return A;\n  }\n\n  derive(pub, priv, compress) {\n    const A = this.curve.decodePoint(pub);\n    const a = this.curve.decodeScalar(priv);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    if (this.curve.h.cmpn(1) > 0) {\n      if (A.isSmall())\n        throw new Error('Invalid point.');\n    }\n\n    const P = A.mulBlind(a, rng);\n\n    return P.encode(compress);\n  }\n\n  /*\n   * Schnorr\n   */\n\n  schnorrSign(msg, key) {\n    return this.schnorr.sign(msg, key);\n  }\n\n  schnorrVerify(msg, sig, key) {\n    return this.schnorr.verify(msg, sig, key);\n  }\n\n  schnorrVerifyBatch(batch) {\n    return this.schnorr.verifyBatch(batch);\n  }\n\n  /*\n   * Helpers\n   */\n\n  _encodeCompact(r, s) {\n    return Buffer.concat([\n      this.curve.encodeScalar(r),\n      this.curve.encodeScalar(s)\n    ]);\n  }\n\n  _decodeCompact(sig) {\n    assert(Buffer.isBuffer(sig));\n\n    const {n} = this.curve;\n    const size = this.curve.scalarSize;\n\n    if (sig.length !== size * 2)\n      throw new Error('Invalid signature size.');\n\n    const Rraw = sig.slice(0, size);\n    const Sraw = sig.slice(size, size * 2);\n    const r = this.curve.decodeScalar(Rraw);\n    const s = this.curve.decodeScalar(Sraw);\n\n    if (r.cmp(n) >= 0 || s.cmp(n) >= 0)\n      throw new Error('Invalid signature.');\n\n    return [r, s];\n  }\n\n  _encodeDER(r, s) {\n    const size = asn1.sizeInt(r) + asn1.sizeInt(s);\n    const out = Buffer.alloc(asn1.sizeSeq(size));\n\n    let pos = 0;\n\n    pos = asn1.writeSeq(out, pos, size);\n    pos = asn1.writeInt(out, pos, r);\n    pos = asn1.writeInt(out, pos, s);\n\n    assert(pos === out.length);\n\n    return out;\n  }\n\n  _decodeDER(sig, strict) {\n    assert(Buffer.isBuffer(sig));\n    assert(typeof strict === 'boolean');\n\n    const {n} = this.curve;\n\n    let pos = 0;\n    let r, s;\n\n    pos = asn1.readSeq(sig, pos, strict);\n    [r, pos] = asn1.readInt(sig, pos, strict);\n    [s, pos] = asn1.readInt(sig, pos, strict);\n\n    if (strict && pos !== sig.length)\n      throw new Error('Trailing bytes.');\n\n    if (r.cmp(n) >= 0 || s.cmp(n) >= 0)\n      throw new Error('Invalid signature.');\n\n    return [r, s];\n  }\n\n  _truncate(msg) {\n    // Byte array to integer conversion.\n    //\n    // [SEC1] Step 5, Page 45, Section 4.1.3.\n    // [FIPS186] Page 25, Section B.2.\n    //\n    // The two sources above disagree on this.\n    //\n    // FIPS186 simply modulos the entire byte\n    // array by the order, whereas SEC1 takes\n    // the left-most ceil(log2(n+1)) bits modulo\n    // the order (and maybe does other stuff).\n    //\n    // Instead of trying to decipher all of\n    // this nonsense, we simply replicate the\n    // OpenSSL behavior (which, in actuality,\n    // is more similar to the SEC1 behavior).\n    assert(Buffer.isBuffer(msg));\n\n    const bits = this.curve.n.bitLength();\n    const bytes = (bits + 7) >>> 3;\n\n    if (msg.length > bytes)\n      msg = msg.slice(0, bytes);\n\n    const m = BN.decode(msg, this.curve.endian);\n    const d = msg.length * 8 - bits;\n\n    if (d > 0)\n      m.iushrn(d);\n\n    return m;\n  }\n\n  _reduce(msg) {\n    return this._truncate(msg).imod(this.curve.n);\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = ECDSA;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","/*!\n * sha512.js - sha512 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/sha512');\n","/*!\n * blake2b.js - blake2b for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/blake2b');\n","/*!\n * blake2s.js - blake2s for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/blake2s');\n","/*!\n * secretbox.js - secretbox for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/secretbox');\n","/*!\n * error.js - encoding error for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * Encoding Error\n * @extends {Error}\n */\n\nclass EncodingError extends Error {\n  /**\n   * Create an encoding error.\n   * @constructor\n   * @param {Number} offset\n   * @param {String} reason\n   */\n\n  constructor(offset, reason, start) {\n    super();\n\n    this.type = 'EncodingError';\n    this.name = 'EncodingError';\n    this.code = 'ERR_ENCODING';\n    this.message = `${reason} (offset=${offset}).`;\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(this, start || EncodingError);\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = EncodingError;\n","/*!\n * sha3.js - sha3 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/sha3');\n","import CryptoJS from \"crypto-js\";\nimport elliptic from \"elliptic\";\nimport BN from \"bn.js\";\nimport WizData from \"@script-wiz/wiz-data\";\nimport * as tapRoot from \"../taproot\";\nimport bcrypto from \"bcrypto\";\n\n// TO DO @afarukcali review\n\nexport const ripemd160 = (wizData: WizData): CryptoJS.lib.WordArray => {\n  return CryptoJS.RIPEMD160(CryptoJS.enc.Hex.parse(wizData.hex));\n};\n\nexport const sha1 = (wizData: WizData): CryptoJS.lib.WordArray => {\n  return CryptoJS.SHA1(CryptoJS.enc.Hex.parse(wizData.hex));\n};\n\nexport const sha256 = (wizData: WizData): CryptoJS.lib.WordArray => {\n  return CryptoJS.SHA256(CryptoJS.enc.Hex.parse(wizData.hex));\n};\n\nexport const hash160 = (wizData: WizData): CryptoJS.lib.WordArray => {\n  const dataWithSha256Hashed = CryptoJS.SHA256(CryptoJS.enc.Hex.parse(wizData.hex));\n  const dataWithRipemd160Hashed = CryptoJS.RIPEMD160(dataWithSha256Hashed);\n  return dataWithRipemd160Hashed;\n};\n\nexport const sha256v2 = (wizData: WizData): string => {\n  return CryptoJS.SHA256(CryptoJS.enc.Hex.parse(wizData.hex)).toString();\n};\n\nexport const hash160v2 = (wizData: WizData): string => {\n  const dataWithSha256Hashed = CryptoJS.SHA256(CryptoJS.enc.Hex.parse(wizData.hex));\n  const dataWithRipemd160Hashed = CryptoJS.RIPEMD160(dataWithSha256Hashed);\n  return dataWithRipemd160Hashed.toString();\n};\n\nexport const hash256 = (wizData: WizData): CryptoJS.lib.WordArray => {\n  const firstSHAHash = CryptoJS.SHA256(CryptoJS.enc.Hex.parse(wizData.hex));\n  const secondSHAHash = CryptoJS.SHA256(firstSHAHash);\n\n  return secondSHAHash;\n};\n\nexport const ecdsaVerify = (sig: WizData, msg: WizData, pubkey: WizData): WizData => {\n  const secp256k1 = new elliptic.ec(\"secp256k1\");\n  const hashedMessage = sha256(msg).toString();\n  const publicKey = pubkey.hex;\n  const signature = sig.hex;\n\n  if (publicKey.length !== 66) throw \"ECDSA Verify error : invalid public key length\";\n\n  if (!signature.startsWith(\"30\")) throw \"ECDSA Verify error : signature must start with 0x30\";\n\n  const rAndSDataSize = Number(\"0x\" + signature.substr(2, 2));\n\n  const signatureStringLength = rAndSDataSize * 2 + 4;\n\n  if (signature.length !== signatureStringLength) throw \"ECDSA Verify error : signature length invalid\";\n\n  const rDataSize = Number(\"0x\" + signature.substr(6, 2));\n\n  const rValue = signature.substr(8, rDataSize * 2);\n\n  const sDataSize = Number(\"0x\" + signature.substr(10 + rDataSize * 2, 2));\n\n  const sValue = signature.substr(10 + rDataSize * 2 + 2, sDataSize * 2);\n\n  const rBn = new BN(rValue, \"hex\");\n  const sBn = new BN(sValue, \"hex\");\n\n  try {\n    return WizData.fromNumber(secp256k1.verify(hashedMessage, { r: rBn, s: sBn }, secp256k1.keyFromPublic(publicKey, \"hex\")) ? 1 : 0);\n  } catch {\n    throw \"ECDSA Verify error : something went wrong\";\n  }\n};\n\nexport const checkSig = (wizData: WizData, wizData2: WizData): WizData => {\n  // stackData 1 = signature\n  // stackData 2 = pubkey\n  const signature = wizData.hex;\n  const publicKey = wizData2.hex;\n\n  if (publicKey.length !== 68) return WizData.fromNumber(0);\n\n  if (!signature.startsWith(\"0x30\")) return WizData.fromNumber(0);\n\n  const rAndSDataSize = Number(\"0x\" + signature.substr(4, 2));\n\n  const signatureStringLength = rAndSDataSize * 2 + 6;\n\n  if (signature.length !== signatureStringLength) return WizData.fromNumber(0);\n\n  return WizData.fromNumber(1);\n};\n\n// taproot feature\nexport const tweakVerify = (wizData: WizData, wizData2: WizData, wizData3: WizData): WizData => {\n  const internalKey = wizData3;\n  const vchTweak = wizData2;\n  const vchTweakedKey = wizData;\n\n  if (vchTweak.bytes.length != 32) throw \"Tweak key length must be eqaul 32 byte\";\n\n  if (internalKey.bytes.length != 32) throw \"Internal key length must be eqaul 32 byte\";\n\n  if (vchTweakedKey.bytes[0] !== 2 && vchTweakedKey.bytes[0] !== 3) throw \"Tweaked key must start with 0x02 or 0x03\";\n\n  const isChecked: boolean = tapRoot.publicKeyTweakCheckWithPrefix(internalKey, vchTweak, vchTweakedKey);\n\n  return WizData.fromNumber(isChecked ? 1 : 0);\n};\n\nexport const shnorrSigVerify = (sig: WizData, msg: WizData, pubkey: WizData): WizData => {\n  if (pubkey.bytes.length !== 32) throw \"Schnorr Verify error : invalid public key length\";\n\n  if (sig.bytes.length !== 64) throw \"Schnorr Verify error : signature length must be equal 64 byte\";\n\n  const publicKey = Buffer.from(pubkey.hex, \"hex\");\n  const signature = Buffer.from(sig.hex, \"hex\");\n  const message = Buffer.from(msg.hex, \"hex\");\n\n  try {\n    return WizData.fromNumber(bcrypto.schnorr.verify(message, signature, publicKey) ? 1 : 0);\n  } catch {\n    throw \"ECDSA Verify error : something went wrong\";\n  }\n};\n\n// const ECDSA = (messageHash: string, publicKey: string): string => {\n//   const EC = elliptic.ec;\n\n//   // Create and initialize EC context\n//   // (better do it once and reuse it)\n//   const ec = new EC(\"secp256k1\");\n\n//   // Generate keys\n//   const key = ec.genKeyPair();\n\n//   // Sign the message's hash (input must be an array, or a hex-string)\n//   const signature = key.sign(messageHash);\n\n//   // Export DER encoded signature in Array\n//   const derSign = signature.toDER();\n\n//   return derSign;\n// };\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone \"words\" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*!\n * elliptic.js - elliptic curves for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/elliptic:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/elliptic\n *\n * Formulas from DJB and Tanja Lange [EFD].\n *\n * References:\n *\n *   [GECC] Guide to Elliptic Curve Cryptography\n *     D. Hankerson, A. Menezes, and S. Vanstone\n *     https://tinyurl.com/guide-to-ecc\n *\n *   [GLV] Faster Point Multiplication on Elliptic Curves\n *     R. Gallant, R. Lambert, and S. Vanstone\n *     https://link.springer.com/content/pdf/10.1007/3-540-44647-8_11.pdf\n *\n *   [MONT1] Montgomery curves and the Montgomery ladder\n *     Daniel J. Bernstein, Tanja Lange\n *     https://eprint.iacr.org/2017/293.pdf\n *\n *   [SQUARED] Elligator Squared\n *     Mehdi Tibouchi\n *     https://eprint.iacr.org/2014/043.pdf\n *\n *   [SEC1] SEC 1 - Standards for Efficient Cryptography Group\n *     Certicom Research\n *     https://www.secg.org/sec1-v2.pdf\n *\n *   [SEC2] SEC 2: Recommended Elliptic Curve Domain Parameters\n *     Certicom Research\n *     https://www.secg.org/sec2-v2.pdf\n *\n *   [SIDE1] Elliptic Curves and Side-Channel Attacks\n *     Marc Joye\n *     https://pdfs.semanticscholar.org/8d69/9645033e25d74fcfd4cbf07a770d2e943e14.pdf\n *\n *   [BLIND] Side-Channel Analysis on Blinding Regular Scalar Multiplications\n *     B. Feix, M. Roussellet, A. Venelli\n *     https://eprint.iacr.org/2014/191.pdf\n *\n *   [ALT] Alternative Elliptic Curve Representations\n *     R. Struik\n *     https://tools.ietf.org/id/draft-ietf-lwig-curve-representations-02.html\n *\n *   [ARITH1] Arithmetic of Elliptic Curves\n *     Christophe Doche, Tanja Lange\n *     Handbook of Elliptic and Hyperelliptic Curve Cryptography\n *     Page 267, Section 13 (978-1-58488-518-4)\n *     https://hyperelliptic.org/HEHCC/index.html\n *\n *   [ARITH2] The Arithmetic of Elliptic Curves, 2nd Edition\n *     Joseph H. Silverman\n *     http://www.pdmi.ras.ru/~lowdimma/BSD/Silverman-Arithmetic_of_EC.pdf\n *\n *   [EFD] Explicit-Formulas Database\n *     Daniel J. Bernstein, Tanja Lange\n *     https://hyperelliptic.org/EFD/index.html\n *\n *   [SAFE] SafeCurves: choosing safe curves for elliptic-curve cryptography\n *     Daniel J. Bernstein\n *     https://safecurves.cr.yp.to/\n *\n *   [4GLV] Refinement of the Four-Dimensional GLV Method on Elliptic Curves\n *     Hairong Yi, Yuqing Zhu, and Dongdai Lin\n *     http://www.site.uottawa.ca/~cadams/papers/prepro/paper_19_slides.pdf\n *\n *   [SSWU1] Efficient Indifferentiable Hashing into Ordinary Elliptic Curves\n *     E. Brier, J. Coron, T. Icart, D. Madore, H. Randriam, M. Tibouchi\n *     https://eprint.iacr.org/2009/340.pdf\n *\n *   [SSWU2] Rational points on certain hyperelliptic curves over finite fields\n *     Maciej Ulas\n *     https://arxiv.org/abs/0706.1448\n *\n *   [H2EC] Hashing to Elliptic Curves\n *     A. Faz-Hernandez, S. Scott, N. Sullivan, R. S. Wahby, C. A. Wood\n *     https://git.io/JeWz6\n *     https://github.com/cfrg/draft-irtf-cfrg-hash-to-curve\n *\n *   [SVDW1] Construction of Rational Points on Elliptic Curves\n *     A. Shallue, C. E. van de Woestijne\n *     https://works.bepress.com/andrew_shallue/1/download/\n *\n *   [SVDW2] Indifferentiable Hashing to Barreto-Naehrig Curves\n *     Pierre-Alain Fouque, Mehdi Tibouchi\n *     https://www.di.ens.fr/~fouque/pub/latincrypt12.pdf\n *\n *   [SVDW3] Covert ECDH over secp256k1\n *     Pieter Wuille\n *     https://gist.github.com/sipa/29118d3fcfac69f9930d57433316c039\n *\n *   [MONT2] Montgomery Curve (wikipedia)\n *     https://en.wikipedia.org/wiki/Montgomery_curve\n *\n *   [MONT3] Montgomery Curves and their arithmetic\n *     C. Costello, B. Smith\n *     https://eprint.iacr.org/2017/212.pdf\n *\n *   [ELL2] Elliptic-curve points indistinguishable from uniform random strings\n *     D. Bernstein, M. Hamburg, A. Krasnova, T. Lange\n *     https://elligator.cr.yp.to/elligator-20130828.pdf\n *\n *   [RFC7748] Elliptic Curves for Security\n *     A. Langley, M. Hamburg, S. Turner\n *     https://tools.ietf.org/html/rfc7748\n *\n *   [TWISTED] Twisted Edwards Curves\n *     D. Bernstein, P. Birkner, M. Joye, T. Lange, C. Peters\n *     https://eprint.iacr.org/2008/013.pdf\n *\n *   [ELL1] Injective Encodings to Elliptic Curves\n *     P. Fouque, A. Joux, M. Tibouchi\n *     https://eprint.iacr.org/2013/373.pdf\n *\n *   [ISOGENY] Twisting Edwards curves with isogenies\n *     Mike Hamburg\n *     https://www.shiftleft.org/papers/isogeny/isogeny.pdf\n *\n *   [RFC8032] Edwards-Curve Digital Signature Algorithm (EdDSA)\n *     S. Josefsson, SJD AB, I. Liusvaara\n *     https://tools.ietf.org/html/rfc8032\n *\n *   [SCHNORR] Schnorr Signatures for secp256k1\n *     Pieter Wuille\n *     https://github.com/sipa/bips/blob/d194620/bip-schnorr.mediawiki\n *\n *   [BIP340] Schnorr Signatures for secp256k1\n *     Pieter Wuille, Jonas Nick, Tim Ruffing\n *     https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n *\n *   [JCEN12] Efficient Software Implementation of Public-Key Cryptography\n *            on Sensor Networks Using the MSP430X Microcontroller\n *     C. P. L. Gouvea, L. B. Oliveira, J. Lopez\n *     http://conradoplg.cryptoland.net/files/2010/12/jcen12.pdf\n *\n *   [FIPS186] Federal Information Processing Standards Publication\n *     National Institute of Standards and Technology\n *     https://tinyurl.com/fips-186-3\n *\n *   [RFC5639] Elliptic Curve Cryptography (ECC) Brainpool\n *             Standard Curves and Curve Generation\n *     M. Lochter, BSI, J. Merkle\n *     https://tools.ietf.org/html/rfc5639\n *\n *   [TWISTEQ] Twisted Edwards & Short Weierstrass Equivalence\n *     Christopher Jeffrey\n *     https://gist.github.com/chjj/16ba7fa08d64e8dda269a9fe5b2a8bbc\n *\n *   [ECPM] Elliptic Curve Point Multiplication (wikipedia)\n *     https://en.wikipedia.org/wiki/Elliptic_curve_point_multiplication\n */\n\n'use strict';\n\nconst {custom} = require('../internal/custom');\nconst BN = require('../bn');\n\n/*\n * Constants\n */\n\nconst types = {\n  AFFINE: 0,\n  JACOBIAN: 1,\n  PROJECTIVE: 2,\n  EXTENDED: 3\n};\n\nconst jsfIndex = [\n  -3, // -1 -1\n  -1, // -1 0\n  -5, // -1 1\n  -7, // 0 -1\n  0, // 0 0\n  7, // 0 1\n  5, // 1 -1\n  1, // 1 0\n  3  // 1 1\n];\n\nconst USE_FIXED = false;\n\nlet uid = 0;\n\n/**\n * Curve\n */\n\nclass Curve {\n  constructor(Point, type, conf) {\n    this.Point = null;\n    this.id = null;\n    this.uid = uid++;\n    this.ossl = null;\n    this.type = 'base';\n    this.endian = 'be';\n    this.hash = null;\n    this.prefix = null;\n    this.context = false;\n    this.prime = null;\n    this.p = null;\n    this.red = null;\n    this.fieldSize = 0;\n    this.fieldBits = 0;\n    this.adjustedSize = 0;\n    this.signBit = 0;\n    this.mask = 0;\n    this.n = null;\n    this.h = null;\n    this.q = null;\n    this.z = null;\n    this.g = null;\n    this.nh = null;\n    this.scalarSize = 0;\n    this.scalarBits = 0;\n    this.zero = null;\n    this.one = null;\n    this.two = null;\n    this.three = null;\n    this.four = null;\n    this.i2 = null;\n    this.i3 = null;\n    this.i4 = null;\n    this.i6 = null;\n    this.torsion = null;\n    this.endo = null;\n    this.hi = null;\n    this._init(Point, type, conf);\n  }\n\n  _init(Point, type, conf) {\n    assert(typeof Point === 'function');\n    assert(typeof type === 'string');\n    assert(conf && typeof conf === 'object');\n    assert(conf.red == null || (conf.red instanceof BN.Red));\n    assert(conf.p != null, 'Must pass a prime.');\n    assert(conf.id == null || typeof conf.id === 'string');\n    assert(conf.ossl == null || typeof conf.ossl === 'string');\n    assert(conf.endian == null || typeof conf.endian === 'string');\n    assert(conf.hash == null || typeof conf.hash === 'string');\n    assert(conf.prefix == null || typeof conf.prefix === 'string');\n    assert(conf.context == null || typeof conf.context === 'boolean');\n    assert(conf.prime == null || typeof conf.prime === 'string');\n    assert(conf.torsion == null || Array.isArray(conf.torsion));\n\n    // Point class.\n    this.Point = Point;\n\n    // Meta.\n    this.id = conf.id || null;\n    this.ossl = conf.ossl || null;\n    this.type = type;\n    this.endian = conf.endian || (type === 'short' ? 'be' : 'le');\n    this.hash = conf.hash || null;\n    this.prefix = conf.prefix ? Buffer.from(conf.prefix, 'binary') : null;\n    this.context = conf.context || false;\n    this.prime = conf.prime || null;\n\n    // Prime.\n    this.p = BN.fromJSON(conf.p);\n\n    // Reduction.\n    if (conf.red) {\n      this.red = conf.red;\n    } else {\n      // Use Montgomery when there is no fast reduction for the prime.\n      this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n      this.red.precompute();\n    }\n\n    // Precalculate encoding length.\n    this.fieldSize = this.p.byteLength();\n    this.fieldBits = this.p.bitLength();\n    this.adjustedSize = this.fieldSize + ((this.fieldBits & 7) === 0);\n    this.signBit = this.adjustedSize * 8 - 1;\n    this.mask = 0xff;\n\n    if ((this.fieldBits & 7) !== 0)\n      this.mask = (1 << (this.fieldBits & 7)) - 1;\n\n    // Curve configuration, optional.\n    this.n = BN.fromJSON(conf.n || '0');\n    this.h = BN.fromJSON(conf.h || '1');\n    this.q = this.n.mul(this.h);\n    this.z = BN.fromJSON(conf.z || '0').toRed(this.red);\n    this.g = null;\n    this.nh = this.n.ushrn(1);\n    this.scalarSize = this.n.byteLength();\n    this.scalarBits = this.n.bitLength();\n\n    // Useful for many curves.\n    this.zero = new BN(0).toRed(this.red);\n    this.one = new BN(1).toRed(this.red);\n    this.two = new BN(2).toRed(this.red);\n    this.three = new BN(3).toRed(this.red);\n    this.four = new BN(4).toRed(this.red);\n\n    // Inverses.\n    this.i2 = this.two.redInvert();\n    this.i3 = this.three.redInvert();\n    this.i4 = this.i2.redSqr();\n    this.i6 = this.i2.redMul(this.i3);\n\n    // Torsion.\n    this.torsion = new Array(this.h.word(0));\n\n    for (let i = 0; i < this.torsion.length; i++)\n      this.torsion[i] = this.point();\n\n    // Endomorphism.\n    this.endo = null;\n\n    // Cache.\n    this.hi = null;\n\n    // Memoize.\n    this._scale = memoize(this._scale, this);\n    this.isIsomorphic = memoize(this.isIsomorphic, this);\n    this.isIsogenous = memoize(this.isIsogenous, this);\n\n    // Sanity checks.\n    assert(this.p.sign() > 0 && this.p.isOdd());\n    assert(this.n.sign() >= 0);\n    assert(this.h.sign() > 0 && this.h.cmpn(255) <= 0);\n    assert(this.endian === 'be' || this.endian === 'le');\n\n    return this;\n  }\n\n  _finalize(conf) {\n    assert(conf && typeof conf === 'object');\n\n    // Create base point.\n    this.g = conf.g ? this.pointFromJSON(conf.g) : this.point();\n\n    // Parse small order points.\n    if (conf.torsion) {\n      assert(conf.torsion.length === this.torsion.length);\n\n      for (let i = 0; i < this.torsion.length; i++)\n        this.torsion[i] = this.pointFromJSON(conf.torsion[i]);\n    }\n\n    return this;\n  }\n\n  _findTorsion() {\n    // Find all torsion points by grinding.\n    assert(!this.n.isZero());\n\n    const h = this.h.word(0);\n    const x = this.one.redNeg();\n    const out = [this.point()];\n    const set = new Set();\n\n    let len = h;\n\n    while (out.length < len) {\n      let p;\n\n      x.redIAdd(this.one);\n\n      try {\n        p = this.pointFromX(x.clone());\n      } catch (e) {\n        continue;\n      }\n\n      try {\n        p = p.mul(this.n);\n      } catch (e) {\n        len = 2;\n        continue;\n      }\n\n      if (p.isInfinity())\n        continue;\n\n      p.normalize();\n\n      for (const point of [p, p.neg()]) {\n        const key = point.key();\n\n        if (!set.has(key)) {\n          out.push(point);\n          set.add(key);\n        }\n      }\n    }\n\n    out.sort((a, b) => a.cmp(b));\n\n    while (out.length < h)\n      out.push(this.point());\n\n    return out;\n  }\n\n  _fixedMul(p, k) {\n    // Fixed-base method for point multiplication.\n    //\n    // [ECPM] \"Windowed method\".\n    // [GECC] Page 95, Section 3.3.\n    //\n    // Windows are appropriately shifted to avoid any\n    // doublings. This reduces a 256 bit multiplication\n    // down to 64 additions with a window size of 4.\n    assert(p instanceof Point);\n    assert(k instanceof BN);\n    assert(p.pre && p.pre.windows);\n\n    // Get precomputed windows.\n    const {width, points} = p._getWindows(0, 0);\n\n    // Recompute window size.\n    const size = 1 << width;\n\n    // Recompute steps.\n    const bits = k.bitLength();\n    const steps = ((bits + width - 1) / width) >>> 0;\n\n    // Multiply.\n    let acc = this.jpoint();\n\n    for (let i = 0; i < steps; i++) {\n      const bits = k.bits(i * width, width);\n\n      acc = acc.add(points[i * size + bits]);\n    }\n\n    // Adjust sign.\n    if (k.isNeg())\n      acc = acc.neg();\n\n    return acc;\n  }\n\n  _fixedNafMul(p, k) {\n    // Fixed-base NAF windowing method for point multiplication.\n    //\n    // [GECC] Algorithm 3.42, Page 105, Section 3.3.\n    assert(p instanceof Point);\n    assert(k instanceof BN);\n    assert(p.pre && p.pre.doubles);\n\n    // Get precomputed doubles.\n    const {step, points} = p._getDoubles(0, 0);\n\n    // Get fixed NAF (in a more windowed form).\n    const naf = getFixedNAF(k, 2, k.bitLength() + 1, step);\n\n    // Compute steps.\n    const I = ((1 << (step + 1)) - (step % 2 === 0 ? 2 : 1)) / 3;\n\n    // Multiply.\n    let a = this.jpoint();\n    let b = this.jpoint();\n\n    for (let i = I; i > 0; i--) {\n      for (let j = 0; j < naf.length; j++) {\n        const nafW = naf[j];\n\n        if (nafW === i)\n          b = b.add(points[j]);\n        else if (nafW === -i)\n          b = b.sub(points[j]);\n      }\n\n      a = a.add(b);\n    }\n\n    return a;\n  }\n\n  _wnafMul(w, p, k) {\n    // Window NAF method for point multiplication.\n    //\n    // [GECC] Algorithm 3.36, Page 100, Section 3.3.\n    assert(p instanceof Point);\n    assert(k instanceof BN);\n\n    // Precompute window.\n    const {width, points} = p._safeNAF(w);\n\n    // Get NAF form.\n    const naf = getNAF(k, width, k.bitLength() + 1);\n\n    // Add `this`*(N+1) for every w-NAF index.\n    let acc = this.jpoint();\n\n    for (let i = naf.length - 1; i >= 0; i--) {\n      const z = naf[i];\n\n      if (i !== naf.length - 1)\n        acc = acc.dbl();\n\n      if (z > 0)\n        acc = acc.add(points[(z - 1) >> 1]);\n      else if (z < 0)\n        acc = acc.sub(points[(-z - 1) >> 1]);\n    }\n\n    return acc;\n  }\n\n  _wnafMulAdd(w, points, coeffs) {\n    // Multiple point multiplication, also known\n    // as \"Shamir's trick\" (with interleaved NAFs).\n    //\n    // [GECC] Algorithm 3.48, Page 109, Section 3.3.3.\n    //        Algorithm 3.51, Page 112, Section 3.3.\n    //\n    // This is particularly useful for signature\n    // verifications and mutiplications after an\n    // endomorphism split.\n    assert((w >>> 0) === w);\n    assert(Array.isArray(points));\n    assert(Array.isArray(coeffs));\n    assert(points.length === coeffs.length);\n\n    const length = points.length;\n    const wnd = new Array(length);\n    const naf = new Array(length);\n\n    // Check arrays and calculate size.\n    let max = 0;\n\n    for (let i = 0; i < length; i++) {\n      const point = points[i];\n      const coeff = coeffs[i];\n\n      assert(point instanceof Point);\n      assert(coeff instanceof BN);\n\n      if (i > 0 && point.type !== points[i - 1].type)\n        throw new Error('Cannot mix points.');\n\n      // Avoid sparse arrays.\n      wnd[i] = null;\n      naf[i] = null;\n\n      // Compute max scalar size.\n      max = Math.max(max, coeff.bitLength() + 1);\n    }\n\n    // Compute NAFs.\n    let ppoint = null;\n    let pcoeff = null;\n    let len = 0;\n\n    for (let i = 0; i < length; i++) {\n      const point = points[i];\n      const coeff = coeffs[i];\n      const pre = point._getNAF(0);\n\n      // Use precomputation if available.\n      if (pre) {\n        wnd[len] = pre.points;\n        naf[len] = getNAF(coeff, pre.width, max);\n        len += 1;\n        continue;\n      }\n\n      // Save last non-precomputed point.\n      if (!ppoint) {\n        ppoint = point;\n        pcoeff = coeff;\n        continue;\n      }\n\n      // Compute JSF in NAF form.\n      wnd[len] = ppoint._getJNAF(point);\n      naf[len] = getJNAF(pcoeff, coeff, max);\n\n      ppoint = null;\n      pcoeff = null;\n\n      len += 1;\n    }\n\n    // Regular NAF for odd points.\n    if (ppoint) {\n      const nafw = ppoint._safeNAF(w);\n\n      wnd[len] = nafw.points;\n      naf[len] = getNAF(pcoeff, nafw.width, max);\n\n      len += 1;\n    }\n\n    // Multiply and add.\n    let acc = this.jpoint();\n\n    for (let i = max - 1; i >= 0; i--) {\n      if (i !== max - 1)\n        acc = acc.dbl();\n\n      for (let j = 0; j < len; j++) {\n        const z = naf[j][i];\n\n        if (z > 0)\n          acc = acc.add(wnd[j][(z - 1) >> 1]);\n        else if (z < 0)\n          acc = acc.sub(wnd[j][(-z - 1) >> 1]);\n      }\n    }\n\n    return acc;\n  }\n\n  _endoWnafMulAdd(points, coeffs) {\n    throw new Error('Not implemented.');\n  }\n\n  _scale(curve, invert) {\n    assert(curve instanceof Curve);\n    assert(curve.p.eq(this.p));\n\n    switch (curve.type) {\n      case 'short':\n        return this._scaleShort(curve, invert);\n      case 'mont':\n        return this._scaleMont(curve, invert);\n      case 'edwards':\n        return this._scaleEdwards(curve, invert);\n      default:\n        throw new Error('Not implemented.');\n    }\n  }\n\n  _scaleShort(curve, invert) {\n    throw new Error('Not implemented.');\n  }\n\n  _scaleMont(curve, invert) {\n    throw new Error('Not implemented.');\n  }\n\n  _scaleEdwards(curve, invert) {\n    throw new Error('Not implemented.');\n  }\n\n  isElliptic() {\n    throw new Error('Not implemented.');\n  }\n\n  jinv() {\n    throw new Error('Not implemented.');\n  }\n\n  isComplete() {\n    return false;\n  }\n\n  precompute(rng) {\n    assert(!this.g.isInfinity(), 'Must have base point.');\n    assert(!this.n.isZero(), 'Must have order.');\n\n    this.g.precompute(this.n.bitLength(), rng);\n\n    return this;\n  }\n\n  scalar(num, base, endian) {\n    const k = new BN(num, base, endian);\n\n    assert(!k.red);\n\n    if (this.n.isZero())\n      return k;\n\n    return k.imod(this.n);\n  }\n\n  field(num, base, endian) {\n    const x = BN.cast(num, base, endian);\n\n    if (x.red)\n      return x.forceRed(this.red);\n\n    return x.toRed(this.red);\n  }\n\n  point(x, y) {\n    throw new Error('Not implemented.');\n  }\n\n  jpoint(x, y, z) {\n    throw new Error('Not implemented.');\n  }\n\n  xpoint(x, z) {\n    throw new Error('Not implemented.');\n  }\n\n  cpoint(xx, xz, yy, yz) {\n    assert(xx instanceof BN);\n    assert(xz instanceof BN);\n    assert(yy instanceof BN);\n    assert(yz instanceof BN);\n\n    if (xz.isZero() || yz.isZero())\n      return this.point();\n\n    const z = xz.redMul(yz).redInvert();\n    const x = xx.redMul(yz).redMul(z);\n    const y = yy.redMul(xz).redMul(z);\n\n    return this.point(x, y);\n  }\n\n  solveX2(y) {\n    throw new Error('Not implemented.');\n  }\n\n  solveX(y) {\n    return this.solveX2(y).redSqrt();\n  }\n\n  solveY2(x) {\n    throw new Error('Not implemented.');\n  }\n\n  solveY(x) {\n    return this.solveY2(x).redSqrt();\n  }\n\n  validate(point) {\n    throw new Error('Not implemented.');\n  }\n\n  pointFromX(x, sign) {\n    throw new Error('Not implemented.');\n  }\n\n  pointFromY(y, sign) {\n    throw new Error('Not implemented.');\n  }\n\n  isIsomorphic(curve) {\n    throw new Error('Not implemented.');\n  }\n\n  isIsogenous(curve) {\n    throw new Error('Not implemented.');\n  }\n\n  pointFromShort(point) {\n    throw new Error('Not implemented.');\n  }\n\n  pointFromMont(point, sign) {\n    throw new Error('Not implemented.');\n  }\n\n  pointFromEdwards(point) {\n    throw new Error('Not implemented.');\n  }\n\n  pointFromUniform(u) {\n    throw new Error('Not implemented.');\n  }\n\n  pointToUniform(p) {\n    throw new Error('Not implemented.');\n  }\n\n  pointFromHash(bytes, pake = false) {\n    // [H2EC] \"Roadmap\".\n    assert(Buffer.isBuffer(bytes));\n    assert(typeof pake === 'boolean');\n\n    if (bytes.length !== this.fieldSize * 2)\n      throw new Error('Invalid hash size.');\n\n    // Random oracle encoding.\n    // Ensure a proper distribution.\n    const s1 = bytes.slice(0, this.fieldSize);\n    const s2 = bytes.slice(this.fieldSize);\n    const u1 = this.decodeUniform(s1);\n    const u2 = this.decodeUniform(s2);\n    const p1 = this.pointFromUniform(u1);\n    const p2 = this.pointFromUniform(u2);\n    const p3 = p1.add(p2);\n\n    return pake ? p3.mulH() : p3;\n  }\n\n  pointToHash(p, subgroup, rng) {\n    // [SQUARED] Algorithm 1, Page 8, Section 3.3.\n    assert(p instanceof this.Point);\n    assert((subgroup >>> 0) === subgroup);\n\n    // Add a random torsion component.\n    const i = subgroup % this.torsion.length;\n    const p0 = p.add(this.torsion[i]);\n\n    // Average Cost (R = sqrt):\n    //\n    //   SSWU (~4 iterations) => 8I + 16R\n    //   SVDW (~4 iterations) => 12I + 28R\n    //   Elligator 1 (~2 iterations) => 6I + 10R\n    //   Elligator 2 (~2 iterations) => 4I + 6R\n    //   Ristretto (~1 iteration) => 1I + 2R + h*1R\n    for (;;) {\n      const u1 = this.randomField(rng);\n      const p1 = this.pointFromUniform(u1);\n\n      // Avoid 2-torsion points:\n      //   Short Weierstrass: ((A / 3) / B, 0)\n      //   Montgomery: (0, 0)\n      //   Twisted Edwards: (0, -1)\n      if (p1.neg().eq(p1))\n        continue;\n\n      const p2 = p0.sub(p1);\n      const hint = randomInt(rng);\n\n      let u2;\n      try {\n        u2 = this.pointToUniform(p2, hint & 15);\n      } catch (e) {\n        if (e.message === 'Invalid point.')\n          continue;\n        throw e;\n      }\n\n      const s1 = this.encodeUniform(u1, hint >>> 8);\n      const s2 = this.encodeUniform(u2, hint >>> 16);\n\n      return Buffer.concat([s1, s2]);\n    }\n  }\n\n  randomScalar(rng) {\n    const max = this.n.isZero() ? this.p : this.n;\n    return BN.random(rng, 1, max);\n  }\n\n  randomField(rng) {\n    return BN.random(rng, 1, this.p).toRed(this.red);\n  }\n\n  randomPoint(rng) {\n    let p;\n\n    for (;;) {\n      const x = this.randomField(rng);\n      const sign = (randomInt(rng) & 1) !== 0;\n\n      try {\n        p = this.pointFromX(x, sign);\n      } catch (e) {\n        continue;\n      }\n\n      assert(p.validate());\n\n      return p.mulH();\n    }\n  }\n\n  mulAll(points, coeffs) {\n    return this.jmulAll(points, coeffs);\n  }\n\n  jmulAll(points, coeffs) {\n    assert(Array.isArray(points));\n    assert(points.length === 0 || (points[0] instanceof Point));\n\n    // Multiply with endomorphism if we're using affine points.\n    if (this.endo && points.length > 0 && points[0].type === types.AFFINE)\n      return this._endoWnafMulAdd(points, coeffs);\n\n    // Otherwise, a regular Shamir's trick.\n    return this._wnafMulAdd(5, points, coeffs);\n  }\n\n  mulH(k) {\n    assert(k instanceof BN);\n    return this.imulH(k.clone());\n  }\n\n  imulH(k) {\n    assert(k instanceof BN);\n    assert(!k.red);\n\n    const word = this.h.word(0);\n\n    // Optimize for powers of two.\n    if ((word & (word - 1)) === 0) {\n      const bits = this.h.bitLength();\n      return k.iushln(bits - 1).imod(this.n);\n    }\n\n    return k.imuln(word).imod(this.n);\n  }\n\n  normalizeAll(points) {\n    assert(Array.isArray(points));\n\n    const len = points.length;\n    const z = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      const p = points[i];\n\n      assert(p instanceof Point);\n      assert(p.curve === this);\n\n      if (p.type === types.AFFINE) {\n        z[i] = this.one;\n        continue;\n      }\n\n      z[i] = p.z;\n    }\n\n    const zi = this.red.invertAll(z);\n    const out = new Array(len);\n\n    for (let i = 0; i < len; i++)\n      out[i] = points[i].scale(zi[i]);\n\n    return out;\n  }\n\n  affinizeAll(points) {\n    return this.normalizeAll(points);\n  }\n\n  clamp(scalar) {\n    // [RFC7748] Page 8, Section 5.\n    // [RFC8032] Section 5.1.5 & 5.2.5.\n    assert(Buffer.isBuffer(scalar));\n    assert(scalar.length === this.scalarSize);\n    assert(this.scalarSize <= this.fieldSize);\n\n    let top = (this.fieldBits & 7) || 8;\n    let lsb = 0;\n    let msb = this.scalarSize - 1;\n\n    // Swap endianness.\n    if (this.endian === 'be')\n      [lsb, msb] = [msb, lsb];\n\n    // Adjust for low order.\n    if (this.scalarSize < this.fieldSize)\n      top = 8;\n\n    // Ensure a multiple of the cofactor.\n    scalar[lsb] &= -this.h.word(0) & 0xff;\n\n    // Clamp to the prime.\n    scalar[msb] &= (1 << top) - 1;\n\n    // Set the high bit.\n    scalar[msb] |= 1 << (top - 1);\n\n    return scalar;\n  }\n\n  splitHash(bytes) {\n    // [RFC8032] Section 5.1.6 & 5.2.6.\n    assert(Buffer.isBuffer(bytes));\n    assert(bytes.length === this.adjustedSize * 2);\n    assert(this.scalarSize <= this.adjustedSize);\n\n    let off = 0;\n\n    if (this.endian === 'be')\n      off = this.adjustedSize - this.scalarSize;\n\n    const scalar = bytes.slice(off, off + this.scalarSize);\n    const prefix = bytes.slice(this.adjustedSize);\n\n    this.clamp(scalar);\n\n    return [scalar, prefix];\n  }\n\n  encodeField(x) {\n    // [SEC1] Page 12, Section 2.3.5.\n    assert(x instanceof BN);\n    assert(!x.red);\n\n    return x.encode(this.endian, this.fieldSize);\n  }\n\n  decodeField(bytes) {\n    // [SEC1] Page 13, Section 2.3.6.\n    assert(Buffer.isBuffer(bytes));\n\n    if (bytes.length !== this.fieldSize)\n      throw new Error('Invalid field element size.');\n\n    return BN.decode(bytes, this.endian);\n  }\n\n  encodeAdjusted(x) {\n    assert(x instanceof BN);\n    assert(!x.red);\n\n    return x.encode(this.endian, this.adjustedSize);\n  }\n\n  decodeAdjusted(bytes) {\n    assert(Buffer.isBuffer(bytes));\n\n    if (bytes.length !== this.adjustedSize)\n      throw new Error('Invalid field element size.');\n\n    return BN.decode(bytes, this.endian);\n  }\n\n  encodeScalar(k) {\n    // [SEC1] Page 13, Section 2.3.7.\n    assert(k instanceof BN);\n    assert(!k.red);\n\n    return k.encode(this.endian, this.scalarSize);\n  }\n\n  decodeScalar(bytes) {\n    // [SEC1] Page 14, Section 2.3.8.\n    assert(Buffer.isBuffer(bytes));\n\n    if (bytes.length !== this.scalarSize)\n      throw new Error('Invalid scalar size.');\n\n    return BN.decode(bytes, this.endian);\n  }\n\n  encodeClamped(k) {\n    // [RFC7748] Page 8, Section 5.\n    // [RFC8032] Section 5.1.5 & 5.2.5.\n    return this.clamp(this.encodeScalar(k));\n  }\n\n  decodeClamped(bytes) {\n    // [RFC7748] Page 8, Section 5.\n    // [RFC8032] Section 5.1.5 & 5.2.5.\n    assert(Buffer.isBuffer(bytes));\n\n    if (bytes.length !== this.scalarSize)\n      throw new Error('Invalid scalar size.');\n\n    const clamped = this.clamp(Buffer.from(bytes));\n\n    return BN.decode(clamped, this.endian);\n  }\n\n  encodeUniform(x, bits) {\n    assert(x instanceof BN);\n    assert((bits >>> 0) === bits);\n\n    const msb = this.endian === 'le' ? this.fieldSize - 1 : 0;\n    const bytes = x.fromRed().encode(this.endian, this.fieldSize);\n\n    bytes[msb] |= (bits & ~this.mask) & 0xff;\n\n    return bytes;\n  }\n\n  decodeUniform(bytes) {\n    assert(Buffer.isBuffer(bytes));\n\n    if (bytes.length !== this.fieldSize)\n      throw new Error('Invalid field size.');\n\n    const x = BN.decode(bytes, this.endian);\n\n    x.iumaskn(this.fieldBits);\n\n    return x.toRed(this.red);\n  }\n\n  encodePoint(point, compact) {\n    assert(point instanceof Point);\n    return point.encode(compact);\n  }\n\n  decodePoint(bytes) {\n    throw new Error('Not implemented.');\n  }\n\n  encodeX(point) {\n    throw new Error('Not implemented.');\n  }\n\n  decodeX(bytes) {\n    throw new Error('Not implemented.');\n  }\n\n  decodeEven(bytes) {\n    throw new Error('Not implemented.');\n  }\n\n  decodeSquare(bytes) {\n    throw new Error('Not implemented.');\n  }\n\n  toShort() {\n    throw new Error('Not implemented.');\n  }\n\n  toMont(b0) {\n    throw new Error('Not implemented.');\n  }\n\n  toEdwards(a0) {\n    throw new Error('Not implemented.');\n  }\n\n  pointToJSON(point, pre) {\n    assert(point instanceof Point);\n    return point.toJSON(pre);\n  }\n\n  pointFromJSON(json) {\n    throw new Error('Not implemented.');\n  }\n\n  toJSON(pre) {\n    let prefix, context;\n    let n, z, endo;\n\n    if (this.type === 'edwards') {\n      prefix = this.prefix ? this.prefix.toString() : null;\n      context = this.context;\n    }\n\n    if (!this.n.isZero())\n      n = this.n.toJSON();\n\n    if (!this.z.isZero()) {\n      z = this.z.fromRed();\n\n      if (this.z.redIsHigh())\n        z.isub(this.p);\n\n      z = z.toString(16);\n    }\n\n    if (this.endo)\n      endo = this.endo.toJSON();\n\n    return {\n      id: this.id,\n      ossl: this.ossl,\n      type: this.type,\n      endian: this.endian,\n      hash: this.hash,\n      prefix,\n      context,\n      prime: this.prime,\n      p: this.p.toJSON(),\n      a: undefined,\n      b: undefined,\n      d: undefined,\n      n,\n      h: this.h.toString(16),\n      s: undefined,\n      z,\n      c: undefined,\n      g: this.g.toJSON(pre),\n      endo\n    };\n  }\n\n  static fromJSON(json) {\n    return new this(json);\n  }\n}\n\n/**\n * Point\n */\n\nclass Point {\n  constructor(curve, type) {\n    assert(curve instanceof Curve);\n    assert((type >>> 0) === type);\n\n    this.curve = curve;\n    this.type = type;\n    this.pre = null;\n  }\n\n  _init() {\n    throw new Error('Not implemented.');\n  }\n\n  _safeNAF(width) {\n    assert((width >>> 0) === width);\n\n    if (this.pre && this.pre.naf)\n      return this.pre.naf;\n\n    if (width === 0)\n      return null;\n\n    const size = 1 << (width - 2);\n    const points = new Array(size);\n    const p = this.toJ();\n    const dbl = size === 1 ? null : p.dbl();\n\n    points[0] = p;\n\n    for (let i = 1; i < size; i++)\n      points[i] = points[i - 1].add(dbl);\n\n    return new NAF(width, points);\n  }\n\n  _getNAF(width) {\n    assert((width >>> 0) === width);\n\n    if (this.pre && this.pre.naf)\n      return this.pre.naf;\n\n    if (width === 0)\n      return null;\n\n    const odds = this._safeNAF(width).points;\n    const points = this.curve.affinizeAll(odds);\n\n    return new NAF(width, points);\n  }\n\n  _getWindows(width, bits) {\n    assert((width >>> 0) === width);\n    assert((bits >>> 0) === bits);\n\n    if (this.pre && this.pre.windows)\n      return this.pre.windows;\n\n    if (width === 0)\n      return null;\n\n    const size = 1 << width;\n    const steps = ((bits + width - 1) / width) >>> 0;\n    const wnds = new Array(steps * size);\n\n    let g = this.toJ();\n\n    for (let i = 0; i < steps; i++) {\n      wnds[i * size] = this.curve.jpoint();\n\n      for (let j = 1; j < size; j++)\n        wnds[i * size + j] = wnds[i * size + j - 1].add(g);\n\n      g = g.dblp(width);\n    }\n\n    const points = this.curve.affinizeAll(wnds);\n\n    return new Windows(width, bits, points);\n  }\n\n  _getDoubles(step, power) {\n    assert((step >>> 0) === step);\n    assert((power >>> 0) === power);\n\n    if (this.pre && this.pre.doubles)\n      return this.pre.doubles;\n\n    if (step === 0)\n      return null;\n\n    const len = Math.ceil(power / step) + 1;\n    const dbls = new Array(len);\n\n    let acc = this.toJ();\n    let k = 0;\n\n    dbls[k++] = acc;\n\n    for (let i = 0; i < power; i += step) {\n      for (let j = 0; j < step; j++)\n        acc = acc.dbl();\n\n      dbls[k++] = acc;\n    }\n\n    assert(k === len);\n\n    const points = this.curve.affinizeAll(dbls);\n\n    return new Doubles(step, points);\n  }\n\n  _getBeta() {\n    return null;\n  }\n\n  _getBlinding(rng) {\n    if (this.pre && this.pre.blinding)\n      return this.pre.blinding;\n\n    if (!rng)\n      return null;\n\n    if (this.curve.n.isZero())\n      return null;\n\n    // Pregenerate a random blinding value:\n    //\n    //   blind = random integer in [1,n-1]\n    //   unblind = G * blind\n    //\n    // We intend to subtract the blinding value\n    // from scalars before multiplication. We\n    // can add the unblinding point once the\n    // multiplication is complete.\n    const blind = this.curve.randomScalar(rng);\n    const unblind = this.mul(blind);\n\n    return new Blinding(blind, unblind);\n  }\n\n  _hasWindows(k) {\n    assert(k instanceof BN);\n\n    if (!this.pre || !this.pre.windows)\n      return false;\n\n    const {width, bits} = this.pre.windows;\n    const steps = ((bits + width - 1) / width) >>> 0;\n\n    return k.bitLength() <= steps * width;\n  }\n\n  _hasDoubles(k) {\n    assert(k instanceof BN);\n\n    if (!this.pre || !this.pre.doubles)\n      return false;\n\n    const {step, points} = this.pre.doubles;\n    const power = k.bitLength() + 1;\n\n    return points.length >= Math.ceil(power / step) + 1;\n  }\n\n  _getJNAF(point) {\n    assert(point instanceof Point);\n    assert(point.type === this.type);\n\n    // Create comb for JSF.\n    return [\n      this, // 1\n      this.add(point), // 3\n      this.sub(point), // 5\n      point // 7\n    ];\n  }\n\n  _blind(k, rng) {\n    // [SIDE1] Page 5, Section 4.\n    // [BLIND] Page 20, Section 7.\n    assert(k instanceof BN);\n    assert(!k.red);\n\n    // Scalar splitting (requires precomputation).\n    //\n    // Blind a multiplication by first subtracting\n    // a blinding value from the scalar. Example:\n    //\n    //   b = random integer in [1,n-1]\n    //   B = P * b (precomputed)\n    //   Q = P * (k - b) + B\n    //\n    // Note that Joye describes a different method\n    // (multiplier randomization) which computes:\n    //\n    //   B = random point in E\n    //   Q = (P + B) * k - B * k\n    //\n    // Our method is more similar to the \"scalar\n    // splitting\" technique described in the\n    // second source above.\n    //\n    // The blinding value and its corresponding\n    // point are randomly generated and computed\n    // on boot. As long as an attacker is not\n    // able to observe the boot, this should give\n    // a decent bit of protection against various\n    // channel attacks.\n    if (this.pre && this.pre.blinding) {\n      const {blind, unblind} = this.pre.blinding;\n      const t = k.sub(blind);\n\n      return [this, t, unblind];\n    }\n\n    // Randomization is not possible without\n    // an RNG. Do a normal multiplication.\n    if (!rng)\n      return [this, k, null];\n\n    // If we have no precomputed blinding\n    // factor, there are two possibilities\n    // for randomization:\n    //\n    // 1. Randomize the multiplier by adding\n    //    a random multiple of `n`.\n    //\n    // 2. Re-scale the point itself by a\n    //    random factor.\n    //\n    // The first option can be accomplished\n    // with some like:\n    //\n    //   a = random integer in [1,n-1]\n    //   r = a * n\n    //   Q = P * (k + r)\n    //\n    // The second is accomplished with:\n    //\n    //   a = random element in F(p)\n    //   R = (x * a^2, y * a^3, z * a)\n    //   Q = R * k\n    //\n    // If we have precomputed doubles / naf\n    // points, we opt for the first method\n    // to avoid randomizing everything.\n    if (this.pre) {\n      if (this.curve.n.isZero())\n        return [this, k, null];\n\n      const a = this.curve.randomScalar(rng);\n      const r = a.mul(this.curve.n);\n      const t = r.iadd(k);\n\n      return [this, t, null];\n    }\n\n    // If there is no precomputation _at all_,\n    // we opt for the second method.\n    const p = this.randomize(rng);\n\n    return [p, k, null];\n  }\n\n  clone() {\n    throw new Error('Not implemented.');\n  }\n\n  precompute(bits, rng) {\n    assert((bits >>> 0) === bits);\n\n    if (!this.pre)\n      this.pre = new Precomp();\n\n    if (!this.pre.naf)\n      this.pre.naf = this._getNAF(9);\n\n    if (USE_FIXED && !this.pre.windows)\n      this.pre.windows = this._getWindows(4, bits);\n\n    if (!this.pre.doubles)\n      this.pre.doubles = this._getDoubles(4, bits + 1);\n\n    if (!this.pre.beta)\n      this.pre.beta = this._getBeta();\n\n    if (!this.pre.blinding)\n      this.pre.blinding = this._getBlinding(rng);\n\n    return this;\n  }\n\n  validate() {\n    return this.curve.validate(this);\n  }\n\n  normalize() {\n    return this;\n  }\n\n  scale(a) {\n    throw new Error('Not implemented.');\n  }\n\n  randomize(rng) {\n    const z = this.curve.randomField(rng);\n    return this.scale(z);\n  }\n\n  neg() {\n    throw new Error('Not implemented.');\n  }\n\n  add(point) {\n    throw new Error('Not implemented.');\n  }\n\n  sub(point) {\n    assert(point instanceof Point);\n    return this.add(point.neg());\n  }\n\n  dbl() {\n    throw new Error('Not implemented.');\n  }\n\n  dblp(pow) {\n    // Repeated doubling. This can\n    // be optimized by child classes.\n    assert((pow >>> 0) === pow);\n\n    let r = this;\n\n    for (let i = 0; i < pow; i++)\n      r = r.dbl();\n\n    return r;\n  }\n\n  diffAddDbl(p, q) {\n    throw new Error('Not implemented.');\n  }\n\n  getX() {\n    throw new Error('Not implemented.');\n  }\n\n  getY() {\n    throw new Error('Not implemented.');\n  }\n\n  eq(point) {\n    throw new Error('Not implemented.');\n  }\n\n  cmp(point) {\n    throw new Error('Not implemented.');\n  }\n\n  isInfinity() {\n    throw new Error('Not implemented.');\n  }\n\n  isOrder2() {\n    throw new Error('Not implemented.');\n  }\n\n  isOdd() {\n    throw new Error('Not implemented.');\n  }\n\n  isEven() {\n    throw new Error('Not implemented.');\n  }\n\n  isSquare() {\n    throw new Error('Not implemented.');\n  }\n\n  eqX(x) {\n    throw new Error('Not implemented.');\n  }\n\n  eqR(x) {\n    throw new Error('Not implemented.');\n  }\n\n  isSmall() {\n    // Test whether the point is of small order.\n    if (this.isInfinity())\n      return false;\n\n    // P * h = O\n    return this.jmulH().isInfinity();\n  }\n\n  hasTorsion() {\n    // Test whether the point is in another subgroup.\n    if (this.isInfinity())\n      return false;\n\n    // P * n != O\n    return !this.jmul(this.curve.n).isInfinity();\n  }\n\n  order() {\n    // Calculate point order.\n    const {h, n} = this.curve;\n\n    let p = this.toJ();\n    let q = new BN(1);\n\n    while (!p.isInfinity()) {\n      q.iaddn(1);\n\n      if (q.cmp(h) > 0) {\n        q = n.clone();\n        break;\n      }\n\n      p = p.add(this);\n    }\n\n    return q;\n  }\n\n  mul(k) {\n    return this.jmul(k);\n  }\n\n  muln(k) {\n    return this.jmuln(k);\n  }\n\n  mulBlind(k, rng) {\n    return this.jmulBlind(k, rng);\n  }\n\n  mulAdd(k1, p2, k2) {\n    return this.jmulAdd(k1, p2, k2);\n  }\n\n  mulH() {\n    return this.jmulH();\n  }\n\n  div(k) {\n    return this.jdiv(k);\n  }\n\n  divn(k) {\n    return this.jdivn(k);\n  }\n\n  divH() {\n    return this.jdivH();\n  }\n\n  jmul(k) {\n    if (USE_FIXED && this._hasWindows(k))\n      return this.curve._fixedMul(this, k);\n\n    if (this._hasDoubles(k))\n      return this.curve._fixedNafMul(this, k);\n\n    if (this.curve.endo && this.type === types.AFFINE)\n      return this.curve._endoWnafMulAdd([this], [k]);\n\n    return this.curve._wnafMul(5, this, k);\n  }\n\n  jmuln(k) {\n    assert((k | 0) === k);\n    return this.jmul(new BN(k));\n  }\n\n  jmulBlind(k, rng = null) {\n    const [p, t, unblind] = this._blind(k, rng);\n    const q = p.jmul(t);\n\n    if (unblind)\n      return q.add(unblind);\n\n    return q;\n  }\n\n  jmulAdd(k1, p2, k2) {\n    if (this.curve.endo && this.type === types.AFFINE)\n      return this.curve._endoWnafMulAdd([this, p2], [k1, k2]);\n\n    return this.curve._wnafMulAdd(5, [this, p2], [k1, k2]);\n  }\n\n  jmulH() {\n    const word = this.curve.h.word(0);\n\n    // Optimize for powers of two.\n    if ((word & (word - 1)) === 0) {\n      const bits = this.curve.h.bitLength();\n      return this.toJ().dblp(bits - 1);\n    }\n\n    return this.jmul(this.curve.h);\n  }\n\n  jdiv(k) {\n    assert(k instanceof BN);\n    assert(!k.red);\n\n    return this.jmul(k.invert(this.curve.n));\n  }\n\n  jdivn(k) {\n    assert(!this.curve.n.isZero());\n\n    if (this.curve.h.cmpn(k) === 0)\n      return this.jdivH();\n\n    return this.jdiv(new BN(k));\n  }\n\n  jdivH() {\n    if (this.curve.n.isZero())\n      return this.toJ();\n\n    if (this.curve.h.cmpn(1) === 0)\n      return this.toJ();\n\n    if (this.curve.hi === null)\n      this.curve.hi = this.curve.h.invert(this.curve.n);\n\n    return this.jmul(this.curve.hi);\n  }\n\n  toP() {\n    return this.normalize();\n  }\n\n  toJ() {\n    return this;\n  }\n\n  toX() {\n    return this;\n  }\n\n  key() {\n    if (this.isInfinity())\n      return `${this.curve.uid}:oo`;\n\n    this.normalize();\n\n    const x = this.getX().toString(16);\n    const y = this.getY().toString(16);\n\n    return `${this.curve.uid}:${x},${y}`;\n  }\n\n  encode(compact) {\n    throw new Error('Not implemented.');\n  }\n\n  static decode(curve, bytes) {\n    throw new Error('Not implemented.');\n  }\n\n  encodeX() {\n    throw new Error('Not implemented.');\n  }\n\n  static decodeX(curve, bytes) {\n    throw new Error('Not implemented.');\n  }\n\n  static decodeEven(curve, bytes) {\n    throw new Error('Not implemented.');\n  }\n\n  static decodeSquare(curve, bytes) {\n    throw new Error('Not implemented.');\n  }\n\n  toJSON(pre) {\n    throw new Error('Not implemented.');\n  }\n\n  static fromJSON(curve, json) {\n    throw new Error('Not implemented.');\n  }\n\n  [custom]() {\n    return '<Point>';\n  }\n}\n\n/**\n * ShortCurve\n */\n\nclass ShortCurve extends Curve {\n  constructor(conf) {\n    super(ShortPoint, 'short', conf);\n\n    this.a = BN.fromJSON(conf.a).toRed(this.red);\n    this.b = BN.fromJSON(conf.b).toRed(this.red);\n    this.c = BN.fromJSON(conf.c || '0').toRed(this.red);\n    this.ai = this.a.isZero() ? this.zero : this.a.redInvert();\n    this.zi = this.z.isZero() ? this.zero : this.z.redInvert();\n\n    this.zeroA = this.a.isZero();\n    this.threeA = this.a.eq(this.three.redNeg());\n    this.redN = this.n.toRed(this.red);\n    this.pmodn = this.p.clone();\n    this.highOrder = this.n.cmp(this.p) >= 0;\n    this.smallGap = false;\n\n    this._finalize(conf);\n  }\n\n  _finalize(conf) {\n    super._finalize(conf);\n\n    // Precalculate endomorphism.\n    if (conf.endo != null)\n      this.endo = Endo.fromJSON(this, conf.endo);\n    else\n      this.endo = this._getEndomorphism();\n\n    if (!this.n.isZero()) {\n      this.pmodn = this.p.mod(this.n);\n\n      // Check for Maxwell's trick (see eqR).\n      this.smallGap = this.p.div(this.n).cmpn(1) <= 0;\n    }\n\n    return this;\n  }\n\n  static _isomorphism(curveA, curveB, custom, odd) {\n    // Short Weierstrass Isomorphism.\n    //\n    // [GECC] Page 84, Section 3.1.5.\n    // [ARITH1] Page 274, Section 13.1.5.\n    // [ALT] Appendix F.3 (Isomorphic Mapping between Weierstrass Curves).\n    //\n    // Find `u` such that `a * u^4 = a'` and `b * u^6 = b'`.\n    //\n    // Transformation:\n    //\n    //   u4 = a' / a\n    //   u2 = +-sqrt(u4)\n    //   u6 = u4 * u2\n    //   a' = a * u4\n    //   b' = b * u6\n    //\n    // Where `u2` is any root that is square.\n    //\n    // If a = 0, we can do:\n    //\n    //   a' = 0\n    //   b' = b'\n    //\n    // Where (b' / b)^(1 / 3) is square.\n    //\n    // If b = 0, we can do:\n    //\n    //   a' = a'\n    //   b' = 0\n    //\n    // Where sqrt(a' / a) is square.\n    assert(curveA instanceof BN);\n    assert(curveB instanceof BN);\n    assert(custom instanceof BN);\n    assert(odd == null || typeof odd === 'boolean');\n    assert(!curveA.isZero() || !curveB.isZero());\n\n    if (custom.isZero())\n      throw new Error('Invalid coefficient.');\n\n    if (curveA.isZero()) {\n      const customB = custom;\n      const u6 = customB.redDiv(curveB);\n      // Todo: allow index flag.\n      const u2 = uncube(u6);\n\n      // Already checked in uncube().\n      assert(u2.redJacobi() === 1);\n\n      return [curveA.clone(), customB.clone()];\n    }\n\n    if (curveB.isZero()) {\n      const customA = custom;\n      const u4 = customA.redDiv(curveA);\n      const u2 = u4.redSqrt();\n\n      // Todo: allow odd flag.\n      if (u2.redJacobi() !== 1)\n        u2.redINeg();\n\n      if (u2.redJacobi() !== 1)\n        throw new Error('Invalid `a` coefficient.');\n\n      return [customA.clone(), curveB.clone()];\n    }\n\n    const customA = custom;\n    const u4 = customA.redDiv(curveA);\n    const u2 = u4.redSqrt();\n\n    if (odd != null) {\n      if (u2.redIsOdd() !== odd)\n        u2.redINeg();\n    } else {\n      if (u2.redJacobi() !== 1)\n        u2.redINeg();\n    }\n\n    if (u2.redJacobi() !== 1)\n      throw new Error('Invalid `a` coefficient.');\n\n    const u6 = u4.redMul(u2);\n    const a = curveA.redMul(u4);\n    const b = curveB.redMul(u6);\n\n    assert(a.eq(customA));\n\n    return [a, b];\n  }\n\n  _short(a0, odd) {\n    return ShortCurve._isomorphism(this.a, this.b, a0, odd);\n  }\n\n  _mont(b0, odd) {\n    // Short Weierstrass->Montgomery Equivalence.\n    //\n    // [ARITH1] Page 286, Section 13.2.3.c.\n    // [SAFE] \"Ladders\".\n    //\n    // Transformation:\n    //\n    //   r = A / (3 * B)\n    //   s = +-sqrt(3 * r^2 + a)\n    //   A = 3 * r / s\n    //   B = 1 / s\n    const [r, s] = this._findRS(odd);\n    const b = s.redInvert();\n    const a = r.redMuln(3).redMul(b);\n\n    if (b0 != null)\n      return MontCurve._isomorphism(a, b, b0);\n\n    return [a, b];\n  }\n\n  _edwards(a0, odd) {\n    // Short Weierstrass->Twisted Edwards Equivalence.\n    //\n    // [TWISTEQ] Section 1.\n    //\n    // Transformation:\n    //\n    //   r = (a' + d') / 6\n    //   s = +-sqrt(3 * r^2 + a)\n    //   a' = 3 * r + 2 * s\n    //   d' = 3 * r - 2 * s\n    const [r, s] = this._findRS(odd);\n    const r3 = r.redMuln(3);\n    const s2 = s.redMuln(2);\n    const a = r3.redAdd(s2);\n    const d = r3.redSub(s2);\n\n    if (a0 != null)\n      return EdwardsCurve._isomorphism(a, d, a0);\n\n    return [a, d];\n  }\n\n  _findRS(sign) {\n    // Find `r` and `s` for equivalence.\n    //\n    // [ARITH1] Page 286, Section 13.2.3.c.\n    // [SAFE] \"Ladders\".\n    //\n    // Computation:\n    //\n    //   r = solve(r^3 + a * r + b == 0, r)\n    //   s = +-sqrt(3 * r^2 + a)\n    //\n    // Computing `r` is non-trivial. We need\n    // to solve `r^3 + a * r + b = 0`, but we\n    // don't have a polynomial solver, so we\n    // loop over random points until we find\n    // one with 2-torsion. Multiplying by the\n    // subgroup order should yield a point of\n    // ((A / 3) / B, 0) which is a solution.\n    assert(sign == null || typeof sign === 'boolean');\n    assert(this.h.word(0) >= 4);\n    assert(!this.n.isZero());\n\n    const x = this.one.redNeg();\n\n    let p;\n\n    for (;;) {\n      x.redIAdd(this.one);\n\n      try {\n        p = this.pointFromX(x.clone());\n      } catch (e) {\n        continue;\n      }\n\n      p = p.mul(this.n);\n\n      if (p.isInfinity())\n        continue;\n\n      if (!p.y.isZero())\n        continue;\n\n      break;\n    }\n\n    const r = p.x;\n    const r2 = r.redSqr();\n    const s = r2.redMuln(3).redIAdd(this.a).redSqrt();\n\n    if (sign != null) {\n      if (s.redIsOdd() !== sign)\n        s.redINeg();\n    }\n\n    return [r, s];\n  }\n\n  _scale0(a, b) {\n    // We can extract the isomorphism factors with:\n    //\n    //   u4 = a' / a\n    //   u6 = b' / b\n    //   u2 = +-sqrt(u4)\n    //   u = +-sqrt(u2)\n    //   u3 = u2 * u\n    //\n    // `u2` should be picked such that `u4 * u2 = u6`.\n    //\n    // If a = 0, we can do:\n    //\n    //   u6 = b' / b\n    //   u2 = u6^(1 / 3)\n    //   u = +-sqrt(u2)\n    //   u3 = u2 * u\n    //\n    // Where `u2` is any root that is square.\n    //\n    // If b = 0, we can do:\n    //\n    //   u4 = a' / a\n    //   u2 = +-sqrt(u4)\n    //   u = +-sqrt(u2)\n    //   u3 = u2 * u\n    //\n    // Where `u2` is any root that is square.\n    assert(this.a.isZero() === a.isZero());\n    assert(this.b.isZero() === b.isZero());\n\n    if (this.a.isZero()) {\n      const u6 = this.b.redDiv(this.field(b));\n      // Todo: figure out how to check index.\n      const u2 = uncube(u6);\n      const u = u2.redSqrt();\n      const u3 = u2.redMul(u);\n\n      assert(u3.redSqr().eq(u6));\n      assert(!u.isZero());\n\n      return [u2, u3];\n    }\n\n    if (this.b.isZero()) {\n      const u4 = this.a.redDiv(this.field(a));\n      const u2 = u4.redSqrt();\n\n      // Todo: figure out how to check oddness.\n      if (u2.redJacobi() !== 1)\n        u2.redINeg();\n\n      const u = u2.redSqrt();\n      const u3 = u2.redMul(u);\n\n      assert(u3.redMul(u).eq(u4));\n      assert(!u.isZero());\n\n      return [u2, u3];\n    }\n\n    const u4 = this.a.redDiv(this.field(a));\n    const u6 = this.b.redDiv(this.field(b));\n    const u2 = u4.redSqrt();\n\n    if (!u4.redMul(u2).eq(u6))\n      u2.redINeg();\n\n    assert(u4.redMul(u2).eq(u6));\n\n    const u = u2.redSqrt();\n    const u3 = u2.redMul(u);\n\n    assert(!u.isZero());\n\n    return [u2, u3];\n  }\n\n  _scale1(x, y) {\n    // If base points are available, it is much\n    // easier, with:\n    //\n    //   u2 = x' / x\n    //   u3 = y' / y\n    //   u = +-sqrt(u2)\n    //\n    // `u` should be picked such that `u2 * u = u3`.\n    const u2 = this.g.x.redDiv(this.field(x));\n    const u3 = this.g.y.redDiv(this.field(y));\n    const u = u2.redSqrt();\n\n    if (!u2.redMul(u).eq(u3))\n      u.redINeg();\n\n    assert(u2.redMul(u).eq(u3));\n    assert(!u.isZero());\n\n    return [u2, u3];\n  }\n\n  _scaleShort(curve) {\n    assert(curve instanceof ShortCurve);\n\n    if (this.g.isInfinity() || curve.g.isInfinity())\n      return this._scale0(curve.a, curve.b);\n\n    return this._scale1(curve.g.x, curve.g.y);\n  }\n\n  _scaleMont(curve) {\n    assert(curve instanceof MontCurve);\n\n    if (this.g.isInfinity() || curve.g.isInfinity()) {\n      const [a, b] = curve._short();\n      return this._scale0(a, b);\n    }\n\n    const {x, y} = curve.g;\n    const nx = x.redAdd(curve.a3).redMul(curve.bi);\n    const ny = y.redMul(curve.bi);\n\n    return this._scale1(nx, ny);\n  }\n\n  _scaleEdwards(curve) {\n    assert(curve instanceof EdwardsCurve);\n\n    if (this.g.isInfinity() || curve.g.isInfinity()) {\n      const [a, b] = curve._short();\n      return this._scale0(a, b);\n    }\n\n    const {x, y, z} = curve.g;\n    const a5 = curve.a.redMuln(5);\n    const d5 = curve.d.redMuln(5);\n    const dma = curve.d.redSub(curve.a);\n    const d5a = d5.redSub(curve.a);\n    const da5 = curve.d.redSub(a5);\n    const ypz = y.redAdd(z);\n    const ymz = y.redSub(z);\n    const xx = d5a.redMul(y).redIAdd(da5.redMul(z));\n    const xz = ymz.redMuln(12);\n    const yy = dma.redMul(ypz).redMul(z);\n    const yz = ymz.redMul(x).redIMuln(4);\n    const zi = xz.redMul(yz).redInvert();\n    const nx = xx.redMul(yz).redMul(zi);\n    const ny = yy.redMul(xz).redMul(zi);\n\n    return this._scale1(nx, ny);\n  }\n\n  _getEndomorphism(index = 0) {\n    // Compute endomorphism.\n    //\n    // [GECC] Example 3.76, Page 128, Section 3.5.\n\n    // No curve params.\n    if (this.n.isZero() || this.g.isInfinity())\n      return null;\n\n    // No efficient endomorphism.\n    if (!this.zeroA || this.p.modrn(3) !== 1 || this.n.modrn(3) !== 1)\n      return null;\n\n    // Solve beta^3 mod p = 1.\n    const [b1, b2] = this._getEndoRoots(this.p);\n\n    // Choose the smallest beta by default.\n    const beta = [b1, b2][index & 1].toRed(this.red);\n\n    // Solve lambda^3 mod n = 1.\n    const [l1, l2] = this._getEndoRoots(this.n);\n\n    // Choose the lambda matching selected beta.\n    // Note that P * lambda = (x * beta, y).\n    const p = this.point(this.g.x.redMul(beta), this.g.y);\n\n    let lambda;\n\n    if (this.g.mul(l1).eq(p)) {\n      lambda = l1;\n    } else {\n      assert(this.g.mul(l2).eq(p));\n      lambda = l2;\n    }\n\n    // Get basis vectors.\n    const basis = this._getEndoBasis(lambda);\n\n    // Precompute `g1` and `g2`.\n    const pre = this._getEndoPrecomp(basis);\n\n    return new Endo(beta, lambda, basis, pre);\n  }\n\n  _getEndoRoots(num) {\n    // Find roots for x^2 + x + 1 in F.\n    //\n    // [GECC] Example 3.76, Page 128, Section 3.5.\n    // [GLV] Page 192, Section 2 (Endomorphisms).\n    //\n    // The above document doesn't fully explain how\n    // to derive these and only \"hints\" at it, as\n    // mentioned by Hal Finney[1], but we're basically\n    // computing two possible cube roots of 1 here.\n    //\n    // Note that we could also compute[2]:\n    //\n    //   beta = 2^((p - 1) / 3) mod p\n    //   lambda = 3^((n - 1) / 3) mod n\n    //\n    // As an extension of Fermat's little theorem:\n    //\n    //   g^(p - 1) mod p == 1\n    //\n    // It is suspected[3] this is how Hal Finney[4]\n    // computed his original endomorphism roots.\n    //\n    // @indutny's method for computing cube roots\n    // of unity[5] appears to be the method described\n    // on wikipedia[6][7].\n    //\n    // Sage produces the same solution:\n    //\n    //   sage: solve(x^2 + x + 1 == 0, x)\n    //   [x == -1/2*I*sqrt(3) - 1/2, x == 1/2*I*sqrt(3) - 1/2]\n    //\n    // This can be reduced to:\n    //\n    //   x = (+-sqrt(-3) - 1) / 2\n    //\n    // [1] https://bitcointalk.org/index.php?topic=3238.msg45565#msg45565\n    // [2] https://crypto.stackexchange.com/a/22739\n    // [3] https://bitcoin.stackexchange.com/a/35872\n    // [4] https://github.com/halfinney/bitcoin/commit/dc411b5\n    // [5] https://en.wikipedia.org/wiki/Cube_root_of_unity\n    // [6] https://en.wikipedia.org/wiki/Splitting_field#Cubic_example\n    // [7] http://mathworld.wolfram.com/SplittingField.html\n    const red = num === this.p ? this.red : BN.mont(num);\n    const two = new BN(2).toRed(red);\n    const three = new BN(3).toRed(red);\n    const i2 = two.redInvert();\n\n    // S1 = sqrt(-3) / 2\n    const s1 = three.redNeg().redSqrt().redMul(i2);\n\n    // S2 = -S1\n    const s2 = s1.redNeg();\n\n    // R1 = S1 - 1 / 2\n    const r1 = s1.redSub(i2).fromRed();\n\n    // R2 = S2 - 1 / 2\n    const r2 = s2.redSub(i2).fromRed();\n\n    return [r1, r2].sort(BN.cmp);\n  }\n\n  _getEndoBasis(lambda) {\n    // Compute endomorphic basis.\n    //\n    // This essentially computes Cornacchia's algorithm\n    // for solving x^2 + d * y^2 = m (d = lambda, m = order).\n    //\n    // https://en.wikipedia.org/wiki/Cornacchia%27s_algorithm\n    //\n    // [GECC] Algorithm 3.74, Page 127, Section 3.5.\n    // [GLV] Page 196, Section 4 (Decomposing K).\n    //\n    // Balanced length-two representation of a multiplier.\n    //\n    // 1. Run the extended euclidean algorithm with inputs n\n    //    and lambda. The algorithm produces a sequence of\n    //    equations si*n + ti*lam = ri where s0=1, t0=0,\n    //    r0=n, s1=0, t1=1, r1=lam, and the remainders ri\n    //    and are non-negative and strictly decreasing. Let\n    //    l be the greatest index for which rl >= sqrt(n).\n    const [rl, tl, rl1, tl1, rl2, tl2] = this._egcdSqrt(lambda);\n\n    // 2. Set (a1, b1) <- (rl+1, -tl+1).\n    const a1 = rl1;\n    const b1 = tl1.neg();\n\n    // 3. If (rl^2 + tl^2) <= (rl+2^2 + tl+2^2)\n    //    then set (a2, b2) <- (rl, -tl).\n    //    else set (a2, b2) <- (rl+2, -tl+2).\n    const lhs = rl.sqr().iadd(tl.sqr());\n    const rhs = rl2.sqr().iadd(tl2.sqr());\n\n    let a2, b2;\n\n    if (lhs.cmp(rhs) <= 0) {\n      a2 = rl;\n      b2 = tl.neg();\n    } else {\n      a2 = rl2;\n      b2 = tl2.neg();\n    }\n\n    return [\n      new Vector(a1, b1),\n      new Vector(a2, b2)\n    ];\n  }\n\n  _egcdSqrt(lambda) {\n    // Extended Euclidean algorithm for integers.\n    //\n    // [GECC] Algorithm 2.19, Page 40, Section 2.2.\n    // [GLV] Page 196, Section 4 (Decomposing K).\n    assert(lambda instanceof BN);\n    assert(!lambda.red);\n    assert(lambda.sign() > 0);\n    assert(this.n.sign() > 0);\n\n    // Note that we insert the approximate square\n    // root checks as described in algorithm 3.74.\n    //\n    // Algorithm 2.19 is defined as:\n    //\n    // 1. u <- a\n    //    v <- b\n    //\n    // 2. x1 <- 1\n    //    y1 <- 0\n    //    x2 <- 0\n    //    y2 <- 1\n    //\n    // 3. while u != 0 do\n    //\n    // 3.1. q <- floor(v / u)\n    //      r <- v - q * u\n    //      x <- x2 - q * x1\n    //      y <- y2 - q * y1\n    //\n    // 3.2. v <- u\n    //      u <- r\n    //      x2 <- x1\n    //      x1 <- x\n    //      y2 <- y1\n    //      y1 <- y\n    //\n    // 4. d <- v\n    //    x <- x2\n    //    y <- y2\n    //\n    // 5. Return (d, x, y).\n\n    // Start with an approximate square root of n.\n    const sqrtn = this.n.ushrn(this.n.bitLength() >>> 1);\n\n    let u = lambda; // r1\n    let v = this.n.clone(); // r0\n    let x1 = new BN(1); // t1\n    let y1 = new BN(0); // t0\n    let x2 = new BN(0); // s1\n    let y2 = new BN(1); // s0\n\n    // All vectors are roots of: a + b * lambda = 0 (mod n).\n    let rl, tl;\n\n    // First vector.\n    let rl1, tl1;\n\n    // Inner.\n    let i = 0;\n    let j = 0;\n    let p;\n\n    // Compute EGCD.\n    while (!u.isZero() && i < 2) {\n      const q = v.quo(u);\n      const r = v.sub(q.mul(u));\n      const x = x2.sub(q.mul(x1));\n      const y = y2.sub(q.mul(y1));\n\n      // Check for r < sqrt(n).\n      if (j === 0 && r.cmp(sqrtn) < 0) {\n        rl = p;\n        tl = x1;\n        rl1 = r;\n        tl1 = x;\n        j = 1; // 1 more round.\n      }\n\n      p = r;\n      v = u;\n      u = r;\n      x2 = x1;\n      x1 = x;\n      y2 = y1;\n      y1 = y;\n\n      i += j;\n    }\n\n    // Should never happen.\n    assert(j !== 0, 'Could not find r < sqrt(n).');\n\n    // Second vector.\n    const rl2 = x2;\n    const tl2 = x1;\n\n    return [\n      rl,\n      tl,\n      rl1,\n      tl1,\n      rl2,\n      tl2\n    ];\n  }\n\n  _getEndoPrecomp(basis) {\n    // Precompute `g1` and `g2` to avoid round division.\n    //\n    // [JCEN12] Page 5, Section 4.3.\n    //\n    // Computation:\n    //\n    //   d = a1 * b2 - b1 * a2\n    //   t = ceil(log2(d+1)) + p\n    //   g1 = round((2^t * b2) / d)\n    //   g2 = round((2^t * b1) / d)\n    //\n    // Where:\n    //\n    //   `p` is the number of precision bits.\n    //   `d` is equal to `n` (the curve order).\n    //\n    // The paper above uses 2 as the value of `p`,\n    // whereas libsecp256k1 uses 128 (total=384).\n    //\n    // We pick precision for `g1` and `g2` such that:\n    //\n    //   abs(g1) < n\n    //   abs(g2) < n\n    //\n    // This ensures maximum precision for the constants\n    // while also ensuring they fit into a fixed number\n    // of scalar limbs in more optimized implementations.\n    //\n    // Furthermore, we attempt to align to a limb width\n    // of 64 bits. This allows us to optimize the shift,\n    // a la libsecp256k1[1].\n    //\n    // [1] https://github.com/bitcoin-core/secp256k1/pull/822\n    assert(Array.isArray(basis));\n    assert(basis.length === 2);\n    assert(basis[0] instanceof Vector);\n    assert(basis[1] instanceof Vector);\n\n    const [v1, v2] = basis;\n    const d = v1.a.mul(v2.b).isub(v1.b.mul(v2.a));\n    const bits = d.bitLength();\n    const align = bits >= 160;\n\n    assert(d.eq(this.n));\n\n    // Start with a rough estimate.\n    let shift = bits + Math.ceil(bits / 2) + 1;\n    let g1, g2;\n\n    if (align)\n      shift -= shift & 63;\n\n    while (shift > bits) {\n      g1 = v2.b.ushln(shift).divRound(d);\n      g2 = v1.b.ushln(shift).divRound(d);\n\n      if (g1.ucmp(d) < 0 && g2.ucmp(d) < 0)\n        break;\n\n      if (align)\n        shift -= 64;\n      else\n        shift -= 1;\n    }\n\n    if (shift <= bits)\n      throw new Error('Could not calculate g1 and g2.');\n\n    return [shift, g1, g2];\n  }\n\n  _endoSplit(k) {\n    // Balanced length-two representation of a multiplier.\n    //\n    // [GECC] Algorithm 3.74, Page 127, Section 3.5.\n    //\n    // Also note that it is possible to precompute[1]\n    // values in order to avoid the division[2][3][4].\n    //\n    // This involves precomputing `g1` and `g2 (see\n    // above). `c1` and `c2` can then be computed as\n    // follows:\n    //\n    //   t = ceil(log2(n+1)) + p\n    //   c1 = (k * g1) >> t\n    //   c2 = -((k * g2) >> t)\n    //\n    // Where `>>` is an _unsigned_ right shift. Also\n    // note that the last bit discarded in the shift\n    // must be stored. If it is 1, then add 1 to the\n    // scalar (absolute addition).\n    //\n    // It's worth noting that libsecp256k1 uses a\n    // different calculation along the lines of:\n    //\n    //   t = ceil(log2(n+1)) + p\n    //   c1 = ((k * g1) >> t) * -b1\n    //   c2 = ((k * -g2) >> t) * -b2\n    //   k2 = c1 + c2\n    //   k1 = k2 * -lambda + k\n    //\n    // So, in the future, we can consider changing\n    // step 4 to:\n    //\n    //   4. Compute c1 = (k * g1) >> t\n    //          and c2 = -((k * g2) >> t).\n    //\n    //   const [shift, g1, g2] = this.endo.pre;\n    //   const c1 = k.mulShift(g1, shift);\n    //   const c2 = k.mulShift(g2, shift).ineg();\n    //\n    // Once we're brave enough, that is.\n    //\n    // [1] [JCEN12] Page 5, Section 4.3.\n    // [2] https://github.com/bitcoin-core/secp256k1/blob/0b70241/src/scalar_impl.h#L259\n    // [3] https://github.com/bitcoin-core/secp256k1/pull/21\n    // [4] https://github.com/bitcoin-core/secp256k1/pull/127\n    assert(k instanceof BN);\n    assert(!k.red);\n    assert(!this.n.isZero());\n\n    const [v1, v2] = this.endo.basis;\n\n    // 4. Compute c1 = round(b2 * k / n)\n    //        and c2 = round(-b1 * k / n).\n    const c1 = v2.b.mul(k).divRound(this.n);\n    const c2 = v1.b.neg().mul(k).divRound(this.n);\n\n    // 5. Compute k1 = k - c1 * a1 - c2 * a2\n    //        and k2 = -c1 * b1 - c2 * b2.\n    const p1 = c1.mul(v1.a);\n    const p2 = c2.mul(v2.a);\n    const q1 = c1.ineg().mul(v1.b);\n    const q2 = c2.mul(v2.b);\n\n    // Calculate answer.\n    const k1 = k.sub(p1).isub(p2);\n    const k2 = q1.isub(q2);\n\n    // 6. Return (k1, k2).\n    return [k1, k2];\n  }\n\n  _endoBeta(point) {\n    assert(point instanceof ShortPoint);\n    return [point, point._getBeta()];\n  }\n\n  _endoWnafMulAdd(points, coeffs) {\n    // Point multiplication with efficiently computable endomorphisms.\n    //\n    // [GECC] Algorithm 3.77, Page 129, Section 3.5.\n    // [GLV] Page 193, Section 3 (Using Efficient Endomorphisms).\n    //\n    // Note it may be possible to do this 4-dimensionally [4GLV].\n    assert(Array.isArray(points));\n    assert(Array.isArray(coeffs));\n    assert(points.length === coeffs.length);\n    assert(this.endo != null);\n\n    const len = points.length;\n    const npoints = new Array(len * 2);\n    const ncoeffs = new Array(len * 2);\n\n    for (let i = 0; i < len; i++) {\n      const [p1, p2] = this._endoBeta(points[i]);\n      const [k1, k2] = this._endoSplit(coeffs[i]);\n\n      npoints[i * 2 + 0] = p1;\n      ncoeffs[i * 2 + 0] = k1;\n      npoints[i * 2 + 1] = p2;\n      ncoeffs[i * 2 + 1] = k2;\n    }\n\n    return this._wnafMulAdd(5, npoints, ncoeffs);\n  }\n\n  _sswu(u) {\n    // Simplified Shallue-Woestijne-Ulas Method.\n    //\n    // Distribution: 3/8.\n    //\n    // [SSWU1] Page 15-16, Section 7. Appendix G.\n    // [SSWU2] Page 5, Theorem 2.3.\n    // [H2EC] \"Simplified Shallue-van de Woestijne-Ulas Method\".\n    //\n    // Assumptions:\n    //\n    //   - a != 0, b != 0.\n    //   - Let z be a non-square in F(p).\n    //   - z != -1.\n    //   - The polynomial g(x) - z is irreducible over F(p).\n    //   - g(b / (z * a)) is square in F(p).\n    //   - u != 0, u != +-sqrt(-1 / z).\n    //\n    // Map:\n    //\n    //   g(x) = x^3 + a * x + b\n    //   t1 = 1 / (z^2 * u^4 + z * u^2)\n    //   x1 = (-b / a) * (1 + t1)\n    //   x1 = b / (z * a), if t1 = 0\n    //   x2 = z * u^2 * x1\n    //   x = x1, if g(x1) is square\n    //     = x2, otherwise\n    //   y = sign(u) * abs(sqrt(g(x)))\n    const {b, z, ai, zi, one} = this;\n    const z2 = z.redSqr();\n    const ba = b.redNeg().redMul(ai);\n    const bza = b.redMul(zi).redMul(ai);\n    const u2 = u.redSqr();\n    const u4 = u2.redSqr();\n    const t0 = z2.redMul(u4).redIAdd(z.redMul(u2));\n    const t1 = t0.isZero() ? t0 : t0.redInvert();\n    const x1 = t1.isZero() ? bza : ba.redMul(one.redAdd(t1));\n    const x2 = z.redMul(u2).redMul(x1);\n    const y1 = this.solveY2(x1);\n    const y2 = this.solveY2(x2);\n    const alpha = y1.redIsSquare() | 0;\n    const x = [x1, x2][alpha ^ 1];\n    const y = [y1, y2][alpha ^ 1].redSqrt();\n\n    if (y.redIsOdd() !== u.redIsOdd())\n      y.redINeg();\n\n    return this.point(x, y);\n  }\n\n  _sswui(p, hint) {\n    // Inverting the Map (Simplified Shallue-Woestijne-Ulas).\n    //\n    // Assumptions:\n    //\n    //   - a^2 * x^2 - 2 * a * b * x - 3 * b^2 is square in F(p).\n    //   - If r < 3 then x != -b / a.\n    //\n    // Unlike SVDW, the preimages here are evenly\n    // distributed (more or less). SSWU covers ~3/8\n    // of the curve points. Each preimage has a 1/2\n    // chance of mapping to either x1 or x2.\n    //\n    // Assuming the point is within that set, each\n    // point has a 1/4 chance of inverting to any\n    // of the preimages. This means we can simply\n    // randomly select a preimage if one exists.\n    //\n    // However, the [SVDW2] sampling method seems\n    // slighly faster in practice for [SQUARED].\n    //\n    // Map:\n    //\n    //   c = sqrt(a^2 * x^2 - 2 * a * b * x - 3 * b^2)\n    //   u1 = -(a * x + b - c) / (2 * (a * x + b) * z)\n    //   u2 = -(a * x + b + c) / (2 * (a * x + b) * z)\n    //   u3 = -(a * x + b - c) / (2 * b * z)\n    //   u4 = -(a * x + b + c) / (2 * b * z)\n    //   r = random integer in [1,4]\n    //   u = sign(y) * abs(sqrt(ur))\n    const {a, b, z} = this;\n    const {x, y} = p;\n    const r = hint & 3;\n    const a2x2 = a.redSqr().redMul(x.redSqr());\n    const abx2 = a.redMul(b).redMul(x).redIMuln(2);\n    const b23 = b.redSqr().redMuln(3);\n    const axb = a.redMul(x).redIAdd(b);\n    const c = a2x2.redISub(abx2).redISub(b23).redSqrt();\n    const n0 = axb.redSub(c).redINeg();\n    const n1 = axb.redAdd(c).redINeg();\n    const d0 = axb.redMul(z).redIMuln(2);\n    const d1 = b.redMul(z).redIMuln(2);\n    const n = [n0, n1][r & 1]; // r = 1 or 3\n    const d = [d0, d1][r >>> 1]; // r = 2 or 3\n    const u = n.redDivSqrt(d);\n\n    if (u.redIsOdd() !== y.redIsOdd())\n      u.redINeg();\n\n    return u;\n  }\n\n  _svdwf(u) {\n    // Shallue-van de Woestijne Method.\n    //\n    // Distribution: 9/16.\n    //\n    // [SVDW1] Section 5.\n    // [SVDW2] Page 8, Section 3.\n    //         Page 15, Section 6, Algorithm 1.\n    // [H2EC] \"Shallue-van de Woestijne Method\".\n    //\n    // Assumptions:\n    //\n    //   - p = 1 (mod 3).\n    //   - a = 0, b != 0.\n    //   - Let z be a unique element in F(p).\n    //   - g((sqrt(-3 * z^2) - z) / 2) is square in F(p).\n    //   - u != 0, u != +-sqrt(-g(z)).\n    //\n    // Map:\n    //\n    //   g(x) = x^3 + b\n    //   c = sqrt(-3 * z^2)\n    //   t1 = u^2 + g(z)\n    //   t2 = 1 / (u^2 * t1)\n    //   t3 = u^4 * t2 * c\n    //   x1 = (c - z) / 2 - t3\n    //   x2 = t3 - (c + z) / 2\n    //   x3 = z - t1^3 * t2 / (3 * z^2)\n    //   x = x1, if g(x1) is square\n    //     = x2, if g(x2) is square\n    //     = x3, otherwise\n    //   y = sign(u) * abs(sqrt(g(x)))\n    const {c, z, zi, i2, i3} = this;\n    const gz = this.solveY2(z);\n    const z3 = i3.redMul(zi.redSqr());\n    const u2 = u.redSqr();\n    const u4 = u2.redSqr();\n    const t1 = u2.redAdd(gz);\n    const u2t1 = u2.redMul(t1);\n    const t2 = u2t1.isZero() ? u2t1 : u2t1.redInvert();\n    const t3 = u4.redMul(t2).redMul(c);\n    const t4 = t1.redSqr().redMul(t1);\n    const x1 = c.redSub(z).redMul(i2).redISub(t3);\n    const x2 = t3.redSub(c.redAdd(z).redMul(i2));\n    const x3 = z.redSub(t4.redMul(t2).redMul(z3));\n    const y1 = this.solveY2(x1);\n    const y2 = this.solveY2(x2);\n    const y3 = this.solveY2(x3);\n    const alpha = y1.redJacobi() | 1;\n    const beta = y2.redJacobi() | 1;\n    const i = mod((alpha - 1) * beta, 3);\n    const x = [x1, x2, x3][i];\n    const y = [y1, y2, y3][i];\n\n    return [x, y];\n  }\n\n  _svdw(u) {\n    const [x, yy] = this._svdwf(u);\n    const y = yy.redSqrt();\n\n    if (y.redIsOdd() !== u.redIsOdd())\n      y.redINeg();\n\n    return this.point(x, y);\n  }\n\n  _svdwi(p, hint) {\n    // Inverting the Map (Shallue-van de Woestijne).\n    //\n    // [SQUARED] Algorithm 1, Page 8, Section 3.3.\n    // [SVDW2] Page 12, Section 5.\n    // [SVDW3] \"Inverting the map\".\n    //\n    // Assumptions:\n    //\n    //   - If r = 1 then x != -(c + z) / 2.\n    //   - If r = 2 then x != (c - z) / 2.\n    //   - If r > 2 then (t0 - t1 + t2) is square in F(p).\n    //   - f(f^-1(x)) = x where f is the map function.\n    //\n    // We use the sampling method from [SVDW2],\n    // _not_ [SQUARED]. This seems to have a\n    // better distribution in practice.\n    //\n    // Note that [SVDW3] also appears to be\n    // incorrect in terms of distribution.\n    //\n    // The distribution of f(u), assuming u is\n    // random, is (1/2, 1/4, 1/4).\n    //\n    // To mirror this, f^-1(x) should simply\n    // pick (1/2, 1/4, 1/8, 1/8).\n    //\n    // To anyone running the forward map, our\n    // strings will appear to be random.\n    //\n    // Map:\n    //\n    //   g(x) = x^3 + b\n    //   c = sqrt(-3 * z^2)\n    //   t0 = 9 * (x^2 * z^2 + z^4)\n    //   t1 = 18 * x * z^3\n    //   t2 = 12 * g(z) * (x - z)\n    //   t3 = sqrt(t0 - t1 + t2)\n    //   t4 = t3 * z\n    //   u1 = g(z) * (c - 2 * x - z) / (c + 2 * x + z)\n    //   u2 = g(z) * (c + 2 * x + z) / (c - 2 * x - z)\n    //   u3 = (3 * (z^3 - x * z^2) - 2 * g(z) + t4) / 2\n    //   u4 = (3 * (z^3 - x * z^2) - 2 * g(z) - t4) / 2\n    //   r = random integer in [1,4]\n    //   u = sign(y) * abs(sqrt(ur))\n    const {b, c, z, zero, two} = this;\n    const {x, y} = p;\n    const r = hint & 3;\n    const z2 = z.redSqr();\n    const z3 = z2.redMul(z);\n    const z4 = z2.redSqr();\n    const gz = z3.redAdd(b);\n    const gz2 = gz.redMuln(2);\n    const xx = x.redSqr();\n    const x2z = x.redMuln(2).redIAdd(z);\n    const xz2 = x.redMul(z2);\n    const c0 = c.redSub(x2z);\n    const c1 = c.redAdd(x2z);\n    const t0 = xx.redMul(z2).redIAdd(z4).redIMuln(9);\n    const t1 = x.redMul(z3).redIMuln(18);\n    const t2 = gz.redMul(x.redSub(z)).redIMuln(12);\n    const t3 = r >= 2 ? t0.redISub(t1).redIAdd(t2).redSqrt() : zero;\n    const t4 = t3.redMul(z);\n    const t5 = z3.redISub(xz2).redIMuln(3).redISub(gz2);\n    const n0 = gz.redMul(c0);\n    const n1 = gz.redMul(c1);\n    const n2 = t5.redAdd(t4);\n    const n3 = t5.redSub(t4);\n    const d2 = two;\n    const n = [n0, n1, n2, n3][r];\n    const d = [c1, c0, d2, d2][r];\n    const u = n.redDivSqrt(d);\n    const [x0] = this._svdwf(u);\n\n    if (!x0.eq(x))\n      throw new Error('Invalid point.');\n\n    if (u.redIsOdd() !== y.redIsOdd())\n      u.redINeg();\n\n    return u;\n  }\n\n  isElliptic() {\n    const {a, b} = this;\n    const a2 = a.redSqr();\n    const a3 = a2.redMul(a);\n    const b2 = b.redSqr();\n    const d = b2.redMuln(27).redIAdd(a3.redMuln(4));\n\n    // 4 * a^3 + 27 * b^2 != 0\n    return !d.isZero();\n  }\n\n  jinv() {\n    // [ARITH1] Page 71, Section 4.4.\n    // http://mathworld.wolfram.com/j-Invariant.html\n    const {a, b} = this;\n    const a2 = a.redSqr();\n    const a3 = a2.redMul(a);\n    const b2 = b.redSqr();\n    const t0 = a3.redMuln(4);\n    const lhs = t0.redMuln(1728);\n    const rhs = b2.redMuln(27).redIAdd(t0);\n\n    if (rhs.isZero())\n      throw new Error('Curve is not elliptic.');\n\n    // (1728 * 4 * a^3) / (4 * a^3 + 27 * b^2)\n    return lhs.redDiv(rhs).fromRed();\n  }\n\n  point(x, y) {\n    return new ShortPoint(this, x, y);\n  }\n\n  jpoint(x, y, z) {\n    return new JPoint(this, x, y, z);\n  }\n\n  solveX(y) {\n    assert(y instanceof BN);\n\n    if (!this.a.isZero())\n      throw new Error('Not implemented.');\n\n    // x^3 = y^2 - b\n    const y2 = y.redSqr();\n    const x3 = y2.redSub(this.b);\n\n    return cubeRoots(x3);\n  }\n\n  solveY2(x) {\n    // [GECC] Page 89, Section 3.2.2.\n    // https://hyperelliptic.org/EFD/g1p/auto-shortw.html\n    assert(x instanceof BN);\n\n    // y^2 = x^3 + a * x + b\n    const x3 = x.redSqr().redMul(x);\n    const y2 = x3.redIAdd(this.b);\n\n    if (!this.zeroA) {\n      // Save some cycles for a = -3.\n      if (this.threeA)\n        y2.redIAdd(x.redMuln(-3));\n      else\n        y2.redIAdd(this.a.redMul(x));\n    }\n\n    return y2;\n  }\n\n  validate(point) {\n    assert(point instanceof ShortPoint);\n\n    if (point.inf)\n      return true;\n\n    const {x, y} = point;\n    const y2 = this.solveY2(x);\n\n    return y.redSqr().eq(y2);\n  }\n\n  pointFromX(x, sign = null) {\n    assert(x instanceof BN);\n    assert(sign == null || typeof sign === 'boolean');\n\n    if (!x.red)\n      x = x.toRed(this.red);\n\n    const y = this.solveY(x);\n\n    if (sign != null) {\n      if (this.h.cmpn(1) > 0) {\n        if (y.isZero() && sign)\n          throw new Error('Invalid point.');\n      }\n\n      if (y.redIsOdd() !== sign)\n        y.redINeg();\n    }\n\n    return this.point(x, y);\n  }\n\n  pointFromY(y, index = 0) {\n    assert(y instanceof BN);\n    assert((index >>> 0) === index);\n\n    if (!y.red)\n      y = y.toRed(this.red);\n\n    const coords = this.solveX(y);\n\n    if (index >= coords.length)\n      throw new Error('Invalid X coordinate index.');\n\n    const x = coords[index];\n\n    return this.point(x, y);\n  }\n\n  isIsomorphic(curve) {\n    // [GECC] Page 84, Section 3.1.5.\n    // [ARITH1] Page 286, Section 13.2.3.c.\n    assert(curve instanceof Curve);\n\n    if (!curve.p.eq(this.p))\n      return false;\n\n    let u2, u3;\n    try {\n      [u2, u3] = this._scale(curve);\n    } catch (e) {\n      return false;\n    }\n\n    // E(a,b) <-> E(au^4,bu^6)\n    if (curve.type === 'short') {\n      // a' = a * u^4, b' = b * u^6\n      const a = this.field(curve.a).redMul(u2.redSqr());\n      const b = this.field(curve.b).redMul(u3.redSqr());\n\n      return this.a.eq(a) && this.b.eq(b);\n    }\n\n    // E(a,b) <-> M(A,B)\n    if (curve.type === 'mont') {\n      // (A / (3 * B))^3 + a * (A / (3 * B)) + b = 0\n      const {a3, bi} = curve;\n      const x = this.field(a3.redMul(bi)).redMul(u2);\n      const y2 = this.solveY2(x);\n\n      return y2.isZero();\n    }\n\n    // E(a,b) <-> E(a,d)\n    if (curve.type === 'edwards') {\n      // ((a' + d') / 6)^3 + a * ((a' + d') / 6) + b = 0\n      const x = this.field(curve.ad6).redMul(u2);\n      const y2 = this.solveY2(x);\n\n      return y2.isZero();\n    }\n\n    return false;\n  }\n\n  isIsogenous(curve) {\n    assert(curve instanceof Curve);\n    return false;\n  }\n\n  pointFromShort(point) {\n    // [GECC] Page 84, Section 3.1.5.\n    // [ALT] Appendix F.3 (Isomorphic Mapping between Weierstrass Curves).\n    assert(point instanceof ShortPoint);\n\n    if (this.isIsomorphic(point.curve)) {\n      // Isomorphic maps for E(a,b)<->E(au^4,bu^6):\n      //\n      //   x' = x * u^2\n      //   y' = y * u^3\n      //\n      // Where a * u^4 = a' and b * u^6 = b'.\n      if (point.isInfinity())\n        return this.point();\n\n      const [u2, u3] = this._scale(point.curve);\n      const x = this.field(point.x);\n      const y = this.field(point.y);\n      const nx = x.redMul(u2);\n      const ny = y.redMul(u3);\n\n      return this.point(nx, ny);\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromMont(point) {\n    // [ALT] Appendix E.2 (Switching between Alternative Representations).\n    // [MONT2] \"Equivalence with Weierstrass curves\"\n    assert(point instanceof MontPoint);\n\n    if (this.isIsomorphic(point.curve)) {\n      // Equivalence for M(A,B)->E(a,b):\n      //\n      //   x = (u + A / 3) / B\n      //   y = v / B\n      //\n      // Undefined if ((u^3 + A * u^2 + u) / B) is not square.\n      if (point.isInfinity())\n        return this.point();\n\n      const {a3, bi} = point.curve;\n      const [u2, u3] = this._scale(point.curve);\n      const nx = point.x.redAdd(a3).redMul(bi);\n      const ny = point.y.redMul(bi);\n\n      return this.point(this.field(nx).redMul(u2),\n                        this.field(ny).redMul(u3));\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromEdwards(point) {\n    // [TWISTEQ] Section 2.\n    assert(point instanceof EdwardsPoint);\n\n    if (this.isIsomorphic(point.curve)) {\n      // Equivalence for E(a,d)->E(a',b'):\n      //\n      //   x' = ((5 * d - a) * y + d - 5 * a) / (12 * (y - 1))\n      //   y' = (d - a) * (y + 1) / (4 * x * (y - 1))\n      //\n      // Undefined for x = 0 or y = 1.\n      //\n      // Exceptional Cases:\n      //   - (0, 1) -> O\n      //   - (0, -1) -> ((a + d) / 6, 0)\n      //\n      // Unexceptional Cases:\n      //   - (sqrt(1 / a), 0) -> ((5 * a - d) / 12, (a - d) / 4 * sqrt(a))\n      const {a, d, ad6} = point.curve;\n      const [u2, u3] = this._scale(point.curve);\n\n      if (point.isInfinity())\n        return this.point();\n\n      if (point.x.isZero()) {\n        const x = this.field(ad6).redMul(u2);\n        return this.point(x, this.zero);\n      }\n\n      const {x, y, z} = point;\n      const a5 = a.redMuln(5);\n      const d5 = d.redMuln(5);\n      const dma = d.redSub(a);\n      const d5a = d5.redSub(a);\n      const da5 = d.redSub(a5);\n      const ypz = y.redAdd(z);\n      const ymz = y.redSub(z);\n      const xx = d5a.redMul(y).redIAdd(da5.redMul(z));\n      const xz = ymz.redMuln(12);\n      const yy = dma.redMul(ypz).redMul(z);\n      const yz = ymz.redMul(x).redIMuln(4);\n\n      return this.cpoint(this.field(xx).redMul(u2),\n                         this.field(xz),\n                         this.field(yy).redMul(u3),\n                         this.field(yz));\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromUniform(u) {\n    assert(u instanceof BN);\n\n    // z = 0 or b = 0\n    if (this.z.isZero() || this.b.isZero())\n      throw new Error('Not implemented.');\n\n    // a != 0, b != 0\n    if (!this.a.isZero())\n      return this._sswu(u);\n\n    // p = 1 mod 3, a = 0, b != 0\n    if (!this.c.isZero())\n      return this._svdw(u);\n\n    throw new Error('Not implemented.');\n  }\n\n  pointToUniform(p, hint) {\n    // Convert a short weierstrass point to a field\n    // element by inverting either the SSWU or SVDW\n    // map.\n    //\n    // Hint Layout:\n    //\n    //   [00000000] [0000] [0000]\n    //        |        |      |\n    //        |        |      +-- preimage index\n    //        |        +--- subgroup\n    //        +-- bits to OR with uniform bytes\n    assert(p instanceof ShortPoint);\n    assert((hint >>> 0) === hint);\n\n    // z = 0 or b = 0\n    if (this.z.isZero() || this.b.isZero())\n      throw new Error('Not implemented.');\n\n    // P = O\n    if (p.isInfinity())\n      throw new Error('Invalid point.');\n\n    // Add a random torsion component.\n    const i = ((hint >>> 4) & 15) % this.torsion.length;\n    const q = p.add(this.torsion[i]);\n\n    return wrapErrors(() => {\n      // a != 0, b != 0\n      if (!this.a.isZero())\n        return this._sswui(q, hint);\n\n      // p = 1 mod 3, a = 0, b != 0\n      if (!this.c.isZero())\n        return this._svdwi(q, hint);\n\n      throw new Error('Not implemented.');\n    });\n  }\n\n  mulAll(points, coeffs) {\n    return super.mulAll(points, coeffs).toP();\n  }\n\n  affinizeAll(points) {\n    const out = this.normalizeAll(points);\n\n    for (let i = 0; i < out.length; i++)\n      out[i] = out[i].toP();\n\n    return out;\n  }\n\n  decodePoint(bytes) {\n    return ShortPoint.decode(this, bytes);\n  }\n\n  encodeX(point) {\n    assert(point instanceof Point);\n    return point.encodeX();\n  }\n\n  decodeEven(bytes) {\n    return ShortPoint.decodeEven(this, bytes);\n  }\n\n  decodeSquare(bytes) {\n    return ShortPoint.decodeSquare(this, bytes);\n  }\n\n  toShort(a0, odd, sign = null) {\n    const [a, b] = this._short(a0, odd);\n\n    const curve = new ShortCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      b: b,\n      n: this.n,\n      h: this.h\n    });\n\n    if (sign != null) {\n      const [, u3] = curve._scale(this);\n\n      if (u3.redIsOdd() !== sign)\n        u3.redINeg();\n    }\n\n    if (!this.g.isInfinity())\n      curve.g = curve.pointFromShort(this.g);\n\n    for (let i = 0; i < this.h.word(0); i++)\n      curve.torsion[i] = curve.pointFromShort(this.torsion[i]);\n\n    return curve;\n  }\n\n  toMont(b0, odd, sign = null) {\n    const [a, b] = this._mont(b0, odd);\n\n    const curve = new MontCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      b: b,\n      n: this.n,\n      h: this.h\n    });\n\n    if (sign != null) {\n      const [, u3] = this._scale(curve);\n\n      if (u3.redIsOdd() !== sign)\n        u3.redINeg();\n    }\n\n    if (!this.g.isInfinity())\n      curve.g = curve.pointFromShort(this.g);\n\n    for (let i = 0; i < this.h.word(0); i++)\n      curve.torsion[i] = curve.pointFromShort(this.torsion[i]);\n\n    return curve;\n  }\n\n  toEdwards(a0, odd, sign = null) {\n    const [a, d] = this._edwards(a0, odd);\n\n    const curve = new EdwardsCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      d: d,\n      n: this.n,\n      h: this.h\n    });\n\n    if (sign != null) {\n      const [, u3] = this._scale(curve);\n\n      if (u3.redIsOdd() !== sign)\n        u3.redINeg();\n    }\n\n    if (!this.g.isInfinity()) {\n      curve.g = curve.pointFromShort(this.g);\n      curve.g.normalize();\n    }\n\n    if (curve.isComplete()) {\n      for (let i = 0; i < this.h.word(0); i++) {\n        curve.torsion[i] = curve.pointFromShort(this.torsion[i]);\n        curve.torsion[i].normalize();\n      }\n    }\n\n    return curve;\n  }\n\n  pointFromJSON(json) {\n    return ShortPoint.fromJSON(this, json);\n  }\n\n  toJSON(pre) {\n    const json = super.toJSON(pre);\n\n    json.a = this.a.fromRed().toJSON();\n    json.b = this.b.fromRed().toJSON();\n\n    if (!this.c.isZero())\n      json.c = this.c.fromRed().toJSON();\n\n    return json;\n  }\n}\n\n/**\n * ShortPoint\n */\n\nclass ShortPoint extends Point {\n  constructor(curve, x, y) {\n    assert(curve instanceof ShortCurve);\n\n    super(curve, types.AFFINE);\n\n    this.x = this.curve.zero;\n    this.y = this.curve.zero;\n    this.inf = true;\n\n    if (x != null)\n      this._init(x, y);\n  }\n\n  _init(x, y) {\n    assert(x instanceof BN);\n    assert(y instanceof BN);\n\n    this.x = x;\n    this.y = y;\n\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n\n    this.inf = false;\n  }\n\n  _getBeta() {\n    if (!this.curve.endo)\n      return null;\n\n    if (this.pre && this.pre.beta)\n      return this.pre.beta;\n\n    // Augment the point with our beta value.\n    // This is the counterpart to `k2` after\n    // the endomorphism split of `k`.\n    //\n    // Note that if we have precomputation,\n    // we have to clone and update all of the\n    // precomputed points below.\n    const xb = this.x.redMul(this.curve.endo.beta);\n    const beta = this.curve.point(xb, this.y);\n\n    if (this.pre) {\n      beta.pre = this.pre.map((point) => {\n        const xb = point.x.redMul(this.curve.endo.beta);\n        return this.curve.point(xb, point.y);\n      });\n\n      this.pre.beta = beta;\n    }\n\n    return beta;\n  }\n\n  _getJNAF(point) {\n    assert(point instanceof ShortPoint);\n\n    if (this.inf || point.inf)\n      return super._getJNAF(point);\n\n    // Create comb for JSF.\n    const comb = [\n      this, // 1\n      null, // 3\n      null, // 5\n      point // 7\n    ];\n\n    // Try to avoid Jacobian points, if possible.\n    if (this.y.eq(point.y)) {\n      comb[1] = this.add(point);\n      comb[2] = this.toJ().sub(point);\n    } else if (this.y.eq(point.y.redNeg())) {\n      comb[1] = this.toJ().add(point);\n      comb[2] = this.sub(point);\n    } else {\n      comb[1] = this.toJ().add(point);\n      comb[2] = this.toJ().sub(point);\n    }\n\n    return comb;\n  }\n\n  clone() {\n    if (this.inf)\n      return this.curve.point();\n\n    return this.curve.point(this.x, this.y);\n  }\n\n  scale(a) {\n    return this.toJ().scale(a);\n  }\n\n  neg() {\n    // P = O\n    if (this.inf)\n      return this;\n\n    // -(X1, Y1) = (X1, -Y1)\n    return this.curve.point(this.x, this.y.redNeg());\n  }\n\n  add(p) {\n    // [GECC] Page 80, Section 3.1.2.\n    //\n    // Addition Law:\n    //\n    //   l = (y1 - y2) / (x1 - x2)\n    //   x3 = l^2 - x1 - x2\n    //   y3 = l * (x1 - x3) - y1\n    //\n    // 1I + 2M + 1S + 6A\n    assert(p instanceof ShortPoint);\n\n    // O + P = P\n    if (this.inf)\n      return p;\n\n    // P + O = P\n    if (p.inf)\n      return this;\n\n    // P + P, P + -P\n    if (this.x.eq(p.x)) {\n      // P + -P = O\n      if (!this.y.eq(p.y))\n        return this.curve.point();\n\n      // P + P = 2P\n      return this.dbl();\n    }\n\n    // X1 != X2, Y1 = Y2\n    if (this.y.eq(p.y)) {\n      // X3 = -X1 - X2\n      const nx = this.x.redNeg().redISub(p.x);\n\n      // Y3 = -Y1\n      const ny = this.y.redNeg();\n\n      // Skip the inverse.\n      return this.curve.point(nx, ny);\n    }\n\n    // H = X1 - X2\n    const h = this.x.redSub(p.x);\n\n    // R = Y1 - Y2\n    const r = this.y.redSub(p.y);\n\n    // L = R / H\n    const l = r.redDiv(h);\n\n    // X3 = L^2 - X1 - X2\n    const nx = l.redSqr().redISub(this.x).redISub(p.x);\n\n    // Y3 = L * (X1 - X3) - Y1\n    const ny = l.redMul(this.x.redSub(nx)).redISub(this.y);\n\n    return this.curve.point(nx, ny);\n  }\n\n  dbl() {\n    // [GECC] Page 80, Section 3.1.2.\n    //\n    // Addition Law (doubling):\n    //\n    //   l = (3 * x1^2 + a) / (2 * y1)\n    //   x3 = l^2 - 2 * x1\n    //   y3 = l * (x1 - x3) - y1\n    //\n    // 1I + 2M + 2S + 3A + 2*2 + 1*3\n\n    // P = O\n    if (this.inf)\n      return this;\n\n    // Y1 = 0\n    if (this.y.isZero())\n      return this.curve.point();\n\n    // XX = X1^2\n    const xx = this.x.redSqr();\n\n    // M = 3 * XX + a\n    const m = xx.redIMuln(3).redIAdd(this.curve.a);\n\n    // Z = 2 * Y1\n    const z = this.y.redMuln(2);\n\n    // L = M / Z\n    const l = m.redDiv(z);\n\n    // X3 = L^2 - 2 * X1\n    const nx = l.redSqr().redISub(this.x).redISub(this.x);\n\n    // Y3 = L * (X1 - X3) - Y1\n    const ny = l.redMul(this.x.redSub(nx)).redISub(this.y);\n\n    return this.curve.point(nx, ny);\n  }\n\n  dblp(pow) {\n    return this.toJ().dblp(pow).toP();\n  }\n\n  getX() {\n    if (this.inf)\n      throw new Error('Invalid point.');\n\n    return this.x.fromRed();\n  }\n\n  getY() {\n    if (this.inf)\n      throw new Error('Invalid point.');\n\n    return this.y.fromRed();\n  }\n\n  eq(p) {\n    assert(p instanceof ShortPoint);\n\n    // P = Q\n    if (this === p)\n      return true;\n\n    // P = O\n    if (this.inf)\n      return p.inf;\n\n    // Q = O\n    if (p.inf)\n      return false;\n\n    // X1 = X2, Y1 = Y2\n    return this.x.eq(p.x)\n        && this.y.eq(p.y);\n  }\n\n  cmp(point) {\n    assert(point instanceof ShortPoint);\n\n    if (this.inf && !point.inf)\n      return -1;\n\n    if (!this.inf && point.inf)\n      return 1;\n\n    if (this.inf && point.inf)\n      return 0;\n\n    return this.order().cmp(point.order())\n        || this.getX().cmp(point.getX())\n        || this.getY().cmp(point.getY());\n  }\n\n  isInfinity() {\n    // Infinity cannot be represented in\n    // the affine space, except by a flag.\n    return this.inf;\n  }\n\n  isOrder2() {\n    if (this.inf)\n      return false;\n\n    return this.y.isZero();\n  }\n\n  isOdd() {\n    if (this.inf)\n      return false;\n\n    return this.y.redIsOdd();\n  }\n\n  isEven() {\n    if (this.inf)\n      return false;\n\n    return this.y.redIsEven();\n  }\n\n  isSquare() {\n    if (this.inf)\n      return false;\n\n    return this.y.redJacobi() !== -1;\n  }\n\n  eqX(x) {\n    assert(x instanceof BN);\n    assert(!x.red);\n\n    if (this.inf)\n      return false;\n\n    return this.getX().eq(x);\n  }\n\n  eqR(x) {\n    assert(x instanceof BN);\n    assert(!x.red);\n    assert(!this.curve.n.isZero());\n\n    if (this.inf)\n      return false;\n\n    return this.getX().imod(this.curve.n).eq(x);\n  }\n\n  mul(k) {\n    return super.mul(k).toP();\n  }\n\n  muln(k) {\n    return super.muln(k).toP();\n  }\n\n  mulBlind(k, rng) {\n    return super.mulBlind(k, rng).toP();\n  }\n\n  mulAdd(k1, p2, k2) {\n    return super.mulAdd(k1, p2, k2).toP();\n  }\n\n  mulH() {\n    return super.mulH().toP();\n  }\n\n  div(k) {\n    return super.div(k).toP();\n  }\n\n  divn(k) {\n    return super.divn(k).toP();\n  }\n\n  divH() {\n    return super.divH().toP();\n  }\n\n  toP() {\n    return this;\n  }\n\n  toJ() {\n    // (X3, Y3, Z3) = (1, 1, 0)\n    if (this.inf)\n      return this.curve.jpoint();\n\n    // (X3, Y3, Z3) = (X1, Y1, 1)\n    return this.curve.jpoint(this.x, this.y, this.curve.one);\n  }\n\n  encode(compact) {\n    // [SEC1] Page 10, Section 2.3.3.\n    if (compact == null)\n      compact = true;\n\n    assert(typeof compact === 'boolean');\n\n    const {fieldSize} = this.curve;\n\n    // We do not serialize points at infinity.\n    if (this.inf)\n      throw new Error('Invalid point.');\n\n    // Compressed form (0x02 = even, 0x03 = odd).\n    if (compact) {\n      const p = Buffer.alloc(1 + fieldSize);\n      const x = this.curve.encodeField(this.getX());\n\n      p[0] = 0x02 | this.y.redIsOdd();\n      x.copy(p, 1);\n\n      return p;\n    }\n\n    // Uncompressed form (0x04).\n    const p = Buffer.alloc(1 + fieldSize * 2);\n    const x = this.curve.encodeField(this.getX());\n    const y = this.curve.encodeField(this.getY());\n\n    p[0] = 0x04;\n    x.copy(p, 1);\n    y.copy(p, 1 + fieldSize);\n\n    return p;\n  }\n\n  static decode(curve, bytes) {\n    // [SEC1] Page 11, Section 2.3.4.\n    assert(curve instanceof ShortCurve);\n    assert(Buffer.isBuffer(bytes));\n\n    const len = curve.fieldSize;\n\n    if (bytes.length < 1 + len)\n      throw new Error('Not a point.');\n\n    // Point forms:\n    //\n    //   0x00 -> Infinity (openssl, unsupported)\n    //   0x02 -> Compressed Even\n    //   0x03 -> Compressed Odd\n    //   0x04 -> Uncompressed\n    //   0x06 -> Hybrid Even (openssl)\n    //   0x07 -> Hybrid Odd (openssl)\n    //\n    // Note that openssl supports serializing points\n    // at infinity as {0}. We choose not to support it\n    // because it's strange and not terribly useful.\n    const form = bytes[0];\n\n    switch (form) {\n      case 0x02:\n      case 0x03: {\n        if (bytes.length !== 1 + len)\n          throw new Error('Invalid point size for compressed.');\n\n        const x = curve.decodeField(bytes.slice(1, 1 + len));\n\n        if (x.cmp(curve.p) >= 0)\n          throw new Error('Invalid point.');\n\n        const p = curve.pointFromX(x, form === 0x03);\n\n        assert(!p.isInfinity());\n\n        return p;\n      }\n\n      case 0x04:\n      case 0x06:\n      case 0x07: {\n        if (bytes.length !== 1 + len * 2)\n          throw new Error('Invalid point size for uncompressed.');\n\n        const x = curve.decodeField(bytes.slice(1, 1 + len));\n        const y = curve.decodeField(bytes.slice(1 + len, 1 + 2 * len));\n\n        // [GECC] Algorithm 4.3, Page 180, Section 4.\n        if (x.cmp(curve.p) >= 0 || y.cmp(curve.p) >= 0)\n          throw new Error('Invalid point.');\n\n        // OpenSSL hybrid encoding.\n        if (form !== 0x04 && form !== (0x06 | y.isOdd()))\n          throw new Error('Invalid hybrid encoding.');\n\n        const p = curve.point(x, y);\n\n        if (!p.validate())\n          throw new Error('Invalid point.');\n\n        assert(!p.isInfinity());\n\n        return p;\n      }\n\n      default: {\n        throw new Error('Unknown point format.');\n      }\n    }\n  }\n\n  encodeX() {\n    // [SCHNORR] \"Specification\".\n    // [BIP340] \"Specification\".\n    return this.curve.encodeField(this.getX());\n  }\n\n  static decodeEven(curve, bytes) {\n    // [BIP340] \"Specification\".\n    assert(curve instanceof ShortCurve);\n\n    const x = curve.decodeField(bytes);\n\n    if (x.cmp(curve.p) >= 0)\n      throw new Error('Invalid point.');\n\n    return curve.pointFromX(x, false);\n  }\n\n  static decodeSquare(curve, bytes) {\n    // [SCHNORR] \"Specification\".\n    assert(curve instanceof ShortCurve);\n\n    const x = curve.decodeField(bytes);\n\n    if (x.cmp(curve.p) >= 0)\n      throw new Error('Invalid point.');\n\n    return curve.pointFromX(x);\n  }\n\n  toJSON(pre) {\n    if (this.inf)\n      return [];\n\n    const x = this.getX().toJSON();\n    const y = this.getY().toJSON();\n\n    if (pre === true && this.pre)\n      return [x, y, this.pre.toJSON()];\n\n    return [x, y];\n  }\n\n  toPretty() {\n    if (this.inf)\n      return [];\n\n    const size = this.curve.fieldSize * 2;\n    const x = toPretty(this.getX(), size);\n    const y = toPretty(this.getY(), size);\n\n    return [x, y];\n  }\n\n  static fromJSON(curve, json) {\n    assert(curve instanceof ShortCurve);\n    assert(Array.isArray(json));\n    assert(json.length === 0\n        || json.length === 2\n        || json.length === 3);\n\n    if (json.length === 0)\n      return curve.point();\n\n    const x = BN.fromJSON(json[0]);\n    const y = BN.fromJSON(json[1]);\n    const point = curve.point(x, y);\n\n    if (json.length > 2 && json[2] != null)\n      point.pre = Precomp.fromJSON(point, json[2]);\n\n    return point;\n  }\n\n  [custom]() {\n    if (this.inf)\n      return '<ShortPoint: Infinity>';\n\n    return '<ShortPoint:'\n         + ' x=' + this.x.fromRed().toString(16, 2)\n         + ' y=' + this.y.fromRed().toString(16, 2)\n         + '>';\n  }\n}\n\n/**\n * JPoint\n */\n\nclass JPoint extends Point {\n  constructor(curve, x, y, z) {\n    assert(curve instanceof ShortCurve);\n\n    super(curve, types.JACOBIAN);\n\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = this.curve.zero;\n    this.zOne = false;\n\n    if (x != null)\n      this._init(x, y, z);\n  }\n\n  _init(x, y, z) {\n    assert(x instanceof BN);\n    assert(y instanceof BN);\n    assert(z == null || (z instanceof BN));\n\n    this.x = x;\n    this.y = y;\n    this.z = z || this.curve.one;\n\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n\n    this.zOne = this.z.eq(this.curve.one);\n  }\n\n  clone() {\n    return this.curve.jpoint(this.x, this.y, this.z);\n  }\n\n  validate() {\n    // [GECC] Example 3.20, Page 88, Section 3.\n    const {a, b} = this.curve;\n\n    // P = O\n    if (this.isInfinity())\n      return true;\n\n    // Z1 = 1\n    if (this.zOne)\n      return this.curve.validate(this.toP());\n\n    // y^2 = x^3 + a * x * z^4 + b * z^6\n    const lhs = this.y.redSqr();\n    const x3 = this.x.redSqr().redMul(this.x);\n    const z2 = this.z.redSqr();\n    const z4 = z2.redSqr();\n    const z6 = z4.redMul(z2);\n    const rhs = x3.redIAdd(b.redMul(z6));\n\n    if (!this.curve.zeroA) {\n      // Save some cycles for a = -3.\n      if (this.curve.threeA)\n        rhs.redIAdd(z4.redIMuln(-3).redMul(this.x));\n      else\n        rhs.redIAdd(a.redMul(z4).redMul(this.x));\n    }\n\n    return lhs.eq(rhs);\n  }\n\n  normalize() {\n    // https://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian.html#scaling-z\n    // 1I + 3M + 1S\n\n    // Z = 1\n    if (this.zOne)\n      return this;\n\n    // P = O\n    if (this.isInfinity())\n      return this;\n\n    // A = 1 / Z1\n    const a = this.z.redInvert();\n\n    // AA = A^2\n    const aa = a.redSqr();\n\n    // X3 = X1 * AA\n    this.x = this.x.redMul(aa);\n\n    // Y3 = Y1 * AA * A\n    this.y = this.y.redMul(aa).redMul(a);\n\n    // Z3 = 1\n    this.z = this.curve.one;\n    this.zOne = true;\n\n    return this;\n  }\n\n  scale(a) {\n    assert(a instanceof BN);\n\n    // P = O\n    if (this.isInfinity())\n      return this.curve.jpoint();\n\n    // AA = A^2\n    const aa = a.redSqr();\n\n    // X3 = X1 * AA\n    const nx = this.x.redMul(aa);\n\n    // Y3 = Y1 * AA * A\n    const ny = this.y.redMul(aa).redMul(a);\n\n    // Z3 = Z1 * A\n    const nz = this.z.redMul(a);\n\n    return this.curve.jpoint(nx, ny, nz);\n  }\n\n  neg() {\n    // -(X1, Y1, Z1) = (X1, -Y1, Z1)\n    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n  }\n\n  add(p) {\n    assert(p instanceof Point);\n\n    if (p.type === types.AFFINE)\n      return this._mixedAdd(p);\n\n    return this._add(p);\n  }\n\n  _add(p) {\n    assert(p instanceof JPoint);\n\n    // O + P = P\n    if (this.isInfinity())\n      return p;\n\n    // P + O = P\n    if (p.isInfinity())\n      return this;\n\n    // Z1 = 1\n    if (this.zOne)\n      return p._addJA(this);\n\n    // Z2 = 1\n    if (p.zOne)\n      return this._addJA(p);\n\n    return this._addJJ(p);\n  }\n\n  _mixedAdd(p) {\n    assert(p instanceof ShortPoint);\n\n    // O + P = P\n    if (this.isInfinity())\n      return p.toJ();\n\n    // P + O = P\n    if (p.isInfinity())\n      return this;\n\n    return this._addJA(p);\n  }\n\n  _addJJ(p) {\n    // No assumptions.\n    // https://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian.html#addition-add-1998-cmo-2\n    // 12M + 4S + 6A + 1*2 (implemented as: 12M + 4S + 7A)\n\n    // Z1Z1 = Z1^2\n    const z1z1 = this.z.redSqr();\n\n    // Z2Z2 = Z2^2\n    const z2z2 = p.z.redSqr();\n\n    // U1 = X1 * Z2Z2\n    const u1 = this.x.redMul(z2z2);\n\n    // U2 = X2 * Z1Z1\n    const u2 = p.x.redMul(z1z1);\n\n    // S1 = Y1 * Z2 * Z2Z2\n    const s1 = this.y.redMul(p.z).redMul(z2z2);\n\n    // S2 = Y2 * Z1 * Z1Z1\n    const s2 = p.y.redMul(this.z).redMul(z1z1);\n\n    // H = U2 - U1\n    const h = u2.redISub(u1);\n\n    // r = S2 - S1\n    const r = s2.redISub(s1);\n\n    // H = 0\n    if (h.isZero()) {\n      if (!r.isZero())\n        return this.curve.jpoint();\n\n      return this.dbl();\n    }\n\n    // HH = H^2\n    const hh = h.redSqr();\n\n    // HHH = H * HH\n    const hhh = h.redMul(hh);\n\n    // V = U1 * HH\n    const v = u1.redMul(hh);\n\n    // X3 = r^2 - HHH - 2 * V\n    const nx = r.redSqr().redISub(hhh).redISub(v).redISub(v);\n\n    // Y3 = r * (V - X3) - S1 * HHH\n    const ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(hhh));\n\n    // Z3 = Z1 * Z2 * H\n    const nz = this.z.redMul(p.z).redMul(h);\n\n    return this.curve.jpoint(nx, ny, nz);\n  }\n\n  _addJA(p) {\n    // Assumes Z2 = 1.\n    // https://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian.html#addition-madd\n    // 8M + 3S + 6A + 5*2 (implemented as: 8M + 3S + 7A + 4*2)\n\n    // Z1Z1 = Z1^2\n    const z1z1 = this.z.redSqr();\n\n    // U2 = X2 * Z1Z1\n    const u2 = p.x.redMul(z1z1);\n\n    // S2 = Y2 * Z1 * Z1Z1\n    const s2 = p.y.redMul(this.z).redMul(z1z1);\n\n    // H = U2 - X1\n    const h = u2.redISub(this.x);\n\n    // r = 2 * (S2 - Y1)\n    const r = s2.redISub(this.y).redIMuln(2);\n\n    // H = 0\n    if (h.isZero()) {\n      if (!r.isZero())\n        return this.curve.jpoint();\n\n      return this.dbl();\n    }\n\n    // I = (2 * H)^2\n    const i = h.redMuln(2).redSqr();\n\n    // J = H * I\n    const j = h.redMul(i);\n\n    // V = X1 * I\n    const v = this.x.redMul(i);\n\n    // X3 = r^2 - J - 2 * V\n    const nx = r.redSqr().redISub(j).redISub(v).redISub(v);\n\n    // Y3 = r * (V - X3) - 2 * Y1 * J\n    const ny = r.redMul(v.redISub(nx)).redISub(this.y.redMul(j).redIMuln(2));\n\n    // Z3 = 2 * Z1 * H\n    const nz = this.z.redMul(h).redIMuln(2);\n\n    return this.curve.jpoint(nx, ny, nz);\n  }\n\n  dbl() {\n    // P = O\n    if (this.isInfinity())\n      return this;\n\n    // Y1 = 0\n    if (this.y.isZero())\n      return this.curve.jpoint();\n\n    // a = 0\n    if (this.curve.zeroA)\n      return this._dbl0();\n\n    // a = -3\n    if (this.curve.threeA)\n      return this._dbl3();\n\n    return this._dblJ();\n  }\n\n  _dblJ() {\n    // https://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian.html#doubling-dbl-1998-cmo-2\n    // 3M + 6S + 4A + 1*a + 2*2 + 1*3 + 1*4 + 1*8\n    // (implemented as: 3M + 6S + 5A + 1*a + 1*2 + 1*3 + 1*4 + 1*8)\n\n    // XX = X1^2\n    const xx = this.x.redSqr();\n\n    // YY = Y1^2\n    const yy = this.y.redSqr();\n\n    // ZZ = Z1^2\n    const zz = this.z.redSqr();\n\n    // S = 4 * X1 * YY\n    const s = this.x.redMul(yy).redIMuln(4);\n\n    // M = 3 * XX + a * ZZ^2\n    const m = xx.redIMuln(3).redIAdd(this.curve.a.redMul(zz.redSqr()));\n\n    // T = M^2 - 2 * S\n    const t = m.redSqr().redISub(s).redISub(s);\n\n    // X3 = T\n    const nx = t;\n\n    // Y3 = M * (S - T) - 8 * YY^2\n    const ny = m.redMul(s.redISub(t)).redISub(yy.redSqr().redIMuln(8));\n\n    // Z3 = 2 * Y1 * Z1\n    const nz = this.y.redMul(this.z).redIMuln(2);\n\n    return this.curve.jpoint(nx, ny, nz);\n  }\n\n  _dbl0() {\n    // Assumes a = 0.\n    // https://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#doubling-dbl-2009-l\n    // 2M + 5S + 6A + 3*2 + 1*3 + 1*8\n    // (implemented as: 2M + 5S + 7A + 2*2 + 1*3 + 1*8)\n\n    // A = X1^2\n    const a = this.x.redSqr();\n\n    // B = Y1^2\n    const b = this.y.redSqr();\n\n    // C = B^2\n    const c = b.redSqr();\n\n    // + XB2 = (X1 + B)^2\n    const xb2 = b.redIAdd(this.x).redSqr();\n\n    // D = 2 * ((X1 + B)^2 - A - C)\n    const d = xb2.redISub(a).redISub(c).redIMuln(2);\n\n    // E = 3 * A\n    const e = a.redIMuln(3);\n\n    // F = E^2\n    const f = e.redSqr();\n\n    // X3 = F - 2 * D\n    const nx = f.redISub(d).redISub(d);\n\n    // Y3 = E * (D - X3) - 8 * C\n    const ny = e.redMul(d.redISub(nx)).redISub(c.redIMuln(8));\n\n    // Z3 = 2 * Y1 * Z1\n    const nz = this.y.redMul(this.z).redIMuln(2);\n\n    return this.curve.jpoint(nx, ny, nz);\n  }\n\n  _dbl3() {\n    // Assumes a = -3.\n    // https://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S + 8A + 1*3 + 1*4 + 2*8\n    // (implemented as: 3M + 5S + 8A + 1*2 + 1*3 + 1*4 + 1*8)\n\n    // delta = Z1^2\n    const delta = this.z.redSqr();\n\n    // gamma = Y1^2\n    const gamma = this.y.redSqr();\n\n    // beta = X1 * gamma\n    const beta = this.x.redMul(gamma);\n\n    // + xmdelta = X1 - delta\n    const xmdelta = this.x.redSub(delta);\n\n    // + xpdelta = X1 + delta\n    const xpdelta = this.x.redAdd(delta);\n\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    const alpha = xmdelta.redMul(xpdelta).redIMuln(3);\n\n    // + beta4 = 4 * beta\n    const beta4 = beta.redIMuln(4);\n\n    // + beta8 = 2 * beta4\n    const beta8 = beta4.redMuln(2);\n\n    // + gamma28 = 8 * gamma^2\n    const gamma28 = gamma.redSqr().redIMuln(8);\n\n    // X3 = alpha^2 - 8 * beta\n    const nx = alpha.redSqr().redISub(beta8);\n\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    const nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    const ny = alpha.redMul(beta4.redISub(nx)).redISub(gamma28);\n\n    return this.curve.jpoint(nx, ny, nz);\n  }\n\n  getX() {\n    if (this.isInfinity())\n      throw new Error('Invalid point.');\n\n    this.normalize();\n\n    return this.x.fromRed();\n  }\n\n  getY() {\n    if (this.isInfinity())\n      throw new Error('Invalid point.');\n\n    this.normalize();\n\n    return this.y.fromRed();\n  }\n\n  eq(p) {\n    assert(p instanceof JPoint);\n\n    // P = Q\n    if (this === p)\n      return true;\n\n    // P = O\n    if (this.isInfinity())\n      return p.isInfinity();\n\n    // Q = O\n    if (p.isInfinity())\n      return false;\n\n    // Z1 = Z2\n    if (this.z.eq(p.z)) {\n      return this.x.eq(p.x)\n          && this.y.eq(p.y);\n    }\n\n    // X1 * Z2^2 = X2 * Z1^2\n    const zz1 = this.z.redSqr();\n    const zz2 = p.z.redSqr();\n    const x1 = this.x.redMul(zz2);\n    const x2 = p.x.redMul(zz1);\n\n    if (!x1.eq(x2))\n      return false;\n\n    // Y1 * Z2^3 = Y2 * Z1^3\n    const zzz1 = zz1.redMul(this.z);\n    const zzz2 = zz2.redMul(p.z);\n    const y1 = this.y.redMul(zzz2);\n    const y2 = p.y.redMul(zzz1);\n\n    return y1.eq(y2);\n  }\n\n  cmp(point) {\n    assert(point instanceof JPoint);\n\n    const inf1 = this.isInfinity();\n    const inf2 = point.isInfinity();\n\n    if (inf1 && !inf2)\n      return -1;\n\n    if (!inf1 && inf2)\n      return 1;\n\n    if (inf1 && inf2)\n      return 0;\n\n    return this.order().cmp(point.order())\n        || this.getX().cmp(point.getX())\n        || this.getY().cmp(point.getY());\n  }\n\n  isInfinity() {\n    // Z1 = 0\n    return this.z.isZero();\n  }\n\n  isOrder2() {\n    if (this.isInfinity())\n      return false;\n\n    return this.y.isZero();\n  }\n\n  isOdd() {\n    if (this.isInfinity())\n      return false;\n\n    this.normalize();\n\n    return this.y.redIsOdd();\n  }\n\n  isEven() {\n    if (this.isInfinity())\n      return false;\n\n    this.normalize();\n\n    return this.y.redIsEven();\n  }\n\n  isSquare() {\n    if (this.isInfinity())\n      return false;\n\n    return this.y.redMul(this.z).redJacobi() !== -1;\n  }\n\n  eqX(x) {\n    // Verify that integer `x` is equal to field\n    // element `x` by scaling it by our z coordinate.\n    // This optimization is mentioned in and used for\n    // bip-schnorr[1]. This avoids having to affinize\n    // the resulting point during verification.\n    //\n    // [1] [SCHNORR] \"Optimizations\".\n    assert(x instanceof BN);\n    assert(!x.red);\n\n    if (this.isInfinity())\n      return false;\n\n    const zz = this.z.redSqr();\n    const rx = x.toRed(this.curve.red).redMul(zz);\n\n    return this.x.eq(rx);\n  }\n\n  eqR(x) {\n    // Similar to the optimization above, this\n    // optimization, suggested by Maxwell[1],\n    // compares an integer to an X coordinate\n    // by scaling it.\n    //\n    // Since a signature's R value is modulo N\n    // in ECDSA, we may be dealing with an R\n    // value greater than N in actuality.\n    //\n    // If the equality check fails, we can\n    // scale N itself by Z and add it to the\n    // X field element.\n    //\n    // [1] https://github.com/bitcoin-core/secp256k1/commit/ce7eb6f\n    assert(x instanceof BN);\n    assert(!x.red);\n\n    if (!this.curve.smallGap)\n      return this.toP().eqR(x);\n\n    if (this.isInfinity())\n      return false;\n\n    if (x.cmp(this.curve.p) >= 0)\n      return false;\n\n    const zz = this.z.redSqr();\n    const rx = x.toRed(this.curve.red).redMul(zz);\n\n    if (this.x.eq(rx))\n      return true;\n\n    if (this.curve.highOrder)\n      return false;\n\n    if (x.cmp(this.curve.pmodn) >= 0)\n      return false;\n\n    const rn = this.curve.redN.redMul(zz);\n\n    rx.redIAdd(rn);\n\n    return this.x.eq(rx);\n  }\n\n  toP() {\n    // P = O\n    if (this.isInfinity())\n      return this.curve.point();\n\n    this.normalize();\n\n    // (X3, Y3) = (X1 / Z1^2, Y1 / Z1^3)\n    return this.curve.point(this.x, this.y);\n  }\n\n  toJ() {\n    return this;\n  }\n\n  encode(compact) {\n    return this.toP().encode(compact);\n  }\n\n  static decode(curve, bytes) {\n    return ShortPoint.decode(curve, bytes).toJ();\n  }\n\n  encodeX() {\n    return this.toP().encodeX();\n  }\n\n  static decodeEven(curve, bytes) {\n    return ShortPoint.decodeEven(curve, bytes).toJ();\n  }\n\n  static decodeSquare(curve, bytes) {\n    return ShortPoint.decodeSquare(curve, bytes).toJ();\n  }\n\n  toJSON(pre) {\n    return this.toP().toJSON(pre);\n  }\n\n  toPretty() {\n    return this.toP().toPretty();\n  }\n\n  static fromJSON(curve, json) {\n    return ShortPoint.fromJSON(curve, json).toJ();\n  }\n\n  [custom]() {\n    if (this.isInfinity())\n      return '<JPoint: Infinity>';\n\n    return '<JPoint:'\n         + ' x=' + this.x.fromRed().toString(16, 2)\n         + ' y=' + this.y.fromRed().toString(16, 2)\n         + ' z=' + this.z.fromRed().toString(16, 2)\n         + '>';\n  }\n}\n\n/**\n * MontCurve\n */\n\nclass MontCurve extends Curve {\n  constructor(conf) {\n    super(MontPoint, 'mont', conf);\n\n    this.a = BN.fromJSON(conf.a).toRed(this.red);\n    this.b = BN.fromJSON(conf.b).toRed(this.red);\n\n    this.bi = this.b.redInvert();\n    this.a2 = this.a.redAdd(this.two);\n    this.a24 = this.a2.redMul(this.i4);\n    this.a3 = this.a.redMul(this.i3);\n    this.a0 = this.a.redMul(this.bi);\n    this.b0 = this.bi.redSqr();\n\n    this._finalize(conf);\n  }\n\n  static _isomorphism(curveA, curveB, customB) {\n    // Montgomery Isomorphism.\n    //\n    // [MONT3] Page 3, Section 2.1.\n    //\n    // Transformation:\n    //\n    //   A' = A\n    //   B' = B'\n    //\n    // Where (B / B') is square.\n    assert(curveA instanceof BN);\n    assert(curveB instanceof BN);\n    assert(customB instanceof BN);\n\n    const a = curveA.clone();\n    const b = customB.clone();\n    const c = curveB.redDiv(customB);\n\n    if (c.redJacobi() !== 1)\n      throw new Error('Invalid `b` coefficient.');\n\n    return [a, b];\n  }\n\n  _short(a0, odd) {\n    // Montgomery->Short Weierstrass Equivalence.\n    //\n    // [MONT2] \"Equivalence with Weierstrass curves\".\n    //\n    // Transformation:\n    //\n    //   a = (3 - A^2) / (3 * B^2)\n    //   b = (2 * A^3 - 9 * A) / (27 * B^3)\n    const {a, b, three} = this;\n    const a2 = a.redSqr();\n    const a3 = a2.redMul(a);\n    const b2 = b.redSqr();\n    const b3 = b2.redMul(b);\n    const n0 = three.redSub(a2);\n    const d0 = b2.redMuln(3);\n    const n1 = a3.redMuln(2).redISub(a.redMuln(9));\n    const d1 = b3.redMuln(27);\n    const wa = n0.redDiv(d0);\n    const wb = n1.redDiv(d1);\n\n    if (a0 != null)\n      return ShortCurve._isomorphism(wa, wb, a0, odd);\n\n    return [wa, wb];\n  }\n\n  _mont(b0) {\n    return MontCurve._isomorphism(this.a, this.b, b0);\n  }\n\n  _edwards(a0, invert = false) {\n    // Montgomery->Twisted Edwards Transformation.\n    //\n    // [MONT1] Page 11, Section 4.3.5.\n    // [TWISTED] Theorem 3.2, Page 4, Section 3.\n    //\n    // Equivalence:\n    //\n    //   a = (A + 2) / B\n    //   d = (A - 2) / B\n    //\n    // Isomorphism:\n    //\n    //   a = a'\n    //   d = a' * (A - 2) / (A + 2)\n    //\n    // Where ((A + 2) / (B * a')) is square.\n    //\n    // If `d` is square, we can usually find\n    // a complete curve by using the `invert`\n    // option. This will create an isomorphism\n    // chain of: M(A,B)->E(a,d)->E(d,a).\n    //\n    // The equivalence between E(a,d) and\n    // E(d,a) is:\n    //\n    //   (x, y) = (x, 1 / y)\n    //\n    // Meaning our map to E(d,a) is:\n    //\n    //   x = u / v\n    //   y = 1 / ((u - 1) / (u + 1))\n    //     = (u + 1) / (u - 1)\n    assert(typeof invert === 'boolean');\n\n    const {two, bi} = this;\n    const a = this.a.redAdd(two).redMul(bi);\n    const d = this.a.redSub(two).redMul(bi);\n\n    if (invert)\n      a.swap(d);\n\n    if (a0 != null)\n      return EdwardsCurve._isomorphism(a, d, a0);\n\n    return [a, d];\n  }\n\n  _scaleShort(curve) {\n    assert(curve instanceof ShortCurve);\n\n    const [u2, u3] = curve._scale(this);\n\n    return [this.field(u2.redInvert()),\n            this.field(u3.redInvert())];\n  }\n\n  _scaleMont(curve) {\n    // We can extract the isomorphism factor with:\n    //\n    //   c = +-sqrt(B / B')\n    //\n    // If base points are available, we can do:\n    //\n    //   c = v' / v\n    assert(curve instanceof MontCurve);\n\n    if (this.g.isInfinity() || curve.g.isInfinity())\n      return this.field(curve.b).redDivSqrt(this.b);\n\n    return this.g.y.redDiv(this.field(curve.g.y));\n  }\n\n  _scaleEdwards(curve, invert) {\n    // We _could_ do something like:\n    //\n    //   B = 4 / (a - d)\n    //   c = +-sqrt(B / B')\n    //\n    // Which can be reduced to:\n    //\n    //   c = +-sqrt(4 / ((a - d) * B'))\n    //\n    // If base points are available:\n    //\n    //   v = u' / x\n    //   c = v' / v\n    //\n    // Which can be reduced to:\n    //\n    //   c = v' * x / u'\n    //\n    // However, the way our maps are\n    // written, we can re-use the Edwards\n    // isomorphism factor when going the\n    // other direction.\n    assert(curve instanceof EdwardsCurve);\n\n    const c = curve._scale(this, invert);\n\n    return this.field(c);\n  }\n\n  _solveY0(x) {\n    assert(x instanceof BN);\n\n    // y^2 = x^3 + A * x^2 + B * x\n    const a = this.a0;\n    const b = this.b0;\n    const x2 = x.redSqr();\n    const x3 = x2.redMul(x);\n    const y2 = x3.redIAdd(a.redMul(x2)).redIAdd(b.redMul(x));\n\n    return y2;\n  }\n\n  _elligator2(u) {\n    // Elligator 2.\n    //\n    // Distribution: 1/2.\n    //\n    // [ELL2] Page 11, Section 5.2.\n    // [H2EC] \"Elligator 2 Method\".\n    //        \"Mappings for Montgomery curves\".\n    // [SAFE] \"Indistinguishability from uniform random strings\".\n    //\n    // Assumptions:\n    //\n    //   - y^2 = x^3 + A * x^2 + B * x.\n    //   - A != 0, B != 0.\n    //   - A^2 - 4 * B is non-zero and non-square in F(p).\n    //   - Let z be a non-square in F(p).\n    //   - u != +-sqrt(-1 / z).\n    //\n    // Note that Elligator 2 is defined over the form:\n    //\n    //   y'^2 = x'^3 + A' * x'^2 + B' * x'\n    //\n    // Instead of:\n    //\n    //   B * y^2 = x^3 + A * x^2 + x\n    //\n    // Where:\n    //\n    //   A' = A / B\n    //   B' = 1 / B^2\n    //   x' = x / B\n    //   y' = y / B\n    //\n    // And:\n    //\n    //   x = B * x'\n    //   y = B * y'\n    //\n    // This is presumably the result of Elligator 2\n    // being designed in long Weierstrass form. If\n    // we want to support B != 1, we need to do the\n    // conversion.\n    //\n    // Map:\n    //\n    //   g(x) = x^3 + A * x^2 + B * x\n    //   x1 = -A / (1 + z * u^2)\n    //   x1 = -A, if x1 = 0\n    //   x2 = -x1 - A\n    //   x = x1, if g(x1) is square\n    //     = x2, otherwise\n    //   y = sign(u) * abs(sqrt(g(x)))\n    const lhs = this.a0.redNeg();\n    const rhs = this.one.redAdd(this.z.redMul(u.redSqr()));\n\n    if (rhs.isZero())\n      rhs.inject(this.one);\n\n    const x1 = lhs.redMul(rhs.redInvert());\n    const x2 = x1.redNeg().redISub(this.a0);\n    const y1 = this._solveY0(x1);\n    const y2 = this._solveY0(x2);\n    const alpha = y1.redIsSquare() | 0;\n    const x0 = [x1, x2][alpha ^ 1];\n    const y0 = [y1, y2][alpha ^ 1].redSqrt();\n\n    if (y0.redIsOdd() !== u.redIsOdd())\n      y0.redINeg();\n\n    const x = this.b.redMul(x0);\n    const y = this.b.redMul(y0);\n\n    return this.point(x, y);\n  }\n\n  _invert2(p, hint) {\n    // Inverting the Map (Elligator 2).\n    //\n    // [ELL2] Page 12, Section 5.3.\n    //\n    // Assumptions:\n    //\n    //   - -z * x * (x + A) is square in F(p).\n    //   - If r = 1 then x != 0.\n    //   - If r = 2 then x != -A.\n    //\n    // Map:\n    //\n    //   u1 = -(x + A) / (x * z)\n    //   u2 = -x / ((x + A) * z)\n    //   r = random integer in [1,2]\n    //   u = sign(y) * abs(sqrt(ur))\n    //\n    // Note that `0 / 0` can only occur if A = 0\n    // (this violates the assumptions of Elligator 2).\n    const {x, y} = p;\n    const r = hint & 1;\n    const x0 = x.redMul(this.bi);\n    const y0 = y.redMul(this.bi);\n    const n = x0.redAdd(this.a0);\n    const d = x0;\n    const lhs = [n, d][r].redINeg();\n    const rhs = [d, n][r].redMul(this.z);\n    const u = lhs.redDivSqrt(rhs);\n\n    if (u.redIsOdd() !== y0.redIsOdd())\n      u.redINeg();\n\n    return u;\n  }\n\n  isElliptic() {\n    const a2 = this.a.redSqr();\n    const d = this.b.redMul(a2.redSub(this.four));\n\n    // B * (A^2 - 4) != 0\n    return !d.isZero();\n  }\n\n  jinv() {\n    // [MONT3] Page 3, Section 2.\n    const {a, three, four} = this;\n    const a2 = a.redSqr();\n    const t0 = a2.redSub(three);\n    const lhs = t0.redPown(3).redIMuln(256);\n    const rhs = a2.redSub(four);\n\n    if (rhs.isZero())\n      throw new Error('Curve is not elliptic.');\n\n    // (256 * (A^2 - 3)^3) / (A^2 - 4)\n    return lhs.redDiv(rhs).fromRed();\n  }\n\n  point(x, y) {\n    return new MontPoint(this, x, y);\n  }\n\n  jpoint(x, y, z) {\n    assert(x == null && y == null && z == null);\n    return this.point();\n  }\n\n  xpoint(x, z) {\n    return new XPoint(this, x, z);\n  }\n\n  solveY2(x) {\n    // [MONT3] Page 3, Section 2.\n    // https://hyperelliptic.org/EFD/g1p/auto-montgom.html\n    assert(x instanceof BN);\n\n    // B * y^2 = x^3 + A * x^2 + x\n    const x2 = x.redSqr();\n    const x3 = x2.redMul(x);\n    const by2 = x3.redIAdd(this.a.redMul(x2)).redIAdd(x);\n    const y2 = by2.redMul(this.bi);\n\n    return y2;\n  }\n\n  validate(point) {\n    assert(point instanceof MontPoint);\n\n    if (point.isInfinity())\n      return true;\n\n    const {x, y} = point;\n    const y2 = this.solveY2(x);\n\n    return y.redSqr().eq(y2);\n  }\n\n  pointFromX(x, sign = null) {\n    assert(x instanceof BN);\n    assert(sign == null || typeof sign === 'boolean');\n\n    if (!x.red)\n      x = x.toRed(this.red);\n\n    const y = this.solveY(x);\n\n    if (sign != null) {\n      if (y.isZero() && sign)\n        throw new Error('Invalid point.');\n\n      if (y.redIsOdd() !== sign)\n        y.redINeg();\n    }\n\n    return this.point(x, y);\n  }\n\n  isIsomorphic(curve, invert) {\n    // [MONT3] Page 3, Section 2.1.\n    assert(curve instanceof Curve);\n\n    if (!curve.p.eq(this.p))\n      return false;\n\n    // M(A,B) <-> M(A,B')\n    if (curve.type === 'mont') {\n      const a = this.field(curve.a);\n      const b = this.field(curve.b);\n\n      // A' = A\n      if (!this.a.eq(a))\n        return false;\n\n      // B' != 0\n      if (this.b.isZero())\n        return false;\n\n      // jacobi(B / B') = 1\n      const c = b.redDiv(this.b);\n\n      return c.redJacobi() === 1;\n    }\n\n    return curve.isIsomorphic(this, invert);\n  }\n\n  isIsogenous(curve) {\n    assert(curve instanceof Curve);\n\n    if (curve.type === 'mont')\n      return false;\n\n    return curve.isIsogenous(this);\n  }\n\n  pointFromShort(point) {\n    // [ALT] Appendix E.2 (Switching between Alternative Representations).\n    // [MONT2] \"Equivalence with Weierstrass curves\"\n    assert(point instanceof ShortPoint);\n\n    if (this.isIsomorphic(point.curve)) {\n      // Equivalence for E(a,b)->M(A,B):\n      //\n      //   u = B * x - A / 3\n      //   v = B * y\n      //\n      // Undefined if ((u^3 + A * u^2 + u) / B) is not square.\n      if (point.isInfinity())\n        return this.point();\n\n      const {a3, b} = this;\n      const [u2, u3] = this._scale(point.curve);\n      const x = this.field(point.x).redMul(u2);\n      const y = this.field(point.y).redMul(u3);\n      const u = b.redMul(x).redISub(a3);\n      const v = b.redMul(y);\n\n      return this.point(u, v);\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromMont(point) {\n    // [MONT3] Page 3, Section 2.1.\n    assert(point instanceof MontPoint);\n\n    if (this.isIsomorphic(point.curve)) {\n      // Isomorphic maps for M(A,B)<->M(A,B'):\n      //\n      //   u' = u\n      //   v' = +-sqrt(B / B') * v\n      //\n      // Undefined if (B / B') is not square.\n      if (point.isInfinity())\n        return this.point();\n\n      const c = this._scale(point.curve);\n      const u = this.field(point.x);\n      const v = this.field(point.y);\n      const nu = u;\n      const nv = c.redMul(v);\n\n      return this.point(nu, nv);\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromEdwards(point) {\n    // [RFC7748] Section 4.1 & 4.2.\n    // [MONT3] Page 6, Section 2.5.\n    // [TWISTED] Theorem 3.2, Page 4, Section 3.\n    assert(point instanceof EdwardsPoint);\n    assert(point.curve.p.eq(this.p));\n\n    // Edwards `x`, `y`, `z`.\n    const x = this.field(point.x);\n    const y = this.field(point.y);\n    const z = this.field(point.z);\n\n    if (this.isIsogenous(point.curve)) {\n      // 4-isogeny maps for E(1,d)->M(2-4d,1):\n      //\n      //   u = y^2 / x^2\n      //   v = (2 - x^2 - y^2) * y / x^3\n      //\n      // Undefined for x = 0.\n      //\n      // Exceptional Cases:\n      //   - (0, 1) -> O\n      //   - (0, -1) -> (0, 0)\n      //\n      // Unexceptional Cases:\n      //   - (+-1, 0) -> (0, 0)\n      if (point.isInfinity())\n        return this.point();\n\n      if (point.x.isZero())\n        return this.point(this.zero, this.zero);\n\n      const c = z.redSqr().redIMuln(2);\n      const uu = y.redSqr();\n      const uz = x.redSqr();\n      const vv = c.redISub(uz).redISub(uu).redMul(y);\n      const vz = uz.redMul(x);\n\n      return this.cpoint(uu, uz, vv, vz);\n    }\n\n    if (this.isIsomorphic(point.curve, true)) {\n      // Isomorphic maps for E(d,a)->M(A,B):\n      //\n      //   u = (y + 1) / (y - 1)\n      //   v = +-sqrt((A - 2) / (B * a)) * u / x\n      //\n      // Undefined for x = 0 or y = 1.\n      //\n      // Exceptional Cases:\n      //   - (0, 1) -> O\n      //   - (0, -1) -> (0, 0)\n      //\n      // Unexceptional Cases:\n      //   - (+-sqrt(1 / a), 0) -> (-1, +-sqrt((A - 2) / B))\n      if (point.isInfinity())\n        return this.point();\n\n      if (point.x.isZero())\n        return this.point(this.zero, this.zero);\n\n      const c = this._scale(point.curve, true);\n      const uu = y.redAdd(z);\n      const uz = y.redSub(z);\n      const vv = c.redMul(z).redMul(uu);\n      const vz = x.redMul(uz);\n\n      return this.cpoint(uu, uz, vv, vz);\n    }\n\n    if (this.isIsomorphic(point.curve, false)) {\n      // Isomorphic maps for E(a,d)->M(A,B):\n      //\n      //   u = (1 + y) / (1 - y)\n      //   v = +-sqrt((A + 2) / (B * a)) * u / x\n      //\n      // Undefined for x = 0 or y = 1.\n      //\n      // Exceptional Cases:\n      //   - (0, 1) -> O\n      //   - (0, -1) -> (0, 0)\n      //\n      // Unexceptional Cases:\n      //   - (+-sqrt(1 / a), 0) -> (1, +-sqrt((A + 2) / B))\n      if (point.isInfinity())\n        return this.point();\n\n      if (point.x.isZero())\n        return this.point(this.zero, this.zero);\n\n      const c = this._scale(point.curve, false);\n      const uu = z.redAdd(y);\n      const uz = z.redSub(y);\n      const vv = c.redMul(z).redMul(uu);\n      const vz = x.redMul(uz);\n\n      return this.cpoint(uu, uz, vv, vz);\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromUniform(u) {\n    assert(u instanceof BN);\n\n    // z = 0 or A = 0\n    if (this.z.isZero() || this.a.isZero())\n      throw new Error('Not implemented.');\n\n    return this._elligator2(u);\n  }\n\n  pointToUniform(p, hint) {\n    // Convert a montgomery point to a field\n    // element by inverting the elligator2 map.\n    //\n    // Hint Layout:\n    //\n    //   [00000000] [0000] [0000]\n    //        |        |      |\n    //        |        |      +-- preimage index\n    //        |        +--- subgroup\n    //        +-- bits to OR with uniform bytes\n    assert(p instanceof MontPoint);\n    assert((hint >>> 0) === hint);\n\n    // z = 0 or A = 0\n    if (this.z.isZero() || this.a.isZero())\n      throw new Error('Not implemented.');\n\n    // P = O\n    if (p.isInfinity())\n      throw new Error('Invalid point.');\n\n    // Add a random torsion component.\n    const i = ((hint >>> 4) & 15) % this.torsion.length;\n    const q = p.add(this.torsion[i]);\n\n    return wrapErrors(() => {\n      return this._invert2(q, hint);\n    });\n  }\n\n  decodePoint(bytes, sign) {\n    return MontPoint.decode(this, bytes, sign);\n  }\n\n  encodeX(point) {\n    assert(point instanceof XPoint);\n    return point.encode();\n  }\n\n  decodeX(bytes) {\n    return XPoint.decode(this, bytes);\n  }\n\n  toShort(a0, odd, sign = null) {\n    const [a, b] = this._short(a0, odd);\n\n    const curve = new ShortCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      b: b,\n      n: this.n,\n      h: this.h\n    });\n\n    if (sign != null) {\n      const [, u3] = curve._scale(this);\n\n      if (u3.redIsOdd() !== sign)\n        u3.redINeg();\n    }\n\n    if (!this.g.isInfinity())\n      curve.g = curve.pointFromMont(this.g);\n\n    for (let i = 0; i < this.h.word(0); i++)\n      curve.torsion[i] = curve.pointFromMont(this.torsion[i]);\n\n    return curve;\n  }\n\n  toMont(b0, sign = null) {\n    const [a, b] = this._mont(b0);\n\n    const curve = new MontCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      b: b,\n      n: this.n,\n      h: this.h,\n      z: this.z\n    });\n\n    if (sign != null) {\n      const c = curve._scale(this);\n\n      if (c.redIsOdd() !== sign)\n        c.redINeg();\n    }\n\n    if (!this.g.isInfinity())\n      curve.g = curve.pointFromMont(this.g);\n\n    for (let i = 0; i < this.h.word(0); i++)\n      curve.torsion[i] = curve.pointFromMont(this.torsion[i]);\n\n    return curve;\n  }\n\n  toEdwards(a0, invert, sign = null) {\n    const [a, d] = this._edwards(a0, invert);\n\n    const curve = new EdwardsCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      d: d,\n      n: this.n,\n      h: this.h,\n      z: this.z\n    });\n\n    if (sign != null) {\n      const c = curve._scale(this, invert);\n\n      if (c.redIsOdd() !== sign)\n        c.redINeg();\n    }\n\n    if (!this.g.isInfinity()) {\n      curve.g = curve.pointFromMont(this.g);\n      curve.g.normalize();\n    }\n\n    if (curve.isComplete()) {\n      for (let i = 0; i < this.h.word(0); i++) {\n        curve.torsion[i] = curve.pointFromMont(this.torsion[i]);\n        curve.torsion[i].normalize();\n      }\n    }\n\n    return curve;\n  }\n\n  pointFromJSON(json) {\n    return MontPoint.fromJSON(this, json);\n  }\n\n  toJSON(pre) {\n    const json = super.toJSON(pre);\n    json.a = this.a.fromRed().toJSON();\n    json.b = this.b.fromRed().toJSON();\n    return json;\n  }\n}\n\n/**\n * MontPoint\n */\n\nclass MontPoint extends Point {\n  constructor(curve, x, y) {\n    assert(curve instanceof MontCurve);\n\n    super(curve, types.AFFINE);\n\n    this.x = this.curve.zero;\n    this.y = this.curve.zero;\n    this.inf = true;\n\n    if (x != null)\n      this._init(x, y);\n  }\n\n  _init(x, y) {\n    assert(x instanceof BN);\n    assert(y instanceof BN);\n\n    this.x = x;\n    this.y = y;\n\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n\n    this.inf = false;\n  }\n\n  clone() {\n    if (this.inf)\n      return this.curve.point();\n\n    return this.curve.point(this.x, this.y);\n  }\n\n  scale(a) {\n    return this.clone();\n  }\n\n  randomize(rng) {\n    return this.clone();\n  }\n\n  neg() {\n    // P = O\n    if (this.inf)\n      return this;\n\n    // -(X1, Y1) = (X1, -Y1)\n    return this.curve.point(this.x, this.y.redNeg());\n  }\n\n  add(p) {\n    // [MONT1] Page 8, Section 4.3.2.\n    //\n    // Addition Law:\n    //\n    //   l = (y2 - y1) / (x2 - x1)\n    //   x3 = b * l^2 - a - x1 - x2\n    //   y3 = l * (x1 - x3) - y1\n    //\n    // 1I + 2M + 1S + 7A + 1*b\n    assert(p instanceof MontPoint);\n\n    // O + P = P\n    if (this.inf)\n      return p;\n\n    // P + O = P\n    if (p.inf)\n      return this;\n\n    // P + P, P + -P\n    if (this.x.eq(p.x)) {\n      // P + -P = O\n      if (!this.y.eq(p.y))\n        return this.curve.point();\n\n      // P + P = 2P\n      return this.dbl();\n    }\n\n    // H = X2 - X1\n    const h = p.x.redSub(this.x);\n\n    // R = Y2 - Y1\n    const r = p.y.redSub(this.y);\n\n    // L = R / H\n    const l = r.redDiv(h);\n\n    // K = b * L^2\n    const k = this.curve.b.redMul(l.redSqr());\n\n    // X3 = K - a - X1 - X2\n    const nx = k.redISub(this.curve.a).redISub(this.x).redISub(p.x);\n\n    // Y3 = L * (X1 - X3) - Y1\n    const ny = l.redMul(this.x.redSub(nx)).redISub(this.y);\n\n    return this.curve.point(nx, ny);\n  }\n\n  dbl() {\n    // [MONT1] Page 8, Section 4.3.2.\n    //\n    // Addition Law (doubling):\n    //\n    //   l = (3 * x1^2 + 2 * a * x1 + 1) / (2 * b * y1)\n    //   x3 = b * l^2 - a - 2 * x1\n    //   y3 = l * (x1 - x3) - y1\n    //\n    // 1I + 3M + 2S + 7A + 1*a + 1*b + 1*b + 2*2 + 1*3\n\n    // P = O\n    if (this.inf)\n      return this;\n\n    // Y1 = 0\n    if (this.y.isZero())\n      return this.curve.point();\n\n    // M1 = 3 * X1^2\n    const m1 = this.x.redSqr().redIMuln(3);\n\n    // M2 = 2 * a * X1\n    const m2 = this.curve.a.redMul(this.x).redIMuln(2);\n\n    // M = M1 + M2 + 1\n    const m = m1.redIAdd(m2).redIAdd(this.curve.one);\n\n    // Z = 2 * b * Y1\n    const z = this.curve.b.redMul(this.y).redIMuln(2);\n\n    // L = M / Z\n    const l = m.redDiv(z);\n\n    // K = b * L^2\n    const k = this.curve.b.redMul(l.redSqr());\n\n    // X3 = K - a - 2 * X1\n    const nx = k.redISub(this.curve.a).redISub(this.x).redISub(this.x);\n\n    // Y3 = L * (X1 - X3) - Y1\n    const ny = l.redMul(this.x.redSub(nx)).redISub(this.y);\n\n    return this.curve.point(nx, ny);\n  }\n\n  getX() {\n    if (this.inf)\n      throw new Error('Invalid point.');\n\n    return this.x.fromRed();\n  }\n\n  getY() {\n    if (this.inf)\n      throw new Error('Invalid point.');\n\n    return this.y.fromRed();\n  }\n\n  eq(p) {\n    assert(p instanceof MontPoint);\n\n    // P = Q\n    if (this === p)\n      return true;\n\n    // P = O\n    if (this.inf)\n      return p.inf;\n\n    // Q = O\n    if (p.inf)\n      return false;\n\n    // X1 = X2, Y1 = Y2\n    return this.x.eq(p.x)\n        && this.y.eq(p.y);\n  }\n\n  cmp(point) {\n    assert(point instanceof MontPoint);\n\n    if (this.inf && !point.inf)\n      return -1;\n\n    if (!this.inf && point.inf)\n      return 1;\n\n    if (this.inf && point.inf)\n      return 0;\n\n    return this.order().cmp(point.order())\n        || this.getX().cmp(point.getX())\n        || this.getY().cmp(point.getY());\n  }\n\n  isInfinity() {\n    // Infinity cannot be represented in\n    // the affine space, except by a flag.\n    return this.inf;\n  }\n\n  isOrder2() {\n    if (this.inf)\n      return false;\n\n    return this.y.isZero();\n  }\n\n  isOdd() {\n    if (this.inf)\n      return false;\n\n    return this.y.redIsOdd();\n  }\n\n  isEven() {\n    if (this.inf)\n      return false;\n\n    return this.y.redIsEven();\n  }\n\n  toP() {\n    return this;\n  }\n\n  toJ() {\n    return this;\n  }\n\n  toX() {\n    // (X3, Z3) = (1, 0)\n    if (this.inf)\n      return this.curve.xpoint();\n\n    // (X3, Z3) = (X1, 1)\n    return this.curve.xpoint(this.x, this.curve.one);\n  }\n\n  encode() {\n    return this.toX().encode();\n  }\n\n  static decode(curve, bytes, sign) {\n    assert(curve instanceof MontCurve);\n    return curve.decodeX(bytes).toP(sign);\n  }\n\n  toJSON(pre) {\n    if (this.inf)\n      return [];\n\n    const x = this.getX().toJSON();\n    const y = this.getY().toJSON();\n\n    return [x, y];\n  }\n\n  toPretty() {\n    if (this.inf)\n      return [];\n\n    const size = this.curve.fieldSize * 2;\n    const x = toPretty(this.getX(), size);\n    const y = toPretty(this.getY(), size);\n\n    return [x, y];\n  }\n\n  static fromJSON(curve, json) {\n    assert(curve instanceof MontCurve);\n    assert(Array.isArray(json));\n    assert(json.length === 0\n        || json.length === 2\n        || json.length === 3);\n\n    if (json.length === 0)\n      return curve.point();\n\n    const x = BN.fromJSON(json[0]);\n    const y = BN.fromJSON(json[1]);\n\n    return curve.point(x, y);\n  }\n\n  [custom]() {\n    if (this.inf)\n      return '<MontPoint: Infinity>';\n\n    return '<MontPoint:'\n         + ' x=' + this.x.fromRed().toString(16, 2)\n         + ' y=' + this.y.fromRed().toString(16, 2)\n         + '>';\n  }\n}\n\n/**\n * XPoint\n */\n\nclass XPoint extends Point {\n  constructor(curve, x, z) {\n    assert(curve instanceof MontCurve);\n\n    super(curve, types.PROJECTIVE);\n\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n\n    if (x != null)\n      this._init(x, z);\n  }\n\n  _init(x, z) {\n    assert(x instanceof BN);\n    assert(z == null || (z instanceof BN));\n\n    this.x = x;\n    this.z = z || this.curve.one;\n\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n\n  clone() {\n    return this.curve.xpoint(this.x, this.z);\n  }\n\n  precompute(power, rng) {\n    // No-op.\n    return this;\n  }\n\n  validate() {\n    if (this.isInfinity())\n      return true;\n\n    // B * y^2 * z = x^3 + A * x^2 * z + x * z^2\n    const {x, z} = this;\n    const x2 = x.redSqr();\n    const x3 = x2.redMul(x);\n    const z2 = z.redSqr();\n    const ax2 = this.curve.a.redMul(x2).redMul(z);\n    const by2 = x3.redIAdd(ax2).redIAdd(x.redMul(z2));\n    const y2 = by2.redMul(this.curve.bi);\n\n    // sqrt(y^2 * z^4) = y * z^2\n    return y2.redMul(z).redJacobi() !== -1;\n  }\n\n  normalize() {\n    // https://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#scaling-scale\n    // 1I + 1M\n\n    // P = O\n    if (this.isInfinity())\n      return this;\n\n    // Z1 = 1\n    if (this.z.eq(this.curve.one))\n      return this;\n\n    // X3 = X1 / Z1\n    this.x = this.x.redDiv(this.z);\n\n    // Z3 = 1\n    this.z = this.curve.one;\n\n    return this;\n  }\n\n  scale(a) {\n    assert(a instanceof BN);\n\n    // P = O\n    if (this.isInfinity())\n      return this.curve.xpoint();\n\n    // X3 = X1 * A\n    const nx = this.x.redMul(a);\n\n    // Y3 = Y1 * A\n    const nz = this.z.redMul(a);\n\n    return this.curve.xpoint(nx, nz);\n  }\n\n  neg() {\n    // -(X1, Z1) = (X1, Z1)\n    return this;\n  }\n\n  dbl() {\n    // https://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n    // 2M + 2S + 4A + 1*a24\n\n    // A = X1 + Z1\n    const a = this.x.redAdd(this.z);\n\n    // AA = A^2\n    const aa = a.redSqr();\n\n    // B = X1 - Z1\n    const b = this.x.redSub(this.z);\n\n    // BB = B^2\n    const bb = b.redSqr();\n\n    // C = AA - BB\n    const c = aa.redSub(bb);\n\n    // X3 = AA * BB\n    const nx = aa.redMul(bb);\n\n    // Z3 = C * (BB + a24 * C)\n    const nz = c.redMul(bb.redIAdd(this.curve.a24.redMul(c)));\n\n    return this.curve.xpoint(nx, nz);\n  }\n\n  diffAddDbl(p2, p3) {\n    // https://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#ladder-ladd-1987-m-3\n    // 6M + 4S + 8A + 1*a24\n    assert(p2 instanceof XPoint);\n    assert(p3 instanceof XPoint);\n\n    // A = X2 + Z2\n    const a = p2.x.redAdd(p2.z);\n\n    // AA = A^2\n    const aa = a.redSqr();\n\n    // B = X2 - Z2\n    const b = p2.x.redSub(p2.z);\n\n    // BB = B^2\n    const bb = b.redSqr();\n\n    // E = AA - BB\n    const e = aa.redSub(bb);\n\n    // C = X3 + Z3\n    const c = p3.x.redAdd(p3.z);\n\n    // D = X3 - Z3\n    const d = p3.x.redSub(p3.z);\n\n    // DA = D * A\n    const da = d.redMul(a);\n\n    // CB = C * B\n    const cb = c.redMul(b);\n\n    // X5 = Z1 * (DA + CB)^2\n    const x5 = this.z.redMul(da.redAdd(cb).redSqr());\n\n    // Z5 = X1 * (DA - CB)^2\n    const z5 = this.x.redMul(da.redISub(cb).redSqr());\n\n    // X4 = AA * BB\n    const x4 = aa.redMul(bb);\n\n    // Z4 = E * (BB + a24 * E)\n    const z4 = e.redMul(bb.redIAdd(this.curve.a24.redMul(e)));\n\n    return [\n      this.curve.xpoint(x4, z4),\n      this.curve.xpoint(x5, z5)\n    ];\n  }\n\n  getX() {\n    if (this.isInfinity())\n      throw new Error('Invalid point.');\n\n    this.normalize();\n\n    return this.x.fromRed();\n  }\n\n  getY(sign) {\n    return this.toP(sign).getY();\n  }\n\n  eq(p) {\n    assert(p instanceof XPoint);\n\n    // P = Q\n    if (this === p)\n      return true;\n\n    // P = O\n    if (this.isInfinity())\n      return p.isInfinity();\n\n    // Q = O\n    if (p.isInfinity())\n      return false;\n\n    // Z1 = Z2\n    if (this.z.eq(p.z))\n      return this.x.eq(p.x);\n\n    // X1 * Z2 = X2 * Z1\n    const x1 = this.x.redMul(p.z);\n    const x2 = p.x.redMul(this.z);\n\n    return x1.eq(x2);\n  }\n\n  cmp(point) {\n    assert(point instanceof XPoint);\n\n    const inf1 = this.isInfinity();\n    const inf2 = point.isInfinity();\n\n    if (inf1 && !inf2)\n      return -1;\n\n    if (!inf1 && inf2)\n      return 1;\n\n    if (inf1 && inf2)\n      return 0;\n\n    return this.order().cmp(point.order())\n        || this.getX().cmp(point.getX());\n  }\n\n  isInfinity() {\n    // Z1 = 0\n    return this.z.isZero();\n  }\n\n  isOrder2() {\n    if (this.isInfinity())\n      return false;\n\n    return this.x.isZero();\n  }\n\n  isOdd() {\n    return false;\n  }\n\n  isEven() {\n    return false;\n  }\n\n  hasTorsion() {\n    if (this.isInfinity())\n      return false;\n\n    // X1 = 0, Z1 != 0 (edge case)\n    if (this.x.isZero())\n      return true;\n\n    return super.hasTorsion();\n  }\n\n  order() {\n    try {\n      return this.toP().order();\n    } catch (e) {\n      return new BN(1);\n    }\n  }\n\n  jmul(k) {\n    // Multiply with the Montgomery Ladder.\n    //\n    // [MONT3] Algorithm 4, Page 12, Section 4.2.\n    //\n    // Note that any clamping is meant to\n    // be done _outside_ of this function.\n    assert(k instanceof BN);\n    assert(!k.red);\n\n    const bits = k.bitLength();\n\n    let a = this.curve.xpoint();\n    let b = this;\n\n    for (let i = bits - 1; i >= 0; i--) {\n      const bit = k.bit(i);\n\n      if (bit === 0)\n        [a, b] = this.diffAddDbl(a, b);\n      else\n        [b, a] = this.diffAddDbl(b, a);\n    }\n\n    return a;\n  }\n\n  jmulBlind(k, rng) {\n    if (!rng)\n      return this.jmul(k);\n\n    // Randomize if available.\n    return this.randomize(rng).jmul(k);\n  }\n\n  jmulAdd(k1, p2, k2) {\n    throw new Error('Not implemented.');\n  }\n\n  toP(sign = null) {\n    assert(sign == null || typeof sign === 'boolean');\n\n    if (this.isInfinity())\n      return this.curve.point();\n\n    this.normalize();\n\n    return this.curve.pointFromX(this.x, sign);\n  }\n\n  toJ() {\n    return this;\n  }\n\n  toX() {\n    return this;\n  }\n\n  key() {\n    if (this.isInfinity())\n      return `${this.curve.uid}:oo`;\n\n    this.normalize();\n\n    const x = this.getX().toString(16);\n\n    return `${this.curve.uid}:${x}`;\n  }\n\n  encode() {\n    // [RFC7748] Section 5.\n    return this.curve.encodeField(this.getX());\n  }\n\n  static decode(curve, bytes) {\n    assert(curve instanceof MontCurve);\n\n    // [RFC7748] Section 5.\n    const x = curve.decodeField(bytes);\n\n    // We're supposed to ignore the hi bit\n    // on montgomery points... I think. If\n    // we don't, the X25519 test vectors\n    // break, which is pretty convincing\n    // evidence. This is a no-op for X448.\n    x.iumaskn(curve.fieldBits);\n\n    // Note: montgomery points are meant to be\n    // reduced by the prime and do not have to\n    // be explicitly validated in order to do\n    // the montgomery ladder.\n    const p = curve.xpoint(x, curve.one);\n\n    assert(!p.isInfinity());\n\n    return p;\n  }\n\n  toJSON(pre) {\n    return this.toP().toJSON(pre);\n  }\n\n  toPretty() {\n    return this.toP().toPretty();\n  }\n\n  static fromJSON(curve, json) {\n    return MontPoint.fromJSON(curve, json).toX();\n  }\n\n  [custom]() {\n    if (this.isInfinity())\n      return '<XPoint: Infinity>';\n\n    return '<XPoint:'\n        + ' x=' + this.x.fromRed().toString(16, 2)\n        + ' z=' + this.z.fromRed().toString(16, 2)\n        + '>';\n  }\n}\n\n/**\n * EdwardsCurve\n */\n\nclass EdwardsCurve extends Curve {\n  constructor(conf) {\n    super(EdwardsPoint, 'edwards', conf);\n\n    this.a = BN.fromJSON(conf.a).toRed(this.red);\n    this.d = BN.fromJSON(conf.d).toRed(this.red);\n    this.s = BN.fromJSON(conf.s || '0').toRed(this.red);\n    this.si = this.s.isZero() ? this.zero : this.s.redInvert();\n\n    this.k = this.d.redMuln(2);\n    this.smi = -this.d.redNeg().word(0);\n    this.ad6 = this.a.redAdd(this.d).redMul(this.i6);\n\n    this.twisted = !this.a.eq(this.one);\n    this.oneA = this.a.eq(this.one);\n    this.mOneA = this.a.eq(this.one.redNeg());\n    this.smallD = this.prime != null && this.d.redNeg().length === 1;\n    this.alt = null;\n\n    this._finalize(conf);\n  }\n\n  static _isomorphism(curveA, curveD, customA) {\n    // Twisted Edwards Isomorphism.\n    //\n    // [TWISTED] Definition 2.1, Page 3, Section 2.\n    //\n    // Transformation:\n    //\n    //   a' = a'\n    //   d' = a' * d / a\n    //\n    // Where (a / a') is square.\n    assert(curveA instanceof BN);\n    assert(curveD instanceof BN);\n    assert(customA instanceof BN);\n\n    const a = customA.clone();\n    const d = customA.redMul(curveD).redDiv(curveA);\n    const c = curveA.redDiv(customA);\n\n    if (c.redJacobi() !== 1)\n      throw new Error('Invalid `a` coefficient.');\n\n    return [a, d];\n  }\n\n  _short(a0, odd) {\n    // Twisted Edwards->Short Weierstrass Equivalence.\n    //\n    // [TWISTEQ] Section 2.\n    //\n    // Transformation:\n    //\n    //   a' = -(a^2 + 14 * a * d + d^2) / 48\n    //   b' = (33 * (a^2 * d + a * d^2) - a^3 - d^3) / 864\n    const {a, d} = this;\n    const a2 = a.redSqr();\n    const a3 = a2.redMul(a);\n    const d2 = d.redSqr();\n    const d3 = d2.redMul(d);\n    const ad14 = a.redMul(d).redIMuln(14);\n    const a2d = a2.redMul(d);\n    const ad2 = a.redMul(d2);\n    const t0 = a2d.redIAdd(ad2).redIMuln(33);\n    const wa = a2.redAdd(ad14).redIAdd(d2).redDivn(-48);\n    const wb = t0.redISub(a3).redISub(d3).redDivn(864);\n\n    if (a0 != null)\n      return ShortCurve._isomorphism(wa, wb, a0, odd);\n\n    return [wa, wb];\n  }\n\n  _mont(b0, invert = false) {\n    // Twisted Edwards->Montgomery Transformation.\n    //\n    // [TWISTED] Theorem 3.2, Page 4, Section 3.\n    //\n    // Equivalence:\n    //\n    //   A = 2 * (a + d) / (a - d)\n    //   B = 4 / (a - d)\n    //\n    // Isomorphism:\n    //\n    //   A = 2 * (a + d) / (a - d)\n    //   B = B'\n    //\n    // Where ((4 / (a - d)) / B') is square.\n    //\n    // If `4 / (a - d)` is non-square, we can\n    // usually force B=1 by using the `invert`\n    // option. This will create an isomorphism\n    // chain of: E(a,d)->E(d,a)->M(-A,-B).\n    //\n    // The equivalence between E(a,d) and E(d,a)\n    // is:\n    //\n    //   (x, y) = (x, 1 / y)\n    //\n    // Meaning our map to M(-A,-B) is:\n    //\n    //   u = (1 + 1 / y) / (1 - 1 / y)\n    //     = (y + 1) / (y - 1)\n    //   v = u / x\n    assert(typeof invert === 'boolean');\n\n    let apd, amd;\n\n    if (invert) {\n      apd = this.d.redAdd(this.a);\n      amd = this.d.redSub(this.a);\n    } else {\n      apd = this.a.redAdd(this.d);\n      amd = this.a.redSub(this.d);\n    }\n\n    const z = amd.redInvert();\n    const a = apd.redMuln(2).redMul(z);\n    const b = z.redMuln(4);\n\n    if (b0 != null)\n      return MontCurve._isomorphism(a, b, b0);\n\n    return [a, b];\n  }\n\n  _edwards(a0) {\n    return EdwardsCurve._isomorphism(this.a, this.d, a0);\n  }\n\n  _scaleShort(curve) {\n    assert(curve instanceof ShortCurve);\n\n    const [u2, u3] = curve._scale(this);\n\n    return [this.field(u2.redInvert()),\n            this.field(u3.redInvert())];\n  }\n\n  _scaleMont(curve, invert = false) {\n    // Calculate isomorphism factor between\n    // Twisted Edwards and Montgomery with:\n    //\n    //   a = (A + 2) / B\n    //   c = +-sqrt(a / a')\n    //\n    // Which can be reduced to:\n    //\n    //   c = +-sqrt((A + 2) / (B * a'))\n    //\n    // If base points are available, we can do:\n    //\n    //   x = u / v\n    //   c = x' / x\n    //\n    // Which can be reduced to:\n    //\n    //   c = v * x' / u\n    //\n    // We can now calculate the Edwards `x` with:\n    //\n    //   x' = c * u / v\n    //\n    // And likewise, the Montgomery `v`:\n    //\n    //   v = c * u / x'\n    assert(curve instanceof MontCurve);\n    assert(typeof invert === 'boolean');\n\n    if (this.g.isInfinity() || curve.g.isInfinity()) {\n      const [a] = curve._edwards(null, invert);\n\n      return this.field(a).redDivSqrt(this.a);\n    }\n\n    const x = curve.g.x.redDiv(curve.g.y);\n\n    return this.g.x.redDiv(this.field(x));\n  }\n\n  _scaleEdwards(curve) {\n    // We can extract the isomorphism factor with:\n    //\n    //   c = +-sqrt(a / a')\n    //\n    // If base points are available, we can do:\n    //\n    //   c = x' / x\n    assert(curve instanceof EdwardsCurve);\n\n    if (this.g.isInfinity() || curve.g.isInfinity())\n      return this.field(curve.a).redDivSqrt(this.a);\n\n    return this.g.x.redDiv(this.field(curve.g.x));\n  }\n\n  _mulA(num) {\n    assert(num instanceof BN);\n\n    // n * a = n\n    if (this.oneA)\n      return num.clone();\n\n    // n * a = -n\n    if (this.mOneA)\n      return num.redNeg();\n\n    return this.a.redMul(num);\n  }\n\n  _mulD(num) {\n    assert(num instanceof BN);\n\n    // -d < 0x4000000\n    if (this.smallD)\n      return num.redMuln(this.smi);\n\n    return this.d.redMul(num);\n  }\n\n  _elligator1(t) {\n    // Elligator 1.\n    //\n    // Distribution: 1/2.\n    //\n    // [ELL1] Page 6, Section 3.\n    //        Page 15, Appendix A.\n    // [ELL2] Page 7, Section 3.2.\n    //\n    // Assumptions:\n    //\n    //   - Let p be a prime power congruent to 3 mod 4.\n    //   - Let s be a nonzero element of F(p).\n    //   - Let c = 2 / s^2.\n    //   - Let r = c + 1 / c.\n    //   - Let d = -(c + 1)^2 / (c - 1)^2.\n    //   - (s^2 - 2) * (s^2 + 2) != 0.\n    //   - c * (c - 1) * (c + 1) != 0.\n    //   - r != 0.\n    //   - d is not square.\n    //   - x^2 + y^2 = 1 + d * x^2 * y^2.\n    //   - u * v * X * Y * x * (Y + 1) != 0.\n    //   - Y^2 = X^5 + (r^2 - 2) * X^3 + X.\n    //\n    // Elligator 1, as devised by Fouque et al,\n    // takes place on the hyperelliptic curve of:\n    //\n    //   y^2 = x^5 + (r^2 - 2) * x^3 + x\n    //\n    // Not only must our Edwards curve be complete,\n    // with a prime congruent to 3 mod 4, and a = 1,\n    // our curve must be isomorphic to a hyperelliptic\n    // curve of the above form. Roughly one half of\n    // all Edwards curves are isomorphic to a curve\n    // of said form.\n    //\n    // We can derive the isomorphism with:\n    //\n    //   c = (d +- 2 * sqrt(-d) - 1) / (d + 1)\n    //   s = +-sqrt(2 / c)\n    //   r = c + 1 / c\n    //\n    // Note that even if your curve is an Elligator 1\n    // curve, Elligator 2 is probably still preferable,\n    // as it has nearly the same properties (i.e. the\n    // same distribution), and is much less complex.\n    //\n    // Map:\n    //\n    //   f(a) = a^((p - 1) / 2)\n    //   u = (1 - t) / (1 + t)\n    //   v = u^5 + (r^2 - 2) * u^3 + u\n    //   X = f(v) * u\n    //   Y = (f(v) * v)^((p + 1) / 4) * f(v) * f(u^2 + 1 / c^2)\n    //   Y = 1, if u = 0\n    //   x = (c - 1) * s * X * (1 + X) / Y\n    //   y = (r * X - (1 + X)^2) / (r * X + (1 + X)^2)\n    //\n    // When t = +-1, we create the hyperelliptic\n    // 2-torsion point of (0, 0). This needs to be\n    // mapped to (0, -1) in Edwards form, but the x\n    // denominator becomes zero. As far as I can\n    // tell, this is the only exceptional case.\n    //\n    // The only other exceptional case initially\n    // appears to be when the y denominator sums to\n    // zero (when t = sqrt(4 / r + 1)), however, the\n    // hyperelliptic `X` is negated by the sign of\n    // `v`, making this impossible.\n    const {s, si, i2, one, two} = this;\n    const c = si.redSqr().redIMuln(2);\n    const ci = s.redSqr().redMul(i2);\n    const ci2 = ci.redSqr();\n    const r = c.redAdd(ci);\n    const r2 = r.redSqr().redISub(two);\n    const cm1 = c.redSub(one);\n    const uu = one.redSub(t);\n    const uz = one.redAdd(t);\n    const u = uz.isZero() ? uz : uu.redDiv(uz);\n    const u2 = u.redSqr();\n    const u3 = u2.redMul(u);\n    const u5 = u3.redMul(u2);\n    const v = u5.redAdd(r2.redMul(u3)).redIAdd(u);\n    const f0 = this.field(v.redJacobi());\n    const f1 = this.field(u2.redAdd(ci2).redJacobi());\n    const f2 = f0.redMul(f1);\n    const X = f0.redMul(u);\n    const Y = f0.redMul(v).redSqrt().redMul(f2);\n    const X1 = one.redAdd(X);\n    const rX = r.redMul(X);\n    const X12 = X1.redSqr();\n    const xx = cm1.redMul(s).redMul(X).redMul(X1);\n    const xz = u.isZero() ? this.one : Y;\n    const yy = rX.redSub(X12);\n    const yz = rX.redAdd(X12);\n\n    return this.cpoint(xx, xz, yy, yz);\n  }\n\n  _invert1(p, hint) {\n    // Inverting the Map (Elligator 1).\n    //\n    // [ELL1] Page 6, Section 3.\n    //        Page 15, Appendix A.\n    // [ELL2] Page 7, Section 3.3.\n    //\n    // Assumptions:\n    //\n    //   - y + 1 != 0.\n    //   - (1 + n * r)^2 - 1 is square in F(p).\n    //   - If n * r = -2 then x = 2 * s * (c - 1) * f(c) / r.\n    //   - Y = (c - 1) * s * X * (1 + X) / x.\n    //\n    // Map:\n    //\n    //   f(a) = a^((p - 1) / 2)\n    //   n = (y - 1) / (2 * (y + 1))\n    //   X = -(1 + n * r) + ((1 + n * r)^2 - 1)^((p + 1) / 4)\n    //   z = f((c - 1) * s * X * (1 + X) * x * (X^2 + 1 / c^2))\n    //   u = z * X\n    //   t = (1 - u) / (1 + u)\n    const {s, si, i2, one} = this;\n    const {x, y, z} = p;\n    const sign = hint & 1;\n    const c = si.redSqr().redIMuln(2);\n    const ci = s.redSqr().redMul(i2);\n    const ci2 = ci.redSqr();\n    const r = c.redAdd(ci);\n    const cm1 = c.redSub(one);\n    const nn = y.redSub(z);\n    const nz = y.redAdd(z).redIMuln(2);\n    const n = nz.isZero() ? nz : nn.redDiv(nz);\n    const nr1 = one.redAdd(n.redMul(r));\n    const w2 = nr1.redSqr().redISub(one);\n    const w = w2.redSqrt();\n    const X = w.redSub(nr1);\n    const X1 = one.redAdd(X);\n    const YY = cm1.redMul(s).redMul(X).redMul(X1);\n    const Y = YY.redMul(x.redMul(z));\n    const X2 = X.redSqr().redIAdd(ci2);\n    const Z = this.field(Y.redMul(X2).redJacobi());\n    const u = Z.redMul(X);\n    const tt = one.redSub(u);\n    const tz = one.redAdd(u);\n    const t = tz.isZero() ? tz : tt.redDiv(tz);\n\n    if (t.redIsOdd() !== Boolean(sign))\n      t.redINeg();\n\n    return t;\n  }\n\n  _alt() {\n    if (!this.alt)\n      this.alt = this.toMont();\n\n    return this.alt;\n  }\n\n  isElliptic() {\n    const ad = this.a.redMul(this.d);\n    const amd = this.a.redSub(this.d);\n\n    // a * d * (a - d) != 0\n    return !ad.redMul(amd).isZero();\n  }\n\n  jinv() {\n    // [TWISTED] Definition 2.1, Page 3, Section 2.\n    const {a, d} = this;\n    const ad = a.redMul(d);\n    const amd4 = a.redSub(d).redPown(4);\n    const a2 = a.redSqr();\n    const d2 = d.redSqr();\n    const t0 = a2.redAdd(ad.redMuln(14)).redIAdd(d2);\n    const lhs = t0.redPown(3).redIMuln(16);\n    const rhs = ad.redMul(amd4);\n\n    if (rhs.isZero())\n      throw new Error('Curve is not elliptic.');\n\n    // 16 * (a^2 + 14 * a * d + d^2)^3 / (a * d * (a - d)^4)\n    return lhs.redDiv(rhs).fromRed();\n  }\n\n  isComplete() {\n    return this.a.redJacobi() === 1\n        && this.d.redJacobi() === -1;\n  }\n\n  point(x, y, z, t) {\n    return new EdwardsPoint(this, x, y, z, t);\n  }\n\n  jpoint(x, y, z) {\n    assert(x == null && y == null && z == null);\n    return this.point();\n  }\n\n  cpoint(xx, xz, yy, yz) {\n    assert(xx instanceof BN);\n    assert(xz instanceof BN);\n    assert(yy instanceof BN);\n    assert(yz instanceof BN);\n\n    const x = xx.redMul(yz);\n    const y = yy.redMul(xz);\n    const z = xz.redMul(yz);\n    const t = xx.redMul(yy);\n\n    return this.point(x, y, z, t);\n  }\n\n  solveX2(y) {\n    // [RFC8032] Section 5.1.3 & 5.2.3.\n    assert(y instanceof BN);\n\n    // x^2 = (y^2 - 1) / (d * y^2 - a)\n    const y2 = y.redSqr();\n    const rhs = this._mulD(y2).redISub(this.a);\n    const lhs = y2.redISub(this.one);\n    const x2 = lhs.redDiv(rhs);\n\n    return x2;\n  }\n\n  solveX(y) {\n    // Optimize with inverse square root trick.\n    //\n    // Note that `0 / 0` can only occur if\n    // `a == d` (i.e. the curve is singular).\n    const y2 = y.redSqr();\n    const rhs = this._mulD(y2).redISub(this.a);\n    const lhs = y2.redISub(this.one);\n\n    return lhs.redDivSqrt(rhs);\n  }\n\n  solveY2(x) {\n    assert(x instanceof BN);\n\n    // y^2 = (a * x^2 - 1) / (d * x^2 - 1)\n    const x2 = x.redSqr();\n    const lhs = this._mulA(x2).redISub(this.one);\n    const rhs = this._mulD(x2).redISub(this.one);\n    const y2 = lhs.redDiv(rhs);\n\n    return y2;\n  }\n\n  solveY(x) {\n    // Optimize with inverse square root trick.\n    //\n    // Note that `0 / 0` can only occur if\n    // `a == d` (i.e. the curve is singular).\n    const x2 = x.redSqr();\n    const lhs = this._mulA(x2).redISub(this.one);\n    const rhs = this._mulD(x2).redISub(this.one);\n\n    return lhs.redDivSqrt(rhs);\n  }\n\n  validate(point) {\n    // [TWISTED] Definition 2.1, Page 3, Section 2.\n    //           Page 11, Section 6.\n    assert(point instanceof EdwardsPoint);\n\n    // Z1 = 1\n    if (point.zOne) {\n      // a * x^2 + y^2 = 1 + d * x^2 * y^2\n      const x2 = point.x.redSqr();\n      const y2 = point.y.redSqr();\n      const dxy = this._mulD(x2).redMul(y2);\n      const lhs = this._mulA(x2).redIAdd(y2);\n      const rhs = this.one.redAdd(dxy);\n      const tz = point.t;\n      const xy = point.x.redMul(point.y);\n\n      return lhs.eq(rhs) && tz.eq(xy);\n    }\n\n    // (a * x^2 + y^2) * z^2 = z^4 + d * x^2 * y^2\n    const x2 = point.x.redSqr();\n    const y2 = point.y.redSqr();\n    const z2 = point.z.redSqr();\n    const z4 = z2.redSqr();\n    const dxy = this._mulD(x2).redMul(y2);\n    const lhs = this._mulA(x2).redIAdd(y2).redMul(z2);\n    const rhs = z4.redIAdd(dxy);\n    const tz = point.t.redMul(point.z);\n    const xy = point.x.redMul(point.y);\n\n    return lhs.eq(rhs) && tz.eq(xy);\n  }\n\n  pointFromX(x, sign = null) {\n    assert(x instanceof BN);\n    assert(sign == null || typeof sign === 'boolean');\n\n    if (!x.red)\n      x = x.toRed(this.red);\n\n    const y = this.solveY(x);\n\n    if (sign != null) {\n      if (y.isZero() && sign)\n        throw new Error('Invalid point.');\n\n      if (y.redIsOdd() !== sign)\n        y.redINeg();\n    }\n\n    return this.point(x, y);\n  }\n\n  pointFromY(y, sign = null) {\n    assert(y instanceof BN);\n    assert(sign == null || typeof sign === 'boolean');\n\n    if (!y.red)\n      y = y.toRed(this.red);\n\n    const x = this.solveX(y);\n\n    if (sign != null) {\n      if (x.isZero() && sign)\n        throw new Error('Invalid point.');\n\n      if (x.redIsOdd() !== sign)\n        x.redINeg();\n    }\n\n    return this.point(x, y);\n  }\n\n  isIsomorphic(curve, invert = false) {\n    // [TWISTED] Theorem 3.2, Page 4, Section 3.\n    //           Definition 2.1, Page 3, Section 2.\n    assert(curve instanceof Curve);\n    assert(typeof invert === 'boolean');\n\n    if (!curve.p.eq(this.p))\n      return false;\n\n    // E(a,d) <-> E(a,b)\n    if (curve.type === 'short')\n      return curve.isIsomorphic(this);\n\n    // E(a,d) <-> M(A,B)\n    // E(a,d) <-> M(-A,-B)\n    if (curve.type === 'mont') {\n      // A * (a - d) = 2 * (a + d)\n      const a = this.field(curve.a);\n\n      let apd, amd;\n\n      if (invert) {\n        apd = this.d.redAdd(this.a);\n        amd = this.d.redSub(this.a);\n      } else {\n        apd = this.a.redAdd(this.d);\n        amd = this.a.redSub(this.d);\n      }\n\n      return a.redMul(amd).eq(apd.redIMuln(2));\n    }\n\n    // E(a,d) <-> E(a',a'd/a)\n    if (curve.type === 'edwards') {\n      // a' * d = a * d'\n      const a = this.field(curve.a);\n      const d = this.field(curve.d);\n\n      return this.a.redMul(d).eq(a.redMul(this.d));\n    }\n\n    return false;\n  }\n\n  isIsogenous(curve) {\n    // Check for the 4-isogenies described by Hamburg:\n    // https://moderncrypto.org/mail-archive/curves/2016/000806.html\n    assert(curve instanceof Curve);\n\n    if (!curve.p.eq(this.p))\n      return false;\n\n    // E(1,d) <-> M(2-4d,1)\n    if (curve.type === 'mont') {\n      if (!this.a.eq(this.one))\n        return false;\n\n      const a = this.field(curve.a);\n      const b = this.field(curve.b);\n      const d24 = this.two.redSub(this.d.redMuln(4));\n\n      return a.eq(d24) && b.eq(this.one);\n    }\n\n    // E(a,d) <-> E(-a,d-a)\n    if (curve.type === 'edwards') {\n      const a = this.field(curve.a);\n      const d = this.field(curve.d);\n\n      return a.eq(this.a.redNeg())\n          && d.eq(this.d.redSub(this.a));\n    }\n\n    return false;\n  }\n\n  pointFromShort(point) {\n    // [TWISTEQ] Section 1.\n    assert(point instanceof ShortPoint);\n\n    if (this.isIsomorphic(point.curve)) {\n      // Equivalence for E(a,b)->E(a',d'):\n      //\n      //   x' = (6 * x - a' - d') / (6 * y)\n      //   y' = (12 * x - 5 * a' + d') / (12 * x + a' - 5 * d')\n      //\n      // Undefined for x = (5 * d' - a') / 12 or y = 0.\n      //\n      // Exceptional Cases:\n      //   - O -> (0, 1)\n      //   - ((a' + d') / 6, 0) -> (0, -1)\n      //   - ((5 * d' - a') / 12, (d' - a') / 4 * sqrt(d')) -> (sqrt(1/d'), oo)\n      //\n      // Unexceptional Cases:\n      //   - ((5 * a' - d') / 12, (a' - d') / 4 * sqrt(a')) -> (sqrt(1/a'), 0)\n      if (point.isInfinity())\n        return this.point();\n\n      if (point.y.isZero())\n        return this.point(this.zero, this.one.redNeg());\n\n      const {a, d} = this;\n      const [u2, u3] = this._scale(point.curve);\n      const a5 = a.redMuln(5);\n      const d5 = d.redMuln(5);\n      const x = this.field(point.x).redMul(u2);\n      const y = this.field(point.y).redMul(u3);\n      const x6 = x.redMuln(6);\n      const x12 = x.redMuln(12);\n      const xx = x6.redSub(a).redISub(d);\n      const xz = y.redMuln(6);\n      const yy = x12.redSub(a5).redIAdd(d);\n      const yz = x12.redAdd(a).redISub(d5);\n\n      return this.cpoint(xx, xz, yy, yz);\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromMont(point) {\n    // [RFC7748] Section 4.1 & 4.2.\n    // [MONT3] Page 6, Section 2.5.\n    // [TWISTED] Theorem 3.2, Page 4, Section 3.\n    assert(point instanceof MontPoint);\n    assert(point.curve.p.eq(this.p));\n\n    // Montgomery `u`, `v`.\n    const u = this.field(point.x);\n    const v = this.field(point.y);\n\n    if (this.isIsogenous(point.curve)) {\n      // 4-isogeny maps for M(2-4d,1)->E(1,d):\n      //\n      //   x = 4 * v * (u^2 - 1) / (u^4 - 2 * u^2 + 4 * v^2 + 1)\n      //   y = -(u^5 - 2 * u^3 - 4 * u * v^2 + u) /\n      //        (u^5 - 2 * u^2 * v^2 - 2 * u^3 - 2 * v^2 + u)\n      //\n      // Undefined for u = 0 and v = 0.\n      //\n      // Exceptional Cases:\n      //   - O -> (0, 1)\n      //   - (0, 0) -> (0, 1)\n      //\n      // Unexceptional Cases:\n      //   - (-1, +-sqrt(A - 2)) -> (0, 1)\n      //   - (1, +-sqrt(A + 2)) -> (0, -1)\n      //\n      // The point (1, v) is invalid on Curve448.\n      if (point.isInfinity())\n        return this.point();\n\n      if (point.x.isZero())\n        return this.point();\n\n      const u2 = u.redSqr();\n      const u3 = u2.redMul(u);\n      const u4 = u3.redMul(u);\n      const u5 = u4.redMul(u);\n      const v2 = v.redSqr();\n      const a = v.redMuln(4);\n      const b = u2.redSub(this.one);\n      const c = u2.redMuln(2);\n      const d = v2.redMuln(4);\n      const e = u3.redIMuln(2);\n      const f = u.redMul(v2).redIMuln(4);\n      const g = u2.redMul(v2).redIMuln(2);\n      const h = v2.redIMuln(2);\n      const xx = a.redMul(b);\n      const xz = u4.redISub(c).redIAdd(d).redIAdd(this.one);\n      const yy = u5.redSub(e).redISub(f).redIAdd(u).redINeg();\n      const yz = u5.redISub(g).redISub(e).redISub(h).redIAdd(u);\n\n      return this.cpoint(xx, xz, yy, yz).divn(4);\n    }\n\n    if (this.isIsomorphic(point.curve, true)) {\n      // Isomorphic maps for M(-A,-B)->E(a,d):\n      //\n      //   x = +-sqrt((A - 2) / (B * a)) * u / v\n      //   y = (u + 1) / (u - 1)\n      //\n      // Undefined for u = 1 or v = 0.\n      //\n      // Exceptional Cases:\n      //   - O -> (0, 1)\n      //   - (0, 0) -> (0, -1)\n      //   - (1, +-sqrt((A + 2) / B)) -> (+-sqrt(1 / d), oo)\n      //\n      // Unexceptional Cases:\n      //   - (-1, +-sqrt((A - 2) / B)) -> (+-sqrt(1 / a), 0)\n      //\n      // The point (1, v) is invalid on Curve448.\n      if (point.isInfinity())\n        return this.point();\n\n      if (point.x.isZero())\n        return this.point(this.zero, this.one.redNeg());\n\n      const c = this._scale(point.curve, true);\n      const xx = c.redMul(u);\n      const xz = v;\n      const yy = u.redAdd(this.one);\n      const yz = u.redSub(this.one);\n\n      return this.cpoint(xx, xz, yy, yz);\n    }\n\n    if (this.isIsomorphic(point.curve, false)) {\n      // Isomorphic maps for M(A,B)->E(a,d):\n      //\n      //   x = +-sqrt((A + 2) / (B * a)) * u / v\n      //   y = (u - 1) / (u + 1)\n      //\n      // Undefined for u = -1 or v = 0.\n      //\n      // Exceptional Cases:\n      //   - O -> (0, 1)\n      //   - (0, 0) -> (0, -1)\n      //   - (-1, +-sqrt((A - 2) / B)) -> (+-sqrt(1 / d), oo)\n      //\n      // Unexceptional Cases:\n      //   - (1, +-sqrt((A + 2) / B)) -> (+-sqrt(1 / a), 0)\n      //\n      // The point (-1, v) is invalid on Curve25519.\n      if (point.isInfinity())\n        return this.point();\n\n      if (point.x.isZero())\n        return this.point(this.zero, this.one.redNeg());\n\n      const c = this._scale(point.curve, false);\n      const xx = c.redMul(u);\n      const xz = v;\n      const yy = u.redSub(this.one);\n      const yz = u.redAdd(this.one);\n\n      return this.cpoint(xx, xz, yy, yz);\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromEdwards(point) {\n    // [TWISTED] Definition 2.1, Page 3, Section 2.\n    // [ISOGENY] Page 2, Section 2.\n    assert(point instanceof EdwardsPoint);\n    assert(point.curve.p.eq(this.p));\n\n    // Edwards `x`, `y`, `z`, `t`.\n    const a = this.field(point.curve.a);\n    const x = this.field(point.x);\n    const y = this.field(point.y);\n    const z = this.field(point.z);\n    const t = this.field(point.t);\n\n    if (this.isIsogenous(point.curve)) {\n      // 4-isogeny maps for E(a,d)<->E(-a,d-a):\n      //\n      //   x' = (2 * x * y) / (y^2 - a * x^2)\n      //   y' = (y^2 + a * x^2) / (2 - y^2 - a * x^2)\n      //\n      // Undefined for y^2 - a * x^2 = 0\n      //            or y^2 + a * x^2 = 2.\n      const xy = x.redMul(y);\n      const x2 = x.redSqr();\n      const y2 = y.redSqr();\n      const z2 = z.redSqr();\n      const ax2 = a.redMul(x2);\n      const xx = xy.redIMuln(2);\n      const xz = y2.redSub(ax2);\n      const yy = y2.redAdd(ax2);\n      const yz = z2.redIMuln(2).redISub(yy);\n      const p = this.cpoint(xx, xz, yy, yz);\n\n      return !this.twisted ? p.divn(4) : p;\n    }\n\n    if (this.isIsomorphic(point.curve)) {\n      // Isomorphic maps for E(a,d)<->E(a',a'd/a):\n      //\n      //   x' = +-sqrt(a / a') * x\n      //   y' = y\n      //\n      // Undefined when (a / a') is not square.\n      const c = this._scale(point.curve);\n      const nx = c.redMul(x);\n      const ny = y;\n      const nz = z;\n      const nt = c.redMul(t);\n\n      return this.point(nx, ny, nz, nt);\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromUniform(u, curve = null) {\n    assert(u instanceof BN);\n    assert(u.red === this.red);\n    assert(curve == null || (curve instanceof MontCurve));\n\n    if (!curve)\n      curve = this._alt();\n\n    const u0 = curve.field(u);\n    const p0 = curve.pointFromUniform(u0);\n\n    return this.pointFromMont(p0);\n  }\n\n  pointToUniform(p, hint, curve = null) {\n    // Convert an edwards point to a field\n    // element by inverting the elligator2 map.\n    //\n    // Hint Layout:\n    //\n    //   [00000000] [0000] [0000]\n    //        |        |      |\n    //        |        |      +-- preimage index\n    //        |        +--- subgroup\n    //        +-- bits to OR with uniform bytes\n    assert(p instanceof EdwardsPoint);\n    assert((hint >>> 0) === hint);\n    assert(curve == null || (curve instanceof MontCurve));\n\n    if (!curve)\n      curve = this._alt();\n\n    // Add a random torsion component.\n    const i = ((hint >> 4) & 15) % this.torsion.length;\n    const q = p.add(this.torsion[i]);\n\n    // Convert and invert.\n    const p0 = curve.pointFromEdwards(q);\n    const u0 = curve.pointToUniform(p0, hint & 15);\n\n    return this.field(u0);\n  }\n\n  pointFromHash(bytes, pake, curve = null) {\n    assert(curve == null || (curve instanceof MontCurve));\n\n    if (!curve)\n      curve = this._alt();\n\n    const p0 = curve.pointFromHash(bytes, pake);\n\n    return this.pointFromMont(p0);\n  }\n\n  pointToHash(p, subgroup, rng, curve = null) {\n    assert(p instanceof EdwardsPoint);\n    assert((subgroup >>> 0) === subgroup);\n    assert(curve == null || (curve instanceof MontCurve));\n\n    if (!curve)\n      curve = this._alt();\n\n    // Add a random torsion component.\n    const i = subgroup % this.torsion.length;\n    const q = p.add(this.torsion[i]);\n\n    // Convert and invert.\n    const p0 = curve.pointFromEdwards(q);\n\n    return curve.pointToHash(p0, 0, rng);\n  }\n\n  decodePoint(bytes) {\n    return EdwardsPoint.decode(this, bytes);\n  }\n\n  toShort(a0, odd, sign = null) {\n    const [a, b] = this._short(a0, odd);\n\n    const curve = new ShortCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      b: b,\n      n: this.n,\n      h: this.h\n    });\n\n    if (sign != null) {\n      const [, u3] = curve._scale(this);\n\n      if (u3.redIsOdd() !== sign)\n        u3.redINeg();\n    }\n\n    if (!this.g.isInfinity())\n      curve.g = curve.pointFromEdwards(this.g);\n\n    for (let i = 0; i < this.h.word(0); i++)\n      curve.torsion[i] = curve.pointFromEdwards(this.torsion[i]);\n\n    return curve;\n  }\n\n  toMont(b0, invert, sign = null) {\n    const [a, b] = this._mont(b0, invert);\n\n    const curve = new MontCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      b: b,\n      n: this.n,\n      h: this.h,\n      z: this.z\n    });\n\n    if (sign != null) {\n      const c = this._scale(curve, invert);\n\n      if (c.redIsOdd() !== sign)\n        c.redINeg();\n    }\n\n    if (!this.g.isInfinity())\n      curve.g = curve.pointFromEdwards(this.g);\n\n    for (let i = 0; i < this.h.word(0); i++)\n      curve.torsion[i] = curve.pointFromEdwards(this.torsion[i]);\n\n    return curve;\n  }\n\n  toEdwards(a0, sign = null) {\n    const [a, d] = this._edwards(a0);\n\n    const curve = new EdwardsCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      d: d,\n      n: this.n,\n      h: this.h,\n      z: this.z\n    });\n\n    if (sign != null) {\n      const c = curve._scale(this);\n\n      if (c.redIsOdd() !== sign)\n        c.redINeg();\n    }\n\n    if (!this.g.isInfinity()) {\n      curve.g = curve.pointFromEdwards(this.g);\n      curve.g.normalize();\n    }\n\n    if (curve.isComplete()) {\n      for (let i = 0; i < this.h.word(0); i++) {\n        curve.torsion[i] = curve.pointFromEdwards(this.torsion[i]);\n        curve.torsion[i].normalize();\n      }\n    }\n\n    return curve;\n  }\n\n  pointFromJSON(json) {\n    return EdwardsPoint.fromJSON(this, json);\n  }\n\n  toJSON(pre) {\n    const json = super.toJSON(pre);\n\n    json.a = this.a.fromRed().toJSON();\n    json.d = this.d.fromRed().toJSON();\n\n    if (!this.s.isZero())\n      json.s = this.s.fromRed().toJSON();\n\n    return json;\n  }\n}\n\n/**\n * EdwardsPoint\n */\n\nclass EdwardsPoint extends Point {\n  constructor(curve, x, y, z, t) {\n    assert(curve instanceof EdwardsCurve);\n\n    super(curve, types.EXTENDED);\n\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n\n    if (x != null)\n      this._init(x, y, z, t);\n  }\n\n  _init(x, y, z, t) {\n    assert(x instanceof BN);\n    assert(y instanceof BN);\n    assert(z == null || (z instanceof BN));\n    assert(t == null || (t instanceof BN));\n\n    this.x = x;\n    this.y = y;\n    this.z = z || this.curve.one;\n    this.t = t || null;\n\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n\n    this.zOne = this.z.eq(this.curve.one);\n\n    this._check();\n\n    if (!this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redDiv(this.z);\n    }\n  }\n\n  _check() {\n    // In order to achieve complete\n    // addition formulas, `a` must\n    // be a square (always the case\n    // for a=1), and `d` must be a\n    // non-square.\n    //\n    // If this is not the case, the\n    // addition formulas may have\n    // exceptional cases where Z3=0.\n    //\n    // In particular, this can occur\n    // when: Q*h = -P*h and Q != -P.\n    //\n    // This is assuming 4-torsion is\n    // involved (the 4-torsion point\n    // is _not_ representable when\n    // `d` is square).\n    if (this.z.isZero())\n      throw new Error('Invalid point.');\n  }\n\n  clone() {\n    return this.curve.point(this.x, this.y, this.z, this.t);\n  }\n\n  normalize() {\n    // https://hyperelliptic.org/EFD/g1p/auto-edwards-projective.html#scaling-z\n    // 1I + 2M (+ 1M if extended)\n\n    // Z1 = 1\n    if (this.zOne)\n      return this;\n\n    // A = 1 / Z1\n    const a = this.z.redInvert();\n\n    // X3 = X1 * A\n    this.x = this.x.redMul(a);\n\n    // Y3 = Y1 * A\n    this.y = this.y.redMul(a);\n\n    // T3 = T1 * A\n    this.t = this.t.redMul(a);\n\n    // Z3 = 1\n    this.z = this.curve.one;\n    this.zOne = true;\n\n    return this;\n  }\n\n  scale(a) {\n    assert(a instanceof BN);\n\n    // X3 = X1 * A\n    const nx = this.x.redMul(a);\n\n    // Y3 = Y1 * A\n    const ny = this.y.redMul(a);\n\n    // Z3 = Z1 * A\n    const nz = this.z.redMul(a);\n\n    // T3 = T1 * A\n    const nt = this.t.redMul(a);\n\n    return this.curve.point(nx, ny, nz, nt);\n  }\n\n  neg() {\n    // -(X1, Y1, Z1, T1) = (-X1, Y1, Z1, -T1)\n    const nx = this.x.redNeg();\n    const ny = this.y;\n    const nz = this.z;\n    const nt = this.t.redNeg();\n\n    return this.curve.point(nx, ny, nz, nt);\n  }\n\n  add(p) {\n    assert(p instanceof EdwardsPoint);\n\n    // P = O\n    if (this.isInfinity())\n      return p;\n\n    // Q = O\n    if (p.isInfinity())\n      return this;\n\n    // Z1 = 1\n    if (this.zOne)\n      return p._add(this);\n\n    return this._add(p);\n  }\n\n  _add(p) {\n    // a = -1\n    if (this.curve.mOneA)\n      return this._addM1(p);\n\n    return this._addA(p);\n  }\n\n  _addM1(p) {\n    // Assumes a = -1.\n    //\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-3\n    // 8M + 8A + 1*k + 1*2\n    //\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-madd-2008-hwcd-3\n    // 7M + 8A + 1*k + 1*2\n\n    // A = (Y1 - X1) * (Y2 - X2)\n    const a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n\n    // B = (Y1 + X1) * (Y2 + X2)\n    const b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n\n    // C = T1 * k * T2\n    const c = this.t.redMul(this.curve.k).redMul(p.t);\n\n    // D = Z1 * 2 * Z2\n    const d = p.zOne ? this.z.redAdd(this.z) : this.z.redMul(p.z).redIMuln(2);\n\n    // E = B - A\n    const e = b.redSub(a);\n\n    // F = D - C\n    const f = d.redSub(c);\n\n    // G = D + C\n    const g = d.redIAdd(c);\n\n    // H = B + A\n    const h = b.redIAdd(a);\n\n    // X3 = E * F\n    const nx = e.redMul(f);\n\n    // Y3 = G * H\n    const ny = g.redMul(h);\n\n    // T3 = E * H\n    const nt = e.redMul(h);\n\n    // Z3 = F * G\n    const nz = f.redMul(g);\n\n    return this.curve.point(nx, ny, nz, nt);\n  }\n\n  _addA(p) {\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n    // 9M + 7A + 1*a + 1*d\n    //\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-madd-2008-hwcd\n    // 8M + 7A + 1*a + 1*d\n\n    // A = X1 * X2\n    const a = this.x.redMul(p.x);\n\n    // B = Y1 * Y2\n    const b = this.y.redMul(p.y);\n\n    // C = T1 * d * T2\n    const c = this.curve._mulD(this.t).redMul(p.t);\n\n    // D = Z1 * Z2\n    const d = p.zOne ? this.z.clone() : this.z.redMul(p.z);\n\n    // + XYXY = (X1 + Y1) * (X2 + Y2)\n    const xyxy = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y));\n\n    // E = (X1 + Y1) * (X2 + Y2) - A - B\n    const e = xyxy.redISub(a).redISub(b);\n\n    // F = D - C\n    const f = d.redSub(c);\n\n    // G = D + C\n    const g = d.redIAdd(c);\n\n    // H = B - a * A\n    const h = b.redISub(this.curve._mulA(a));\n\n    // X3 = E * F\n    const nx = e.redMul(f);\n\n    // Y3 = G * H\n    const ny = g.redMul(h);\n\n    // T3 = E * H\n    const nt = e.redMul(h);\n\n    // Z3 = F * G\n    const nz = f.redMul(g);\n\n    return this.curve.point(nx, ny, nz, nt);\n  }\n\n  dbl() {\n    // P = O\n    if (this.isInfinity())\n      return this;\n\n    return this._dbl();\n  }\n\n  _dbl() {\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n    // 4M + 4S + 6A + 1*a + 1*2\n    //\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-mdbl-2008-hwcd\n    // 3M + 4S + 7A + 1*a + 1*2\n\n    // A = X1^2\n    const a = this.x.redSqr();\n\n    // B = Y1^2\n    const b = this.y.redSqr();\n\n    // C = 2 * Z1^2\n    const c = this.zOne ? this.curve.two : this.z.redSqr().redIMuln(2);\n\n    // D = a * A\n    const d = this.curve._mulA(a);\n\n    // E = (X1 + Y1)^2 - A - B\n    const e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n\n    // G = D + B\n    const g = d.redAdd(b);\n\n    // F = G - C\n    const f = g.redSub(c);\n\n    // H = D - B\n    const h = d.redISub(b);\n\n    // X3 = E * F\n    const nx = e.redMul(f);\n\n    // Y3 = G * H\n    const ny = g.redMul(h);\n\n    // T3 = E * H\n    const nt = e.redMul(h);\n\n    // Z3 = F * G\n    const nz = f.redMul(g);\n\n    return this.curve.point(nx, ny, nz, nt);\n  }\n\n  getX() {\n    this.normalize();\n    return this.x.fromRed();\n  }\n\n  getY() {\n    this.normalize();\n    return this.y.fromRed();\n  }\n\n  eq(p) {\n    assert(p instanceof EdwardsPoint);\n    assert(!this.z.isZero());\n    assert(!p.z.isZero());\n\n    // P = Q\n    if (this === p)\n      return true;\n\n    // Z1 = Z2\n    if (this.z.eq(p.z)) {\n      return this.x.eq(p.x)\n          && this.y.eq(p.y);\n    }\n\n    // X1 * Z2 = X2 * Z1\n    const x1 = this.x.redMul(p.z);\n    const x2 = p.x.redMul(this.z);\n\n    if (!x1.eq(x2))\n      return false;\n\n    const y1 = this.y.redMul(p.z);\n    const y2 = p.y.redMul(this.z);\n\n    return y1.eq(y2);\n  }\n\n  cmp(point) {\n    assert(point instanceof EdwardsPoint);\n\n    return this.order().cmp(point.order())\n        || this.getY().cmp(point.getY())\n        || this.getX().cmp(point.getX());\n  }\n\n  isInfinity() {\n    assert(!this.z.isZero());\n\n    // X1 = 0\n    if (!this.x.isZero())\n      return false;\n\n    // Y1 = Z1\n    return this.y.eq(this.z);\n  }\n\n  isOrder2() {\n    if (this.isInfinity())\n      return false;\n\n    return this.x.isZero();\n  }\n\n  isOdd() {\n    this.normalize();\n    return this.x.redIsOdd();\n  }\n\n  isEven() {\n    this.normalize();\n    return this.x.redIsEven();\n  }\n\n  toP() {\n    return this.normalize();\n  }\n\n  toJ() {\n    return this;\n  }\n\n  encode() {\n    // [RFC8032] Section 5.1.2.\n    const y = this.getY();\n\n    // Note: `x` normalized from `getY()` call.\n    y.setn(this.curve.signBit, this.x.redIsOdd());\n\n    return this.curve.encodeAdjusted(y);\n  }\n\n  static decode(curve, bytes) {\n    // [RFC8032] Section 5.1.3.\n    assert(curve instanceof EdwardsCurve);\n\n    const y = curve.decodeAdjusted(bytes);\n    const sign = y.testn(curve.signBit) !== 0;\n\n    y.setn(curve.signBit, 0);\n\n    if (y.cmp(curve.p) >= 0)\n      throw new Error('Invalid point.');\n\n    return curve.pointFromY(y, sign);\n  }\n\n  toJSON(pre) {\n    if (this.isInfinity())\n      return [];\n\n    const x = this.getX().toJSON();\n    const y = this.getY().toJSON();\n\n    if (pre === true && this.pre)\n      return [x, y, this.pre.toJSON()];\n\n    return [x, y];\n  }\n\n  toPretty() {\n    const size = this.curve.fieldSize * 2;\n    const x = toPretty(this.getX(), size);\n    const y = toPretty(this.getY(), size);\n\n    return [x, y];\n  }\n\n  static fromJSON(curve, json) {\n    assert(curve instanceof EdwardsCurve);\n    assert(Array.isArray(json));\n    assert(json.length === 0\n        || json.length === 2\n        || json.length === 3);\n\n    if (json.length === 0)\n      return curve.point();\n\n    const x = BN.fromJSON(json[0]);\n    const y = BN.fromJSON(json[1]);\n    const point = curve.point(x, y);\n\n    if (json.length > 2 && json[2] != null)\n      point.pre = Precomp.fromJSON(point, json[2]);\n\n    return point;\n  }\n\n  [custom]() {\n    if (this.isInfinity())\n      return '<EdwardsPoint: Infinity>';\n\n    return '<EdwardsPoint:'\n        + ' x=' + this.x.fromRed().toString(16, 2)\n        + ' y=' + this.y.fromRed().toString(16, 2)\n        + ' z=' + this.z.fromRed().toString(16, 2)\n        + '>';\n  }\n}\n\n/**\n * Precomp\n */\n\nclass Precomp {\n  constructor() {\n    this.naf = null;\n    this.windows = null;\n    this.doubles = null;\n    this.blinding = null;\n    this.beta = null;\n  }\n\n  map(func) {\n    assert(typeof func === 'function');\n\n    const out = new this.constructor();\n\n    if (this.naf)\n      out.naf = this.naf.map(func);\n\n    if (this.doubles)\n      out.doubles = this.doubles.map(func);\n\n    return out;\n  }\n\n  toJSON() {\n    return {\n      naf: this.naf ? this.naf.toJSON() : null,\n      windows: this.windows ? this.windows.toJSON() : null,\n      doubles: this.doubles ? this.doubles.toJSON() : null,\n      blinding: this.blinding ? this.blinding.toJSON() : undefined\n    };\n  }\n\n  fromJSON(point, json) {\n    assert(point instanceof Point);\n    assert(json && typeof json === 'object');\n\n    if (json.naf != null)\n      this.naf = NAF.fromJSON(point, json.naf);\n\n    if (json.windows != null)\n      this.windows = Windows.fromJSON(point, json.windows);\n\n    if (json.doubles != null)\n      this.doubles = Doubles.fromJSON(point, json.doubles);\n\n    if (json.blinding != null)\n      this.blinding = Blinding.fromJSON(point, json.blinding);\n\n    return this;\n  }\n\n  static fromJSON(point, json) {\n    return new this().fromJSON(point, json);\n  }\n}\n\n/**\n * NAF\n */\n\nclass NAF {\n  constructor(width, points) {\n    this.width = width;\n    this.points = points;\n  }\n\n  map(func) {\n    assert(typeof func === 'function');\n\n    const {width} = this;\n    const points = [];\n\n    for (const point of this.points)\n      points.push(func(point));\n\n    return new this.constructor(width, points);\n  }\n\n  toJSON() {\n    return {\n      width: this.width,\n      points: this.points.slice(1).map((point) => {\n        return point.toJSON();\n      })\n    };\n  }\n\n  static fromJSON(point, json) {\n    assert(point instanceof Point);\n    assert(json && typeof json === 'object');\n    assert((json.width >>> 0) === json.width);\n    assert(Array.isArray(json.points));\n\n    const {curve} = point;\n    const {width} = json;\n    const points = [point];\n\n    for (const item of json.points)\n      points.push(curve.pointFromJSON(item));\n\n    return new this(width, points);\n  }\n}\n\n/**\n * Windows\n */\n\nclass Windows {\n  constructor(width, bits, points) {\n    this.width = width;\n    this.bits = bits;\n    this.points = points;\n  }\n\n  toJSON() {\n    return {\n      width: this.width,\n      bits: this.bits,\n      points: this.points.slice(1).map((point) => {\n        return point.toJSON();\n      })\n    };\n  }\n\n  static fromJSON(point, json) {\n    assert(point instanceof Point);\n    assert(json && typeof json === 'object');\n    assert((json.width >>> 0) === json.width);\n    assert((json.bits >>> 0) === json.bits);\n    assert(Array.isArray(json.points));\n\n    const {curve} = point;\n    const {width, bits} = json;\n    const points = [point];\n\n    for (const item of json.points)\n      points.push(curve.pointFromJSON(item));\n\n    return new this(width, bits, points);\n  }\n}\n\n/**\n * Doubles\n */\n\nclass Doubles {\n  constructor(step, points) {\n    this.step = step;\n    this.points = points;\n  }\n\n  map(func) {\n    assert(typeof func === 'function');\n\n    const {step} = this;\n    const points = [];\n\n    for (const point of this.points)\n      points.push(func(point));\n\n    return new this.constructor(step, points);\n  }\n\n  toJSON() {\n    return {\n      step: this.step,\n      points: this.points.slice(1).map((point) => {\n        return point.toJSON();\n      })\n    };\n  }\n\n  static fromJSON(point, json) {\n    assert(point instanceof Point);\n    assert(json && typeof json === 'object');\n    assert((json.step >>> 0) === json.step);\n    assert(Array.isArray(json.points));\n\n    const {curve} = point;\n    const {step} = json;\n    const points = [point];\n\n    for (const item of json.points)\n      points.push(curve.pointFromJSON(item));\n\n    return new this(step, points);\n  }\n}\n\n/**\n * Blinding\n */\n\nclass Blinding {\n  constructor(blind, unblind) {\n    this.blind = blind;\n    this.unblind = unblind;\n  }\n\n  toJSON() {\n    return {\n      blind: this.blind.toJSON(),\n      unblind: this.unblind.toJSON()\n    };\n  }\n\n  static fromJSON(point, json) {\n    assert(point instanceof Point);\n    assert(json && typeof json === 'object');\n\n    const {curve} = point;\n    const blind = BN.fromJSON(json.blind);\n    const unblind = curve.pointFromJSON(json.unblind);\n\n    return new this(blind, unblind);\n  }\n}\n\n/**\n * Endo\n */\n\nclass Endo {\n  constructor(beta, lambda, basis, pre) {\n    this.beta = beta;\n    this.lambda = lambda;\n    this.basis = basis;\n    this.pre = pre;\n  }\n\n  toJSON() {\n    return {\n      beta: this.beta.fromRed().toJSON(),\n      lambda: this.lambda.toJSON(),\n      basis: [\n        this.basis[0].toJSON(),\n        this.basis[1].toJSON()\n      ],\n      pre: [\n        this.pre[0],\n        this.pre[1].toJSON(),\n        this.pre[2].toJSON()\n      ]\n    };\n  }\n\n  static fromJSON(curve, json) {\n    assert(curve instanceof Curve);\n    assert(json && typeof json === 'object');\n    assert(Array.isArray(json.basis));\n    assert(Array.isArray(json.pre));\n    assert(json.basis.length === 2);\n    assert(json.pre.length === 3);\n    assert((json.pre[0] >>> 0) === json.pre[0]);\n\n    const beta = BN.fromJSON(json.beta).toRed(curve.red);\n    const lambda = BN.fromJSON(json.lambda);\n\n    const basis = [\n      Vector.fromJSON(json.basis[0]),\n      Vector.fromJSON(json.basis[1])\n    ];\n\n    const pre = [\n      json.pre[0],\n      BN.fromJSON(json.pre[1]),\n      BN.fromJSON(json.pre[2])\n    ];\n\n    return new this(beta, lambda, basis, pre);\n  }\n}\n\n/**\n * Vector\n */\n\nclass Vector {\n  constructor(a, b) {\n    this.a = a;\n    this.b = b;\n  }\n\n  toJSON() {\n    return {\n      a: this.a.toJSON(),\n      b: this.b.toJSON()\n    };\n  }\n\n  static fromJSON(json) {\n    assert(json && typeof json === 'object');\n\n    const a = BN.fromJSON(json.a);\n    const b = BN.fromJSON(json.b);\n\n    return new this(a, b);\n  }\n}\n\n/**\n * P192\n * https://tinyurl.com/fips-186-2 (page 29)\n * https://tinyurl.com/fips-186-3 (page 88)\n */\n\nclass P192 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'P192',\n      ossl: 'prime192v1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA256',\n      prime: 'p192',\n      // 2^192 - 2^64 - 1 (= 3 mod 4)\n      p: ['ffffffff ffffffff ffffffff fffffffe',\n          'ffffffff ffffffff'],\n      // -3 mod p\n      a: ['ffffffff ffffffff ffffffff fffffffe',\n          'ffffffff fffffffc'],\n      b: ['64210519 e59c80e7 0fa7e9ab 72243049',\n          'feb8deec c146b9b1'],\n      n: ['ffffffff ffffffff ffffffff 99def836',\n          '146bc9b1 b4d22831'],\n      h: '1',\n      // Icart\n      z: '-5',\n      g: [\n        ['188da80e b03090f6 7cbf20eb 43a18800',\n         'f4ff0afd 82ff1012'],\n        ['07192b95 ffc8da78 631011ed 6b24cdd5',\n         '73f977a1 1e794811'],\n        pre\n      ]\n    });\n  }\n}\n\n/**\n * P224\n * https://tinyurl.com/fips-186-2 (page 30)\n * https://tinyurl.com/fips-186-3 (page 88)\n */\n\nclass P224 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'P224',\n      ossl: 'secp224r1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA256',\n      prime: 'p224',\n      // 2^224 - 2^96 + 1 (1 mod 16)\n      p: ['ffffffff ffffffff ffffffff ffffffff',\n          '00000000 00000000 00000001'],\n      // -3 mod p\n      a: ['ffffffff ffffffff ffffffff fffffffe',\n          'ffffffff ffffffff fffffffe'],\n      b: ['b4050a85 0c04b3ab f5413256 5044b0b7',\n          'd7bfd8ba 270b3943 2355ffb4'],\n      n: ['ffffffff ffffffff ffffffff ffff16a2',\n          'e0b8f03e 13dd2945 5c5c2a3d'],\n      h: '1',\n      // SSWU\n      z: '1f',\n      g: [\n        ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3',\n         '56c21122 343280d6 115c1d21'],\n        ['bd376388 b5f723fb 4c22dfe6 cd4375a0',\n         '5a074764 44d58199 85007e34'],\n        pre\n      ]\n    });\n  }\n}\n\n/**\n * P256\n * https://tinyurl.com/fips-186-2 (page 31)\n * https://tinyurl.com/fips-186-3 (page 89)\n */\n\nclass P256 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'P256',\n      ossl: 'prime256v1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA256',\n      prime: null,\n      // 2^256 - 2^224 + 2^192 + 2^96 - 1 (= 3 mod 4)\n      p: ['ffffffff 00000001 00000000 00000000',\n          '00000000 ffffffff ffffffff ffffffff'],\n      // -3 mod p\n      a: ['ffffffff 00000001 00000000 00000000',\n          '00000000 ffffffff ffffffff fffffffc'],\n      b: ['5ac635d8 aa3a93e7 b3ebbd55 769886bc',\n          '651d06b0 cc53b0f6 3bce3c3e 27d2604b'],\n      n: ['ffffffff 00000000 ffffffff ffffffff',\n          'bce6faad a7179e84 f3b9cac2 fc632551'],\n      h: '1',\n      // SSWU\n      z: '-a',\n      g: [\n        ['6b17d1f2 e12c4247 f8bce6e5 63a440f2',\n         '77037d81 2deb33a0 f4a13945 d898c296'],\n        ['4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16',\n         '2bce3357 6b315ece cbb64068 37bf51f5'],\n        pre\n      ]\n    });\n  }\n}\n\n/**\n * P384\n * https://tinyurl.com/fips-186-2 (page 32)\n * https://tinyurl.com/fips-186-3 (page 89)\n */\n\nclass P384 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'P384',\n      ossl: 'secp384r1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA384',\n      prime: null,\n      // 2^384 - 2^128 - 2^96 + 2^32 - 1 (= 3 mod 4)\n      p: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff fffffffe',\n          'ffffffff 00000000 00000000 ffffffff'],\n      // -3 mod p\n      a: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff fffffffe',\n          'ffffffff 00000000 00000000 fffffffc'],\n      b: ['b3312fa7 e23ee7e4 988e056b e3f82d19',\n          '181d9c6e fe814112 0314088f 5013875a',\n          'c656398d 8a2ed19d 2a85c8ed d3ec2aef'],\n      n: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff c7634d81 f4372ddf',\n          '581a0db2 48b0a77a ecec196a ccc52973'],\n      h: '1',\n      // Icart\n      z: '-c',\n      g: [\n        ['aa87ca22 be8b0537 8eb1c71e f320ad74',\n         '6e1d3b62 8ba79b98 59f741e0 82542a38',\n         '5502f25d bf55296c 3a545e38 72760ab7'],\n        ['3617de4a 96262c6f 5d9e98bf 9292dc29',\n         'f8f41dbd 289a147c e9da3113 b5f0b8c0',\n         '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'],\n        pre\n      ]\n    });\n  }\n}\n\n/**\n * P521\n * https://tinyurl.com/fips-186-2 (page 33)\n * https://tinyurl.com/fips-186-3 (page 90)\n */\n\nclass P521 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'P521',\n      ossl: 'secp521r1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA512',\n      prime: 'p521',\n      // 2^521 - 1 (= 3 mod 4)\n      p: ['000001ff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff'],\n      // -3 mod p\n      a: ['000001ff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'fffffffc'],\n      b: ['00000051 953eb961 8e1c9a1f 929a21a0',\n          'b68540ee a2da725b 99b315f3 b8b48991',\n          '8ef109e1 56193951 ec7e937b 1652c0bd',\n          '3bb1bf07 3573df88 3d2c34f1 ef451fd4',\n          '6b503f00'],\n      n: ['000001ff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'fffffffa 51868783 bf2f966b 7fcc0148',\n          'f709a5d0 3bb5c9b8 899c47ae bb6fb71e',\n          '91386409'],\n      h: '1',\n      // SSWU\n      z: '-4',\n      g: [\n        ['000000c6 858e06b7 0404e9cd 9e3ecb66',\n         '2395b442 9c648139 053fb521 f828af60',\n         '6b4d3dba a14b5e77 efe75928 fe1dc127',\n         'a2ffa8de 3348b3c1 856a429b f97e7e31',\n         'c2e5bd66'],\n        ['00000118 39296a78 9a3bc004 5c8a5fb4',\n         '2c7d1bd9 98f54449 579b4468 17afbd17',\n         '273e662c 97ee7299 5ef42640 c550b901',\n         '3fad0761 353c7086 a272c240 88be9476',\n         '9fd16650'],\n        pre\n      ]\n    });\n  }\n}\n\n/**\n * SECP256K1\n * https://www.secg.org/SEC2-Ver-1.0.pdf (page 15, section 2.7.1)\n * https://www.secg.org/sec2-v2.pdf (page 9, section 2.4.1)\n */\n\nclass SECP256K1 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'SECP256K1',\n      ossl: 'secp256k1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA256',\n      prime: 'k256',\n      // 2^256 - 2^32 - 977 (= 3 mod 4)\n      p: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff fffffffe fffffc2f'],\n      a: '0',\n      b: '7',\n      n: ['ffffffff ffffffff ffffffff fffffffe',\n          'baaedce6 af48a03b bfd25e8c d0364141'],\n      h: '1',\n      // SVDW\n      z: '1',\n      // sqrt(-3)\n      c: ['0a2d2ba9 3507f1df 233770c2 a797962c',\n          'c61f6d15 da14ecd4 7d8d27ae 1cd5f852'],\n      g: [\n        ['79be667e f9dcbbac 55a06295 ce870b07',\n         '029bfcdb 2dce28d9 59f2815b 16f81798'],\n        ['483ada77 26a3c465 5da4fbfc 0e1108a8',\n         'fd17b448 a6855419 9c47d08f fb10d4b8'],\n        pre\n      ],\n      // Precomputed endomorphism.\n      endo: {\n        beta: ['7ae96a2b 657c0710 6e64479e ac3434e9',\n               '9cf04975 12f58995 c1396c28 719501ee'],\n        lambda: ['5363ad4c c05c30e0 a5261c02 8812645a',\n                 '122e22ea 20816678 df02967c 1b23bd72'],\n        basis: [\n          {\n            a: '3086d221a7d46bcde86c90e49284eb15',\n            b: '-e4437ed6010e88286f547fa90abfe4c3'\n          },\n          {\n            a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n            b: '3086d221a7d46bcde86c90e49284eb15'\n          }\n        ],\n        pre: [\n          384,\n          ['3086d221 a7d46bcd e86c90e4 9284eb15',\n           '3daa8a14 71e8ca7f e893209a 45dbb031'],\n          ['-',\n           'e4437ed6 010e8828 6f547fa9 0abfe4c4',\n           '221208ac 9df506c6 1571b4ae 8ac47f71']\n        ]\n      }\n    });\n  }\n}\n\n/**\n * BRAINPOOLP256\n * https://tools.ietf.org/html/rfc5639#section-3.4\n */\n\nclass BRAINPOOLP256 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'BRAINPOOLP256',\n      ossl: 'brainpoolP256r1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA256',\n      prime: null,\n      // (= 3 mod 4)\n      p: ['a9fb57db a1eea9bc 3e660a90 9d838d72',\n          '6e3bf623 d5262028 2013481d 1f6e5377'],\n      a: ['7d5a0975 fc2c3057 eef67530 417affe7',\n          'fb8055c1 26dc5c6c e94a4b44 f330b5d9'],\n      b: ['26dc5c6c e94a4b44 f330b5d9 bbd77cbf',\n          '95841629 5cf7e1ce 6bccdc18 ff8c07b6'],\n      n: ['a9fb57db a1eea9bc 3e660a90 9d838d71',\n          '8c397aa3 b561a6f7 901e0e82 974856a7'],\n      h: '1',\n      // Icart\n      z: '-2',\n      g: [\n        ['8bd2aeb9 cb7e57cb 2c4b482f fc81b7af',\n         'b9de27e1 e3bd23c2 3a4453bd 9ace3262'],\n        ['547ef835 c3dac4fd 97f8461a 14611dc9',\n         'c2774513 2ded8e54 5c1d54c7 2f046997'],\n        pre\n      ]\n    });\n  }\n}\n\n/**\n * BRAINPOOLP384\n * https://tools.ietf.org/html/rfc5639#section-3.6\n */\n\nclass BRAINPOOLP384 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'BRAINPOOLP384',\n      ossl: 'brainpoolP384r1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA384',\n      prime: null,\n      // (= 3 mod 4)\n      p: ['8cb91e82 a3386d28 0f5d6f7e 50e641df',\n          '152f7109 ed5456b4 12b1da19 7fb71123',\n          'acd3a729 901d1a71 87470013 3107ec53'],\n      a: ['7bc382c6 3d8c150c 3c72080a ce05afa0',\n          'c2bea28e 4fb22787 139165ef ba91f90f',\n          '8aa5814a 503ad4eb 04a8c7dd 22ce2826'],\n      b: ['04a8c7dd 22ce2826 8b39b554 16f0447c',\n          '2fb77de1 07dcd2a6 2e880ea5 3eeb62d5',\n          '7cb43902 95dbc994 3ab78696 fa504c11'],\n      n: ['8cb91e82 a3386d28 0f5d6f7e 50e641df',\n          '152f7109 ed5456b3 1f166e6c ac0425a7',\n          'cf3ab6af 6b7fc310 3b883202 e9046565'],\n      h: '1',\n      // SSWU\n      z: '-5',\n      g: [\n        ['1d1c64f0 68cf45ff a2a63a81 b7c13f6b',\n         '8847a3e7 7ef14fe3 db7fcafe 0cbd10e8',\n         'e826e034 36d646aa ef87b2e2 47d4af1e'],\n        ['8abe1d75 20f9c2a4 5cb1eb8e 95cfd552',\n         '62b70b29 feec5864 e19c054f f9912928',\n         '0e464621 77918111 42820341 263c5315'],\n        pre\n      ]\n    });\n  }\n}\n\n/**\n * BRAINPOOLP512\n * https://tools.ietf.org/html/rfc5639#section-3.7\n */\n\nclass BRAINPOOLP512 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'BRAINPOOLP512',\n      ossl: 'brainpoolP512r1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA512',\n      prime: null,\n      // (= 3 mod 4)\n      p: ['aadd9db8 dbe9c48b 3fd4e6ae 33c9fc07',\n          'cb308db3 b3c9d20e d6639cca 70330871',\n          '7d4d9b00 9bc66842 aecda12a e6a380e6',\n          '2881ff2f 2d82c685 28aa6056 583a48f3'],\n      a: ['7830a331 8b603b89 e2327145 ac234cc5',\n          '94cbdd8d 3df91610 a83441ca ea9863bc',\n          '2ded5d5a a8253aa1 0a2ef1c9 8b9ac8b5',\n          '7f1117a7 2bf2c7b9 e7c1ac4d 77fc94ca'],\n      b: ['3df91610 a83441ca ea9863bc 2ded5d5a',\n          'a8253aa1 0a2ef1c9 8b9ac8b5 7f1117a7',\n          '2bf2c7b9 e7c1ac4d 77fc94ca dc083e67',\n          '984050b7 5ebae5dd 2809bd63 8016f723'],\n      n: ['aadd9db8 dbe9c48b 3fd4e6ae 33c9fc07',\n          'cb308db3 b3c9d20e d6639cca 70330870',\n          '553e5c41 4ca92619 41866119 7fac1047',\n          '1db1d381 085ddadd b5879682 9ca90069'],\n      h: '1',\n      // Icart\n      z: '7',\n      g: [\n        ['81aee4bd d82ed964 5a21322e 9c4c6a93',\n         '85ed9f70 b5d916c1 b43b62ee f4d0098e',\n         'ff3b1f78 e2d0d48d 50d1687b 93b97d5f',\n         '7c6d5047 406a5e68 8b352209 bcb9f822'],\n        ['7dde385d 566332ec c0eabfa9 cf7822fd',\n         'f209f700 24a57b1a a000c55b 881f8111',\n         'b2dcde49 4a5f485e 5bca4bd8 8a2763ae',\n         'd1ca2b2f a8f05406 78cd1e0f 3ad80892'],\n        pre\n      ]\n    });\n  }\n}\n\n/**\n * X25519\n * https://tools.ietf.org/html/rfc7748#section-4.1\n */\n\nclass X25519 extends MontCurve {\n  constructor() {\n    super({\n      id: 'X25519',\n      ossl: 'X25519',\n      type: 'mont',\n      endian: 'le',\n      hash: 'SHA512',\n      prime: 'p25519',\n      // 2^255 - 19 (= 5 mod 8)\n      p: ['7fffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffed'],\n      // 486662\n      a: '76d06',\n      b: '1',\n      n: ['10000000 00000000 00000000 00000000',\n          '14def9de a2f79cd6 5812631a 5cf5d3ed'],\n      h: '8',\n      // Elligator 2\n      z: '2',\n      g: [\n        ['00000000 00000000 00000000 00000000',\n         '00000000 00000000 00000000 00000009'],\n        // See: https://www.rfc-editor.org/errata/eid4730\n        ['5f51e65e 475f794b 1fe122d3 88b72eb3',\n         '6dc2b281 92839e4d d6163a5d 81312c14']\n      ],\n      torsion: [\n        [],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000']\n        ],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000001'],\n          ['6be4f497 f9a9c2af c21fa77a d7f4a6ef',\n           '635a11c7 284a9363 e9a248ef 9c884415']\n        ],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000001'],\n          ['141b0b68 06563d50 3de05885 280b5910',\n           '9ca5ee38 d7b56c9c 165db710 6377bbd8']\n        ],\n        [\n          ['57119fd0 dd4e22d8 868e1c58 c45c4404',\n           '5bef839c 55b1d0b1 248c50a3 bc959c5f'],\n          ['68c59389 3d458e64 31c6ca00 45fb5015',\n           '20a44346 8eaa68dd 0f103842 048065b7']\n        ],\n        [\n          ['57119fd0 dd4e22d8 868e1c58 c45c4404',\n           '5bef839c 55b1d0b1 248c50a3 bc959c5f'],\n          ['173a6c76 c2ba719b ce3935ff ba04afea',\n           'df5bbcb9 71559722 f0efc7bd fb7f9a36']\n        ],\n        [\n          ['00b8495f 16056286 fdb1329c eb8d09da',\n           '6ac49ff1 fae35616 aeb8413b 7c7aebe0'],\n          ['3931c129 569e83a5 29482c14 e628b457',\n           '933bfc29 ed801b4d 68871483 92507b1a']\n        ],\n        [\n          ['00b8495f 16056286 fdb1329c eb8d09da',\n           '6ac49ff1 fae35616 aeb8413b 7c7aebe0'],\n          ['46ce3ed6 a9617c5a d6b7d3eb 19d74ba8',\n           '6cc403d6 127fe4b2 9778eb7c 6daf84d3']\n        ]\n      ]\n    });\n  }\n}\n\n/**\n * X448\n * https://tools.ietf.org/html/rfc7748#section-4.2\n */\n\nclass X448 extends MontCurve {\n  constructor() {\n    super({\n      id: 'X448',\n      ossl: 'X448',\n      type: 'mont',\n      endian: 'le',\n      hash: 'SHAKE256',\n      prime: 'p448',\n      // 2^448 - 2^224 - 1 (= 3 mod 4)\n      p: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff fffffffe ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff'],\n      // 156326\n      a: '262a6',\n      b: '1',\n      n: ['3fffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff 7cca23e9',\n          'c44edb49 aed63690 216cc272 8dc58f55',\n          '2378c292 ab5844f3'],\n      h: '4',\n      // Elligator 2\n      z: '-1',\n      g: [\n        ['00000000 00000000 00000000 00000000',\n         '00000000 00000000 00000000 00000000',\n         '00000000 00000000 00000000 00000000',\n         '00000000 00000005'],\n        ['7d235d12 95f5b1f6 6c98ab6e 58326fce',\n         'cbae5d34 f55545d0 60f75dc2 8df3f6ed',\n         'b8027e23 46430d21 1312c4b1 50677af7',\n         '6fd7223d 457b5b1a']\n      ],\n      torsion: [\n        [],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000']\n        ],\n        [\n          ['ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff fffffffe ffffffff',\n           'ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff fffffffe'],\n          ['ba4d3a08 29b6112f 8812e51b a0bb2abe',\n           'bc1cb08e b48e5569 36ba50fd d2e7d68a',\n           'f8cb3216 0522425b 3f990812 abbe635a',\n           'd37a21e1 7551b193']\n        ],\n        [\n          ['ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff fffffffe ffffffff',\n           'ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff fffffffe'],\n          ['45b2c5f7 d649eed0 77ed1ae4 5f44d541',\n           '43e34f71 4b71aa96 c945af01 2d182975',\n           '0734cde9 faddbda4 c066f7ed 54419ca5',\n           '2c85de1e 8aae4e6c']\n        ]\n      ]\n    });\n  }\n}\n\n/**\n * MONT448\n * Isomorphic to Ed448-Goldilocks.\n */\n\nclass MONT448 extends MontCurve {\n  constructor() {\n    super({\n      id: 'MONT448',\n      ossl: null,\n      type: 'mont',\n      endian: 'le',\n      hash: 'SHAKE256',\n      prime: 'p448',\n      // 2^448 - 2^224 - 1 (= 3 mod 4)\n      p: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff fffffffe ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff'],\n      // -78160 / -39082 mod p\n      a: ['b2cf97d2 d43459a9 31ed36b1 fc4e3cb5',\n          '5d93f8d2 22746997 60ccffc6 49961ed6',\n          'c5b05fca c24864ed 6fb59697 931b78da',\n          '84ddecd8 ca2b5cfb'],\n      b: '1',\n      n: ['3fffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff 7cca23e9',\n          'c44edb49 aed63690 216cc272 8dc58f55',\n          '2378c292 ab5844f3'],\n      h: '4',\n      // Elligator 2\n      z: '-1',\n      g: [\n        ['ac0d24cc c6c75cb0 eb71f81e 7a6edf51',\n         '48e88aee 009a2a24 e795687e c28e125a',\n         '3e6730a6 0d46367b aa7fe99d 152128dc',\n         '41321bc7 7817f059'],\n        ['5a4437f6 80c0d0db 9b061276 d5d0ffcc',\n         'e786ff33 b6a53d30 98746425 82e66f09',\n         '4433dae7 7244a6e2 6b11e905 7228f483',\n         '556c41a5 913f55fe']\n      ],\n      torsion: [\n        [],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000']\n        ],\n        [\n          ['ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff fffffffe ffffffff',\n           'ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff fffffffe'],\n          ['bec92fd0 6da2acf2 b4e261e8 7cef0d34',\n           '22e75c18 3c589857 b71924e5 73c2f9ce',\n           'e18da5f2 466e2f39 3c2eedf0 f105a60a',\n           'b40c717d 4f1e1fd7']\n        ],\n        [\n          ['ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff fffffffe ffffffff',\n           'ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff fffffffe'],\n          ['4136d02f 925d530d 4b1d9e17 8310f2cb',\n           'dd18a3e7 c3a767a8 48e6db19 8c3d0631',\n           '1e725a0d b991d0c6 c3d1120f 0efa59f5',\n           '4bf38e82 b0e1e028']\n        ]\n      ]\n    });\n  }\n}\n\n/**\n * ED25519\n * https://tools.ietf.org/html/rfc8032#section-5.1\n */\n\nclass ED25519 extends EdwardsCurve {\n  constructor(pre) {\n    super({\n      id: 'ED25519',\n      ossl: 'ED25519',\n      type: 'edwards',\n      endian: 'le',\n      hash: 'SHA512',\n      prefix: 'SigEd25519 no Ed25519 collisions',\n      context: false,\n      prime: 'p25519',\n      // 2^255 - 19 (= 5 mod 8)\n      p: ['7fffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffed'],\n      a: '-1',\n      // -121665 / 121666 mod p\n      d: ['52036cee 2b6ffe73 8cc74079 7779e898',\n          '00700a4d 4141d8ab 75eb4dca 135978a3'],\n      n: ['10000000 00000000 00000000 00000000',\n          '14def9de a2f79cd6 5812631a 5cf5d3ed'],\n      h: '8',\n      // Elligator 2\n      z: '2',\n      g: [\n        ['216936d3 cd6e53fe c0a4e231 fdd6dc5c',\n         '692cc760 9525a7b2 c9562d60 8f25d51a'],\n        // 4/5\n        ['66666666 66666666 66666666 66666666',\n         '66666666 66666666 66666666 66666658'],\n        pre\n      ],\n      torsion: [\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000001']\n        ],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000'],\n          ['7fffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff ffffffff ffffffec']\n        ],\n        [\n          ['2b832480 4fc1df0b 2b4d0099 3dfbd7a7',\n           '2f431806 ad2fe478 c4ee1b27 4a0ea0b0'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000']\n        ],\n        [\n          ['547cdb7f b03e20f4 d4b2ff66 c2042858',\n           'd0bce7f9 52d01b87 3b11e4d8 b5f15f3d'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000']\n        ],\n        [\n          ['1fd5b9a0 06394a28 e9339932 38de4abb',\n           '5c193c70 13e5e238 dea14646 c545d14a'],\n          ['05fc536d 880238b1 3933c6d3 05acdfd5',\n           'f098eff2 89f4c345 b027b2c2 8f95e826']\n        ],\n        [\n          ['602a465f f9c6b5d7 16cc66cd c721b544',\n           'a3e6c38f ec1a1dc7 215eb9b9 3aba2ea3'],\n          ['05fc536d 880238b1 3933c6d3 05acdfd5',\n           'f098eff2 89f4c345 b027b2c2 8f95e826']\n        ],\n        [\n          ['1fd5b9a0 06394a28 e9339932 38de4abb',\n           '5c193c70 13e5e238 dea14646 c545d14a'],\n          ['7a03ac92 77fdc74e c6cc392c fa53202a',\n           '0f67100d 760b3cba 4fd84d3d 706a17c7']\n        ],\n        [\n          ['602a465f f9c6b5d7 16cc66cd c721b544',\n           'a3e6c38f ec1a1dc7 215eb9b9 3aba2ea3'],\n          ['7a03ac92 77fdc74e c6cc392c fa53202a',\n           '0f67100d 760b3cba 4fd84d3d 706a17c7']\n        ]\n      ]\n    });\n  }\n}\n\n/**\n * ISO448\n * https://tools.ietf.org/html/rfc7748#section-4.2\n * https://git.zx2c4.com/goldilocks/tree/_aux/ristretto/ristretto.sage#n658\n */\n\nclass ISO448 extends EdwardsCurve {\n  constructor(pre) {\n    super({\n      id: 'ISO448',\n      ossl: null,\n      type: 'edwards',\n      endian: 'le',\n      hash: 'SHAKE256',\n      prefix: 'SigEd448',\n      context: true,\n      prime: 'p448',\n      // 2^448 - 2^224 - 1 (= 3 mod 4)\n      p: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff fffffffe ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff'],\n      a: '1',\n      // 39082 / 39081 mod p\n      d: ['d78b4bdc 7f0daf19 f24f38c2 9373a2cc',\n          'ad461572 42a50f37 809b1da3 412a12e7',\n          '9ccc9c81 264cfe9a d0809970 58fb61c4',\n          '243cc32d baa156b9'],\n      n: ['3fffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff 7cca23e9',\n          'c44edb49 aed63690 216cc272 8dc58f55',\n          '2378c292 ab5844f3'],\n      h: '4',\n      // Elligator 2\n      z: '-1',\n      g: [\n        ['79a70b2b 70400553 ae7c9df4 16c792c6',\n         '1128751a c9296924 0c25a07d 728bdc93',\n         'e21f7787 ed697224 9de732f3 8496cd11',\n         '69871309 3e9c04fc'],\n        // Note: the RFC has this wrong.\n        ['7fffffff ffffffff ffffffff ffffffff',\n         'ffffffff ffffffff ffffffff 80000000',\n         '00000000 00000000 00000000 00000000',\n         '00000000 00000001'],\n        pre\n      ],\n      torsion: [\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000001']\n        ],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000'],\n          ['ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff fffffffe ffffffff',\n           'ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff fffffffe']\n        ],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000001'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000']\n        ],\n        [\n          ['ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff fffffffe ffffffff',\n           'ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff fffffffe'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000']\n        ]\n      ]\n    });\n  }\n}\n\n/**\n * ED448\n * https://tools.ietf.org/html/rfc8032#section-5.2\n */\n\nclass ED448 extends EdwardsCurve {\n  constructor(pre) {\n    super({\n      id: 'ED448',\n      ossl: 'ED448',\n      type: 'edwards',\n      endian: 'le',\n      hash: 'SHAKE256',\n      prefix: 'SigEd448',\n      context: true,\n      prime: 'p448',\n      // 2^448 - 2^224 - 1 (= 3 mod 4)\n      p: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff fffffffe ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff'],\n      a: '1',\n      // -39081 mod p\n      d: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff fffffffe ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffff6756'],\n      n: ['3fffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff 7cca23e9',\n          'c44edb49 aed63690 216cc272 8dc58f55',\n          '2378c292 ab5844f3'],\n      h: '4',\n      // Elligator 2\n      z: '-1',\n      g: [\n        ['4f1970c6 6bed0ded 221d15a6 22bf36da',\n         '9e146570 470f1767 ea6de324 a3d3a464',\n         '12ae1af7 2ab66511 433b80e1 8b00938e',\n         '2626a82b c70cc05e'],\n        ['693f4671 6eb6bc24 88762037 56c9c762',\n         '4bea7373 6ca39840 87789c1e 05a0c2d7',\n         '3ad3ff1c e67c39c4 fdbd132c 4ed7c8ad',\n         '9808795b f230fa14'],\n        pre\n      ],\n      torsion: [\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000001']\n        ],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000'],\n          ['ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff fffffffe ffffffff',\n           'ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff fffffffe']\n        ],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000001'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000']\n        ],\n        [\n          ['ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff fffffffe ffffffff',\n           'ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff fffffffe'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000']\n        ]\n      ]\n    });\n  }\n}\n\n/*\n * Curve Registry\n */\n\nconst curves = {\n  __proto__: null,\n  P192,\n  P224,\n  P256,\n  P384,\n  P521,\n  SECP256K1,\n  BRAINPOOLP256,\n  BRAINPOOLP384,\n  BRAINPOOLP512,\n  X25519,\n  X448,\n  MONT448,\n  ED25519,\n  ISO448,\n  ED448\n};\n\nconst cache = {\n  __proto__: null,\n  P192: null,\n  P224: null,\n  P256: null,\n  P384: null,\n  P521: null,\n  SECP256K1: null,\n  BRAINPOOLP256: null,\n  BRAINPOOLP384: null,\n  BRAINPOOLP512: null,\n  X25519: null,\n  X448: null,\n  MONT448: null,\n  ED25519: null,\n  ISO448: null,\n  ED448: null\n};\n\nfunction curve(name, ...args) {\n  assert(typeof name === 'string');\n\n  const key = name.toUpperCase();\n\n  let curve = cache[key];\n\n  if (!curve) {\n    const Curve = curves[key];\n\n    if (!Curve)\n      throw new Error(`Curve not found: \"${name}\".`);\n\n    curve = new Curve(...args);\n    cache[key] = curve;\n  }\n\n  return curve;\n}\n\nfunction register(name, Curve) {\n  assert(typeof name === 'string');\n  assert(typeof Curve === 'function');\n\n  const key = name.toUpperCase();\n\n  if (curves[key])\n    throw new Error(`Curve already registered: \"${name}\".`);\n\n  curves[key] = Curve;\n  cache[key] = null;\n}\n\n/*\n * Scalar Recoding\n */\n\nfunction getNAF(k, width, max) {\n  // Computing the width-w NAF of a positive integer.\n  //\n  // [GECC] Algorithm 3.35, Page 100, Section 3.3.\n  //\n  // The above document describes a rather abstract\n  // method of recoding. The more optimal method\n  // below was ported from libsecp256k1.\n  assert(k instanceof BN);\n  assert(!k.red);\n  assert((width >>> 0) === width);\n  assert((max >>> 0) === max);\n\n  const naf = new Array(max);\n  const bits = k.bitLength() + 1;\n  const sign = k.sign() | 1;\n\n  assert(bits <= max);\n\n  for (let i = 0; i < max; i++)\n    naf[i] = 0;\n\n  let i = 0;\n  let carry = 0;\n  let word;\n\n  while (i < bits) {\n    if (k.bit(i) === carry) {\n      i += 1;\n      continue;\n    }\n\n    word = k.bits(i, width) + carry;\n    carry = (word >> (width - 1)) & 1;\n    word -= carry << width;\n\n    naf[i] = sign * word;\n\n    i += width;\n  }\n\n  assert(carry === 0);\n\n  return naf;\n}\n\nfunction getFixedNAF(k, width, max, step) {\n  assert((step >>> 0) === step);\n\n  // Recode to NAF.\n  const naf = getNAF(k, width, max);\n\n  // Translate into more windowed form.\n  const len = Math.ceil(naf.length / step);\n  const repr = new Array(len);\n\n  let i = 0;\n\n  for (let j = 0; j < naf.length; j += step) {\n    let nafW = 0;\n\n    for (let k = j + step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n\n    repr[i++] = nafW;\n  }\n\n  assert(i === len);\n\n  return repr;\n}\n\nfunction getJSF(k1, k2, max) {\n  // Joint sparse form.\n  //\n  // [GECC] Algorithm 3.50, Page 111, Section 3.3.\n  assert(k1 instanceof BN);\n  assert(k2 instanceof BN);\n  assert(!k1.red);\n  assert(!k2.red);\n  assert((max >>> 0) === max);\n\n  const jsf = [new Array(max), new Array(max)];\n  const bits = Math.max(k1.bitLength(), k2.bitLength()) + 1;\n  const s1 = k1.sign() | 1;\n  const s2 = k2.sign() | 1;\n\n  assert(bits <= max);\n\n  let d1 = 0;\n  let d2 = 0;\n\n  for (let i = 0; i < bits; i++) {\n    const b1 = k1.bits(i, 3);\n    const b2 = k2.bits(i, 3);\n\n    // First phase.\n    let m14 = ((b1 & 3) + d1) & 3;\n    let m24 = ((b2 & 3) + d2) & 3;\n    let u1 = 0;\n    let u2 = 0;\n\n    if (m14 === 3)\n      m14 = -1;\n\n    if (m24 === 3)\n      m24 = -1;\n\n    if (m14 & 1) {\n      const m8 = ((b1 & 7) + d1) & 7;\n\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n\n    if (m24 & 1) {\n      const m8 = ((b2 & 7) + d2) & 7;\n\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n\n    jsf[0][i] = u1 * s1;\n    jsf[1][i] = u2 * s2;\n\n    // Second phase.\n    if (2 * d1 === 1 + u1)\n      d1 = 1 - d1;\n\n    if (2 * d2 === 1 + u2)\n      d2 = 1 - d2;\n  }\n\n  for (let i = bits; i < max; i++) {\n    jsf[0][i] = 0;\n    jsf[1][i] = 0;\n  }\n\n  return jsf;\n}\n\nfunction getJNAF(c1, c2, max) {\n  const jsf = getJSF(c1, c2, max);\n  const naf = new Array(max);\n\n  // JSF -> NAF conversion.\n  for (let i = 0; i < max; i++) {\n    const ja = jsf[0][i];\n    const jb = jsf[1][i];\n\n    naf[i] = jsfIndex[(ja + 1) * 3 + (jb + 1)];\n  }\n\n  return naf;\n}\n\n/*\n * Helpers\n */\n\nfunction assert(val, msg) {\n  if (!val) {\n    const err = new Error(msg || 'Assertion failed');\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(err, assert);\n\n    throw err;\n  }\n}\n\nfunction wrapErrors(fn) {\n  assert(typeof fn === 'function');\n\n  try {\n    return fn();\n  } catch (e) {\n    if (e.message === 'X is not a square mod P.'\n        || e.message === 'Not invertible.') {\n      throw new Error('Invalid point.');\n    }\n    throw e;\n  }\n}\n\nfunction mod(x, y) {\n  // Euclidean modulo.\n  let r = x % y;\n\n  if (r < 0) {\n    if (y < 0)\n      r -= y;\n    else\n      r += y;\n  }\n\n  return r;\n}\n\nfunction cubeRoot(x) {\n  assert(x instanceof BN);\n  assert(x.red);\n\n  const p = x.red.m;\n\n  if (p.cmpn(3) <= 0)\n    return x.clone();\n\n  // p = 2 mod 3\n  if (p.modrn(3) === 2) {\n    // e = (2 * p - 1) / 3\n    const e = p.ushln(1).isubn(1).idivn(3);\n    return x.redPow(e);\n  }\n\n  const mod9 = p.modrn(9);\n\n  // p = 4 mod 9\n  if (mod9 === 4) {\n    // e = (2 * p + 1) / 9\n    const e = p.ushln(1).iaddn(1).idivn(9);\n    const r = x.redPow(e);\n    const c = r.redSqr().redMul(r);\n\n    if (!c.eq(x))\n      throw new Error('X is not a cube mod P.');\n\n    return r;\n  }\n\n  // p = 7 mod 9\n  if (mod9 === 7) {\n    // e = (p + 2) / 9\n    const e = p.addn(2).idivn(9);\n    const r = x.redPow(e);\n    const c = r.redSqr().redMul(r);\n\n    if (!c.eq(x))\n      throw new Error('X is not a cube mod P.');\n\n    return r;\n  }\n\n  throw new Error('Not implemented.');\n}\n\nfunction cubeRoots(x) {\n  const r0 = cubeRoot(x);\n\n  // p = 1 mod 3\n  if (x.red.m.modrn(3) === 1) {\n    // Multiply by roots of unity to find other roots.\n    const two = new BN(2).toRed(x.red);\n    const three = new BN(3).toRed(x.red);\n    const i2 = two.redInvert();\n    const s1 = three.redNeg().redSqrt().redMul(i2);\n    const s2 = s1.redNeg();\n    const u1 = s1.redSub(i2);\n    const u2 = s2.redSub(i2);\n    const r1 = r0.redMul(u1);\n    const r2 = r0.redMul(u2);\n\n    return [r0, r1, r2];\n  }\n\n  // p = 2 mod 3 guarantees 1 cube root per element.\n  return [r0];\n}\n\nfunction uncube(x) {\n  // Find a cube root which is also a quadratic residue.\n  for (const root of cubeRoots(x)) {\n    if (root.redJacobi() >= 0)\n      return root;\n  }\n\n  throw new Error('X^(1/3) is not a square mod P.');\n}\n\nfunction randomInt(rng) {\n  return BN.randomBits(rng, 32).toNumber();\n}\n\nfunction memoize(method, self) {\n  const cache = new WeakMap();\n\n  return function memoized(curve, invert) {\n    const i = invert & 1;\n    const item = cache.get(curve);\n\n    if (item && item[i] !== null)\n      return item[i];\n\n    const result = method.call(self, curve, invert);\n\n    if (!cache.has(curve))\n      cache.set(curve, [null, null]);\n\n    cache.get(curve)[i] = result;\n\n    return result;\n  };\n}\n\nfunction toPretty(x, size) {\n  assert(x instanceof BN);\n  assert((size >>> 0) === size);\n\n  if (size & 7)\n    size += 8 - (size & 7);\n\n  const str = x.toString(16, size);\n  const chunks = [];\n  const out = [];\n\n  assert((str.length & 7) === 0);\n\n  for (let i = 0; i < str.length; i += 8)\n    chunks.push(str.slice(i, i + 8));\n\n  for (let i = 0; i < chunks.length; i += 4)\n    out.push(chunks.slice(i, i + 4).join(' '));\n\n  return out;\n}\n\n/*\n * Expose\n */\n\nexports.Curve = Curve;\nexports.Point = Point;\nexports.ShortCurve = ShortCurve;\nexports.ShortPoint = ShortPoint;\nexports.JPoint = JPoint;\nexports.MontCurve = MontCurve;\nexports.MontPoint = MontPoint;\nexports.XPoint = XPoint;\nexports.EdwardsCurve = EdwardsCurve;\nexports.EdwardsPoint = EdwardsPoint;\nexports.curves = curves;\nexports.curve = curve;\nexports.register = register;\n","/*!\n * cipher.js - cipher for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/cipher');\n","/*!\n * cshake.js - cSHAKE implementation for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://keccak.team/specifications.html\n *   https://www.nist.gov/node/1131611\n *   https://doi.org/10.6028/NIST.SP.800-185\n *   https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-185.pdf\n *   https://github.com/XKCP/XKCP/blob/8f447eb/lib/high/Keccak/SP800-185/SP800-185.inc\n *   https://github.com/XKCP/XKCP/blob/8f447eb/lib/high/Keccak/SP800-185/SP800-185.c\n *   https://github.com/XKCP/XKCP/blob/8f447eb/tests/UnitTests/testSP800-185.c\n *   https://github.com/emn178/js-sha3/blob/master/src/sha3.js\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst Keccak = require('./keccak');\nconst HMAC = require('./internal/hmac');\n\n/*\n * Constants\n */\n\nconst EMPTY = Buffer.alloc(0);\nconst ZEROES = Buffer.alloc(200, 0x00);\n\n/*\n * CSHAKE\n */\n\nclass CSHAKE extends Keccak {\n  constructor() {\n    super();\n    this.pad = 0x04;\n    this.rate = 1088;\n  }\n\n  init(bits, name, pers) {\n    if (bits == null)\n      bits = 256;\n\n    if (name == null)\n      name = EMPTY;\n\n    if (pers == null)\n      pers = EMPTY;\n\n    assert((bits >>> 0) === bits);\n    assert(bits === 128 || bits === 256);\n    assert(Buffer.isBuffer(name));\n    assert(Buffer.isBuffer(pers));\n\n    super.init(bits);\n\n    if (name.length === 0 && pers.length === 0) {\n      this.pad = 0x1f;\n    } else {\n      const rate = 1600 - bits * 2;\n      const size = rate / 8;\n\n      this.bytePad([name, pers], size);\n      this.rate = rate;\n      this.pad = 0x04;\n    }\n\n    return this;\n  }\n\n  final(len) {\n    return super.final(this.pad, len);\n  }\n\n  bytePad(items, w) {\n    assert(Array.isArray(items));\n    assert((w >>> 0) === w);\n    assert(w > 0);\n\n    let z = this.leftEncode(w);\n\n    for (const x of items)\n      z += this.encodeString(x);\n\n    const left = w - (z % w);\n\n    if (left === w)\n      return z;\n\n    z += this.zeroPad(left);\n\n    return z;\n  }\n\n  encodeString(s) {\n    assert(Buffer.isBuffer(s));\n\n    const n = this.leftEncode(s.length * 8);\n\n    this.update(s);\n\n    return n + s.length;\n  }\n\n  zeroPad(size) {\n    assert((size >>> 0) === size);\n    assert(size <= 200);\n\n    const buf = ZEROES.slice(0, size);\n\n    this.update(buf);\n\n    return buf.length;\n  }\n\n  leftEncode(x) {\n    assert((x >>> 0) === x);\n    assert(x >= 0 && x < 22040);\n\n    let v = x;\n    let n = 0;\n\n    while (v && n < 4) {\n      n += 1;\n      v >>>= 8;\n    }\n\n    if (n === 0)\n      n = 1;\n\n    const buf = Buffer.alloc(n + 1);\n\n    for (let i = 1; i <= n; i++)\n      buf[i] = x >>> (8 * (n - i));\n\n    buf[0] = n;\n\n    this.update(buf);\n\n    return buf.length;\n  }\n\n  rightEncode(x) {\n    assert((x >>> 0) === x);\n    assert(x >= 0 && x < 22040);\n\n    let v = x;\n    let n = 0;\n\n    while (v && n < 4) {\n      n += 1;\n      v >>>= 8;\n    }\n\n    if (n === 0)\n      n = 1;\n\n    const buf = Buffer.alloc(n + 1);\n\n    for (let i = 1; i <= n; i++)\n      buf[i - 1] = x >>> (8 * (n - i));\n\n    buf[n] = n;\n\n    this.update(buf);\n\n    return buf.length;\n  }\n\n  static hash() {\n    return new CSHAKE();\n  }\n\n  static hmac(bits, name, pers, len) {\n    if (bits == null)\n      bits = 256;\n\n    assert((bits >>> 0) === bits);\n    assert(bits === 128 || bits === 256);\n\n    const rate = 1600 - bits * 2;\n\n    return new HMAC(CSHAKE, rate / 8, [bits, name, pers], [len]);\n  }\n\n  static digest(data, bits, name, pers, len) {\n    return CSHAKE.ctx.init(bits, name, pers).update(data).final(len);\n  }\n\n  static root(left, right, bits, name, pers, len) {\n    if (bits == null)\n      bits = 256;\n\n    if (len == null)\n      len = 0;\n\n    if (len === 0) {\n      assert((bits >>> 0) === bits);\n      len = bits >>> 3;\n    }\n\n    assert((len >>> 0) === len);\n    assert(Buffer.isBuffer(left) && left.length === len);\n    assert(Buffer.isBuffer(right) && right.length === len);\n\n    const {ctx} = CSHAKE;\n\n    ctx.init(bits, name, pers);\n    ctx.update(left);\n    ctx.update(right);\n\n    return ctx.final(len);\n  }\n\n  static multi(x, y, z, bits, name, pers, len) {\n    const {ctx} = CSHAKE;\n\n    ctx.init(bits, name, pers);\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final(len);\n  }\n\n  static mac(data, key, bits, name, pers, len) {\n    return CSHAKE.hmac(bits, name, pers, len).init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nCSHAKE.native = Keccak.native;\nCSHAKE.id = 'CSHAKE256';\nCSHAKE.size = 32;\nCSHAKE.bits = 256;\nCSHAKE.blockSize = 136;\nCSHAKE.zero = Buffer.alloc(32, 0x00);\nCSHAKE.ctx = new CSHAKE();\n\n/*\n * Expose\n */\n\nmodule.exports = CSHAKE;\n","/*!\n * sha256.js - SHA256 implementation for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hash.js:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/hash.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SHA-2\n *   https://tools.ietf.org/html/rfc4634\n *   https://github.com/indutny/hash.js/blob/master/lib/hash/sha/256.js\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst HMAC = require('../internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = -1;\nconst DESC = Buffer.alloc(8, 0x00);\nconst PADDING = Buffer.alloc(64, 0x00);\n\nPADDING[0] = 0x80;\n\nconst K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n/**\n * SHA256\n */\n\nclass SHA256 {\n  constructor() {\n    this.state = new Uint32Array(8);\n    this.msg = new Uint32Array(64);\n    this.block = Buffer.alloc(64);\n    this.size = FINALIZED;\n  }\n\n  init() {\n    this.state[0] = 0x6a09e667;\n    this.state[1] = 0xbb67ae85;\n    this.state[2] = 0x3c6ef372;\n    this.state[3] = 0xa54ff53a;\n    this.state[4] = 0x510e527f;\n    this.state[5] = 0x9b05688c;\n    this.state[6] = 0x1f83d9ab;\n    this.state[7] = 0x5be0cd19;\n    this.size = 0;\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    this._update(data, data.length);\n    return this;\n  }\n\n  final() {\n    return this._final(Buffer.alloc(32));\n  }\n\n  _update(data, len) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    let pos = this.size & 63;\n    let off = 0;\n\n    this.size += len;\n\n    if (pos > 0) {\n      let want = 64 - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < 64)\n        return;\n\n      this._transform(this.block, 0);\n    }\n\n    while (len >= 64) {\n      this._transform(data, off);\n      off += 64;\n      len -= 64;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n  }\n\n  _final(out) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    const pos = this.size & 63;\n    const len = this.size * 8;\n\n    writeU32(DESC, (len * (1 / 0x100000000)) >>> 0, 0);\n    writeU32(DESC, len >>> 0, 4);\n\n    this._update(PADDING, 1 + ((119 - pos) & 63));\n    this._update(DESC, 8);\n\n    for (let i = 0; i < 8; i++) {\n      writeU32(out, this.state[i], i * 4);\n      this.state[i] = 0;\n    }\n\n    for (let i = 0; i < 64; i++)\n      this.msg[i] = 0;\n\n    for (let i = 0; i < 64; i++)\n      this.block[i] = 0;\n\n    this.size = FINALIZED;\n\n    return out;\n  }\n\n  _transform(chunk, pos) {\n    const W = this.msg;\n\n    let a = this.state[0];\n    let b = this.state[1];\n    let c = this.state[2];\n    let d = this.state[3];\n    let e = this.state[4];\n    let f = this.state[5];\n    let g = this.state[6];\n    let h = this.state[7];\n    let i = 0;\n\n    for (; i < 16; i++)\n      W[i] = readU32(chunk, pos + i * 4);\n\n    for (; i < 64; i++)\n      W[i] = sigma1(W[i - 2]) + W[i - 7] + sigma0(W[i - 15]) + W[i - 16];\n\n    for (i = 0; i < 64; i++) {\n      const t1 = h + Sigma1(e) + Ch(e, f, g) + K[i] + W[i];\n      const t2 = Sigma0(a) + Maj(a, b, c);\n\n      h = g;\n      g = f;\n      f = e;\n\n      e = (d + t1) >>> 0;\n\n      d = c;\n      c = b;\n      b = a;\n\n      a = (t1 + t2) >>> 0;\n    }\n\n    this.state[0] += a;\n    this.state[1] += b;\n    this.state[2] += c;\n    this.state[3] += d;\n    this.state[4] += e;\n    this.state[5] += f;\n    this.state[6] += g;\n    this.state[7] += h;\n  }\n\n  static hash() {\n    return new SHA256();\n  }\n\n  static hmac() {\n    return new HMAC(SHA256, 64);\n  }\n\n  static digest(data) {\n    return SHA256.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 32);\n    assert(Buffer.isBuffer(right) && right.length === 32);\n    return SHA256.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = SHA256;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return SHA256.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nSHA256.native = 0;\nSHA256.id = 'SHA256';\nSHA256.size = 32;\nSHA256.bits = 256;\nSHA256.blockSize = 64;\nSHA256.zero = Buffer.alloc(32, 0x00);\nSHA256.ctx = new SHA256();\n\n/*\n * Helpers\n */\n\nfunction Sigma0(x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10);\n}\n\nfunction Sigma1(x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7);\n}\n\nfunction sigma0(x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3);\n}\n\nfunction sigma1(x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10);\n}\n\nfunction Ch(x, y, z) {\n  return z ^ (x & (y ^ z));\n}\n\nfunction Maj(x, y, z) {\n  return (x & y) | (z & (x | y));\n}\n\nfunction readU32(data, off) {\n  return (data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction writeU32(data, num, off) {\n  data[off++] = num >>> 24;\n  data[off++] = num >>> 16;\n  data[off++] = num >>> 8;\n  data[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = SHA256;\n","/*!\n * util.js - encoding utils for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * Util\n */\n\nfunction countLeft(data) {\n  assert(Buffer.isBuffer(data));\n\n  let i = 0;\n\n  while (i < data.length && data[i] === 0x00)\n    i += 1;\n\n  let bits = (data.length - i) * 8;\n\n  if (bits === 0)\n    return 0;\n\n  bits -= 8;\n\n  let oct = data[i];\n\n  while (oct) {\n    bits += 1;\n    oct >>>= 1;\n  }\n\n  return bits;\n}\n\nfunction countRight(data) {\n  assert(Buffer.isBuffer(data));\n\n  let i = data.length;\n\n  while (i > 0 && data[i - 1] === 0x00)\n    i -= 1;\n\n  let bits = i * 8;\n\n  if (bits === 0)\n    return 0;\n\n  bits -= 8;\n\n  let oct = data[i - 1];\n\n  while (oct) {\n    bits += 1;\n    oct >>>= 1;\n  }\n\n  return bits;\n}\n\nfunction compareLeft(x, y) {\n  assert(Buffer.isBuffer(x));\n  assert(Buffer.isBuffer(y));\n\n  let xpos = 0;\n  let xlen = x.length;\n  let ypos = 0;\n  let ylen = y.length;\n\n  while (xlen > 0 && x[xpos] === 0x00) {\n    xpos += 1;\n    xlen -= 1;\n  }\n\n  while (ylen > 0 && y[ypos] === 0x00) {\n    ypos += 1;\n    ylen -= 1;\n  }\n\n  if (xlen < ylen)\n    return -1;\n\n  if (xlen > ylen)\n    return 1;\n\n  for (let i = 0; i < xlen; i++) {\n    if (x[xpos + i] < y[ypos + i])\n      return -1;\n\n    if (x[xpos + i] > y[ypos + i])\n      return 1;\n  }\n\n  return 0;\n}\n\nfunction compareRight(x, y) {\n  assert(Buffer.isBuffer(x));\n  assert(Buffer.isBuffer(y));\n\n  let xlen = x.length;\n  let ylen = y.length;\n\n  while (xlen > 0 && x[xlen - 1] === 0x00)\n    xlen -= 1;\n\n  while (ylen > 0 && y[ylen - 1] === 0x00)\n    ylen -= 1;\n\n  if (xlen < ylen)\n    return -1;\n\n  if (xlen > ylen)\n    return 1;\n\n  for (let i = xlen - 1; i >= 0; i--) {\n    if (x[i] < y[i])\n      return -1;\n\n    if (x[i] > y[i])\n      return 1;\n  }\n\n  return 0;\n}\n\nfunction trimLeft(data) {\n  assert(Buffer.isBuffer(data));\n\n  let i = 0;\n\n  while (i < data.length && data[i] === 0x00)\n    i += 1;\n\n  return data.slice(i);\n}\n\nfunction trimRight(data) {\n  assert(Buffer.isBuffer(data));\n\n  let i = data.length;\n\n  while (i > 0 && data[i - 1] === 0x00)\n    i -= 1;\n\n  return data.slice(0, i);\n}\n\nfunction padLeft(data, size) {\n  assert(Buffer.isBuffer(data));\n  assert((size >>> 0) === size);\n\n  if (data.length > size)\n    data = trimLeft(data);\n\n  if (data.length > size)\n    throw new RangeError(`Buffer expected to be ${size} bytes in size.`);\n\n  const out = Buffer.alloc(size, 0x00);\n\n  data.copy(out, size - data.length);\n\n  return out;\n}\n\nfunction padRight(data, size) {\n  assert(Buffer.isBuffer(data));\n  assert((size >>> 0) === size);\n\n  if (data.length > size)\n    data = trimRight(data);\n\n  if (data.length > size)\n    throw new RangeError(`Buffer expected to be ${size} bytes in size.`);\n\n  const out = Buffer.alloc(size, 0x00);\n\n  data.copy(out, 0);\n\n  return out;\n}\n\n/*\n * Expose\n */\n\nexports.countLeft = countLeft;\nexports.countRight = countRight;\nexports.compareLeft = compareLeft;\nexports.compareRight = compareRight;\nexports.trimLeft = trimLeft;\nexports.trimRight = trimRight;\nexports.padLeft = padLeft;\nexports.padRight = padRight;\n","/*!\n * shake256.js - SHAKE256 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst SHAKE = require('./shake');\n\n/**\n * SHAKE256\n */\n\nclass SHAKE256 extends SHAKE {\n  constructor() {\n    super();\n  }\n\n  init() {\n    return super.init(256);\n  }\n\n  static hash() {\n    return new SHAKE256();\n  }\n\n  static hmac(len) {\n    return super.hmac(256, len);\n  }\n\n  static digest(data, len) {\n    return super.digest(data, 256, len);\n  }\n\n  static root(left, right, len) {\n    return super.root(left, right, 256, len);\n  }\n\n  static multi(x, y, z, len) {\n    return super.multi(x, y, z, 256, len);\n  }\n\n  static mac(data, key, len) {\n    return super.mac(data, key, 256, len);\n  }\n}\n\n/*\n * Static\n */\n\nSHAKE256.native = SHAKE.native;\nSHAKE256.id = 'SHAKE256';\nSHAKE256.size = 32;\nSHAKE256.bits = 256;\nSHAKE256.blockSize = 136;\nSHAKE256.zero = Buffer.alloc(32, 0x00);\nSHAKE256.ctx = new SHAKE256();\n\n/*\n * Expose\n */\n\nmodule.exports = SHAKE256;\n","/*!\n * encoding.js - encoding utils for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n/* eslint no-implicit-coercion: \"off\" */\n\n'use strict';\n\nconst enforce = require('./enforce');\nconst EncodingError = require('./error');\n\n/*\n * Constants\n */\n\nconst HI = 1 / 0x100000000;\nconst {MAX_SAFE_INTEGER} = Number;\nconst F32_ARRAY = new Float32Array(1);\nconst F328_ARRAY = new Uint8Array(F32_ARRAY.buffer);\nconst F64_ARRAY = new Float64Array(1);\nconst F648_ARRAY = new Uint8Array(F64_ARRAY.buffer);\n\nF32_ARRAY[0] = -1;\n\nconst BIG_ENDIAN = F328_ARRAY[3] === 0;\n\n/*\n * Read Unsigned LE\n */\n\nfunction readU(data, off, len) {\n  switch (len) {\n    case 8:\n      return readU64(data, off);\n    case 7:\n      return readU56(data, off);\n    case 6:\n      return readU48(data, off);\n    case 5:\n      return readU40(data, off);\n    case 4:\n      return readU32(data, off);\n    case 3:\n      return readU24(data, off);\n    case 2:\n      return readU16(data, off);\n    case 1:\n      return readU8(data, off);\n    default:\n      throw new EncodingError(off, 'Invalid read length');\n  }\n}\n\nfunction readU64(data, off) {\n  const hi = readU32(data, off + 4);\n  const lo = readU32(data, off);\n\n  check((hi & 0xffe00000) === 0, off, 'Number exceeds 2^53-1');\n\n  return hi * 0x100000000 + lo;\n}\n\nfunction readU56(data, off) {\n  const hi = readU24(data, off + 4);\n  const lo = readU32(data, off);\n\n  check((hi & 0xffe00000) === 0, off, 'Number exceeds 2^53-1');\n\n  return hi * 0x100000000 + lo;\n}\n\nfunction readU48(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off++] * 0x1000000\n        + data[off++] * 0x100000000\n        + data[off] * 0x10000000000);\n}\n\nfunction readU40(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off++] * 0x1000000\n        + data[off] * 0x100000000);\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\nfunction readU24(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off] * 0x10000);\n}\n\nfunction readU16(data, off) {\n  return data[off++] + data[off] * 0x100;\n}\n\nfunction readU8(data, off) {\n  return data[off];\n}\n\n/*\n * Read Unsigned BE\n */\n\nfunction readUBE(data, off, len) {\n  switch (len) {\n    case 8:\n      return readU64BE(data, off);\n    case 7:\n      return readU56BE(data, off);\n    case 6:\n      return readU48BE(data, off);\n    case 5:\n      return readU40BE(data, off);\n    case 4:\n      return readU32BE(data, off);\n    case 3:\n      return readU24BE(data, off);\n    case 2:\n      return readU16BE(data, off);\n    case 1:\n      return readU8(data, off);\n    default:\n      throw new EncodingError(off, 'Invalid read length');\n  }\n}\n\nfunction readU64BE(data, off) {\n  const hi = readU32BE(data, off);\n  const lo = readU32BE(data, off + 4);\n\n  check((hi & 0xffe00000) === 0, off, 'Number exceeds 2^53-1');\n\n  return hi * 0x100000000 + lo;\n}\n\nfunction readU56BE(data, off) {\n  const hi = readU24BE(data, off);\n  const lo = readU32BE(data, off + 3);\n\n  check((hi & 0xffe00000) === 0, off, 'Number exceeds 2^53-1');\n\n  return hi * 0x100000000 + lo;\n}\n\nfunction readU48BE(data, off) {\n  return (data[off++] * 0x10000000000\n        + data[off++] * 0x100000000\n        + data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction readU40BE(data, off) {\n  return (data[off++] * 0x100000000\n        + data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction readU32BE(data, off) {\n  return (data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction readU24BE(data, off) {\n  return (data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction readU16BE(data, off) {\n  return data[off++] * 0x100 + data[off];\n}\n\n/*\n * Read Signed LE\n */\n\nfunction readI(data, off, len) {\n  switch (len) {\n    case 8:\n      return readI64(data, off);\n    case 7:\n      return readI56(data, off);\n    case 6:\n      return readI48(data, off);\n    case 5:\n      return readI40(data, off);\n    case 4:\n      return readI32(data, off);\n    case 3:\n      return readI24(data, off);\n    case 2:\n      return readI16(data, off);\n    case 1:\n      return readI8(data, off);\n    default:\n      throw new EncodingError(off, 'Invalid read length');\n  }\n}\n\nfunction readI64(data, off) {\n  const hi = readI32(data, off + 4);\n  const lo = readU32(data, off);\n\n  check(isSafe(hi, lo), 'Number exceeds 2^53-1');\n\n  return hi * 0x100000000 + lo;\n}\n\nfunction readI56(data, off) {\n  const hi = readI24(data, off + 4);\n  const lo = readU32(data, off);\n\n  check(isSafe(hi, lo), 'Number exceeds 2^53-1');\n\n  return hi * 0x100000000 + lo;\n}\n\nfunction readI48(data, off) {\n  const val = data[off + 4] + data[off + 5] * 0x100;\n\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000\n        + (val | (val & 0x8000) * 0x1fffe) * 0x100000000);\n}\n\nfunction readI40(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off++] * 0x1000000\n        + (data[off] | (data[off] & 0x80) * 0x1fffffe) * 0x100000000);\n}\n\nfunction readI32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + (data[off] << 24));\n}\n\nfunction readI24(data, off) {\n  const val = (data[off++]\n             + data[off++] * 0x100\n             + data[off] * 0x10000);\n\n  return val | (val & 0x800000) * 0x1fe;\n}\n\nfunction readI16(data, off) {\n  const val = data[off++] + data[off] * 0x100;\n  return val | (val & 0x8000) * 0x1fffe;\n}\n\nfunction readI8(data, off) {\n  const val = data[off];\n  return val | (val & 0x80) * 0x1fffffe;\n}\n\n/*\n * Read Signed BE\n */\n\nfunction readIBE(data, off, len) {\n  switch (len) {\n    case 8:\n      return readI64BE(data, off);\n    case 7:\n      return readI56BE(data, off);\n    case 6:\n      return readI48BE(data, off);\n    case 5:\n      return readI40BE(data, off);\n    case 4:\n      return readI32BE(data, off);\n    case 3:\n      return readI24BE(data, off);\n    case 2:\n      return readI16BE(data, off);\n    case 1:\n      return readI8(data, off);\n    default:\n      throw new EncodingError(off, 'Invalid read length');\n  }\n}\n\nfunction readI64BE(data, off) {\n  const hi = readI32BE(data, off);\n  const lo = readU32BE(data, off + 4);\n\n  check(isSafe(hi, lo), 'Number exceeds 2^53-1');\n\n  return hi * 0x100000000 + lo;\n}\n\nfunction readI56BE(data, off) {\n  const hi = readI24BE(data, off);\n  const lo = readU32BE(data, off + 3);\n\n  check(isSafe(hi, lo), 'Number exceeds 2^53-1');\n\n  return hi * 0x100000000 + lo;\n}\n\nfunction readI48BE(data, off) {\n  const val = data[off++] * 0x100 + data[off++];\n\n  return ((val | (val & 0x8000) * 0x1fffe) * 0x100000000\n        + data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction readI40BE(data, off) {\n  const val = data[off++];\n\n  return ((val | (val & 0x80) * 0x1fffffe) * 0x100000000\n        + data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction readI32BE(data, off) {\n  return ((data[off++] << 24)\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction readI24BE(data, off) {\n  const val = (data[off++] * 0x10000\n             + data[off++] * 0x100\n             + data[off]);\n\n  return val | (val & 0x800000) * 0x1fe;\n}\n\nfunction readI16BE(data, off) {\n  const val = data[off++] * 0x100 + data[off];\n  return val | (val & 0x8000) * 0x1fffe;\n}\n\n/*\n * Read Float\n */\n\nfunction _readFloatBackwards(data, off) {\n  F328_ARRAY[3] = data[off++];\n  F328_ARRAY[2] = data[off++];\n  F328_ARRAY[1] = data[off++];\n  F328_ARRAY[0] = data[off];\n  return F32_ARRAY[0];\n}\n\nfunction _readFloatForwards(data, off) {\n  F328_ARRAY[0] = data[off++];\n  F328_ARRAY[1] = data[off++];\n  F328_ARRAY[2] = data[off++];\n  F328_ARRAY[3] = data[off];\n  return F32_ARRAY[0];\n}\n\nfunction _readDoubleBackwards(data, off) {\n  F648_ARRAY[7] = data[off++];\n  F648_ARRAY[6] = data[off++];\n  F648_ARRAY[5] = data[off++];\n  F648_ARRAY[4] = data[off++];\n  F648_ARRAY[3] = data[off++];\n  F648_ARRAY[2] = data[off++];\n  F648_ARRAY[1] = data[off++];\n  F648_ARRAY[0] = data[off];\n  return F64_ARRAY[0];\n}\n\nfunction _readDoubleForwards(data, off) {\n  F648_ARRAY[0] = data[off++];\n  F648_ARRAY[1] = data[off++];\n  F648_ARRAY[2] = data[off++];\n  F648_ARRAY[3] = data[off++];\n  F648_ARRAY[4] = data[off++];\n  F648_ARRAY[5] = data[off++];\n  F648_ARRAY[6] = data[off++];\n  F648_ARRAY[7] = data[off];\n  return F64_ARRAY[0];\n}\n\nconst readFloat = BIG_ENDIAN ? _readFloatBackwards : _readFloatForwards;\nconst readFloatBE = BIG_ENDIAN ? _readFloatForwards : _readFloatBackwards;\nconst readDouble = BIG_ENDIAN ? _readDoubleBackwards : _readDoubleForwards;\nconst readDoubleBE = BIG_ENDIAN ? _readDoubleForwards : _readDoubleBackwards;\n\n/*\n * Write Unsigned LE\n */\n\nfunction writeU(dst, num, off, len) {\n  switch (len) {\n    case 8:\n      return writeU64(dst, num, off);\n    case 7:\n      return writeU56(dst, num, off);\n    case 6:\n      return writeU48(dst, num, off);\n    case 5:\n      return writeU40(dst, num, off);\n    case 4:\n      return writeU32(dst, num, off);\n    case 3:\n      return writeU24(dst, num, off);\n    case 2:\n      return writeU16(dst, num, off);\n    case 1:\n      return writeU8(dst, num, off);\n    default:\n      throw new EncodingError(off, 'Invalid write length');\n  }\n}\n\nfunction writeU64(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n  return write64(dst, num, off, false);\n}\n\nfunction writeU56(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n  return write56(dst, num, off, false);\n}\n\nfunction writeU48(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  const hi = (num * HI) | 0;\n\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  dst[off++] = hi;\n  dst[off++] = hi >>> 8;\n\n  return off;\n}\n\nfunction writeU40(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  const hi = (num * HI) | 0;\n\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  dst[off++] = hi;\n\n  return off;\n}\n\nfunction writeU32(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n\n  return off;\n}\n\nfunction writeU24(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n\n  return off;\n}\n\nfunction writeU16(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  dst[off++] = num;\n  dst[off++] = num >>> 8;\n\n  return off;\n}\n\nfunction writeU8(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  dst[off] = num;\n\n  return off + 1;\n}\n\n/*\n * Write Unsigned BE\n */\n\nfunction writeUBE(dst, num, off, len) {\n  switch (len) {\n    case 8:\n      return writeU64BE(dst, num, off);\n    case 7:\n      return writeU56BE(dst, num, off);\n    case 6:\n      return writeU48BE(dst, num, off);\n    case 5:\n      return writeU40BE(dst, num, off);\n    case 4:\n      return writeU32BE(dst, num, off);\n    case 3:\n      return writeU24BE(dst, num, off);\n    case 2:\n      return writeU16BE(dst, num, off);\n    case 1:\n      return writeU8(dst, num, off);\n    default:\n      throw new EncodingError(off, 'Invalid write length');\n  }\n}\n\nfunction writeU64BE(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n  return write64(dst, num, off, true);\n}\n\nfunction writeU56BE(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n  return write56(dst, num, off, true);\n}\n\nfunction writeU48BE(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  const hi = (num * HI) | 0;\n\n  dst[off++] = hi >>> 8;\n  dst[off++] = hi;\n  dst[off + 3] = num;\n  num >>>= 8;\n  dst[off + 2] = num;\n  num >>>= 8;\n  dst[off + 1] = num;\n  num >>>= 8;\n  dst[off] = num;\n\n  return off + 4;\n}\n\nfunction writeU40BE(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  const hi = (num * HI) | 0;\n\n  dst[off++] = hi;\n  dst[off + 3] = num;\n  num >>>= 8;\n  dst[off + 2] = num;\n  num >>>= 8;\n  dst[off + 1] = num;\n  num >>>= 8;\n  dst[off] = num;\n\n  return off + 4;\n}\n\nfunction writeU32BE(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  dst[off + 3] = num;\n  num >>>= 8;\n  dst[off + 2] = num;\n  num >>>= 8;\n  dst[off + 1] = num;\n  num >>>= 8;\n  dst[off] = num;\n\n  return off + 4;\n}\n\nfunction writeU24BE(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  dst[off + 2] = num;\n  num >>>= 8;\n  dst[off + 1] = num;\n  num >>>= 8;\n  dst[off] = num;\n\n  return off + 3;\n}\n\nfunction writeU16BE(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  dst[off++] = num >>> 8;\n  dst[off++] = num;\n\n  return off;\n}\n\n/*\n * Write Signed LE\n */\n\nfunction writeI(dst, num, off, len) {\n  switch (len) {\n    case 8:\n      return writeU64(dst, num, off);\n    case 7:\n      return writeU56(dst, num, off);\n    case 6:\n      return writeU48(dst, num, off);\n    case 5:\n      return writeU40(dst, num, off);\n    case 4:\n      return writeU24(dst, num, off);\n    case 3:\n      return writeU32(dst, num, off);\n    case 2:\n      return writeU16(dst, num, off);\n    case 1:\n      return writeU8(dst, num, off);\n    default:\n      throw new EncodingError(off, 'Invalid write length');\n  }\n}\n\nfunction writeI64(dst, num, off) {\n  return writeU64(dst, num, off);\n}\n\nfunction writeI56(dst, num, off) {\n  return writeU56(dst, num, off);\n}\n\nfunction writeI48(dst, num, off) {\n  return writeU48(dst, num, off);\n}\n\nfunction writeI40(dst, num, off) {\n  return writeU40(dst, num, off);\n}\n\nfunction writeI32(dst, num, off) {\n  return writeU32(dst, num, off);\n}\n\nfunction writeI24(dst, num, off) {\n  return writeU24(dst, num, off);\n}\n\nfunction writeI16(dst, num, off) {\n  return writeU16(dst, num, off);\n}\n\nfunction writeI8(dst, num, off) {\n  return writeU8(dst, num, off);\n}\n\n/*\n * Write Signed BE\n */\n\nfunction writeIBE(dst, num, off, len) {\n  switch (len) {\n    case 8:\n      return writeU64BE(dst, num, off);\n    case 7:\n      return writeU56BE(dst, num, off);\n    case 6:\n      return writeU48BE(dst, num, off);\n    case 5:\n      return writeU40BE(dst, num, off);\n    case 4:\n      return writeU32BE(dst, num, off);\n    case 3:\n      return writeU24BE(dst, num, off);\n    case 2:\n      return writeU16BE(dst, num, off);\n    case 1:\n      return writeU8(dst, num, off);\n    default:\n      throw new EncodingError(off, 'Invalid write length');\n  }\n}\n\nfunction writeI64BE(dst, num, off) {\n  return writeU64BE(dst, num, off);\n}\n\nfunction writeI56BE(dst, num, off) {\n  return writeU56BE(dst, num, off);\n}\n\nfunction writeI48BE(dst, num, off) {\n  return writeU48BE(dst, num, off);\n}\n\nfunction writeI40BE(dst, num, off) {\n  return writeU40BE(dst, num, off);\n}\n\nfunction writeI32BE(dst, num, off) {\n  return writeU32BE(dst, num, off);\n}\n\nfunction writeI24BE(dst, num, off) {\n  return writeU24BE(dst, num, off);\n}\n\nfunction writeI16BE(dst, num, off) {\n  return writeU16BE(dst, num, off);\n}\n\nfunction _writeDoubleForwards(dst, num, off) {\n  enforce(isNumber(num), 'num', 'number');\n\n  F64_ARRAY[0] = num;\n\n  dst[off++] = F648_ARRAY[0];\n  dst[off++] = F648_ARRAY[1];\n  dst[off++] = F648_ARRAY[2];\n  dst[off++] = F648_ARRAY[3];\n  dst[off++] = F648_ARRAY[4];\n  dst[off++] = F648_ARRAY[5];\n  dst[off++] = F648_ARRAY[6];\n  dst[off++] = F648_ARRAY[7];\n\n  return off;\n}\n\nfunction _writeDoubleBackwards(dst, num, off) {\n  enforce(isNumber(num), 'num', 'number');\n\n  F64_ARRAY[0] = num;\n\n  dst[off++] = F648_ARRAY[7];\n  dst[off++] = F648_ARRAY[6];\n  dst[off++] = F648_ARRAY[5];\n  dst[off++] = F648_ARRAY[4];\n  dst[off++] = F648_ARRAY[3];\n  dst[off++] = F648_ARRAY[2];\n  dst[off++] = F648_ARRAY[1];\n  dst[off++] = F648_ARRAY[0];\n\n  return off;\n}\n\nfunction _writeFloatForwards(dst, num, off) {\n  enforce(isNumber(num), 'num', 'number');\n\n  F32_ARRAY[0] = num;\n\n  dst[off++] = F328_ARRAY[0];\n  dst[off++] = F328_ARRAY[1];\n  dst[off++] = F328_ARRAY[2];\n  dst[off++] = F328_ARRAY[3];\n\n  return off;\n}\n\nfunction _writeFloatBackwards(dst, num, off) {\n  enforce(isNumber(num), 'num', 'number');\n\n  F32_ARRAY[0] = num;\n\n  dst[off++] = F328_ARRAY[3];\n  dst[off++] = F328_ARRAY[2];\n  dst[off++] = F328_ARRAY[1];\n  dst[off++] = F328_ARRAY[0];\n\n  return off;\n}\n\nconst writeFloat = BIG_ENDIAN ? _writeFloatBackwards : _writeFloatForwards;\nconst writeFloatBE = BIG_ENDIAN ? _writeFloatForwards : _writeFloatBackwards;\nconst writeDouble = BIG_ENDIAN ? _writeDoubleBackwards : _writeDoubleForwards;\nconst writeDoubleBE = BIG_ENDIAN ? _writeDoubleForwards : _writeDoubleBackwards;\n\n/*\n * Varints\n */\n\nfunction readVarint(data, off) {\n  let value, size;\n\n  checkRead(off < data.length, off);\n\n  switch (data[off]) {\n    case 0xff:\n      size = 9;\n      checkRead(off + size <= data.length, off);\n      value = readU64(data, off + 1);\n      check(value > 0xffffffff, off, 'Non-canonical varint');\n      break;\n    case 0xfe:\n      size = 5;\n      checkRead(off + size <= data.length, off);\n      value = readU32(data, off + 1);\n      check(value > 0xffff, off, 'Non-canonical varint');\n      break;\n    case 0xfd:\n      size = 3;\n      checkRead(off + size <= data.length, off);\n      value = readU16(data, off + 1);\n      check(value >= 0xfd, off, 'Non-canonical varint');\n      break;\n    default:\n      size = 1;\n      value = data[off];\n      break;\n  }\n\n  return new Varint(size, value);\n}\n\nfunction writeVarint(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  if (num < 0xfd) {\n    dst[off++] = num;\n    return off;\n  }\n\n  if (num <= 0xffff) {\n    dst[off++] = 0xfd;\n    return writeU16(dst, num, off);\n  }\n\n  if (num <= 0xffffffff) {\n    dst[off++] = 0xfe;\n    return writeU32(dst, num, off);\n  }\n\n  dst[off++] = 0xff;\n\n  return writeU64(dst, num, off);\n}\n\nfunction sizeVarint(num) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  if (num < 0xfd)\n    return 1;\n\n  if (num <= 0xffff)\n    return 3;\n\n  if (num <= 0xffffffff)\n    return 5;\n\n  return 9;\n}\n\nfunction readVarint2(data, off) {\n  let num = 0;\n  let size = 0;\n\n  for (;;) {\n    checkRead(off < data.length, off);\n\n    const ch = data[off++];\n\n    size += 1;\n\n    // Number.MAX_SAFE_INTEGER >>> 7\n    check(num <= 0x3fffffffffff - (ch & 0x7f), off, 'Number exceeds 2^53-1');\n\n    // num = (num << 7) | (ch & 0x7f);\n    num = (num * 0x80) + (ch & 0x7f);\n\n    if ((ch & 0x80) === 0)\n      break;\n\n    check(num !== MAX_SAFE_INTEGER, off, 'Number exceeds 2^53-1');\n    num += 1;\n  }\n\n  return new Varint(size, num);\n}\n\nfunction writeVarint2(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  const tmp = [];\n\n  let len = 0;\n\n  for (;;) {\n    tmp[len] = (num & 0x7f) | (len ? 0x80 : 0x00);\n\n    if (num <= 0x7f)\n      break;\n\n    // num = (num >>> 7) - 1;\n    num = ((num - (num % 0x80)) / 0x80) - 1;\n    len += 1;\n  }\n\n  checkRead(off + len + 1 <= dst.length, off);\n\n  do {\n    dst[off++] = tmp[len];\n  } while (len--);\n\n  return off;\n}\n\nfunction sizeVarint2(num) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  let size = 0;\n\n  for (;;) {\n    size += 1;\n\n    if (num <= 0x7f)\n      break;\n\n    // num = (num >>> 7) - 1;\n    num = ((num - (num % 0x80)) / 0x80) - 1;\n  }\n\n  return size;\n}\n\n/*\n * Bytes\n */\n\nfunction sliceBytes(data, off, size) {\n  enforce(Buffer.isBuffer(data), 'data', 'buffer');\n  enforce((off >>> 0) === off, 'off', 'integer');\n  enforce((size >>> 0) === size, 'size', 'integer');\n\n  if (off + size > data.length)\n    throw new EncodingError(off, 'Out of bounds read');\n\n  return data.slice(off, off + size);\n}\n\nfunction readBytes(data, off, size) {\n  enforce(Buffer.isBuffer(data), 'data', 'buffer');\n  enforce((off >>> 0) === off, 'off', 'integer');\n  enforce((size >>> 0) === size, 'size', 'integer');\n\n  if (off + size > data.length)\n    throw new EncodingError(off, 'Out of bounds read');\n\n  const buf = Buffer.allocUnsafeSlow(size);\n\n  data.copy(buf, 0, off, off + size);\n\n  return buf;\n}\n\nfunction writeBytes(data, value, off) {\n  enforce(Buffer.isBuffer(data), 'data', 'buffer');\n  enforce(Buffer.isBuffer(value), 'value', 'buffer');\n  enforce((off >>> 0) === off, 'off', 'integer');\n\n  if (off + value.length > data.length)\n    throw new EncodingError(off, 'Out of bounds write');\n\n  return value.copy(data, off, 0, value.length);\n}\n\nfunction readString(data, off, size, enc) {\n  if (enc == null)\n    enc = 'binary';\n\n  enforce(Buffer.isBuffer(data), 'data', 'buffer');\n  enforce((off >>> 0) === off, 'off', 'integer');\n  enforce((size >>> 0) === size, 'size', 'integer');\n  enforce(typeof enc === 'string', 'enc', 'string');\n\n  if (off + size > data.length)\n    throw new EncodingError(off, 'Out of bounds read');\n\n  return data.toString(enc, off, off + size);\n}\n\nfunction writeString(data, str, off, enc) {\n  if (enc == null)\n    enc = 'binary';\n\n  enforce(Buffer.isBuffer(data), 'data', 'buffer');\n  enforce(typeof str === 'string', 'str', 'string');\n  enforce((off >>> 0) === off, 'off', 'integer');\n  enforce(typeof enc === 'string', 'enc', 'string');\n\n  if (str.length === 0)\n    return 0;\n\n  const size = Buffer.byteLength(str, enc);\n\n  if (off + size > data.length)\n    throw new EncodingError(off, 'Out of bounds write');\n\n  return data.write(str, off, enc);\n}\n\nfunction realloc(data, size) {\n  enforce(Buffer.isBuffer(data), 'data', 'buffer');\n\n  const buf = Buffer.allocUnsafeSlow(size);\n\n  data.copy(buf, 0);\n\n  return buf;\n}\n\nfunction copy(data) {\n  enforce(Buffer.isBuffer(data), 'data', 'buffer');\n  return realloc(data, data.length);\n}\n\nfunction concat(a, b) {\n  enforce(Buffer.isBuffer(a), 'a', 'buffer');\n  enforce(Buffer.isBuffer(b), 'b', 'buffer');\n\n  const size = a.length + b.length;\n  const buf = Buffer.allocUnsafeSlow(size);\n\n  a.copy(buf, 0);\n  b.copy(buf, a.length);\n\n  return buf;\n}\n\n/*\n * Size Helpers\n */\n\nfunction sizeVarBytes(data) {\n  enforce(Buffer.isBuffer(data), 'data', 'buffer');\n  return sizeVarint(data.length) + data.length;\n}\n\nfunction sizeVarlen(len) {\n  return sizeVarint(len) + len;\n}\n\nfunction sizeVarString(str, enc) {\n  if (enc == null)\n    enc = 'binary';\n\n  enforce(typeof str === 'string', 'str', 'string');\n  enforce(typeof enc === 'string', 'enc', 'string');\n\n  if (str.length === 0)\n    return 1;\n\n  const len = Buffer.byteLength(str, enc);\n\n  return sizeVarint(len) + len;\n}\n\n/*\n * Helpers\n */\n\nfunction isSafe(hi, lo) {\n  if (hi < 0) {\n    hi = ~hi;\n    if (lo === 0)\n      hi += 1;\n  }\n\n  return (hi & 0xffe00000) === 0;\n}\n\nfunction write64(dst, num, off, be) {\n  let neg = false;\n\n  if (num < 0) {\n    num = -num;\n    neg = true;\n  }\n\n  let hi = (num * HI) | 0;\n  let lo = num | 0;\n\n  if (neg) {\n    if (lo === 0) {\n      hi = (~hi + 1) | 0;\n    } else {\n      hi = ~hi;\n      lo = ~lo + 1;\n    }\n  }\n\n  if (be) {\n    off = writeI32BE(dst, hi, off);\n    off = writeI32BE(dst, lo, off);\n  } else {\n    off = writeI32(dst, lo, off);\n    off = writeI32(dst, hi, off);\n  }\n\n  return off;\n}\n\nfunction write56(dst, num, off, be) {\n  let neg = false;\n\n  if (num < 0) {\n    num = -num;\n    neg = true;\n  }\n\n  let hi = (num * HI) | 0;\n  let lo = num | 0;\n\n  if (neg) {\n    if (lo === 0) {\n      hi = (~hi + 1) | 0;\n    } else {\n      hi = ~hi;\n      lo = ~lo + 1;\n    }\n  }\n\n  if (be) {\n    off = writeI24BE(dst, hi, off);\n    off = writeI32BE(dst, lo, off);\n  } else {\n    off = writeI32(dst, lo, off);\n    off = writeI24(dst, hi, off);\n  }\n\n  return off;\n}\n\nclass Varint {\n  constructor(size, value) {\n    this.size = size;\n    this.value = value;\n  }\n}\n\nfunction isNumber(num) {\n  return typeof num === 'number' && isFinite(num);\n}\n\nfunction checkRead(value, offset) {\n  if (!value)\n    throw new EncodingError(offset, 'Out of bounds read', checkRead);\n}\n\nfunction check(value, offset, reason) {\n  if (!value)\n    throw new EncodingError(offset, reason, check);\n}\n\n/*\n * Expose\n */\n\nexports.readU = readU;\nexports.readU64 = readU64;\nexports.readU56 = readU56;\nexports.readU48 = readU48;\nexports.readU40 = readU40;\nexports.readU32 = readU32;\nexports.readU24 = readU24;\nexports.readU16 = readU16;\nexports.readU8 = readU8;\n\nexports.readUBE = readUBE;\nexports.readU64BE = readU64BE;\nexports.readU56BE = readU56BE;\nexports.readU48BE = readU48BE;\nexports.readU40BE = readU40BE;\nexports.readU32BE = readU32BE;\nexports.readU24BE = readU24BE;\nexports.readU16BE = readU16BE;\n\nexports.readI = readI;\nexports.readI64 = readI64;\nexports.readI56 = readI56;\nexports.readI48 = readI48;\nexports.readI40 = readI40;\nexports.readI32 = readI32;\nexports.readI24 = readI24;\nexports.readI16 = readI16;\nexports.readI8 = readI8;\n\nexports.readIBE = readIBE;\nexports.readI64BE = readI64BE;\nexports.readI56BE = readI56BE;\nexports.readI48BE = readI48BE;\nexports.readI40BE = readI40BE;\nexports.readI32BE = readI32BE;\nexports.readI24BE = readI24BE;\nexports.readI16BE = readI16BE;\n\nexports.readFloat = readFloat;\nexports.readFloatBE = readFloatBE;\nexports.readDouble = readDouble;\nexports.readDoubleBE = readDoubleBE;\n\nexports.writeU = writeU;\nexports.writeU64 = writeU64;\nexports.writeU56 = writeU56;\nexports.writeU48 = writeU48;\nexports.writeU40 = writeU40;\nexports.writeU32 = writeU32;\nexports.writeU24 = writeU24;\nexports.writeU16 = writeU16;\nexports.writeU8 = writeU8;\n\nexports.writeUBE = writeUBE;\nexports.writeU64BE = writeU64BE;\nexports.writeU56BE = writeU56BE;\nexports.writeU48BE = writeU48BE;\nexports.writeU40BE = writeU40BE;\nexports.writeU32BE = writeU32BE;\nexports.writeU24BE = writeU24BE;\nexports.writeU16BE = writeU16BE;\n\nexports.writeI = writeI;\nexports.writeI64 = writeI64;\nexports.writeI56 = writeI56;\nexports.writeI48 = writeI48;\nexports.writeI40 = writeI40;\nexports.writeI32 = writeI32;\nexports.writeI24 = writeI24;\nexports.writeI16 = writeI16;\nexports.writeI8 = writeI8;\n\nexports.writeIBE = writeIBE;\nexports.writeI64BE = writeI64BE;\nexports.writeI56BE = writeI56BE;\nexports.writeI48BE = writeI48BE;\nexports.writeI40BE = writeI40BE;\nexports.writeI32BE = writeI32BE;\nexports.writeI24BE = writeI24BE;\nexports.writeI16BE = writeI16BE;\n\nexports.writeFloat = writeFloat;\nexports.writeFloatBE = writeFloatBE;\nexports.writeDouble = writeDouble;\nexports.writeDoubleBE = writeDoubleBE;\n\nexports.readVarint = readVarint;\nexports.writeVarint = writeVarint;\nexports.sizeVarint = sizeVarint;\nexports.readVarint2 = readVarint2;\nexports.writeVarint2 = writeVarint2;\nexports.sizeVarint2 = sizeVarint2;\n\nexports.sliceBytes = sliceBytes;\nexports.readBytes = readBytes;\nexports.writeBytes = writeBytes;\nexports.readString = readString;\nexports.writeString = writeString;\n\nexports.realloc = realloc;\nexports.copy = copy;\nexports.concat = concat;\n\nexports.sizeVarBytes = sizeVarBytes;\nexports.sizeVarlen = sizeVarlen;\nexports.sizeVarString = sizeVarString;\n","/*!\n * base64.js - base64 for bcrypto\n * Copyright (c) 2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('../js/base64');\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","/*!\n * aes.js - aes128/192/256 for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on openssl/openssl:\n *   Based on code entered into the public domain by Vincent Rijmen.\n *   https://github.com/openssl/openssl/blob/master/crypto/aes/aes_core.c\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n *   http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.197.pdf\n *   https://github.com/openssl/openssl/blob/master/crypto/aes/aes_core.c\n */\n\n'use strict';\n\nconst assert = require('../../internal/assert');\n\n/*\n * Constants\n */\n\nconst TE0 = new Uint32Array([\n  0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d,\n  0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554,\n  0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d,\n  0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a,\n  0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87,\n  0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b,\n  0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea,\n  0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b,\n  0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a,\n  0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f,\n  0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108,\n  0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f,\n  0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e,\n  0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5,\n  0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d,\n  0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f,\n  0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e,\n  0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb,\n  0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce,\n  0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497,\n  0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c,\n  0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed,\n  0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b,\n  0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a,\n  0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16,\n  0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594,\n  0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81,\n  0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3,\n  0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a,\n  0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504,\n  0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163,\n  0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d,\n  0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f,\n  0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739,\n  0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47,\n  0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395,\n  0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f,\n  0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883,\n  0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c,\n  0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76,\n  0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e,\n  0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4,\n  0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6,\n  0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b,\n  0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7,\n  0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0,\n  0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25,\n  0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818,\n  0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72,\n  0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651,\n  0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21,\n  0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85,\n  0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa,\n  0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12,\n  0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0,\n  0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9,\n  0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133,\n  0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7,\n  0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920,\n  0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a,\n  0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17,\n  0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8,\n  0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11,\n  0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a\n]);\n\nconst TE1 = new Uint32Array([\n  0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b,\n  0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5,\n  0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b,\n  0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676,\n  0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d,\n  0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0,\n  0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf,\n  0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0,\n  0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626,\n  0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc,\n  0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1,\n  0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515,\n  0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3,\n  0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a,\n  0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2,\n  0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575,\n  0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a,\n  0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0,\n  0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3,\n  0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484,\n  0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded,\n  0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b,\n  0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939,\n  0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf,\n  0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb,\n  0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585,\n  0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f,\n  0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8,\n  0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f,\n  0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5,\n  0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121,\n  0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2,\n  0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec,\n  0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717,\n  0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d,\n  0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373,\n  0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc,\n  0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888,\n  0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414,\n  0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb,\n  0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a,\n  0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c,\n  0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262,\n  0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979,\n  0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d,\n  0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9,\n  0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea,\n  0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808,\n  0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e,\n  0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6,\n  0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f,\n  0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a,\n  0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666,\n  0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e,\n  0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9,\n  0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e,\n  0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111,\n  0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494,\n  0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9,\n  0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf,\n  0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d,\n  0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868,\n  0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f,\n  0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616\n]);\n\nconst TE2 = new Uint32Array([\n  0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b,\n  0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5,\n  0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b,\n  0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76,\n  0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d,\n  0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0,\n  0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af,\n  0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0,\n  0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26,\n  0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc,\n  0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1,\n  0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15,\n  0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3,\n  0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a,\n  0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2,\n  0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75,\n  0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a,\n  0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0,\n  0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3,\n  0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384,\n  0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed,\n  0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b,\n  0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239,\n  0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf,\n  0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb,\n  0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185,\n  0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f,\n  0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8,\n  0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f,\n  0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5,\n  0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221,\n  0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2,\n  0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec,\n  0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17,\n  0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d,\n  0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673,\n  0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc,\n  0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88,\n  0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814,\n  0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb,\n  0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a,\n  0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c,\n  0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462,\n  0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279,\n  0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d,\n  0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9,\n  0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea,\n  0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008,\n  0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e,\n  0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6,\n  0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f,\n  0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a,\n  0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66,\n  0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e,\n  0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9,\n  0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e,\n  0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211,\n  0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394,\n  0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9,\n  0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df,\n  0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d,\n  0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068,\n  0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f,\n  0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16\n]);\n\nconst TE3 = new Uint32Array([\n  0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6,\n  0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491,\n  0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56,\n  0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec,\n  0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa,\n  0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb,\n  0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45,\n  0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b,\n  0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c,\n  0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83,\n  0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9,\n  0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a,\n  0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d,\n  0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f,\n  0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf,\n  0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea,\n  0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34,\n  0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b,\n  0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d,\n  0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713,\n  0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1,\n  0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6,\n  0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72,\n  0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85,\n  0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed,\n  0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411,\n  0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe,\n  0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b,\n  0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05,\n  0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1,\n  0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342,\n  0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf,\n  0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3,\n  0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e,\n  0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a,\n  0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6,\n  0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3,\n  0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b,\n  0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28,\n  0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad,\n  0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14,\n  0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8,\n  0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4,\n  0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2,\n  0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da,\n  0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049,\n  0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf,\n  0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810,\n  0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c,\n  0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197,\n  0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e,\n  0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f,\n  0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc,\n  0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c,\n  0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069,\n  0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927,\n  0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322,\n  0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733,\n  0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9,\n  0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5,\n  0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a,\n  0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0,\n  0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e,\n  0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c\n]);\n\nconst TD0 = new Uint32Array([\n  0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96,\n  0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393,\n  0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25,\n  0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f,\n  0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1,\n  0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6,\n  0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da,\n  0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844,\n  0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd,\n  0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4,\n  0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45,\n  0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94,\n  0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7,\n  0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a,\n  0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5,\n  0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c,\n  0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1,\n  0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a,\n  0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75,\n  0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051,\n  0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46,\n  0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff,\n  0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77,\n  0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb,\n  0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000,\n  0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e,\n  0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927,\n  0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a,\n  0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e,\n  0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16,\n  0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d,\n  0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8,\n  0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd,\n  0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34,\n  0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163,\n  0xd731dcca, 0x42638510, 0x13972240, 0x84c61120,\n  0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d,\n  0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0,\n  0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422,\n  0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef,\n  0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36,\n  0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4,\n  0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662,\n  0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5,\n  0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3,\n  0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b,\n  0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8,\n  0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6,\n  0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6,\n  0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0,\n  0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815,\n  0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f,\n  0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df,\n  0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f,\n  0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e,\n  0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713,\n  0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89,\n  0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c,\n  0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf,\n  0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86,\n  0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f,\n  0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541,\n  0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190,\n  0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742\n]);\n\nconst TD1 = new Uint32Array([\n  0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e,\n  0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303,\n  0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c,\n  0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3,\n  0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0,\n  0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9,\n  0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259,\n  0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8,\n  0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971,\n  0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a,\n  0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f,\n  0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b,\n  0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8,\n  0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab,\n  0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708,\n  0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682,\n  0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2,\n  0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe,\n  0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb,\n  0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10,\n  0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd,\n  0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015,\n  0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e,\n  0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee,\n  0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000,\n  0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72,\n  0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39,\n  0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e,\n  0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91,\n  0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a,\n  0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17,\n  0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9,\n  0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60,\n  0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e,\n  0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1,\n  0xcad731dc, 0x10426385, 0x40139722, 0x2084c611,\n  0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1,\n  0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3,\n  0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964,\n  0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390,\n  0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b,\n  0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf,\n  0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46,\n  0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af,\n  0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512,\n  0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb,\n  0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a,\n  0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8,\n  0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c,\n  0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266,\n  0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8,\n  0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6,\n  0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604,\n  0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551,\n  0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41,\n  0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647,\n  0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c,\n  0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1,\n  0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737,\n  0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db,\n  0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340,\n  0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95,\n  0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1,\n  0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857\n]);\n\nconst TD2 = new Uint32Array([\n  0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27,\n  0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3,\n  0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502,\n  0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562,\n  0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe,\n  0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3,\n  0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552,\n  0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9,\n  0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9,\n  0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce,\n  0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253,\n  0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908,\n  0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b,\n  0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655,\n  0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337,\n  0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16,\n  0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69,\n  0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6,\n  0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6,\n  0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e,\n  0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6,\n  0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050,\n  0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9,\n  0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8,\n  0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000,\n  0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a,\n  0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d,\n  0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436,\n  0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b,\n  0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12,\n  0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b,\n  0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e,\n  0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f,\n  0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb,\n  0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4,\n  0xdccad731, 0x85104263, 0x22401397, 0x112084c6,\n  0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729,\n  0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1,\n  0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9,\n  0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233,\n  0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4,\n  0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad,\n  0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e,\n  0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3,\n  0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25,\n  0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b,\n  0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f,\n  0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15,\n  0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0,\n  0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2,\n  0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7,\n  0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791,\n  0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496,\n  0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665,\n  0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b,\n  0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6,\n  0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13,\n  0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47,\n  0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7,\n  0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844,\n  0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3,\n  0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d,\n  0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456,\n  0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8\n]);\n\nconst TD3 = new Uint32Array([\n  0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a,\n  0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b,\n  0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5,\n  0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5,\n  0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d,\n  0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b,\n  0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95,\n  0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e,\n  0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27,\n  0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d,\n  0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562,\n  0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9,\n  0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752,\n  0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66,\n  0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3,\n  0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced,\n  0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e,\n  0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4,\n  0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4,\n  0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd,\n  0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d,\n  0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60,\n  0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767,\n  0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79,\n  0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000,\n  0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c,\n  0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736,\n  0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24,\n  0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b,\n  0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c,\n  0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12,\n  0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814,\n  0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3,\n  0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b,\n  0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8,\n  0x31dccad7, 0x63851042, 0x97224013, 0xc6112084,\n  0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7,\n  0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077,\n  0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247,\n  0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22,\n  0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698,\n  0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f,\n  0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254,\n  0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582,\n  0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf,\n  0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb,\n  0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883,\n  0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef,\n  0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629,\n  0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035,\n  0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533,\n  0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17,\n  0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4,\n  0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46,\n  0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb,\n  0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d,\n  0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb,\n  0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a,\n  0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73,\n  0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678,\n  0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2,\n  0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff,\n  0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064,\n  0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0\n]);\n\nconst TD4 = new Uint8Array([\n  0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38,\n  0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb,\n  0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87,\n  0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb,\n  0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d,\n  0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,\n  0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2,\n  0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25,\n  0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16,\n  0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92,\n  0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda,\n  0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,\n  0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a,\n  0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06,\n  0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02,\n  0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b,\n  0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea,\n  0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,\n  0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85,\n  0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e,\n  0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89,\n  0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b,\n  0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20,\n  0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,\n  0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31,\n  0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f,\n  0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d,\n  0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef,\n  0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0,\n  0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,\n  0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26,\n  0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d\n]);\n\nconst RCON = new Uint32Array([\n  0x01000000, 0x02000000, 0x04000000, 0x08000000,\n  0x10000000, 0x20000000, 0x40000000, 0x80000000,\n  0x1b000000, 0x36000000\n]);\n\n/**\n * AES\n */\n\nclass AES {\n  constructor(bits = 256) {\n    assert((bits >>> 0) === bits);\n\n    this.bits = bits;\n    this.rounds = getRounds(bits);\n    this.key = null;\n    this.encKey = null;\n    this.decKey = null;\n  }\n\n  get blockSize() {\n    return 16;\n  }\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n\n    if (key.length !== (this.bits >>> 3))\n      throw new Error('Invalid key size.');\n\n    this.destroy();\n    this.key = Buffer.from(key);\n    this.encKey = null;\n    this.decKey = null;\n\n    return this;\n  }\n\n  createEncryptKey() {\n    if (!this.key)\n      throw new Error('Cipher is not initialized.');\n\n    const ukey = this.key;\n\n    if (ukey.length !== (this.bits >>> 3))\n      throw new Error('Invalid key size.');\n\n    const key = new Uint32Array(60);\n\n    key[0] = readU32(ukey, 0);\n    key[1] = readU32(ukey, 4);\n    key[2] = readU32(ukey, 8);\n    key[3] = readU32(ukey, 12);\n\n    let p = 0;\n    let i = 0;\n\n    if (this.bits === 128) {\n      for (;;) {\n        const tmp = key[p + 3];\n\n        key[p + 4] = key[p]\n          ^ (TE2[(tmp >>> 16) & 0xff] & 0xff000000)\n          ^ (TE3[(tmp >>>  8) & 0xff] & 0x00ff0000)\n          ^ (TE0[(tmp >>>  0) & 0xff] & 0x0000ff00)\n          ^ (TE1[(tmp >>> 24) & 0xff] & 0x000000ff)\n          ^ RCON[i];\n\n        key[p + 5] = key[p + 1] ^ key[p + 4];\n        key[p + 6] = key[p + 2] ^ key[p + 5];\n        key[p + 7] = key[p + 3] ^ key[p + 6];\n\n        i += 1;\n\n        if (i === 10)\n          break;\n\n        p += 4;\n      }\n\n      return key;\n    }\n\n    key[p + 4] = readU32(ukey, 16);\n    key[p + 5] = readU32(ukey, 20);\n\n    if (this.bits === 192) {\n      for (;;) {\n        const tmp = key[p + 5];\n\n        key[p + 6] = key[p]\n          ^ (TE2[(tmp >>> 16) & 0xff] & 0xff000000)\n          ^ (TE3[(tmp >>>  8) & 0xff] & 0x00ff0000)\n          ^ (TE0[(tmp >>>  0) & 0xff] & 0x0000ff00)\n          ^ (TE1[(tmp >>> 24) & 0xff] & 0x000000ff)\n          ^ RCON[i];\n\n        key[p + 7] = key[p + 1] ^ key[p + 6];\n        key[p + 8] = key[p + 2] ^ key[p + 7];\n        key[p + 9] = key[p + 3] ^ key[p + 8];\n\n        i += 1;\n\n        if (i === 8)\n          break;\n\n        key[p + 10] = key[p + 4] ^ key[p + 9];\n        key[p + 11] = key[p + 5] ^ key[p + 10];\n        p += 6;\n      }\n\n      return key;\n    }\n\n    key[p + 6] = readU32(ukey, 24);\n    key[p + 7] = readU32(ukey, 28);\n\n    if (this.bits === 256) {\n      for (;;) {\n        let tmp = key[p + 7];\n\n        key[p + 8] = key[p]\n          ^ (TE2[(tmp >>> 16) & 0xff] & 0xff000000)\n          ^ (TE3[(tmp >>>  8) & 0xff] & 0x00ff0000)\n          ^ (TE0[(tmp >>>  0) & 0xff] & 0x0000ff00)\n          ^ (TE1[(tmp >>> 24) & 0xff] & 0x000000ff)\n          ^ RCON[i];\n\n        key[p + 9] = key[p + 1] ^ key[p + 8];\n        key[p + 10] = key[p + 2] ^ key[p + 9];\n        key[p + 11] = key[p + 3] ^ key[p + 10];\n\n        i += 1;\n\n        if (i === 7)\n          break;\n\n        tmp = key[p + 11];\n\n        key[p + 12] = key[p + 4]\n          ^ (TE2[(tmp >>> 24) & 0xff] & 0xff000000)\n          ^ (TE3[(tmp >>> 16) & 0xff] & 0x00ff0000)\n          ^ (TE0[(tmp >>>  8) & 0xff] & 0x0000ff00)\n          ^ (TE1[(tmp >>>  0) & 0xff] & 0x000000ff);\n\n        key[p + 13] = key[p +  5] ^ key[p + 12];\n        key[p + 14] = key[p +  6] ^ key[p + 13];\n        key[p + 15] = key[p +  7] ^ key[p + 14];\n\n        p += 8;\n      }\n\n      return key;\n    }\n\n    throw new Error('Bad key size.');\n  }\n\n  createDecryptKey() {\n    // First, start with an encryption schedule.\n    const key = this.createEncryptKey();\n\n    let p = 0;\n\n    // Invert the order of the round keys.\n    for (let i = 0, j = 4 * this.rounds; i < j; i += 4, j -= 4) {\n      let tmp = key[p + i + 0];\n\n      key[p + i + 0] = key[p + j + 0];\n      key[p + j + 0] = tmp;\n\n      tmp = key[p + i + 1];\n      key[p + i + 1] = key[p + j + 1];\n      key[p + j + 1] = tmp;\n\n      tmp = key[p + i + 2];\n      key[p + i + 2] = key[p + j + 2];\n      key[p + j + 2] = tmp;\n\n      tmp = key[p + i + 3];\n      key[p + i + 3] = key[p + j + 3];\n      key[p + j + 3] = tmp;\n    }\n\n    // Apply the inverse MixColumn transform to\n    // all round keys but the first and the last.\n    for (let i = 1; i < this.rounds; i++) {\n      p += 4;\n\n      key[p + 0] = TD0[TE1[(key[p + 0] >>> 24) & 0xff] & 0xff]\n                 ^ TD1[TE1[(key[p + 0] >>> 16) & 0xff] & 0xff]\n                 ^ TD2[TE1[(key[p + 0] >>>  8) & 0xff] & 0xff]\n                 ^ TD3[TE1[(key[p + 0] >>>  0) & 0xff] & 0xff];\n\n      key[p + 1] = TD0[TE1[(key[p + 1] >>> 24) & 0xff] & 0xff]\n                 ^ TD1[TE1[(key[p + 1] >>> 16) & 0xff] & 0xff]\n                 ^ TD2[TE1[(key[p + 1] >>>  8) & 0xff] & 0xff]\n                 ^ TD3[TE1[(key[p + 1] >>>  0) & 0xff] & 0xff];\n\n      key[p + 2] = TD0[TE1[(key[p + 2] >>> 24) & 0xff] & 0xff]\n                 ^ TD1[TE1[(key[p + 2] >>> 16) & 0xff] & 0xff]\n                 ^ TD2[TE1[(key[p + 2] >>>  8) & 0xff] & 0xff]\n                 ^ TD3[TE1[(key[p + 2] >>>  0) & 0xff] & 0xff];\n\n      key[p + 3] = TD0[TE1[(key[p + 3] >>> 24) & 0xff] & 0xff]\n                 ^ TD1[TE1[(key[p + 3] >>> 16) & 0xff] & 0xff]\n                 ^ TD2[TE1[(key[p + 3] >>>  8) & 0xff] & 0xff]\n                 ^ TD3[TE1[(key[p + 3] >>>  0) & 0xff] & 0xff];\n    }\n\n    return key;\n  }\n\n  getEncryptKey() {\n    if (!this.encKey)\n      this.encKey = this.createEncryptKey();\n    return this.encKey;\n  }\n\n  getDecryptKey() {\n    if (!this.decKey)\n      this.decKey = this.createDecryptKey();\n    return this.decKey;\n  }\n\n  encrypt(output, opos, input, ipos) {\n    const key = this.getEncryptKey();\n\n    // Map byte array block to cipher\n    // state and add initial round key.\n    let s0 = readU32(input, ipos +  0) ^ key[0];\n    let s1 = readU32(input, ipos +  4) ^ key[1];\n    let s2 = readU32(input, ipos +  8) ^ key[2];\n    let s3 = readU32(input, ipos + 12) ^ key[3];\n\n    // Nr - 1 full rounds\n    let r = this.rounds >>> 1;\n    let p = 0;\n    let t0, t1, t2, t3;\n\n    for (;;) {\n      t0 = TE0[(s0 >>> 24) & 0xff]\n         ^ TE1[(s1 >>> 16) & 0xff]\n         ^ TE2[(s2 >>>  8) & 0xff]\n         ^ TE3[(s3 >>>  0) & 0xff]\n         ^ key[p + 4];\n\n      t1 = TE0[(s1 >>> 24) & 0xff]\n         ^ TE1[(s2 >>> 16) & 0xff]\n         ^ TE2[(s3 >>>  8) & 0xff]\n         ^ TE3[(s0 >>>  0) & 0xff]\n         ^ key[p + 5];\n\n      t2 = TE0[(s2 >>> 24) & 0xff]\n         ^ TE1[(s3 >>> 16) & 0xff]\n         ^ TE2[(s0 >>>  8) & 0xff]\n         ^ TE3[(s1 >>>  0) & 0xff]\n         ^ key[p + 6];\n\n      t3 = TE0[(s3 >>> 24) & 0xff]\n         ^ TE1[(s0 >>> 16) & 0xff]\n         ^ TE2[(s1 >>>  8) & 0xff]\n         ^ TE3[(s2 >>>  0) & 0xff]\n         ^ key[p + 7];\n\n      p += 8;\n      r -= 1;\n\n      if (r === 0)\n        break;\n\n      s0 = TE0[(t0 >>> 24) & 0xff]\n         ^ TE1[(t1 >>> 16) & 0xff]\n         ^ TE2[(t2 >>>  8) & 0xff]\n         ^ TE3[(t3 >>>  0) & 0xff]\n         ^ key[p + 0];\n\n      s1 = TE0[(t1 >>> 24) & 0xff]\n         ^ TE1[(t2 >>> 16) & 0xff]\n         ^ TE2[(t3 >>>  8) & 0xff]\n         ^ TE3[(t0 >>>  0) & 0xff]\n         ^ key[p + 1];\n\n      s2 = TE0[(t2 >>> 24) & 0xff]\n         ^ TE1[(t3 >>> 16) & 0xff]\n         ^ TE2[(t0 >>>  8) & 0xff]\n         ^ TE3[(t1 >>>  0) & 0xff]\n         ^ key[p + 2];\n\n      s3 = TE0[(t3 >>> 24) & 0xff]\n         ^ TE1[(t0 >>> 16) & 0xff]\n         ^ TE2[(t1 >>>  8) & 0xff]\n         ^ TE3[(t2 >>>  0) & 0xff]\n         ^ key[p + 3];\n    }\n\n    // Apply last round and map cipher\n    // state to byte array block.\n    s0 = (TE2[(t0 >>> 24) & 0xff] & 0xff000000)\n       ^ (TE3[(t1 >>> 16) & 0xff] & 0x00ff0000)\n       ^ (TE0[(t2 >>>  8) & 0xff] & 0x0000ff00)\n       ^ (TE1[(t3 >>>  0) & 0xff] & 0x000000ff)\n       ^ key[p + 0];\n\n    s1 = (TE2[(t1 >>> 24) & 0xff] & 0xff000000)\n       ^ (TE3[(t2 >>> 16) & 0xff] & 0x00ff0000)\n       ^ (TE0[(t3 >>>  8) & 0xff] & 0x0000ff00)\n       ^ (TE1[(t0 >>>  0) & 0xff] & 0x000000ff)\n       ^ key[p + 1];\n\n    s2 = (TE2[(t2 >>> 24) & 0xff] & 0xff000000)\n       ^ (TE3[(t3 >>> 16) & 0xff] & 0x00ff0000)\n       ^ (TE0[(t0 >>>  8) & 0xff] & 0x0000ff00)\n       ^ (TE1[(t1 >>>  0) & 0xff] & 0x000000ff)\n       ^ key[p + 2];\n\n    s3 = (TE2[(t3 >>> 24) & 0xff] & 0xff000000)\n       ^ (TE3[(t0 >>> 16) & 0xff] & 0x00ff0000)\n       ^ (TE0[(t1 >>>  8) & 0xff] & 0x0000ff00)\n       ^ (TE1[(t2 >>>  0) & 0xff] & 0x000000ff)\n       ^ key[p + 3];\n\n    writeU32(output, s0, opos + 0);\n    writeU32(output, s1, opos + 4);\n    writeU32(output, s2, opos + 8);\n    writeU32(output, s3, opos + 12);\n\n    return this;\n  }\n\n  decrypt(output, opos, input, ipos) {\n    const key = this.getDecryptKey();\n\n    // Map byte array block to cipher\n    // state and add initial round key.\n    let s0 = readU32(input, ipos +  0) ^ key[0];\n    let s1 = readU32(input, ipos +  4) ^ key[1];\n    let s2 = readU32(input, ipos +  8) ^ key[2];\n    let s3 = readU32(input, ipos + 12) ^ key[3];\n\n    // Nr - 1 full rounds\n    let r = this.rounds >>> 1;\n    let p = 0;\n    let t0, t1, t2, t3;\n\n    for (;;) {\n      t0 = TD0[(s0 >>> 24) & 0xff]\n         ^ TD1[(s3 >>> 16) & 0xff]\n         ^ TD2[(s2 >>>  8) & 0xff]\n         ^ TD3[(s1 >>>  0) & 0xff]\n         ^ key[p + 4];\n\n      t1 = TD0[(s1 >>> 24) & 0xff]\n         ^ TD1[(s0 >>> 16) & 0xff]\n         ^ TD2[(s3 >>>  8) & 0xff]\n         ^ TD3[(s2 >>>  0) & 0xff]\n         ^ key[p + 5];\n\n      t2 = TD0[(s2 >>> 24) & 0xff]\n         ^ TD1[(s1 >>> 16) & 0xff]\n         ^ TD2[(s0 >>>  8) & 0xff]\n         ^ TD3[(s3 >>>  0) & 0xff]\n         ^ key[p + 6];\n\n      t3 = TD0[(s3 >>> 24) & 0xff]\n         ^ TD1[(s2 >>> 16) & 0xff]\n         ^ TD2[(s1 >>>  8) & 0xff]\n         ^ TD3[(s0 >>>  0) & 0xff]\n         ^ key[p + 7];\n\n      p += 8;\n      r -= 1;\n\n      if (r === 0)\n        break;\n\n      s0 = TD0[(t0 >>> 24) & 0xff]\n         ^ TD1[(t3 >>> 16) & 0xff]\n         ^ TD2[(t2 >>>  8) & 0xff]\n         ^ TD3[(t1 >>>  0) & 0xff]\n         ^ key[p + 0];\n\n      s1 = TD0[(t1 >>> 24) & 0xff]\n         ^ TD1[(t0 >>> 16) & 0xff]\n         ^ TD2[(t3 >>>  8) & 0xff]\n         ^ TD3[(t2 >>>  0) & 0xff]\n         ^ key[p + 1];\n\n      s2 = TD0[(t2 >>> 24) & 0xff]\n         ^ TD1[(t1 >>> 16) & 0xff]\n         ^ TD2[(t0 >>>  8) & 0xff]\n         ^ TD3[(t3 >>>  0) & 0xff]\n         ^ key[p + 2];\n\n      s3 = TD0[(t3 >>> 24) & 0xff]\n         ^ TD1[(t2 >>> 16) & 0xff]\n         ^ TD2[(t1 >>>  8) & 0xff]\n         ^ TD3[(t0 >>>  0) & 0xff]\n         ^ key[p + 3];\n    }\n\n    // Apply last round and map cipher\n    // state to byte array block.\n    s0 = (TD4[(t0 >>> 24) & 0xff] << 24)\n       ^ (TD4[(t3 >>> 16) & 0xff] << 16)\n       ^ (TD4[(t2 >>>  8) & 0xff] <<  8)\n       ^ (TD4[(t1 >>>  0) & 0xff] <<  0)\n       ^ key[p + 0];\n\n    s1 = (TD4[(t1 >>> 24) & 0xff] << 24)\n       ^ (TD4[(t0 >>> 16) & 0xff] << 16)\n       ^ (TD4[(t3 >>>  8) & 0xff] <<  8)\n       ^ (TD4[(t2 >>>  0) & 0xff] <<  0)\n       ^ key[p + 1];\n\n    s2 = (TD4[(t2 >>> 24) & 0xff] << 24)\n       ^ (TD4[(t1 >>> 16) & 0xff] << 16)\n       ^ (TD4[(t0 >>>  8) & 0xff] <<  8)\n       ^ (TD4[(t3 >>>  0) & 0xff] <<  0)\n       ^ key[p + 2];\n\n    s3 = (TD4[(t3 >>> 24) & 0xff] << 24)\n       ^ (TD4[(t2 >>> 16) & 0xff] << 16)\n       ^ (TD4[(t1 >>>  8) & 0xff] <<  8)\n       ^ (TD4[(t0 >>>  0) & 0xff] <<  0)\n       ^ key[p + 3];\n\n    writeU32(output, s0, opos + 0);\n    writeU32(output, s1, opos + 4);\n    writeU32(output, s2, opos + 8);\n    writeU32(output, s3, opos + 12);\n\n    return this;\n  }\n\n  destroy() {\n    if (this.key) {\n      for (let i = 0; i < this.key.length; i++)\n        this.key[i] = 0;\n    }\n\n    if (this.encKey) {\n      for (let i = 0; i < 60; i++)\n        this.encKey[i] = 0;\n    }\n\n    if (this.decKey) {\n      for (let i = 0; i < 60; i++)\n        this.decKey[i] = 0;\n    }\n\n    this.key = null;\n    this.encKey = null;\n    this.decKey = null;\n\n    return this;\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction getRounds(bits) {\n  switch (bits) {\n    case 128:\n      return 10;\n    case 192:\n      return 12;\n    case 256:\n      return 14;\n    default:\n      throw new Error('Bad key size.');\n  }\n}\n\nfunction readU32(data, off) {\n  return (data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num >>> 24;\n  dst[off++] = num >>> 16;\n  dst[off++] = num >>> 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = AES;\n","/*!\n * hmac-drbg.js - hmac-drbg for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/hmac-drbg');\n","/*!\n * asn1.js - asn1 parsing for bcrypto\n * Copyright (c) 2020, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst assert = require('assert');\nconst BN = require('../bn');\n\n/*\n * ASN1\n */\n\nfunction readSize(data, pos, strict) {\n  assert(Buffer.isBuffer(data));\n  assert((pos >>> 0) === pos);\n  assert(typeof strict === 'boolean');\n\n  if (pos >= data.length)\n    throw new Error('Invalid size.');\n\n  const field = data[pos];\n  const bytes = field & 0x7f;\n\n  pos += 1;\n\n  // Definite form.\n  if ((field & 0x80) === 0) {\n    // Short form.\n    return [bytes, pos];\n  }\n\n  // Indefinite form.\n  if (strict && bytes === 0)\n    throw new Error('Indefinite length.');\n\n  // Long form.\n  let size = 0;\n\n  for (let i = 0; i < bytes; i++) {\n    assert(pos < data.length);\n\n    const ch = data[pos];\n\n    pos += 1;\n\n    if (size >= (1 << 24))\n      throw new Error('Length too large.');\n\n    size *= 0x100;\n    size += ch;\n\n    if (strict && size === 0)\n      throw new Error('Unexpected leading zeroes.');\n  }\n\n  if (strict && size < 0x80)\n    throw new Error('Non-minimal length.');\n\n  return [size, pos];\n}\n\nfunction readSeq(data, pos, strict = true) {\n  assert(Buffer.isBuffer(data));\n  assert((pos >>> 0) === pos);\n  assert(typeof strict === 'boolean');\n\n  if (pos >= data.length || data[pos] !== 0x30)\n    throw new Error('Invalid sequence tag.');\n\n  pos += 1;\n\n  let size;\n  [size, pos] = readSize(data, pos, strict);\n\n  if (strict && pos + size !== data.length)\n    throw new Error('Trailing bytes.');\n\n  return pos;\n}\n\nfunction readInt(data, pos, strict = true) {\n  assert(Buffer.isBuffer(data));\n  assert((pos >>> 0) === pos);\n  assert(typeof strict === 'boolean');\n\n  if (pos >= data.length || data[pos] !== 0x02)\n    throw new Error('Invalid integer tag.');\n\n  pos += 1;\n\n  let size;\n  [size, pos] = readSize(data, pos, strict);\n\n  if (pos + size > data.length)\n    throw new Error('Integer body out of bounds.');\n\n  if (strict) {\n    // Zero length integer.\n    if (size === 0)\n      throw new Error('Zero length integer.');\n\n    // No negatives.\n    if (data[pos] & 0x80)\n      throw new Error('Integers must be positive.');\n\n    // Allow zero only if it prefixes a high bit.\n    if (size > 1) {\n      if (data[pos] === 0x00 && (data[pos + 1] & 0x80) === 0x00)\n        throw new Error('Unexpected leading zeroes.');\n    }\n  }\n\n  // Eat leading zeroes.\n  while (size > 0 && data[pos] === 0x00) {\n    pos += 1;\n    size -= 1;\n  }\n\n  // No reason to have an integer larger than this.\n  if (size > 2048)\n    throw new Error('Invalid integer size.');\n\n  const num = BN.decode(data.slice(pos, pos + size));\n\n  pos += size;\n\n  return [num, pos];\n}\n\nfunction readVersion(data, pos, version, strict = true) {\n  assert(Buffer.isBuffer(data));\n  assert((pos >>> 0) === pos);\n  assert((version & 0xff) === version);\n  assert(typeof strict === 'boolean');\n\n  let num;\n  [num, pos] = readInt(data, pos, strict);\n\n  if (num.cmpn(version) !== 0)\n    throw new Error('Invalid version.');\n\n  return pos;\n}\n\nfunction sizeSize(size) {\n  assert((size >>> 0) === size);\n\n  if (size <= 0x7f) // [size]\n    return 1;\n\n  if (size <= 0xff) // 0x81 [size]\n    return 2;\n\n  assert(size <= 0xffff);\n\n  return 3; // 0x82 [size-hi] [size-lo]\n}\n\nfunction sizeSeq(size) {\n  return 1 + sizeSize(size) + size;\n}\n\nfunction sizeInt(num) {\n  assert(num instanceof BN);\n\n  // 0x02 [size] [0x00?] [int]\n  const bits = num.bitLength();\n\n  let size = (bits + 7) >>> 3;\n\n  if (bits > 0 && (bits & 7) === 0)\n    size += num.testn(bits - 1);\n\n  if (bits === 0)\n    size = 1;\n\n  return 1 + sizeSize(size) + size;\n}\n\nfunction sizeVersion(version) {\n  assert((version & 0xff) === version);\n  return 3;\n}\n\nfunction writeSize(data, pos, size) {\n  assert(Buffer.isBuffer(data));\n  assert((pos >>> 0) === pos);\n  assert((size >>> 0) === size);\n\n  if (size <= 0x7f)  {\n    // [size]\n    data[pos++] = size;\n  } else if (size <= 0xff) {\n    // 0x81 [size]\n    data[pos++] = 0x81;\n    data[pos++] = size;\n  } else {\n    // 0x82 [size-hi] [size-lo]\n    assert(size <= 0xffff);\n    data[pos++] = 0x82;\n    data[pos++] = size >> 8;\n    data[pos++] = size & 0xff;\n  }\n\n  assert(pos <= data.length);\n\n  return pos;\n}\n\nfunction writeSeq(data, pos, size) {\n  assert(Buffer.isBuffer(data));\n  assert((pos >>> 0) === pos);\n\n  data[pos++] = 0x30;\n\n  return writeSize(data, pos, size);\n}\n\nfunction writeInt(data, pos, num) {\n  assert(Buffer.isBuffer(data));\n  assert((pos >>> 0) === pos);\n  assert(num instanceof BN);\n\n  // 0x02 [size] [0x00?] [int]\n  const bits = num.bitLength();\n\n  let size = (bits + 7) >>> 3;\n  let pad = 0;\n\n  if (bits > 0 && (bits & 7) === 0)\n    pad = num.testn(bits - 1);\n\n  if (bits === 0)\n    size = 1;\n\n  data[pos++] = 0x02;\n\n  pos = writeSize(data, pos, pad + size);\n\n  if (pad)\n    data[pos++] = 0x00;\n\n  if (bits !== 0)\n    num.encode().copy(data, pos);\n  else\n    data[pos] = 0x00;\n\n  pos += size;\n\n  assert(pos <= data.length);\n\n  return pos;\n}\n\nfunction writeVersion(data, pos, version) {\n  assert(Buffer.isBuffer(data));\n  assert((pos >>> 0) === pos);\n  assert((version & 0xff) === version);\n  assert(pos + 3 <= data.length);\n\n  data[pos++] = 0x02;\n  data[pos++] = 0x01;\n  data[pos++] = version;\n\n  return pos;\n}\n\n/*\n * Expose\n */\n\nexports.readSize = readSize;\nexports.readSeq = readSeq;\nexports.readInt = readInt;\nexports.readVersion = readVersion;\nexports.sizeSize = sizeSize;\nexports.sizeSeq = sizeSeq;\nexports.sizeInt = sizeInt;\nexports.sizeVersion = sizeVersion;\nexports.writeSize = writeSize;\nexports.writeSeq = writeSeq;\nexports.writeInt = writeInt;\nexports.writeVersion = writeVersion;\n","/*!\n * batch-rng.js - batch rng for bcrypto\n * Copyright (c) 2019-2020, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on ElementsProject/secp256k1-zkp:\n *   Copyright (c) 2013, Pieter Wuille.\n *   https://github.com/ElementsProject/secp256k1-zkp\n *\n * Resources:\n *   https://github.com/ElementsProject/secp256k1-zkp/blob/11af701/src/modules/schnorrsig/main_impl.h#L166\n *   https://github.com/ElementsProject/secp256k1-zkp/blob/11af701/src/scalar_4x64_impl.h#L972\n *   https://github.com/ElementsProject/secp256k1-zkp/blob/11af701/src/scalar_8x32_impl.h#L747\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst BN = require('../bn');\nconst ChaCha20 = require('../chacha20');\nconst SHA256 = require('../sha256');\n\n/**\n * BatchRNG\n */\n\nclass BatchRNG {\n  constructor(curve, encode = key => key) {\n    this.curve = curve;\n    this.encode = encode;\n    this.hash = new SHA256();\n    this.chacha = new ChaCha20();\n    this.key = Buffer.alloc(32, 0x00);\n    this.iv = Buffer.alloc(8, 0x00);\n    this.cache = [new BN(1), new BN(1)];\n  }\n\n  init(batch) {\n    assert(Array.isArray(batch));\n\n    this.hash.init();\n\n    for (const [msg, sig, key] of batch) {\n      this.hash.update(SHA256.digest(msg));\n      this.hash.update(sig);\n      this.hash.update(this.encode(key));\n    }\n\n    this.key = this.hash.final();\n    this.cache[0] = new BN(1);\n    this.cache[1] = new BN(1);\n\n    return this;\n  }\n\n  encrypt(counter) {\n    const size = this.curve.scalarSize * 2;\n    const data = Buffer.alloc(size, 0x00);\n    const left = data.slice(0, this.curve.scalarSize);\n    const right = data.slice(this.curve.scalarSize);\n\n    this.chacha.init(this.key, this.iv, counter);\n    this.chacha.encrypt(data);\n\n    return [\n      this.curve.decodeScalar(left),\n      this.curve.decodeScalar(right)\n    ];\n  }\n\n  refresh(counter) {\n    let overflow = 0;\n\n    for (;;) {\n      // First word is always zero.\n      this.iv[4] = overflow;\n      this.iv[5] = overflow >>> 8;\n      this.iv[6] = overflow >>> 16;\n      this.iv[7] = overflow >>> 24;\n\n      overflow += 1;\n\n      const [s1, s2] = this.encrypt(counter);\n\n      if (s1.isZero() || s1.cmp(this.curve.n) >= 0)\n        continue;\n\n      if (s2.isZero() || s2.cmp(this.curve.n) >= 0)\n        continue;\n\n      this.cache[0] = s1;\n      this.cache[1] = s2;\n\n      break;\n    }\n  }\n\n  generate(index) {\n    assert((index >>> 0) === index);\n\n    if (index & 1)\n      this.refresh(index >>> 1);\n\n    return this.cache[index & 1];\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = BatchRNG;\n","/*!\n * shake.js - SHAKE implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SHA-3\n *   https://keccak.team/specifications.html\n *   https://csrc.nist.gov/projects/hash-functions/sha-3-project/sha-3-standardization\n *   http://dx.doi.org/10.6028/NIST.FIPS.202\n */\n\n'use strict';\n\nconst Keccak = require('./keccak');\n\n/**\n * SHAKE\n */\n\nclass SHAKE extends Keccak {\n  /**\n   * Create a SHAKE Context.\n   * @constructor\n   */\n\n  constructor() {\n    super();\n  }\n\n  final(len) {\n    return super.final(0x1f, len);\n  }\n\n  static hash() {\n    return new SHAKE();\n  }\n\n  static hmac(bits, len) {\n    return super.hmac(bits, 0x1f, len);\n  }\n\n  static digest(data, bits, len) {\n    return super.digest(data, bits, 0x1f, len);\n  }\n\n  static root(left, right, bits, len) {\n    return super.root(left, right, bits, 0x1f, len);\n  }\n\n  static multi(x, y, z, bits, len) {\n    return super.multi(x, y, z, bits, 0x1f, len);\n  }\n\n  static mac(data, key, bits, len) {\n    return super.mac(data, key, bits, 0x1f, len);\n  }\n}\n\n/*\n * Static\n */\n\nSHAKE.native = Keccak.native;\nSHAKE.id = 'SHAKE256';\nSHAKE.size = 32;\nSHAKE.bits = 256;\nSHAKE.blockSize = 136;\nSHAKE.zero = Buffer.alloc(32, 0x00);\nSHAKE.ctx = new SHAKE();\n\n/*\n * Expose\n */\n\nmodule.exports = SHAKE;\n","/*!\n * bufio.js - buffer utilities for javascript\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst custom = require('./custom');\nconst encoding = require('./encoding');\nconst enforce = require('./enforce');\nconst EncodingError = require('./error');\nconst BufferReader = require('./reader');\nconst BufferWriter = require('./writer');\nconst StaticWriter = require('./staticwriter');\nconst Struct = require('./struct');\n\nexports.custom = custom;\nexports.encoding = encoding;\nexports.EncodingError = EncodingError;\nexports.BufferReader = BufferReader;\nexports.BufferWriter = BufferWriter;\nexports.StaticWriter = StaticWriter;\nexports.Struct = Struct;\n\nexports.read = function read(data, zeroCopy) {\n  return new BufferReader(data, zeroCopy);\n};\n\nexports.write = function write(size) {\n  return size != null\n    ? new StaticWriter(size)\n    : new BufferWriter();\n};\n\nexports.pool = function pool(size) {\n  return StaticWriter.pool(size);\n};\n\nfunction _read(func, size) {\n  return function(data, off) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    enforce((off >>> 0) === off, 'off', 'integer');\n\n    if (off + size > data.length)\n      throw new EncodingError(off, 'Out of bounds read');\n\n    return func(data, off);\n  };\n}\n\nfunction _readn(func) {\n  return function(data, off, len) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    enforce((off >>> 0) === off, 'off', 'integer');\n    enforce((len >>> 0) === len, 'len', 'integer');\n\n    if (off + len > data.length)\n      throw new EncodingError(off, 'Out of bounds read');\n\n    return func(data, off, len);\n  };\n}\n\nfunction _readvar(func) {\n  return function(data, off) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    enforce((off >>> 0) === off, 'off', 'integer');\n    return func(data, off);\n  };\n}\n\nfunction _write(func, size) {\n  return function(data, num, off) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    enforce((off >>> 0) === off, 'off', 'integer');\n\n    if (off + size > data.length)\n      throw new EncodingError(off, 'Out of bounds write');\n\n    return func(data, num, off);\n  };\n}\n\nfunction _writen(func) {\n  return function(data, num, off, len) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    enforce((off >>> 0) === off, 'off', 'integer');\n    enforce((len >>> 0) === len, 'len', 'integer');\n\n    if (off + len > data.length)\n      throw new EncodingError(off, 'Out of bounds write');\n\n    return func(data, num, off, len);\n  };\n}\n\nfunction _writecb(func, size) {\n  return function(data, num, off) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    enforce((off >>> 0) === off, 'off', 'integer');\n\n    if (off + size(num) > data.length)\n      throw new EncodingError(off, 'Out of bounds write');\n\n    return func(data, num, off);\n  };\n}\n\nexports.readU = _readn(encoding.readU);\nexports.readU64 = _read(encoding.readU64, 8);\nexports.readU56 = _read(encoding.readU56, 7);\nexports.readU48 = _read(encoding.readU48, 6);\nexports.readU40 = _read(encoding.readU40, 5);\nexports.readU32 = _read(encoding.readU32, 4);\nexports.readU24 = _read(encoding.readU24, 3);\nexports.readU16 = _read(encoding.readU16, 2);\nexports.readU8 = _read(encoding.readU8, 1);\n\nexports.readUBE = _readn(encoding.readUBE);\nexports.readU64BE = _read(encoding.readU64BE, 8);\nexports.readU56BE = _read(encoding.readU56BE, 7);\nexports.readU48BE = _read(encoding.readU48BE, 6);\nexports.readU40BE = _read(encoding.readU40BE, 5);\nexports.readU32BE = _read(encoding.readU32BE, 4);\nexports.readU24BE = _read(encoding.readU24BE, 3);\nexports.readU16BE = _read(encoding.readU16BE, 2);\n\nexports.readI = _readn(encoding.readI);\nexports.readI64 = _read(encoding.readI64, 8);\nexports.readI56 = _read(encoding.readI56, 7);\nexports.readI48 = _read(encoding.readI48, 6);\nexports.readI40 = _read(encoding.readI40, 5);\nexports.readI32 = _read(encoding.readI32, 4);\nexports.readI24 = _read(encoding.readI24, 3);\nexports.readI16 = _read(encoding.readI16, 2);\nexports.readI8 = _read(encoding.readI8, 1);\n\nexports.readIBE = _readn(encoding.readIBE);\nexports.readI64BE = _read(encoding.readI64BE, 8);\nexports.readI56BE = _read(encoding.readI56BE, 7);\nexports.readI48BE = _read(encoding.readI48BE, 6);\nexports.readI40BE = _read(encoding.readI40BE, 5);\nexports.readI32BE = _read(encoding.readI32BE, 4);\nexports.readI24BE = _read(encoding.readI24BE, 3);\nexports.readI16BE = _read(encoding.readI16BE, 2);\n\nexports.readFloat = _read(encoding.readFloat, 4);\nexports.readFloatBE = _read(encoding.readFloatBE, 4);\nexports.readDouble = _read(encoding.readDouble, 8);\nexports.readDoubleBE = _read(encoding.readDoubleBE, 8);\n\nexports.writeU = _writen(encoding.writeU);\nexports.writeU64 = _write(encoding.writeU64, 8);\nexports.writeU56 = _write(encoding.writeU56, 7);\nexports.writeU48 = _write(encoding.writeU48, 6);\nexports.writeU40 = _write(encoding.writeU40, 5);\nexports.writeU32 = _write(encoding.writeU32, 4);\nexports.writeU24 = _write(encoding.writeU24, 3);\nexports.writeU16 = _write(encoding.writeU16, 2);\nexports.writeU8 = _write(encoding.writeU8, 1);\n\nexports.writeUBE = _writen(encoding.writeUBE);\nexports.writeU64BE = _write(encoding.writeU64BE, 8);\nexports.writeU56BE = _write(encoding.writeU56BE, 7);\nexports.writeU48BE = _write(encoding.writeU48BE, 6);\nexports.writeU40BE = _write(encoding.writeU40BE, 5);\nexports.writeU32BE = _write(encoding.writeU32BE, 4);\nexports.writeU24BE = _write(encoding.writeU24BE, 3);\nexports.writeU16BE = _write(encoding.writeU16BE, 2);\n\nexports.writeI = _writen(encoding.writeI);\nexports.writeI64 = _write(encoding.writeI64, 8);\nexports.writeI56 = _write(encoding.writeI56, 7);\nexports.writeI48 = _write(encoding.writeI48, 6);\nexports.writeI40 = _write(encoding.writeI40, 5);\nexports.writeI32 = _write(encoding.writeI32, 4);\nexports.writeI24 = _write(encoding.writeI24, 3);\nexports.writeI16 = _write(encoding.writeI16, 2);\nexports.writeI8 = _write(encoding.writeI8, 1);\n\nexports.writeIBE = _writen(encoding.writeIBE);\nexports.writeI64BE = _write(encoding.writeI64BE, 8);\nexports.writeI56BE = _write(encoding.writeI56BE, 7);\nexports.writeI48BE = _write(encoding.writeI48BE, 6);\nexports.writeI40BE = _write(encoding.writeI40BE, 5);\nexports.writeI32BE = _write(encoding.writeI32BE, 4);\nexports.writeI24BE = _write(encoding.writeI24BE, 3);\nexports.writeI16BE = _write(encoding.writeI16BE, 2);\n\nexports.writeFloat = _write(encoding.writeFloat, 4);\nexports.writeFloatBE = _write(encoding.writeFloatBE, 4);\nexports.writeDouble = _write(encoding.writeDouble, 8);\nexports.writeDoubleBE = _write(encoding.writeDoubleBE, 8);\n\nexports.readVarint = _readvar(encoding.readVarint);\nexports.writeVarint = _writecb(encoding.writeVarint, encoding.sizeVarint);\nexports.sizeVarint = encoding.sizeVarint;\nexports.readVarint2 = _readvar(encoding.readVarint2);\nexports.writeVarint2 = _writecb(encoding.writeVarint2, encoding.sizeVarint2);\nexports.sizeVarint2 = encoding.sizeVarint2;\n\nexports.sliceBytes = encoding.sliceBytes;\nexports.readBytes = encoding.readBytes;\nexports.writeBytes = encoding.writeBytes;\nexports.readString = encoding.readString;\nexports.writeString = encoding.writeString;\n\nexports.realloc = encoding.realloc;\nexports.copy = encoding.copy;\nexports.concat = encoding.concat;\n\nexports.sizeVarBytes = encoding.sizeVarBytes;\nexports.sizeVarlen = encoding.sizeVarlen;\nexports.sizeVarString = encoding.sizeVarString;\n","/*!\n * md5.js - MD5 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/md5');\n","/*!\n * kmac.js - KMAC implementation for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-185.pdf\n *   https://github.com/XKCP/XKCP/blob/8f447eb/lib/high/Keccak/SP800-185/SP800-185.inc\n *   https://github.com/XKCP/XKCP/blob/8f447eb/lib/high/Keccak/SP800-185/SP800-185.c\n *   https://github.com/XKCP/XKCP/blob/8f447eb/tests/UnitTests/testSP800-185.c\n *   https://github.com/emn178/js-sha3/blob/master/src/sha3.js\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst CSHAKE = require('./cshake');\nconst HMAC = require('./internal/hmac');\n\n/*\n * Constants\n */\n\nconst PREFIX = Buffer.from('KMAC', 'binary');\nconst EMPTY = Buffer.alloc(0);\n\n/*\n * KMAC\n */\n\nclass KMAC extends CSHAKE {\n  constructor() {\n    super();\n  }\n\n  init(bits, key, pers) {\n    if (key == null)\n      key = EMPTY;\n\n    assert(Buffer.isBuffer(key));\n\n    super.init(bits, PREFIX, pers);\n    super.bytePad([key], this.rate / 8);\n\n    return this;\n  }\n\n  final(len) {\n    if (len == null) {\n      const size = this.rate / 8;\n      len = 100 - size / 2;\n    }\n\n    super.rightEncode(len * 8);\n\n    return super.final(len);\n  }\n\n  static hash() {\n    return new KMAC();\n  }\n\n  static hmac(bits, key, pers, len) {\n    if (bits == null)\n      bits = 256;\n\n    assert((bits >>> 0) === bits);\n    assert(bits === 128 || bits === 256);\n\n    const rate = 1600 - bits * 2;\n\n    return new HMAC(KMAC, rate / 8, [bits, key, pers], [len]);\n  }\n\n  static digest(data, bits, key, pers, len) {\n    return KMAC.ctx.init(bits, key, pers).update(data).final(len);\n  }\n\n  static root(left, right, bits, key, pers, len) {\n    if (bits == null)\n      bits = 256;\n\n    if (len == null)\n      len = 0;\n\n    if (len === 0) {\n      assert((bits >>> 0) === bits);\n      len = bits >>> 3;\n    }\n\n    assert((len >>> 0) === len);\n    assert(Buffer.isBuffer(left) && left.length === len);\n    assert(Buffer.isBuffer(right) && right.length === len);\n\n    const {ctx} = KMAC;\n\n    ctx.init(bits, key, pers);\n    ctx.update(left);\n    ctx.update(right);\n\n    return ctx.final(len);\n  }\n\n  static multi(x, y, z, bits, key, pers, len) {\n    const {ctx} = KMAC;\n\n    ctx.init(bits, key, pers);\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final(len);\n  }\n\n  static mac(data, salt, bits, key, pers, len) {\n    return KMAC.hmac(bits, key, pers, len).init(salt).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nKMAC.native = CSHAKE.native;\nKMAC.id = 'KMAC256';\nKMAC.size = 32;\nKMAC.bits = 256;\nKMAC.blockSize = 136;\nKMAC.zero = Buffer.alloc(32, 0x00);\nKMAC.ctx = new KMAC();\n\n/*\n * Expose\n */\n\nmodule.exports = KMAC;\n","/*!\n * sha384.js - SHA384 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/sha384');\n","export enum VM_NETWORK {\n  BTC = \"BTC\",\n  LIQUID = \"LIQUID\",\n}\n\nexport enum VM_NETWORK_VERSION {\n  SEGWIT = \"00\",\n  TAPSCRIPT = \"01\",\n}\n\nexport type VM = {\n  network: VM_NETWORK;\n  ver: VM_NETWORK_VERSION;\n};\n","import { Opcode } from \"./model/Opcode\";\nimport { commonOpcodes } from \"./common\";\n\nexport const opcodesBitcoinSegwit: Opcode[] = [\n  ...commonOpcodes\n]; //\tx1 x2\tTrue / false\tReturns 1 if the inputs are exactly equal, 0 otherwise.];\n","import { hash160v2, sha256v2 } from \"./core/crypto\";\nimport { WizDataList } from \"./model\";\nimport { TxData, TxInput, TxOutput } from \"./model/TxData\";\nimport { VM, VM_NETWORK, VM_NETWORK_VERSION } from \"./opcodes/model/VM\";\nimport { ScriptWiz } from \"./scriptWiz\";\nimport { tapRoot } from \"./taproot\";\n\nexport { ScriptWiz, WizDataList, VM, VM_NETWORK, VM_NETWORK_VERSION, TxData, TxInput, TxOutput, tapRoot, sha256v2, hash160v2 };\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                var Wil;\n\t                var Wih;\n\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    Wil = gamma0l + Wi7l;\n\t                    Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + gamma1l;\n\t                    Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + Wi16l;\n\t                    Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","import WizData from \"@script-wiz/wiz-data\";\nimport { sha256 } from \"../core/crypto\";\nimport { toHexString } from \"../utils\";\nimport { commonOpcodes } from \"../opcodes/common\";\nimport { Taproot } from \"./model\";\nimport * as segwit_addr from \"../bech32/segwit_addr\";\nimport bcrypto from \"bcrypto\";\nimport { VM, VM_NETWORK } from \"../opcodes/model/VM\";\n\n// type TreeHelper = {\n//   data: string;\n//   h: string;\n// };\n\nexport const tweakAdd = (pubkey: WizData, tweak: WizData): WizData => {\n  if (pubkey.bytes.length !== 32) {\n    throw \"Pubkey length must be equal 32 byte\";\n  }\n\n  const tweaked = WizData.fromHex(bcrypto.schnorr.publicKeyTweakAdd(Buffer.from(pubkey.hex, \"hex\"), Buffer.from(tweak.hex, \"hex\")).toString(\"hex\"));\n\n  return publicKeyTweakCheck(pubkey, tweak, tweaked);\n};\n\nexport const publicKeyTweakCheck = (pubkey: WizData, tweak: WizData, expect: WizData): WizData => {\n  if (pubkey.bytes.length !== 32) {\n    throw \"Pubkey length must be equal 32 byte\";\n  }\n\n  const isNegate = bcrypto.schnorr.publicKeyTweakCheck(Buffer.from(pubkey.hex, \"hex\"), Buffer.from(tweak.hex, \"hex\"), Buffer.from(expect.hex, \"hex\"), true);\n\n  if (isNegate) {\n    return WizData.fromHex(\"03\" + expect.hex);\n  }\n\n  return WizData.fromHex(\"02\" + expect.hex);\n};\n\nexport const publicKeyTweakCheckWithPrefix = (pubkey: WizData, tweak: WizData, expect: WizData): boolean => {\n  if (pubkey.bytes.length !== 32) {\n    throw \"Pubkey length must be equal 32 byte\";\n  }\n\n  const expectKeyWithoutPrefix = expect.bytes.slice(1, expect.bytes.length);\n  const expectKeyWithoutPrefixData = WizData.fromBytes(expectKeyWithoutPrefix);\n\n  return bcrypto.schnorr.publicKeyTweakCheck(\n    Buffer.from(pubkey.hex, \"hex\"),\n    Buffer.from(tweak.hex, \"hex\"),\n    Buffer.from(expectKeyWithoutPrefixData.hex, \"hex\"),\n    expect.bytes[0] === 3\n  );\n};\n\nexport const tagHash = (tag: string, data: WizData) => {\n  let hashedTag = sha256(WizData.fromText(tag)).toString();\n\n  hashedTag = hashedTag.concat(hashedTag);\n\n  hashedTag = hashedTag.concat(toHexString(data.bytes));\n\n  return sha256(WizData.fromHex(hashedTag)).toString();\n};\n\nexport const treeHelper = (scripts: WizData[], version: string): string => {\n  let treeHelperResultHex = \"\";\n  const leaftag = version === \"c4\" ? \"TapLeaf/elements\" : \"TapLeaf\";\n  // const tapBranchtag = version === \"c4\" ? \"TapBranch/elements\" : \"TapBranch\";\n\n  scripts.forEach((script) => {\n    const scriptLength = WizData.fromNumber(script.hex.length / 2).hex;\n\n    const scriptData = version + scriptLength + script.hex;\n\n    const h = tagHash(leaftag, WizData.fromHex(scriptData));\n\n    treeHelperResultHex += h;\n  });\n\n  // multi leaf\n  // const tapBranchResult: string = tagHash(tapBranchtag, WizData.fromHex(treeHelperResultHex));\n\n  return treeHelperResultHex;\n};\n\n// export const getVersionTaggedPubKey = (pubkey: WizData): WizData => {\n//   const logic = pubkey.bytes[0] & 1;\n\n//   console.log(\"logic\", logic);\n//   if (logic === 1) {\n//     return WizData.fromHex(\"00\");\n//   }\n\n//   return WizData.fromNumber(1);\n// };\n\nexport const tapRoot = (pubKey: WizData, scripts: WizData[], vm: VM): Taproot => {\n  const version = vm.network === VM_NETWORK.LIQUID ? \"c4\" : \"c0\";\n  const tag = vm.network === VM_NETWORK.LIQUID ? \"TapTweak/elements\" : \"TapTweak\";\n\n  const h: string = treeHelper(scripts, version);\n\n  console.log(\"tap leaf result\", h);\n\n  const tweak = tagHash(tag, WizData.fromHex(pubKey.hex + h));\n\n  console.log(\"tap tweak result\", tweak);\n\n  const tweaked = tweakAdd(pubKey, WizData.fromHex(tweak));\n\n  console.log(\"tap tweaked result:\", tweaked.hex);\n\n  const finalTweaked = tweaked.hex.substr(2);\n\n  console.log(\"final tweaked\", finalTweaked);\n\n  const op1Hex = commonOpcodes.find((co) => co.word === \"OP_1\")?.hex.substr(2);\n\n  const bech32 = segwit_addr.encode(\"bc\", 1, WizData.fromHex(finalTweaked).bytes) || \"\";\n\n  const scriptPubKey = WizData.fromHex(op1Hex + WizData.fromNumber(finalTweaked.length / 2).hex + finalTweaked);\n\n  console.log(\"script pub key\", scriptPubKey.hex);\n\n  return { scriptPubKey: scriptPubKey, tweak: tweaked, bech32 };\n};\n","import WizData from \"@script-wiz/wiz-data\";\nimport BN from \"bn.js\";\n\nexport const convert64 = (wizData: WizData): WizData => {\n  const isNegate = wizData.bin.charAt(0) === \"1\";\n\n  let input = new BN(wizData.bin, 2);\n\n  if (!isNegate) {\n    const input64 = input.toString(2, 64);\n\n    return WizData.fromBin(input64);\n  } else {\n    if (wizData.number) input = new BN(wizData.number || 0);\n\n    const negateValue = input.abs().neg();\n\n    const twosNegateValue = negateValue.toTwos(64);\n\n    const twosNegateValue64 = twosNegateValue.toString(2, 64);\n\n    return WizData.fromBin(twosNegateValue64);\n  }\n};\n\nexport const numToLE64 = (wizData: WizData): WizData => {\n  const inputByteLength = wizData.bytes.length;\n\n  if (inputByteLength > 8) throw \"Input byte length must be maximum 8 byte\";\n\n  return convert64(wizData);\n};\n\nexport const LE64ToNum = (wizData: WizData): WizData => {\n  const inputBytes = wizData.bytes;\n\n  if (inputBytes.length !== 8) throw \"Input byte length must be equal 8 byte\";\n\n  const inputBN = new BN(wizData.bin, 2);\n\n  const inputBnByteLength = inputBN.byteLength();\n\n  if (wizData.bin.charAt(0) === \"1\") {\n    const binputPos = inputBN.fromTwos(64).abs();\n\n    const inputWizData = WizData.fromBin(binputPos.toString(2, binputPos.byteLength() * 8));\n\n    if (inputWizData.number) {\n      return WizData.fromNumber(inputWizData.number * -1);\n    }\n\n    return inputWizData;\n  }\n\n  return WizData.fromBin(inputBN.toString(2, inputBnByteLength * 8));\n};\n\nexport const LE32toLE64 = (wizData: WizData): WizData => {\n  if (wizData.bytes.length !== 4) throw \"Input byte length must be equal 4 byte\";\n\n  return numToLE64(wizData);\n};\n\n// LE64TONum alternative\n// export const LE64ToNum = (wizData: WizData): WizData => {\n//   const inputBytes = wizData.bytes;\n\n//   if (inputBytes.length !== 8) throw \"Input byte length must be equal 8 byte\";\n\n//   let result = Array.from(inputBytes);\n\n//   let i = 7;\n\n//   while (i >= 0) {\n//     if (inputBytes[i] > 0) {\n//       break;\n//     }\n\n//     result = result.slice(0, -1);\n//     i--;\n//   }\n\n//   const finalResult = new Uint8Array(result);\n\n//   return WizData.fromBytes(finalResult);\n// };\n","import { Opcode } from \"./model/Opcode\";\n\nexport const commonOpcodes: Opcode[] = [\n  /*\n   * Constants\n   * * 0 - 96\n   */\n  {\n    word: \"OP_0\",\n    opcode: 0,\n    hex: \"0x00\",\n    output: 0,\n    description: \"(empty value)\tAn empty array of bytes is pushed onto the stack. (This is not a no-op: an item is added to the stack.)\",\n  }, // Nothing.\t(empty value)\tAn empty array of bytes is pushed onto the stack. (This is not a no-op: an item is added to the stack.)\n  {\n    word: \"OP_FALSE\",\n    opcode: 0,\n    hex: \"0x00\",\n    output: 0,\n    description: \"(empty value)\tAn empty array of bytes is pushed onto the stack. (This is not a no-op: an item is added to the stack.)\",\n  }, // Nothing.\t(empty value)\tAn empty array of bytes is pushed onto the stack. (This is not a no-op: an item is added to the stack.)\n  // { word: \"N/A\", opcode: 1 - 75, hex: \"0x01-0x4b\", output: 0 }, // (special)\tdata\tThe next opcode bytes is data to be pushed onto the stack\n  // { word: \"OP_PUSHDATA1\", opcode: 76, hex: \"0x4c\" }, //\t(special)\tdata\tThe next byte contains the number of bytes to be pushed onto the stack.\n  // { word: \"OP_PUSHDATA2\", opcode: 77, hex: \"0x4d\" }, //\t(special)\tdata\tThe next two bytes contain the number of bytes to be pushed onto the stack in little endian order.\n  // { word: \"OP_PUSHDATA4\", opcode: 78, hex: \"0x4e\" }, //\t(special)\tdata\tThe next four bytes contain the number of bytes to be pushed onto the stack in little endian order.\n  // { word: \"OP_1NEGATE\", opcode: 79, hex: \"0x4f\" }, //\tNothing.\t-1\tThe number -1 is pushed onto the stack.\n  { word: \"OP_1\", opcode: 81, hex: \"0x51\", output: 1, description: \"The number 1 is pushed onto the stack.\" }, // Nothing.\t1\tThe number 1 is pushed onto the stack.\n  { word: \"OP_TRUE\", opcode: 81, hex: \"0x51\", output: 1, description: \"The number 1 is pushed onto the stack.\" }, // Nothing.\t1\tThe number 1 is pushed onto the stack.\n  { word: \"OP_2\", opcode: 82, hex: \"0x52\", output: 2, description: \"The number 2 is pushed onto the stack.\" }, // Nothing.\t2\tThe number 2 is pushed onto the stack.\n  { word: \"OP_3\", opcode: 83, hex: \"0x53\", output: 3, description: \"The number 3 is pushed onto the stack.\" }, // Nothing.\t3\tThe number 3 is pushed onto the stack.\n  { word: \"OP_4\", opcode: 84, hex: \"0x54\", output: 4, description: \"The number 4 is pushed onto the stack.\" }, // Nothing.\t4\tThe number 4 is pushed onto the stack.\n  { word: \"OP_5\", opcode: 85, hex: \"0x55\", output: 5, description: \"The number 5 is pushed onto the stack.\" }, // Nothing.\t5\tThe number 5 is pushed onto the stack.\n  { word: \"OP_6\", opcode: 86, hex: \"0x56\", output: 6, description: \"The number 6 is pushed onto the stack.\" }, // Nothing.\t6\tThe number 6 is pushed onto the stack.\n  { word: \"OP_7\", opcode: 87, hex: \"0x57\", output: 7, description: \"The number 7 is pushed onto the stack.\" }, // Nothing.\t7\tThe number 7 is pushed onto the stack.\n  { word: \"OP_8\", opcode: 88, hex: \"0x58\", output: 8, description: \"The number 8 is pushed onto the stack.\" }, // Nothing.\t8\tThe number 8 is pushed onto the stack.\n  { word: \"OP_9\", opcode: 89, hex: \"0x59\", output: 9, description: \"The number 9 is pushed onto the stack.\" }, // Nothing.\t9\tThe number 9 is pushed onto the stack.\n  { word: \"OP_10\", opcode: 90, hex: \"0x5a\", output: 10, description: \"The number 10 is pushed onto the stack.\" }, // Nothing.\t10\tThe number 10 is pushed onto the stack.\n  { word: \"OP_11\", opcode: 91, hex: \"0x5b\", output: 11, description: \"The number 11 is pushed onto the stack.\" }, // Nothing.\t11\tThe number 11 is pushed onto the stack.\n  { word: \"OP_12\", opcode: 92, hex: \"0x5c\", output: 12, description: \"The number 12 is pushed onto the stack.\" }, // Nothing.\t12\tThe number 12 is pushed onto the stack.\n  { word: \"OP_13\", opcode: 93, hex: \"0x5d\", output: 13, description: \"The number 13 is pushed onto the stack.\" }, // Nothing.\t13\tThe number 13 is pushed onto the stack.\n  { word: \"OP_14\", opcode: 94, hex: \"0x5e\", output: 14, description: \"The number 14 is pushed onto the stack.\" }, // Nothing.\t14\tThe number 14 is pushed onto the stack.\n  { word: \"OP_15\", opcode: 95, hex: \"0x5f\", output: 15, description: \"The number 15 is pushed onto the stack.\" }, // Nothing.\t15\tThe number 15 is pushed onto the stack.\n  { word: \"OP_16\", opcode: 96, hex: \"0x60\", output: 16, description: \"The number 16 is pushed onto the stack.\" }, // Nothing.\t16\tThe number 16 is pushed onto the stack.\n\n  /*\n   * Flow control\n   * * 97 - 106\n   */\n  { word: \"OP_NOP\", opcode: 97, hex: \"0x61\", description: \"Nothing\tDoes nothing.\" }, //\tNothing\tNothing\tDoes nothing.\n  {\n    word: \"OP_IF\",\n    opcode: 99,\n    hex: \"0x63\",\n    description: \"if [statements] [else [statements]]* endif\tIf the top stack value is not False, the statements are executed. The top stack value is removed.\",\n  }, //\t<expression> if [statements] [else [statements]]* endif\tIf the top stack value is not False, the statements are executed. The top stack value is removed.\n  {\n    word: \"OP_NOTIF\",\n    opcode: 100,\n    hex: \"0x64\",\n    description: \"notif [statements] [else [statements]]* endif\tIf the top stack value is False, the statements are executed. The top stack value is removed.\",\n  }, //\t<expression> notif [statements] [else [statements]]* endif\tIf the top stack value is False, the statements are executed. The top stack value is removed.\n  {\n    word: \"OP_ELSE\",\n    opcode: 103,\n    hex: \"0x67\",\n    description:\n      \" if [statements] [else [statements]]* endif\tIf the preceding OP_IF or OP_NOTIF or OP_ELSE was not executed then these statements are and if the preceding OP_IF or OP_NOTIF or OP_ELSE was executed then these statements are not.\",\n  }, //\t<expression> if [statements] [else [statements]]* endif\tIf the preceding OP_IF or OP_NOTIF or OP_ELSE was not executed then these statements are and if the preceding OP_IF or OP_NOTIF or OP_ELSE was executed then these statements are not.\n  {\n    word: \"OP_ENDIF\",\n    opcode: 104,\n    hex: \"0x68\",\n    description:\n      \"if [statements] [else [statements]]* endif\tEnds an if/else block. All blocks must end, or the transaction is invalid. An OP_ENDIF without OP_IF earlier is also invalid.\",\n  }, //\t<expression> if [statements] [else [statements]]* endif\tEnds an if/else block. All blocks must end, or the transaction is invalid. An OP_ENDIF without OP_IF earlier is also invalid.\n  { word: \"OP_VERIFY\", opcode: 105, hex: \"0x69\", description: \"\tMarks transaction as invalid if top stack value is not true. The top stack value is removed.\" }, //\tTrue / false\tNothing / fail\tMarks transaction as invalid if top stack value is not true. The top stack value is removed.\n  {\n    word: \"OP_RETURN\",\n    opcode: 106,\n    hex: \"0x6a\",\n    description:\n      \"Nothing\tfail\tMarks transaction as invalid. Since bitcoin 0.9, a standard way of attaching extra data to transactions is to add a zero-value output with a scriptPubKey consisting of OP_RETURN followed by data. Such outputs are provably unspendable and specially discarded from storage in the UTXO set, reducing their cost to the network. Since 0.12, standard relay rules allow a single output with OP_RETURN, that contains any sequence of push statements (or OP_RESERVED[1]) after the OP_RETURN provided the total scriptPubKey length is at most 83 bytes.\",\n  },\n\n  /*\n   * Stack\n   * * 107 - 125\n   */\n  { word: \"OP_TOALTSTACK\", opcode: 107, hex: \"0x6b\", description: \"Puts the input onto the top of the alt stack. Removes it from the main stack.\" }, //\tx1\t(alt)x1\tPuts the input onto the top of the alt stack. Removes it from the main stack.\n  { word: \"OP_FROMALTSTACK\", opcode: 108, hex: \"0x6c\", description: \"Puts the input onto the top of the main stack. Removes it from the alt stack.\" }, //\t(alt)x1\tx1\tPuts the input onto the top of the main stack. Removes it from the alt stack.\n  { word: \"OP_2DROP\", opcode: 109, hex: \"0x6d\", description: \"Nothing\tRemoves the top two stack items.\" }, //\tx1 x2\tNothing\tRemoves the top two stack items.\n  { word: \"OP_2DUP\", opcode: 110, hex: \"0x6e\", description: \"Duplicates the top two stack items\" }, //\tx1 x2\tx1 x2 x1 x2\tDuplicates the top two stack items.\n  { word: \"OP_3DUP\", opcode: 111, hex: \"0x6f\", description: \"Duplicates the top three stack items.\" }, //\tx1 x2 x3\tx1 x2 x3 x1 x2 x3\tDuplicates the top three stack items.\n  { word: \"OP_2OVER\", opcode: 112, hex: \"0x70\", description: \"Copies the pair of items two spaces back in the stack to the front.\" }, //\tx1 x2 x3 x4\tx1 x2 x3 x4 x1 x2\tCopies the pair of items two spaces back in the stack to the front.\n  { word: \"OP_2ROT\", opcode: 113, hex: \"0x71\", description: \"The fifth and sixth items back are moved to the top of the stack.\" }, //\tx1 x2 x3 x4 x5 x6\tx3 x4 x5 x6 x1 x2\tThe fifth and sixth items back are moved to the top of the stack.\n  { word: \"OP_2SWAP\", opcode: 114, hex: \"0x72\", description: \"Swaps the top two pairs of stack.\" }, //\tx1 x2 x3 x4\tx3 x4 x1 x2\tSwaps the top two pairs of stack.\n  { word: \"OP_IFDUP\", opcode: 115, hex: \"0x73\", description: \"If the top stack value is not 0, duplicate it.\" }, //\tx\tx / x x\tIf the top stack value is not 0, duplicate it.\n  { word: \"OP_DEPTH\", opcode: 116, hex: \"0x74\", description: \"Puts the number of stack items onto the stack.\" }, //\tNothing\t<Stack size>\tPuts the number of stack items onto the stack.\n  { word: \"OP_DROP\", opcode: 117, hex: \"0x75\", description: \"Removes the top stack item.\" }, //\tx\tNothing\tRemoves the top stack item.\n  { word: \"OP_DUP\", opcode: 118, hex: \"0x76\", description: \"Duplicates the top stack item.\" }, //\tx\tx x\tDuplicates the top stack item.\n  { word: \"OP_NIP\", opcode: 119, hex: \"0x77\", description: \"Removes the second-to-top stack item.\" }, //\tx1 x2\tx2\tRemoves the second-to-top stack item.\n  { word: \"OP_OVER\", opcode: 120, hex: \"0x78\", description: \"Copies the second-to-top stack item to the top.\" }, //\tx1 x2\tx1 x2 x1\tCopies the second-to-top stack item to the top.\n  { word: \"OP_PICK\", opcode: 121, hex: \"0x79\", description: \"The item n back in the stack is copied to the top.\" }, //\txn ... x2 x1 x0 <n>\txn ... x2 x1 x0 xn\tThe item n back in the stack is copied to the top.\n  { word: \"OP_ROLL\", opcode: 122, hex: \"0x7a\", description: \"The item n back in the stack is moved to the top.\" }, //\txn ... x2 x1 x0 <n>\t... x2 x1 x0 xn\tThe item n back in the stack is moved to the top.\n  { word: \"OP_ROT\", opcode: 123, hex: \"0x7b\", description: \"The 3rd item down the stack is moved to the top.\" }, //\tx1 x2 x3\tx2 x3 x1\tThe 3rd item down the stack is moved to the top.\n  { word: \"OP_SWAP\", opcode: 124, hex: \"0x7c\", description: \"The top two items on the stack are swapped.\" }, //\tx1 x2\tx2 x1\tThe top two items on the stack are swapped.\n  { word: \"OP_TUCK\", opcode: 125, hex: \"0x7d\", description: \"The item at the top of the stack is copied and inserted before the second-to-top item.\" }, //\tx1 x2\tx2 x1 x2\tThe item at the top of the stack is copied and inserted before the second-to-top item.\n\n  /*\n   * Splice\n   * 126 - 130\n   */\n  { word: \"OP_SIZE\", opcode: 130, hex: \"0x82\", description: \"Pushes the string length of the top element of the stack (without popping it).\" }, //\tin\tin size\tPushes the string length of the top element of the stack (without popping it).\n\n  /*\n   * Bitwise logic\n   * 131 - 136\n   */\n  { word: \"OP_EQUAL\", opcode: 135, hex: \"0x87\", description: \"Returns 1 if the inputs are exactly equal, 0 otherwise.\" }, //\tx1 x2\tTrue / false\tReturns 1 if the inputs are exactly equal, 0 otherwise.\n  { word: \"OP_EQUALVERIFY\", opcode: 136, hex: \"0x88\", description: \"Same as OP_EQUAL, but runs OP_VERIFY afterward.\" }, //\tx1 x2\tNothing / fail\tSame as OP_EQUAL, but runs OP_VERIFY afterward.\n\n  /*\n   * Arithmetic\n   * 139 - 165\n   */\n  { word: \"OP_1ADD\", opcode: 139, hex: \"0x8b\", description: \"1 is added to the input.\" }, //\tin\tout\t1 is added to the input.\n  { word: \"OP_1SUB\", opcode: 140, hex: \"0x8c\", description: \"1 is subtracted from the input.\" }, //\tin\tout\t1 is subtracted from the input.\n  // { word: \"OP_2MUL\", opcode: 141, hex: \"0x8d\" }, //\tin\tout\tThe input is multiplied by 2. disabled.\n  // { word: \"OP_2DIV\", opcode: 142, hex: \"0x8e\" }, //\tin\tout\tThe input is divided by 2. disabled.\n  { word: \"OP_NEGATE\", opcode: 143, hex: \"0x8f\", description: \"The sign of the input is flipped.\" }, //\tin\tout\tThe sign of the input is flipped.\n  { word: \"OP_ABS\", opcode: 144, hex: \"0x90\", description: \"The input is made positive.\" }, //\tin\tout\tThe input is made positive.\n  { word: \"OP_NOT\", opcode: 145, hex: \"0x91\", description: \"If the input is 0 or 1, it is flipped. Otherwise the output will be 0.\" }, //\tin\tout\tIf the input is 0 or 1, it is flipped. Otherwise the output will be 0.\n  { word: \"OP_0NOTEQUAL\", opcode: 146, hex: \"0x92\", description: \"Returns 0 if the input is 0. 1 otherwise.\" }, //\tin\tout\tReturns 0 if the input is 0. 1 otherwise.\n  { word: \"OP_ADD\", opcode: 147, hex: \"0x93\", description: \"a is added to b.\" }, //\ta b\tout\ta is added to b.\n  { word: \"OP_SUB\", opcode: 148, hex: \"0x94\", description: \"b is subtracted from a.\" }, //\ta b\tout\tb is subtracted from a.\n  // { word: \"OP_MUL\", opcode: 149, hex: \"0x95\" }, //\ta b\tout\ta is multiplied by b. disabled.\n  // { word: \"OP_DIV\", opcode: 150, hex: \"0x96\" }, //\ta b\tout\ta is divided by b. disabled.\n  // { word: \"OP_MOD\", opcode: 151, hex: \"0x97\" }, //\ta b\tout\tReturns the remainder after dividing a by b. disabled.\n  { word: \"OP_BOOLAND\", opcode: 154, hex: \"0x9a\", description: \"\tIf both a and b are not 0, the output is 1. Otherwise 0.\" }, //\ta b\tout\tIf both a and b are not 0, the output is 1. Otherwise 0.\n  { word: \"OP_BOOLOR\", opcode: 155, hex: \"0x9b\", description: \"If a or b is not 0, the output is 1. Otherwise 0.\" }, //\ta b\tout\tIf a or b is not 0, the output is 1. Otherwise 0.\n  { word: \"OP_NUMEQUAL\", opcode: 156, hex: \"0x9c\", description: \"Returns 1 if the numbers are equal, 0 otherwise.\" }, //\ta b\tout\tReturns 1 if the numbers are equal, 0 otherwise.\n  { word: \"OP_NUMEQUALVERIFY\", opcode: 157, hex: \"0x9d\", description: \"Same as OP_NUMEQUAL, but runs OP_VERIFY afterward.\" }, //\ta b\tNothing / fail\tSame as OP_NUMEQUAL, but runs OP_VERIFY afterward.\n  { word: \"OP_NUMNOTEQUAL\", opcode: 158, hex: \"0x9e\", description: \"Returns 1 if the numbers are not equal, 0 otherwise.\" }, //\ta b\tout\tReturns 1 if the numbers are not equal, 0 otherwise.\n  { word: \"OP_LESSTHAN\", opcode: 159, hex: \"0x9f\", description: \"Returns 1 if a is less than b, 0 otherwise.\" }, //\ta b\tout\tReturns 1 if a is less than b, 0 otherwise.\n  { word: \"OP_GREATERTHAN\", opcode: 160, hex: \"0xa0\", description: \"Returns 1 if a is greater than b, 0 otherwise.\" }, //\ta b\tout\tReturns 1 if a is greater than b, 0 otherwise.\n  { word: \"OP_LESSTHANOREQUAL\", opcode: 161, hex: \"0xa1\", description: \"Returns 1 if a is less than or equal to b, 0 otherwise.\" }, //\ta b\tout\tReturns 1 if a is less than or equal to b, 0 otherwise.\n  { word: \"OP_GREATERTHANOREQUAL\", opcode: 162, hex: \"0xa2\", description: \"\tReturns 1 if a is greater than or equal to b, 0 otherwise.\" }, //\ta b\tout\tReturns 1 if a is greater than or equal to b, 0 otherwise.\n  { word: \"OP_MIN\", opcode: 163, hex: \"0xa3\", description: \"Returns the smaller of a and b.\" }, //\ta b\tout\tReturns the smaller of a and b.\n  { word: \"OP_MAX\", opcode: 164, hex: \"0xa4\", description: \"Returns the larger of a and b.\" }, //\ta b\tout\tReturns the larger of a and b.\n  { word: \"OP_WITHIN\", opcode: 165, hex: \"0xa5\", description: \"Returns 1 if x is within the specified range (left-inclusive), 0 otherwise.\" }, //\tx min max\tout\tReturns 1 if x is within the specified range (left-inclusive), 0 otherwise.\n\n  /*\n   * Crypto\n   * 166 - 175\n   */\n  { word: \"OP_RIPEMD160\", opcode: 166, hex: \"0xa6\", description: \"The input is hashed using RIPEMD-160.\" }, //\tin\thash\tThe input is hashed using RIPEMD-160.\n  { word: \"OP_SHA1\", opcode: 167, hex: \"0xa7\", description: \"The input is hashed using SHA-1.\" }, //\tin\thash\tThe input is hashed using SHA-1.\n  { word: \"OP_SHA256\", opcode: 168, hex: \"0xa8\", description: \"The input is hashed using SHA-256.\" }, //\tin\thash\tThe input is hashed using SHA-256.\n  { word: \"OP_HASH160\", opcode: 169, hex: \"0xa9\", description: \"The input is hashed twice: first with SHA-256 and then with RIPEMD-160.\" }, //\tin\thash\tThe input is hashed twice: first with SHA-256 and then with RIPEMD-160.\n  { word: \"OP_HASH256\", opcode: 170, hex: \"0xaa\", description: \"The input is hashed two times with SHA-256.\" }, //\tin\thash\tThe input is hashed two times with SHA-256.\n  // { word: \"OP_CODESEPARATOR\", opcode: 171, hex: \"0xab\" }, //\tNothing\tNothing\tAll of the signature checking words will only match signatures to the data after the most recently-executed OP_CODESEPARATOR.\n  { word: \"OP_CHECKSIG\", opcode: 172, hex: \"0xac\" }, //\tsig pubkey\tTrue / false\tThe entire transaction's outputs, inputs, and script (from the most recently-executed OP_CODESEPARATOR to the end) are hashed. The signature used by OP_CHECKSIG must be a valid signature for this hash and public key. If it is, 1 is returned, 0 otherwise.\n  { word: \"OP_CHECKSIGVERIFY\", opcode: 173, hex: \"0xad\" }, //\tsig pubkey\tNothing / fail\tSame as OP_CHECKSIG, but OP_VERIFY is executed afterward.\n  // { word: \"OP_CHECKMULTISIG\", opcode: 174, hex: \"0xae\" }, //\tx sig1 sig2 ... <number of signatures> pub1 pub2 <number of public keys>\tTrue / False\tCompares the first signature against each public key until it finds an ECDSA match. Starting with the subsequent public key, it compares the second signature against each remaining public key until it finds an ECDSA match. The process is repeated until all signatures have been checked or not enough public keys remain to produce a successful result. All signatures need to match a public key. Because public keys are not checked again if they fail any signature comparison, signatures must be placed in the scriptSig using the same order as their corresponding public keys were placed in the scriptPubKey or redeemScript. If all signatures are valid, 1 is returned, 0 otherwise. Due to a bug, one extra unused value is removed from the stack.\n  // { word: \"OP_CHECKMULTISIGVERIFY\", opcode: 175, hex: \"0xaf\" }, //\tx sig1 sig2 ... <number of signatures> pub1 pub2 ... <number of public keys>\tNothing / fail\tSame as OP_CHECKMULTISIG, but OP_VERIFY is executed afterward.\n\n  /*\n   * Locktime\n   * 177 - 178\n   */\n  // (previously OP_NOP2)\n  { word: \"OP_CHECKLOCKTIMEVERIFY\", opcode: 177, hex: \"0xb1\" }, //\tx\tx / fail\tMarks transaction as invalid if the top stack item is greater than the transaction's nLockTime field, otherwise script evaluation continues as though an OP_NOP was executed. Transaction is also invalid if 1. the stack is empty; or 2. the top stack item is negative; or 3. the top stack item is greater than or equal to 500000000 while the transaction's nLockTime field is less than 500000000, or vice versa; or 4. the input's nSequence field is equal to 0xffffffff. The precise semantics are described in BIP 0065.\n  // (previously OP_NOP3)\n  { word: \"OP_CHECKSEQUENCEVERIFY\", opcode: 178, hex: \"0xb2\" }, //\tx\tx / fail\tMarks transaction as invalid if the relative lock time of the input (enforced by BIP 0068 with nSequence) is not equal to or longer than the value of the top stack item. The precise semantics are described in BIP 0112.\n\n  /*\n   * Reserved words\n   * 80, 98, 101, 102, 137, 138, 176, 179-185\n   */\n  // { word: \"OP_RESERVED\", opcode: 80, hex: \"0x50\" }, //\tTransaction is invalid unless occuring in an unexecuted OP_IF branch\n  // { word: \"OP_VER\", opcode: 98, hex: \"0x62\" }, //\tTransaction is invalid unless occuring in an unexecuted OP_IF branch\n  // { word: \"OP_VERIF\", opcode: 101, hex: \"0x65\" }, //\tTransaction is invalid even when occuring in an unexecuted OP_IF branch\n  // { word: \"OP_VERNOTIF\", opcode: 102, hex: \"0x66\" }, //\tTransaction is invalid even when occuring in an unexecuted OP_IF branch\n  // { word: \"OP_RESERVED1\", opcode: 137, hex: \"0x89\" }, //\tTransaction is invalid unless occuring in an unexecuted OP_IF branch\n  // { word: \"OP_RESERVED2\", opcode: 138, hex: \"0x8a\" }, //\tTransaction is invalid unless occuring in an unexecuted OP_IF branch\n  // { word: \"OP_NOP1\", opcode: 176, hex: \"0xb0\" }, //\tThe word is ignored. Does not mark transaction as invalid.\n  // { word: \"OP_NOP4\", opcode: 179, hex: \"0xb3\" }, //\tThe word is ignored. Does not mark transaction as invalid.\n  // { word: \"OP_NOP5\", opcode: 180, hex: \"0xb4\" }, //\tThe word is ignored. Does not mark transaction as invalid.\n  // { word: \"OP_NOP6\", opcode: 181, hex: \"0xb5\" }, //\tThe word is ignored. Does not mark transaction as invalid.\n  // { word: \"OP_NOP7\", opcode: 182, hex: \"0xb6\" }, //\tThe word is ignored. Does not mark transaction as invalid.\n  // { word: \"OP_NOP8\", opcode: 183, hex: \"0xb7\" }, //\tThe word is ignored. Does not mark transaction as invalid.\n  // { word: \"OP_NOP9\", opcode: 184, hex: \"0xb8\" }, //\tThe word is ignored. Does not mark transaction as invalid.\n  // { word: \"OP_NOP10\", opcode: 185, hex: \"0xb9\" }, //\tThe word is ignored. Does not mark transaction as invalid.\n\n  /*\n   * Pseudo-words\n   * 253 - 255\n   */\n  // { word: \"OP_PUBKEYHASH\", opcode: 253, hex: \"0xfd\" }, //\tRepresents a public key hashed with OP_HASH160.\n  // { word: \"OP_PUBKEY\", opcode: 254, hex: \"0xfe\" }, //\tRepresents a public key compatible with OP_CHECKSIG.\n  // { word: \"OP_INVALIDOPCODE\", opcode: 255, hex: \"0xff\" }, //\tMatches any opcode that is not yet assigned.\n];\n","/*!\n * bcrypto.js - crypto for bcrypto\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nexports.AEAD = require('./aead');\nexports.aes = require('./aes');\nexports.ARC4 = require('./arc4');\nexports.bcrypt = require('./bcrypt');\nexports.BLAKE2b = require('./blake2b');\nexports.BLAKE2b160 = require('./blake2b160');\nexports.BLAKE2b256 = require('./blake2b256');\nexports.BLAKE2b384 = require('./blake2b384');\nexports.BLAKE2b512 = require('./blake2b512');\nexports.BLAKE2s = require('./blake2s');\nexports.BLAKE2s128 = require('./blake2s128');\nexports.BLAKE2s160 = require('./blake2s160');\nexports.BLAKE2s224 = require('./blake2s224');\nexports.BLAKE2s256 = require('./blake2s256');\nexports.BN = require('./bn');\nexports.box = require('./box');\nexports.ChaCha20 = require('./chacha20');\nexports.cipher = require('./cipher');\nexports.cleanse = require('./cleanse');\nexports.CSHAKE = require('./cshake');\nexports.CSHAKE128 = require('./cshake128');\nexports.CSHAKE256 = require('./cshake256');\nexports.CtrDRBG = require('./ctr-drbg');\nexports.dsa = require('./dsa');\nexports.dsaies = require('./dsaies');\nexports.eb2k = require('./eb2k');\nexports.ecies = require('./ecies');\nexports.ed25519 = require('./ed25519');\nexports.ed448 = require('./ed448');\nexports.encoding = require('./encoding');\nexports.GOST94 = require('./gost94');\nexports.Hash160 = require('./hash160');\nexports.Hash256 = require('./hash256');\nexports.HashDRBG = require('./hash-drbg');\nexports.hkdf = require('./hkdf');\nexports.HmacDRBG = require('./hmac-drbg');\nexports.Keccak = require('./keccak');\nexports.Keccak224 = require('./keccak224');\nexports.Keccak256 = require('./keccak256');\nexports.Keccak384 = require('./keccak384');\nexports.Keccak512 = require('./keccak512');\nexports.KMAC = require('./kmac');\nexports.KMAC128 = require('./kmac128');\nexports.KMAC256 = require('./kmac256');\nexports.MD2 = require('./md2');\nexports.MD4 = require('./md4');\nexports.MD5 = require('./md5');\nexports.MD5SHA1 = require('./md5sha1');\nexports.merkle = require('./merkle');\nexports.mrkl = require('./mrkl');\nexports.murmur3 = require('./murmur3');\nexports.p192 = require('./p192');\nexports.p224 = require('./p224');\nexports.p256 = require('./p256');\nexports.p384 = require('./p384');\nexports.p521 = require('./p521');\nexports.pbkdf2 = require('./pbkdf2');\nexports.pgp = require('./pgp');\nexports.Poly1305 = require('./poly1305');\nexports.random = require('./random');\nexports.RIPEMD160 = require('./ripemd160');\nexports.rsa = require('./rsa');\nexports.rsaies = require('./rsaies');\nexports.safe = require('./safe');\nexports.Salsa20 = require('./salsa20');\nexports.schnorr = require('./schnorr');\nexports.scrypt = require('./scrypt');\nexports.secp256k1 = require('./secp256k1');\nexports.secretbox = require('./secretbox');\nexports.ssh = require('./ssh');\nexports.SHA1 = require('./sha1');\nexports.SHA224 = require('./sha224');\nexports.SHA256 = require('./sha256');\nexports.SHA384 = require('./sha384');\nexports.SHA512 = require('./sha512');\nexports.SHA3 = require('./sha3');\nexports.SHA3_224 = require('./sha3-224');\nexports.SHA3_256 = require('./sha3-256');\nexports.SHA3_384 = require('./sha3-384');\nexports.SHA3_512 = require('./sha3-512');\nexports.SHAKE = require('./shake');\nexports.SHAKE128 = require('./shake128');\nexports.SHAKE256 = require('./shake256');\nexports.siphash = require('./siphash');\nexports.Whirlpool = require('./whirlpool');\nexports.x25519 = require('./x25519');\nexports.x448 = require('./x448');\n\nexports.version = '5.4.0';\nexports.native = exports.SHA256.native;\n","/*!\n * chacha20.js - chacha20 for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources\n *   https://en.wikipedia.org/wiki/Chacha20\n *   https://tools.ietf.org/html/rfc7539#section-2\n *   https://cr.yp.to/chacha.html\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * Constants\n */\n\nconst BIG_ENDIAN = new Int8Array(new Int16Array([1]).buffer)[0] === 0;\n\n/**\n * ChaCha20\n */\n\nclass ChaCha20 {\n  /**\n   * Create a ChaCha20 context.\n   * @constructor\n   */\n\n  constructor() {\n    this.state = new Uint32Array(16);\n    this.stream = new Uint32Array(16);\n    this.bytes = new Uint8Array(this.stream.buffer);\n    this.pos = -1;\n\n    if (BIG_ENDIAN)\n      this.bytes = Buffer.alloc(64);\n  }\n\n  /**\n   * Initialize chacha20 with a key, nonce, and counter.\n   * @param {Buffer} key\n   * @param {Buffer} nonce\n   * @param {Number} counter\n   */\n\n  init(key, nonce, counter) {\n    if (counter == null)\n      counter = 0;\n\n    assert(Buffer.isBuffer(key));\n    assert(Buffer.isBuffer(nonce));\n    assert(Number.isSafeInteger(counter));\n\n    if (key.length !== 16 && key.length !== 32)\n      throw new RangeError('Invalid key size.');\n\n    if (nonce.length >= 24) {\n      key = ChaCha20.derive(key, nonce.slice(0, 16));\n      nonce = nonce.slice(16);\n    }\n\n    this.state[0] = 0x61707865;\n    this.state[1] = key.length < 32 ? 0x3120646e : 0x3320646e;\n    this.state[2] = key.length < 32 ? 0x79622d36 : 0x79622d32;\n    this.state[3] = 0x6b206574;\n    this.state[4] = readU32(key, 0);\n    this.state[5] = readU32(key, 4);\n    this.state[6] = readU32(key, 8);\n    this.state[7] = readU32(key, 12);\n    this.state[8] = readU32(key, 16 % key.length);\n    this.state[9] = readU32(key, 20 % key.length);\n    this.state[10] = readU32(key, 24 % key.length);\n    this.state[11] = readU32(key, 28 % key.length);\n    this.state[12] = counter >>> 0;\n\n    if (nonce.length === 8) {\n      this.state[13] = (counter / 0x100000000) >>> 0;\n      this.state[14] = readU32(nonce, 0);\n      this.state[15] = readU32(nonce, 4);\n    } else if (nonce.length === 12) {\n      this.state[13] = readU32(nonce, 0);\n      this.state[14] = readU32(nonce, 4);\n      this.state[15] = readU32(nonce, 8);\n    } else if (nonce.length === 16) {\n      this.state[12] = readU32(nonce, 0);\n      this.state[13] = readU32(nonce, 4);\n      this.state[14] = readU32(nonce, 8);\n      this.state[15] = readU32(nonce, 12);\n    } else {\n      throw new RangeError('Invalid nonce size.');\n    }\n\n    this.pos = 0;\n\n    return this;\n  }\n\n  /**\n   * Encrypt/decrypt data.\n   * @param {Buffer} data - Will be mutated.\n   * @returns {Buffer}\n   */\n\n  encrypt(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (this.pos === -1)\n      throw new Error('Context is not initialized.');\n\n    for (let i = 0; i < data.length; i++) {\n      if ((this.pos & 63) === 0) {\n        this._block();\n        this.pos = 0;\n      }\n\n      data[i] ^= this.bytes[this.pos++];\n    }\n\n    return data;\n  }\n\n  /**\n   * Stir the stream.\n   */\n\n  _block() {\n    for (let i = 0; i < 16; i++)\n      this.stream[i] = this.state[i];\n\n    for (let i = 0; i < 10; i++) {\n      qround(this.stream, 0, 4, 8, 12);\n      qround(this.stream, 1, 5, 9, 13);\n      qround(this.stream, 2, 6, 10, 14);\n      qround(this.stream, 3, 7, 11, 15);\n      qround(this.stream, 0, 5, 10, 15);\n      qround(this.stream, 1, 6, 11, 12);\n      qround(this.stream, 2, 7, 8, 13);\n      qround(this.stream, 3, 4, 9, 14);\n    }\n\n    for (let i = 0; i < 16; i++)\n      this.stream[i] += this.state[i];\n\n    if (BIG_ENDIAN) {\n      for (let i = 0; i < 16; i++)\n        writeU32(this.bytes, this.stream[i], i * 4);\n    }\n\n    this.state[12] += 1;\n\n    if (this.state[12] === 0)\n      this.state[13] += 1;\n  }\n\n  /**\n   * Destroy context.\n   */\n\n  destroy() {\n    for (let i = 0; i < 16; i++) {\n      this.state[i] = 0;\n      this.stream[i] = 0;\n    }\n\n    if (BIG_ENDIAN) {\n      for (let i = 0; i < 64; i++)\n        this.bytes[i] = 0;\n    }\n\n    this.pos = -1;\n\n    return this;\n  }\n\n  /**\n   * Derive key with XChaCha20.\n   * @param {Buffer} key\n   * @param {Buffer} nonce\n   * @returns {Buffer}\n   */\n\n  static derive(key, nonce) {\n    assert(Buffer.isBuffer(key));\n    assert(Buffer.isBuffer(nonce));\n\n    if (key.length !== 16 && key.length !== 32)\n      throw new RangeError('Invalid key size.');\n\n    if (nonce.length !== 16)\n      throw new RangeError('Invalid nonce size.');\n\n    const state = new Uint32Array(16);\n\n    state[0] = 0x61707865;\n    state[1] = key.length < 32 ? 0x3120646e : 0x3320646e;\n    state[2] = key.length < 32 ? 0x79622d36 : 0x79622d32;\n    state[3] = 0x6b206574;\n    state[4] = readU32(key, 0);\n    state[5] = readU32(key, 4);\n    state[6] = readU32(key, 8);\n    state[7] = readU32(key, 12);\n    state[8] = readU32(key, 16 % key.length);\n    state[9] = readU32(key, 20 % key.length);\n    state[10] = readU32(key, 24 % key.length);\n    state[11] = readU32(key, 28 % key.length);\n    state[12] = readU32(nonce, 0);\n    state[13] = readU32(nonce, 4);\n    state[14] = readU32(nonce, 8);\n    state[15] = readU32(nonce, 12);\n\n    for (let i = 0; i < 10; i++) {\n      qround(state, 0, 4, 8, 12);\n      qround(state, 1, 5, 9, 13);\n      qround(state, 2, 6, 10, 14);\n      qround(state, 3, 7, 11, 15);\n      qround(state, 0, 5, 10, 15);\n      qround(state, 1, 6, 11, 12);\n      qround(state, 2, 7, 8, 13);\n      qround(state, 3, 4, 9, 14);\n    }\n\n    const out = Buffer.alloc(32);\n\n    writeU32(out, state[0], 0);\n    writeU32(out, state[1], 4);\n    writeU32(out, state[2], 8);\n    writeU32(out, state[3], 12);\n    writeU32(out, state[12], 16);\n    writeU32(out, state[13], 20);\n    writeU32(out, state[14], 24);\n    writeU32(out, state[15], 28);\n\n    return out;\n  }\n}\n\n/*\n * Static\n */\n\nChaCha20.native = 0;\n\n/*\n * Helpers\n */\n\nfunction qround(x, a, b, c, d) {\n  x[a] += x[b];\n  x[d] = rotl32(x[d] ^ x[a], 16);\n\n  x[c] += x[d];\n  x[b] = rotl32(x[b] ^ x[c], 12);\n\n  x[a] += x[b];\n  x[d] = rotl32(x[d] ^ x[a], 8);\n\n  x[c] += x[d];\n  x[b] = rotl32(x[b] ^ x[c], 7);\n}\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = ChaCha20;\n","/*!\n * poly1305.js - poly1305 for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on floodyberry/poly1305-donna:\n *   Placed into the public domain by Andrew Moon.\n *   https://github.com/floodyberry/poly1305-donna\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Poly1305\n *   https://cr.yp.to/mac.html\n *   https://tools.ietf.org/html/rfc7539#section-2.5\n *   https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna-16.h\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/**\n * Poly1305\n */\n\nclass Poly1305 {\n  /**\n   * Create a Poly1305 context.\n   * @constructor\n   */\n\n  constructor() {\n    this.r = new Uint16Array(10);\n    this.h = new Uint16Array(10);\n    this.pad = new Uint16Array(8);\n    this.buffer = Buffer.alloc(16);\n    this.fin = -1;\n    this.leftover = 0;\n  }\n\n  /**\n   * Initialize poly1305 with a key.\n   * @param {Buffer} key\n   */\n\n  init(key) {\n    assert(Buffer.isBuffer(key) && key.length >= 32);\n\n    // r &= 0xffffffc0ffffffc0ffffffc0fffffff\n    const t0 = readU16(key, 0);\n    const t1 = readU16(key, 2);\n    const t2 = readU16(key, 4);\n    const t3 = readU16(key, 6);\n    const t4 = readU16(key, 8);\n    const t5 = readU16(key, 10);\n    const t6 = readU16(key, 12);\n    const t7 = readU16(key, 14);\n\n    this.r[0] = t0 & 0x1fff;\n    this.r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n    this.r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n    this.r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n    this.r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n    this.r[5] = (t4 >>> 1) & 0x1ffe;\n    this.r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n    this.r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n    this.r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n    this.r[9] = (t7 >>> 5) & 0x007f;\n\n    // h = 0\n    for (let i = 0; i < 10; i++)\n      this.h[i] = 0;\n\n    // Save pad for later.\n    for (let i = 0; i < 8; i++)\n      this.pad[i] = readU16(key, 16 + (2 * i));\n\n    this.fin = 0;\n    this.leftover = 0;\n\n    return this;\n  }\n\n  /**\n   * Process 16 byte blocks.\n   * @private\n   * @param {Buffer} data - Blocks.\n   * @param {Number} bytes - Size.\n   * @param {Number} m - Offset pointer.\n   */\n\n  _blocks(data, bytes, m) {\n    const hibit = this.fin ? 0 : (1 << 11); // 1 << 128\n    const d = new Uint32Array(10);\n\n    while (bytes >= 16) {\n      // h += m[i]\n      const t0 = readU16(data, m + 0);\n      const t1 = readU16(data, m + 2);\n      const t2 = readU16(data, m + 4);\n      const t3 = readU16(data, m + 6);\n      const t4 = readU16(data, m + 8);\n      const t5 = readU16(data, m + 10);\n      const t6 = readU16(data, m + 12);\n      const t7 = readU16(data, m + 14);\n\n      this.h[0] += t0 & 0x1fff;\n      this.h[1] += ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n      this.h[2] += ((t1 >>> 10) | (t2 << 6)) & 0x1fff;\n      this.h[3] += ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n      this.h[4] += ((t3 >>> 4) | (t4 << 12)) & 0x1fff;\n      this.h[5] += ((t4 >>> 1)) & 0x1fff;\n      this.h[6] += ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n      this.h[7] += ((t5 >>> 11) | (t6 << 5)) & 0x1fff;\n      this.h[8] += ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n      this.h[9] += ((t7 >>> 5)) | hibit;\n\n      // h *= r, (partial) h %= p\n      let c = 0;\n\n      for (let i = 0; i < 10; i++) {\n        d[i] = c;\n\n        for (let j = 0; j < 10; j++) {\n          let a = this.h[j];\n\n          if (j <= i)\n            a *= this.r[i - j];\n          else\n            a *= 5 * this.r[i + 10 - j];\n\n          d[i] += a;\n\n          // Sum(h[i] * r[i] * 5) will overflow\n          // slightly above 6 products with an\n          // unclamped r, so carry at 5.\n          if (j === 4) {\n            c = d[i] >>> 13;\n            d[i] &= 0x1fff;\n          }\n        }\n\n        c += d[i] >>> 13;\n        d[i] &= 0x1fff;\n      }\n\n      c = (c << 2) + c; // c *= 5\n      c += d[0];\n      d[0] = (c & 0x1fff);\n      c = c >>> 13;\n      d[1] += c;\n\n      for (let i = 0; i < 10; i++)\n        this.h[i] = d[i];\n\n      m += 16;\n      bytes -= 16;\n    }\n  }\n\n  /**\n   * Update the MAC with data (will be\n   * processed as 16 byte blocks).\n   * @param {Buffer} data\n   */\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (this.fin === -1)\n      throw new Error('Context is not initialized.');\n\n    let bytes = data.length;\n    let m = 0;\n\n    // Handle leftover.\n    if (this.leftover) {\n      let want = 16 - this.leftover;\n\n      if (want > bytes)\n        want = bytes;\n\n      for (let i = 0; i < want; i++)\n        this.buffer[this.leftover + i] = data[m + i];\n\n      bytes -= want;\n      m += want;\n\n      this.leftover += want;\n\n      if (this.leftover < 16)\n        return this;\n\n      this._blocks(this.buffer, 16, 0);\n      this.leftover = 0;\n    }\n\n    // Process full blocks.\n    if (bytes >= 16) {\n      const want = bytes & ~(16 - 1);\n\n      this._blocks(data, want, m);\n\n      m += want;\n      bytes -= want;\n    }\n\n    // Store leftover.\n    if (bytes) {\n      for (let i = 0; i < bytes; i++)\n        this.buffer[this.leftover + i] = data[m + i];\n      this.leftover += bytes;\n    }\n\n    return this;\n  }\n\n  /**\n   * Finalize and return a 16-byte MAC.\n   * @returns {Buffer}\n   */\n\n  final() {\n    if (this.fin === -1)\n      throw new Error('Context is not initialized.');\n\n    const mac = Buffer.alloc(16);\n    const g = new Uint16Array(10);\n\n    // Process the remaining block.\n    if (this.leftover) {\n      let i = this.leftover;\n\n      this.buffer[i++] = 1;\n\n      for (; i < 16; i++)\n        this.buffer[i] = 0;\n\n      this.fin = 1;\n      this._blocks(this.buffer, 16, 0);\n    }\n\n    // Fully carry h.\n    let c = this.h[1] >>> 13;\n\n    this.h[1] &= 0x1fff;\n\n    for (let i = 2; i < 10; i++) {\n      this.h[i] += c;\n      c = this.h[i] >>> 13;\n      this.h[i] &= 0x1fff;\n    }\n\n    this.h[0] += c * 5;\n    c = this.h[0] >>> 13;\n    this.h[0] &= 0x1fff;\n    this.h[1] += c;\n    c = this.h[1] >>> 13;\n    this.h[1] &= 0x1fff;\n    this.h[2] += c;\n\n    // Compute h + -p.\n    g[0] = this.h[0] + 5;\n    c = g[0] >>> 13;\n    g[0] &= 0x1fff;\n\n    for (let i = 1; i < 10; i++) {\n      g[i] = this.h[i] + c;\n      c = g[i] >>> 13;\n      g[i] &= 0x1fff;\n    }\n\n    // Select h if h < p, or h + -p if h >= p.\n    let mask = (c ^ 1) - 1;\n\n    for (let i = 0; i < 10; i++)\n      g[i] &= mask;\n\n    mask = ~mask;\n\n    for (let i = 0; i < 10; i++)\n      this.h[i] = (this.h[i] & mask) | g[i];\n\n    // h = h % (2^128)\n    this.h[0] = ((this.h[0]) | (this.h[1] << 13)) & 0xffff;\n    this.h[1] = ((this.h[1] >>> 3) | (this.h[2] << 10)) & 0xffff;\n    this.h[2] = ((this.h[2] >>> 6) | (this.h[3] << 7)) & 0xffff;\n    this.h[3] = ((this.h[3] >>> 9) | (this.h[4] << 4)) & 0xffff;\n    this.h[4] = ((this.h[4] >>> 12)\n      | (this.h[5] << 1) | (this.h[6] << 14)) & 0xffff;\n    this.h[5] = ((this.h[6] >>> 2) | (this.h[7] << 11)) & 0xffff;\n    this.h[6] = ((this.h[7] >>> 5) | (this.h[8] << 8)) & 0xffff;\n    this.h[7] = ((this.h[8] >>> 8) | (this.h[9] << 5)) & 0xffff;\n\n    // mac = (h + pad) % (2^128)\n    let f = this.h[0] + this.pad[0];\n\n    this.h[0] = f;\n\n    for (let i = 1; i < 8; i++) {\n      f = this.h[i] + this.pad[i] + (f >>> 16);\n      this.h[i] = f;\n    }\n\n    for (let i = 0; i < 8; i++)\n      writeU16(mac, this.h[i], i * 2);\n\n    // Zero out the state.\n    this.destroy();\n\n    return mac;\n  }\n\n  /**\n   * Destroy the context.\n   */\n\n  destroy() {\n    for (let i = 0; i < 10; i++) {\n      this.r[i] = 0;\n      this.h[i] = 0;\n    }\n\n    for (let i = 0; i < 8; i++)\n      this.pad[i] = 0;\n\n    for (let i = 0; i < 16; i++)\n      this.buffer[i] = 0;\n\n    this.fin = -1;\n    this.leftover = 0;\n  }\n\n  /**\n   * Finalize and verify MAC against tag.\n   * @param {Buffer} tag\n   * @returns {Boolean}\n   */\n\n  verify(tag) {\n    assert(Buffer.isBuffer(tag));\n    assert(tag.length === 16);\n\n    const mac = this.final();\n\n    let z = 0;\n\n    for (let i = 0; i < 16; i++)\n      z |= mac[i] ^ tag[i];\n\n    return ((z - 1) >>> 31) !== 0;\n  }\n}\n\n/*\n * Static\n */\n\nPoly1305.native = 0;\n\n/*\n * Helpers\n */\n\nfunction readU16(data, off) {\n  return data[off++] + data[off] * 0x100;\n}\n\nfunction writeU16(dst, num, off) {\n  dst[off++] = num;\n  dst[off++] = num >>> 8;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Poly1305;\n","/*!\n * modes.js - cipher modes for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation\n */\n\n'use strict';\n\nconst assert = require('../../internal/assert');\nconst GHASH = require('./ghash');\n\n/*\n * Constants\n */\n\nconst EMPTY = Buffer.alloc(0);\n\n// Shifted by four.\nconst polyTable = new Uint32Array([\n  0x00001b, // 8\n  0x000087, // 16\n  0x000425, // 32\n  0x000000,\n  0x000125, // 64\n  0x000000,\n  0x000000,\n  0x000000,\n  0x080043  // 128\n]);\n\n/*\n * Mode\n */\n\nclass Mode {\n  constructor(ctx) {\n    assert(ctx && typeof ctx.encrypt === 'function');\n    assert(typeof ctx.blockSize === 'number');\n\n    this.ctx = ctx;\n  }\n\n  get blockSize() {\n    return this.ctx.blockSize;\n  }\n\n  init(key, iv) {\n    throw new Error('Not implemented.');\n  }\n\n  update(data) {\n    throw new Error('Not implemented.');\n  }\n\n  crypt(output, input) {\n    throw new Error('Not implemented.');\n  }\n\n  final() {\n    throw new Error('Not implemented.');\n  }\n\n  destroy() {\n    throw new Error('Not implemented.');\n  }\n\n  setAutoPadding(padding) {\n    assert(typeof padding === 'boolean');\n\n    this._setAutoPadding(padding);\n\n    return this;\n  }\n\n  setAAD(data) {\n    assert(Buffer.isBuffer(data));\n    this._setAAD(data);\n    return this;\n  }\n\n  setCCM(msgLen, tagLen, aad) {\n    assert((msgLen >>> 0) === msgLen);\n    assert((tagLen >>> 0) === tagLen);\n    assert(aad == null || Buffer.isBuffer(aad));\n\n    this._setCCM(msgLen, tagLen, aad);\n\n    return this;\n  }\n\n  getAuthTag() {\n    return this._getAuthTag();\n  }\n\n  setAuthTag(tag) {\n    assert(Buffer.isBuffer(tag));\n    this._setAuthTag(tag);\n    return this;\n  }\n\n  _setAutoPadding(padding) {\n    throw new Error('Not available.');\n  }\n\n  _setAAD(data) {\n    throw new Error('Cipher is not authenticated.');\n  }\n\n  _setCCM(msgLen, tagLen, aad) {\n    throw new Error('Not available.');\n  }\n\n  _getAuthTag() {\n    throw new Error('Cipher is not authenticated.');\n  }\n\n  _setAuthTag(tag) {\n    throw new Error('Cipher is not authenticated.');\n  }\n}\n\n/**\n * Block Mode\n */\n\nclass Block extends Mode {\n  constructor(ctx, unpad) {\n    super(ctx);\n\n    this.padding = true;\n    this.unpad = unpad;\n    this.block = Buffer.alloc(this.blockSize);\n    this.blockPos = -1;\n    this.last = null;\n    this.lastSize = 0;\n\n    if (unpad)\n      this.last = Buffer.alloc(this.blockSize);\n  }\n\n  init(key, iv) {\n    if (iv == null)\n      iv = EMPTY;\n\n    assert(Buffer.isBuffer(key));\n    assert(Buffer.isBuffer(iv));\n\n    this.ctx.init(key);\n\n    this.blockPos = 0;\n    this.lastSize = 0;\n\n    this._init(key, iv);\n\n    return this;\n  }\n\n  _updateSize(ilen) {\n    if (this.blockPos + ilen < this.blockSize)\n      return 0;\n\n    let olen = 0;\n\n    if (this.unpad)\n      olen += this.lastSize;\n\n    if (this.blockPos > 0) {\n      ilen -= this.blockSize - this.blockPos;\n      olen += this.blockSize;\n    }\n\n    if (ilen >= this.blockSize)\n      olen += ilen - (ilen % this.blockSize);\n\n    assert(olen >= this.blockSize);\n\n    return olen;\n  }\n\n  update(input) {\n    assert(Buffer.isBuffer(input));\n\n    if (this.blockPos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    const olen = this._updateSize(input.length);\n    const output = Buffer.alloc(olen);\n\n    if (this.blockPos + input.length < this.blockSize) {\n      this.blockPos += input.copy(this.block, this.blockPos, 0, input.length);\n      return output;\n    }\n\n    let ilen = input.length;\n    let ipos = 0;\n    let opos = 0;\n\n    if (this.unpad)\n      opos += this.last.copy(output, opos, 0, this.lastSize);\n\n    if (this.blockPos > 0) {\n      const want = this.blockSize - this.blockPos;\n\n      ipos += input.copy(this.block, this.blockPos, ipos, ipos + want);\n      ilen -= want;\n\n      this._update(output, opos, this.block, 0);\n\n      opos += this.blockSize;\n\n      this.blockPos = 0;\n    }\n\n    while (ilen >= this.blockSize) {\n      this._update(output, opos, input, ipos);\n\n      ipos += this.blockSize;\n      ilen -= this.blockSize;\n      opos += this.blockSize;\n    }\n\n    if (ilen > 0)\n      this.blockPos = input.copy(this.block, 0, ipos, ipos + ilen);\n\n    assert(opos === olen);\n\n    if (this.unpad) {\n      this.lastSize = output.copy(this.last, 0, olen - this.blockSize, olen);\n      return output.slice(0, olen - this.blockSize);\n    }\n\n    return output;\n  }\n\n  crypt(output, input) {\n    assert(Buffer.isBuffer(output));\n    assert(Buffer.isBuffer(input));\n    assert(output.length === input.length);\n\n    if (this.blockPos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    if (this.unpad || this.blockPos !== 0)\n      throw new Error('Cannot crypt while buffering.');\n\n    if ((input.length % this.blockSize) !== 0)\n      throw new Error('Input must be a multiple of the block size.');\n\n    const size = this.blockSize;\n\n    let len = input.length;\n    let pos = 0;\n\n    while (len > 0) {\n      this._update(output, pos, input, pos);\n      pos += size;\n      len -= size;\n    }\n\n    return output;\n  }\n\n  final() {\n    if (this.blockPos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    try {\n      return this._final();\n    } finally {\n      this.destroy();\n    }\n  }\n\n  destroy() {\n    this.ctx.destroy();\n\n    this.blockPos = -1;\n    this.lastSize = 0;\n\n    for (let i = 0; i < this.blockSize; i++)\n      this.block[i] = 0;\n\n    if (this.unpad) {\n      for (let i = 0; i < this.blockSize; i++)\n        this.last[i] = 0;\n    }\n\n    this._destroy();\n\n    return this;\n  }\n\n  _init(key, iv) {\n    throw new Error('Not implemented.');\n  }\n\n  _update(output, opos, input, ipos) {\n    throw new Error('Not implemented.');\n  }\n\n  _final() {\n    throw new Error('Not implemented.');\n  }\n\n  _destroy() {\n    throw new Error('Not implemented.');\n  }\n}\n\n/*\n * Stream Mode\n */\n\nclass Stream extends Mode {\n  constructor(ctx) {\n    super(ctx);\n    this.pos = -1;\n  }\n\n  init(key, iv) {\n    if (iv == null)\n      iv = EMPTY;\n\n    assert(Buffer.isBuffer(key));\n    assert(Buffer.isBuffer(iv));\n\n    this.ctx.init(key);\n\n    this.pos = 0;\n\n    this._init(key, iv);\n\n    return this;\n  }\n\n  update(input) {\n    assert(Buffer.isBuffer(input));\n\n    if (this.pos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    const output = Buffer.alloc(input.length);\n\n    this._crypt(output, input);\n\n    return output;\n  }\n\n  crypt(output, input) {\n    assert(Buffer.isBuffer(output));\n    assert(Buffer.isBuffer(input));\n    assert(output.length === input.length);\n\n    if (this.pos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    this._crypt(output, input);\n\n    return output;\n  }\n\n  final() {\n    if (this.pos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    try {\n      return this._final();\n    } finally {\n      this.destroy();\n    }\n  }\n\n  destroy() {\n    this.ctx.destroy();\n\n    this.pos = -1;\n\n    this._destroy();\n\n    return this;\n  }\n\n  _init(key, iv) {\n    throw new Error('Not implemented.');\n  }\n\n  _crypt(output, input) {\n    throw new Error('Not implemented.');\n  }\n\n  _final() {\n    throw new Error('Not implemented.');\n  }\n\n  _destroy() {\n    throw new Error('Not implemented.');\n  }\n}\n\n/**\n * Raw Cipher\n */\n\nclass RawCipher extends Block {\n  constructor(ctx) {\n    super(ctx, false);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === 0);\n  }\n\n  _update(output, opos, input, ipos) {\n    this.ctx.encrypt(output, opos, input, ipos);\n  }\n\n  _final() {\n    if (this.blockPos !== 0)\n      throw new Error('Bad encrypt (trailing bytes).');\n\n    return Buffer.alloc(0);\n  }\n\n  _destroy() {\n    return;\n  }\n}\n\n/**\n * Raw Decipher\n */\n\nclass RawDecipher extends Block {\n  constructor(ctx) {\n    super(ctx, false);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === 0);\n  }\n\n  _update(output, opos, input, ipos) {\n    this.ctx.decrypt(output, opos, input, ipos);\n  }\n\n  _final() {\n    if (this.blockPos !== 0)\n      throw new Error('Bad decrypt (trailing bytes).');\n\n    return Buffer.alloc(0);\n  }\n\n  _destroy() {\n    return;\n  }\n}\n\n/**\n * PKCS#7 Cipher\n */\n\nclass PKCS7Cipher extends Block {\n  constructor(ctx) {\n    super(ctx, false);\n  }\n\n  _final() {\n    if (!this.padding) {\n      if (this.blockPos !== 0)\n        throw new Error('Bad encrypt (trailing bytes).');\n\n      return Buffer.alloc(0);\n    }\n\n    const left = this.blockSize - this.blockPos;\n    const block = Buffer.from(this.block);\n\n    for (let i = this.blockPos; i < this.blockSize; i++)\n      block[i] = left;\n\n    this._update(block, 0, block, 0);\n\n    return block;\n  }\n\n  _setAutoPadding(padding) {\n    this.padding = padding;\n  }\n}\n\n/**\n * PKCS#7 Decipher\n */\n\nclass PKCS7Decipher extends Block {\n  constructor(ctx) {\n    super(ctx, true);\n  }\n\n  _final() {\n    if (this.blockPos !== 0)\n      throw new Error('Bad decrypt (trailing bytes).');\n\n    if (!this.padding)\n      return Buffer.alloc(0);\n\n    if (this.lastSize === 0)\n      throw new Error('Bad decrypt (no data).');\n\n    assert(this.lastSize === this.last.length);\n    assert(this.lastSize === this.blockSize);\n\n    const block = Buffer.from(this.last);\n\n    let left = block[block.length - 1];\n    let res = 1;\n\n    // left != 0\n    res &= ((left - 1) >>> 31) ^ 1;\n\n    // left <= block_size\n    res &= (left - this.blockSize - 1) >>> 31;\n\n    // left = 0 if left == 0 or left > block_size\n    left &= -res;\n\n    // Verify padding in constant time.\n    const end = this.blockSize - left;\n\n    for (let i = 0; i < this.blockSize; i++) {\n      const ch = block[i];\n\n      // i < end or ch == left\n      res &= ((i - end) >>> 31) | (((ch ^ left) - 1) >>> 31);\n    }\n\n    if (!res)\n      throw new Error('Bad decrypt (padding).');\n\n    return block.slice(0, end);\n  }\n\n  _setAutoPadding(padding) {\n    if (this.lastSize !== 0 || this.blockPos !== 0)\n      throw new Error('Cannot set auto padding.');\n\n    this.padding = padding;\n    this.unpad = padding;\n  }\n}\n\n/**\n * ECB Cipher\n */\n\nclass ECBCipher extends PKCS7Cipher {\n  constructor(ctx) {\n    super(ctx);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === 0);\n  }\n\n  _update(output, opos, input, ipos) {\n    this.ctx.encrypt(output, opos, input, ipos);\n  }\n\n  _destroy() {\n    return;\n  }\n}\n\n/**\n * ECB Decipher\n */\n\nclass ECBDecipher extends PKCS7Decipher {\n  constructor(ctx) {\n    super(ctx);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === 0);\n  }\n\n  _update(output, opos, input, ipos) {\n    this.ctx.decrypt(output, opos, input, ipos);\n  }\n\n  _destroy() {\n    return;\n  }\n}\n\n/**\n * CBC Cipher\n */\n\nclass CBCCipher extends PKCS7Cipher {\n  constructor(ctx) {\n    super(ctx);\n\n    this.prev = Buffer.alloc(this.blockSize);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === this.blockSize);\n    iv.copy(this.prev, 0);\n  }\n\n  _update(output, opos, input, ipos) {\n    for (let i = 0; i < this.blockSize; i++)\n      this.prev[i] ^= input[ipos + i];\n\n    this.ctx.encrypt(output, opos, this.prev, 0);\n\n    output.copy(this.prev, 0, opos, opos + this.blockSize);\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++)\n      this.prev[i] = 0;\n  }\n}\n\n/**\n * CBC Decipher\n */\n\nclass CBCDecipher extends PKCS7Decipher {\n  constructor(ctx) {\n    super(ctx);\n\n    this.prev = Buffer.alloc(this.blockSize);\n    this.tmp = Buffer.alloc(this.blockSize);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === this.blockSize);\n    iv.copy(this.prev, 0);\n  }\n\n  _update(output, opos, input, ipos) {\n    if (overlap(output, opos, input, ipos)) {\n      this.prev.copy(this.tmp, 0);\n\n      input.copy(this.prev, 0, ipos, ipos + this.blockSize);\n\n      this.ctx.decrypt(output, opos, input, ipos);\n\n      for (let i = 0; i < this.blockSize; i++)\n        output[opos + i] ^= this.tmp[i];\n    } else {\n      this.ctx.decrypt(output, opos, input, ipos);\n\n      for (let i = 0; i < this.blockSize; i++)\n        output[opos + i] ^= this.prev[i];\n\n      input.copy(this.prev, 0, ipos, ipos + this.blockSize);\n    }\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++) {\n      this.prev[i] = 0;\n      this.tmp[i] = 0;\n    }\n  }\n}\n\n/**\n * CTS Cipher\n */\n\nclass CTSCipher extends Block {\n  constructor(ctx) {\n    super(ctx, true);\n\n    this.prev = Buffer.alloc(this.blockSize);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === this.blockSize);\n    iv.copy(this.prev, 0);\n  }\n\n  _update(output, opos, input, ipos) {\n    for (let i = 0; i < this.blockSize; i++)\n      this.prev[i] ^= input[ipos + i];\n\n    this.ctx.encrypt(output, opos, this.prev, 0);\n\n    output.copy(this.prev, 0, opos, opos + this.blockSize);\n  }\n\n  _final() {\n    if (!this.padding) {\n      if (this.blockPos !== 0)\n        throw new Error('Bad encrypt (trailing bytes).');\n\n      return Buffer.alloc(0);\n    }\n\n    if (this.lastSize === 0)\n      throw new Error('Bad encrypt (no data).');\n\n    for (let i = 0; i < this.blockPos; i++)\n      this.prev[i] ^= this.block[i];\n\n    this.ctx.encrypt(this.prev, 0, this.prev, 0);\n\n    const last = this.last.slice(0, this.blockPos);\n\n    return Buffer.concat([this.prev, last]);\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++)\n      this.prev[i] = 0;\n  }\n\n  _setAutoPadding(padding) {\n    if (this.lastSize !== 0 || this.blockPos !== 0)\n      throw new Error('Cannot set auto padding.');\n\n    this.padding = padding;\n    this.unpad = padding;\n  }\n}\n\n/**\n * CTS Decipher\n */\n\nclass CTSDecipher extends Block {\n  constructor(ctx) {\n    super(ctx, true);\n\n    this.prev = Buffer.alloc(this.blockSize);\n    this.tmp = Buffer.alloc(this.blockSize);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === this.blockSize);\n    iv.copy(this.prev, 0);\n  }\n\n  _update(output, opos, input, ipos) {\n    if (overlap(output, opos, input, ipos)) {\n      this.prev.copy(this.tmp, 0);\n\n      input.copy(this.prev, 0, ipos, ipos + this.blockSize);\n\n      this.ctx.decrypt(output, opos, input, ipos);\n\n      for (let i = 0; i < this.blockSize; i++)\n        output[opos + i] ^= this.tmp[i];\n    } else {\n      this.ctx.decrypt(output, opos, input, ipos);\n\n      for (let i = 0; i < this.blockSize; i++)\n        output[opos + i] ^= this.prev[i];\n\n      input.copy(this.prev, 0, ipos, ipos + this.blockSize);\n    }\n  }\n\n  _final() {\n    if (!this.padding) {\n      if (this.blockPos !== 0)\n        throw new Error('Bad decrypt (trailing bytes).');\n\n      return Buffer.alloc(0);\n    }\n\n    if (this.lastSize === 0)\n      throw new Error('Bad decrypt (no data).');\n\n    const tmp = Buffer.alloc(this.blockSize);\n\n    this.ctx.decrypt(this.prev, 0, this.prev, 0);\n\n    // Recreate the previous (x2) ciphertext (`this.tmp`),\n    // which is normally only available on overlap.\n    for (let i = 0; i < this.blockSize; i++)\n      tmp[i] = this.last[i] ^ this.prev[i];\n\n    for (let i = 0; i < this.blockPos; i++) {\n      this.last[i] = this.block[i];\n      this.block[i] ^= this.prev[i];\n    }\n\n    for (let i = this.blockPos; i < this.blockSize; i++)\n      this.last[i] = this.prev[i];\n\n    this.ctx.decrypt(this.last, 0, this.last, 0);\n\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= tmp[i];\n\n    const block = this.block.slice(0, this.blockPos);\n\n    return Buffer.concat([this.last, block]);\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++) {\n      this.prev[i] = 0;\n      this.tmp[i] = 0;\n    }\n  }\n\n  _setAutoPadding(padding) {\n    if (this.lastSize !== 0 || this.blockPos !== 0)\n      throw new Error('Cannot set auto padding.');\n\n    this.padding = padding;\n    this.unpad = padding;\n  }\n}\n\n/**\n * XTS\n */\n\nclass XTS extends Block {\n  constructor(ctx, encrypt) {\n    super(ctx, true);\n\n    this.encrypt = encrypt;\n    this.poly = polyTable[this.blockSize >>> 4];\n    this.tweak = Buffer.alloc(this.blockSize);\n    this.prev = Buffer.alloc(this.blockSize);\n  }\n\n  init(key, iv) {\n    assert(Buffer.isBuffer(key));\n    assert(Buffer.isBuffer(iv));\n    assert(key.length > 0 && (key.length & 1) === 0);\n    assert(iv.length === this.blockSize);\n\n    const size = key.length >>> 1;\n    const k1 = key.slice(0, size);\n    const k2 = key.slice(size);\n\n    if (safeEqual(k1, k2, size))\n      throw new Error('XTS keys are equal.');\n\n    this.ctx.init(k2);\n    this.ctx.encrypt(this.tweak, 0, iv, 0);\n\n    this.ctx.init(k1);\n\n    this.blockPos = 0;\n    this.lastSize = 0;\n\n    return this;\n  }\n\n  _shift() {\n    let cy = 0;\n\n    if (!this.encrypt)\n      this.tweak.copy(this.prev, 0);\n\n    for (let i = 0; i < this.blockSize; i++) {\n      const c = this.tweak[i] >> 7;\n\n      this.tweak[i] <<= 1;\n      this.tweak[i] |= cy;\n\n      cy = c;\n    }\n\n    cy = -cy & 0xff;\n\n    this.tweak[2] ^= (this.poly >> 16) & cy;\n    this.tweak[1] ^= (this.poly >>  8) & cy;\n    this.tweak[0] ^= (this.poly >>  0) & cy;\n  }\n\n  _update(output, opos, input, ipos) {\n    for (let i = 0; i < this.blockSize; i++)\n      output[opos + i] = input[ipos + i] ^ this.tweak[i];\n\n    if (this.encrypt)\n      this.ctx.encrypt(output, opos, output, opos);\n    else\n      this.ctx.decrypt(output, opos, output, opos);\n\n    for (let i = 0; i < this.blockSize; i++)\n      output[opos + i] ^= this.tweak[i];\n\n    this._shift();\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++) {\n      this.tweak[i] = 0;\n      this.prev[i] = 0;\n    }\n  }\n\n  _setAutoPadding(padding) {\n    if (this.lastSize !== 0 || this.blockPos !== 0)\n      throw new Error('Cannot set auto padding.');\n\n    this.padding = padding;\n    this.unpad = padding;\n  }\n}\n\n/*\n * XTS Cipher\n */\n\nclass XTSCipher extends XTS {\n  constructor(ctx) {\n    super(ctx, true);\n  }\n\n  _final() {\n    if (!this.padding) {\n      if (this.blockPos !== 0)\n        throw new Error('Bad encrypt (trailing bytes).');\n\n      return Buffer.alloc(0);\n    }\n\n    if (this.lastSize === 0)\n      throw new Error('Bad encrypt (no data).');\n\n    if (this.blockPos === 0)\n      return Buffer.from(this.last);\n\n    // Use ciphertext stealing for partial blocks.\n    const out = Buffer.alloc(this.blockPos);\n\n    for (let i = 0; i < this.blockPos; i++) {\n      out[i] = this.last[i];\n\n      this.last[i] = this.block[i];\n    }\n\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= this.tweak[i];\n\n    this.ctx.encrypt(this.last, 0, this.last, 0);\n\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= this.tweak[i];\n\n    return Buffer.concat([this.last, out]);\n  }\n}\n\n/*\n * XTS Decipher\n */\n\nclass XTSDecipher extends XTS {\n  constructor(ctx) {\n    super(ctx, false);\n  }\n\n  _final() {\n    if (!this.padding) {\n      if (this.blockPos !== 0)\n        throw new Error('Bad decrypt (trailing bytes).');\n\n      return Buffer.alloc(0);\n    }\n\n    if (this.lastSize === 0)\n      throw new Error('Bad decrypt (no data).');\n\n    if (this.blockPos === 0)\n      return Buffer.from(this.last);\n\n    // Undo Block mode object's behavior of\n    // running _update on the last full block.\n    // Could avoid this somehow in the future.\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= this.prev[i];\n\n    this.ctx.encrypt(this.last, 0, this.last, 0);\n\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= this.prev[i];\n\n    // Recreate the last partial plaintext\n    // block (out) and the last ciphertext\n    // block (last).\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= this.tweak[i];\n\n    this.ctx.decrypt(this.last, 0, this.last, 0);\n\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= this.tweak[i];\n\n    const out = Buffer.alloc(this.blockPos);\n\n    for (let i = 0; i < this.blockPos; i++) {\n      out[i] = this.last[i];\n\n      this.last[i] = this.block[i];\n    }\n\n    // Now decrypt the last ciphertext block.\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= this.prev[i];\n\n    this.ctx.decrypt(this.last, 0, this.last, 0);\n\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= this.prev[i];\n\n    return Buffer.concat([this.last, out]);\n  }\n}\n\n/**\n * CTR\n */\n\nclass CTR extends Stream {\n  constructor(ctx) {\n    super(ctx);\n\n    this.state = Buffer.alloc(this.blockSize);\n    this.ctr = Buffer.alloc(this.blockSize);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === this.blockSize);\n\n    iv.copy(this.ctr, 0);\n  }\n\n  _increment() {\n    for (let i = this.ctr.length - 1; i >= 0; i--) {\n      this.ctr[i] += 1;\n\n      if (this.ctr[i] !== 0x00)\n        break;\n    }\n  }\n\n  _crypt(output, input) {\n    const mask = this.blockSize - 1;\n\n    for (let i = 0; i < input.length; i++) {\n      if ((this.pos & mask) === 0) {\n        this.ctx.encrypt(this.state, 0, this.ctr, 0);\n        this._increment();\n        this.pos = 0;\n      }\n\n      output[i] = input[i] ^ this.state[this.pos++];\n    }\n  }\n\n  _final() {\n    return Buffer.alloc(0);\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++) {\n      this.state[i] = 0;\n      this.ctr[i] = 0;\n    }\n  }\n}\n\n/**\n * CTR Cipher\n */\n\nclass CTRCipher extends CTR {\n  constructor(ctx) {\n    super(ctx);\n  }\n}\n\n/**\n * CTR Decipher\n */\n\nclass CTRDecipher extends CTR {\n  constructor(ctx) {\n    super(ctx);\n  }\n}\n\n/**\n * CFB\n */\n\nclass CFB extends Stream {\n  constructor(ctx) {\n    super(ctx);\n\n    this.state = Buffer.alloc(this.blockSize);\n    this.prev = Buffer.alloc(this.blockSize);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === this.blockSize);\n\n    iv.copy(this.prev, 0);\n  }\n\n  _final() {\n    return Buffer.alloc(0);\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++) {\n      this.state[i] = 0;\n      this.prev[i] = 0;\n    }\n  }\n}\n\n/**\n * CFB Cipher\n */\n\nclass CFBCipher extends CFB {\n  constructor(ctx) {\n    super(ctx);\n  }\n\n  _crypt(output, input) {\n    const mask = this.blockSize - 1;\n\n    for (let i = 0; i < input.length; i++) {\n      if ((this.pos & mask) === 0) {\n        this.ctx.encrypt(this.state, 0, this.prev, 0);\n        this.pos = 0;\n      }\n\n      output[i] = input[i] ^ this.state[this.pos];\n\n      this.prev[this.pos] = output[i];\n\n      this.pos += 1;\n    }\n  }\n}\n\n/**\n * CFB Decipher\n */\n\nclass CFBDecipher extends CFB {\n  constructor(ctx) {\n    super(ctx);\n  }\n\n  _crypt(output, input) {\n    const mask = this.blockSize - 1;\n\n    for (let i = 0; i < input.length; i++) {\n      if ((this.pos & mask) === 0) {\n        this.ctx.encrypt(this.state, 0, this.prev, 0);\n        this.pos = 0;\n      }\n\n      this.prev[this.pos] = input[i];\n\n      output[i] = input[i] ^ this.state[this.pos];\n\n      this.pos += 1;\n    }\n  }\n}\n\n/**\n * OFB\n */\n\nclass OFB extends Stream {\n  constructor(ctx) {\n    super(ctx);\n\n    this.state = Buffer.alloc(this.blockSize);\n  }\n\n  _init(key, iv) {\n    assert(Buffer.isBuffer(iv));\n    assert(iv.length === this.blockSize);\n\n    iv.copy(this.state, 0);\n  }\n\n  _crypt(output, input) {\n    const mask = this.blockSize - 1;\n\n    for (let i = 0; i < input.length; i++) {\n      if ((this.pos & mask) === 0) {\n        this.ctx.encrypt(this.state, 0, this.state, 0);\n        this.pos = 0;\n      }\n\n      output[i] = input[i] ^ this.state[this.pos++];\n    }\n  }\n\n  _final() {\n    return Buffer.alloc(0);\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++)\n      this.state[i] = 0;\n  }\n}\n\n/**\n * OFB Cipher\n */\n\nclass OFBCipher extends OFB {\n  constructor(ctx) {\n    super(ctx);\n  }\n}\n\n/**\n * OFB Decipher\n */\n\nclass OFBDecipher extends OFB {\n  constructor(ctx) {\n    super(ctx);\n  }\n}\n\n/**\n * GCM\n */\n\nclass GCM extends Stream {\n  constructor(ctx, encrypt) {\n    assert(ctx.blockSize === 16);\n\n    super(ctx);\n\n    this.encrypt = encrypt;\n    this.hash = new GHASH();\n    this.ctr = Buffer.alloc(16);\n    this.state = Buffer.alloc(16);\n    this.key = Buffer.alloc(16);\n    this.mask = Buffer.alloc(16);\n    this.tag = null;\n    this.mac = null;\n  }\n\n  _init(key, iv) {\n    for (let i = 0; i < 16; i++) {\n      this.ctr[i] = 0;\n      this.key[i] = 0;\n      this.mask[i] = 0;\n    }\n\n    this._encipher(this.key, this.key);\n\n    this.hash.init(this.key);\n\n    // Full round of ghash with same key.\n    if (iv.length !== 12) {\n      this.hash.update(iv);\n      iv = this.hash.final();\n      this.hash.init(this.key);\n    }\n\n    iv.copy(this.ctr, 0);\n\n    if (iv.length === 12) {\n      this.ctr[12] = 0x00;\n      this.ctr[13] = 0x00;\n      this.ctr[14] = 0x00;\n      this.ctr[15] = 0x01;\n    }\n\n    this._encipher(this.mask, this.mask);\n\n    this.tag = null;\n    this.mac = null;\n\n    return this;\n  }\n\n  _increment() {\n    let cy = 1;\n    let i = 4;\n\n    while (i--) {\n      cy += this.ctr[12 + i];\n      this.ctr[12 + i] = cy;\n      cy >>= 8;\n    }\n  }\n\n  _encipher(output, input) {\n    for (let i = 0; i < input.length; i++) {\n      if ((this.pos & 15) === 0) {\n        this.ctx.encrypt(this.state, 0, this.ctr, 0);\n        this._increment();\n        this.pos = 0;\n      }\n\n      output[i] = input[i] ^ this.state[this.pos++];\n    }\n  }\n\n  _crypt(output, input) {\n    if (this.encrypt) {\n      this._encipher(output, input);\n      this.hash.update(output);\n    } else {\n      this.hash.update(input);\n      this._encipher(output, input);\n    }\n  }\n\n  _final() {\n    const mac = this.hash.final();\n\n    for (let i = 0; i < 16; i++)\n      mac[i] ^= this.mask[i];\n\n    if (this.encrypt) {\n      this.mac = mac;\n      return Buffer.alloc(0);\n    }\n\n    if (!this.tag)\n      throw new Error('No tag provided.');\n\n    if (!safeEqual(mac, this.tag, this.tag.length))\n      throw new Error('Invalid tag.');\n\n    return Buffer.alloc(0);\n  }\n\n  _destroy() {\n    this.hash.destroy();\n\n    for (let i = 0; i < 16; i++) {\n      this.ctr[i] = 0;\n      this.state[i] = 0;\n      this.key[i] = 0;\n      this.mask[i] = 0;\n    }\n\n    if (this.tag) {\n      for (let i = 0; i < this.tag.length; i++)\n        this.tag[i] = 0;\n\n      this.tag = null;\n    }\n  }\n\n  _setAAD(data) {\n    if (this.pos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    this.hash.aad(data);\n\n    return this;\n  }\n\n  _getAuthTag() {\n    if (!this.encrypt)\n      throw new Error('Must be a cipher context.');\n\n    if (!this.mac)\n      throw new Error('Cipher is not finalized.');\n\n    return Buffer.from(this.mac);\n  }\n\n  _setAuthTag(tag) {\n    if (this.encrypt)\n      throw new Error('Must be a decipher context.');\n\n    if (this.pos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    if (tag.length !== 4 && tag.length !== 8\n        && (tag.length < 12 || tag.length > 16)) {\n      throw new RangeError('Invalid tag size.');\n    }\n\n    this.tag = Buffer.from(tag);\n\n    return this;\n  }\n}\n\n/**\n * GCM Cipher\n */\n\nclass GCMCipher extends GCM {\n  constructor(ctx) {\n    super(ctx, true);\n  }\n}\n\n/**\n * GCM Decipher\n */\n\nclass GCMDecipher extends GCM {\n  constructor(ctx) {\n    super(ctx, false);\n  }\n}\n\n/**\n * CBC-MAC\n */\n\nclass CBCMAC {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.size = ctx.blockSize;\n    this.mac = Buffer.alloc(this.size);\n    this.pos = -1;\n  }\n\n  init() {\n    this.mac.fill(0);\n    this.pos = 0;\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (this.pos === -1)\n      throw new Error('Context is not initialized.');\n\n    for (let i = 0; i < data.length; i++) {\n      this.mac[this.pos++] ^= data[i];\n\n      if (this.pos === this.size) {\n        this.ctx.encrypt(this.mac, 0, this.mac, 0);\n        this.pos = 0;\n      }\n    }\n  }\n\n  pad() {\n    if (this.pos > 0) {\n      this.ctx.encrypt(this.mac, 0, this.mac, 0);\n      this.pos = 0;\n    }\n  }\n\n  final() {\n    if (this.pos === -1)\n      throw new Error('Context is not initialized.');\n\n    this.pad();\n    this.pos = -1;\n\n    return Buffer.from(this.mac);\n  }\n}\n\n/**\n * CCM\n * https://tools.ietf.org/html/rfc3610\n */\n\nclass CCM extends Stream {\n  constructor(ctx, encrypt) {\n    assert(ctx.blockSize === 16);\n\n    super(ctx);\n\n    this.encrypt = encrypt;\n    this.hash = new CBCMAC(ctx);\n    this.state = Buffer.alloc(16);\n    this.ctr = Buffer.alloc(16);\n    this.tagLen = 0;\n    this.iv = null;\n    this.mac = null;\n    this.tag = null;\n  }\n\n  _increment() {\n    for (let i = 15; i >= 1; i--) {\n      this.ctr[i] += 1;\n\n      if (this.ctr[i] !== 0x00)\n        break;\n    }\n  }\n\n  _encipher(output, input) {\n    for (let i = 0; i < input.length; i++) {\n      if ((this.pos & 15) === 0) {\n        this.ctx.encrypt(this.state, 0, this.ctr, 0);\n        this._increment();\n        this.pos = 0;\n      }\n\n      output[i] = input[i] ^ this.state[this.pos++];\n    }\n  }\n\n  _init(key, iv) {\n    // sjcl compat: no upper limit on l(N).\n    if (iv.length < 7)\n      throw new RangeError('Invalid nonce length.');\n\n    if (iv.length > 13)\n      iv = iv.slice(0, 13);\n\n    this.iv = Buffer.from(iv);\n    this.pos = -1;\n    this.tagLen = 0;\n    this.mac = null;\n    this.tag = null;\n  }\n\n  _setCCM(msgLen, tagLen, aad) {\n    if (!this.iv)\n      throw new Error('Cipher is not initialized.');\n\n    // Compute L, M, and N.\n    let lm = msgLen;\n    let L = Math.ceil((32 - Math.clz32(lm)) / 8);\n\n    if (L < 2)\n      L = 2;\n\n    const M = tagLen;\n    const N = 15 - L;\n    const Adata = (aad && aad.length > 0) | 0;\n    const block = Buffer.alloc(16);\n\n    if (M < 4 || M > 16 || (M & 1) !== 0)\n      throw new RangeError('Invalid tag length.');\n\n    // Compute flags.\n    block[0] = 64 * Adata + 8 * ((M - 2) / 2) + (L - 1);\n\n    // sjcl compat: clamp nonces to 15-L.\n    this.iv.copy(block, 1, 0, Math.min(N, this.iv.length));\n\n    // Serialize message length.\n    for (let i = 15; i >= 1 + N; i--) {\n      block[i] = lm & 0xff;\n      lm >>>= 8;\n    }\n\n    assert(lm === 0);\n\n    this.hash.init();\n    this.hash.update(block);\n\n    if (Adata) {\n      if (aad.length < 0xff00) {\n        const buf = Buffer.alloc(2);\n\n        buf[0] = aad.length >>> 8;\n        buf[1] = aad.length >>> 0;\n\n        this.hash.update(buf);\n      } else if (aad.length < 0xffffffff) {\n        const buf = Buffer.alloc(6);\n\n        buf[0] = 0xff;\n        buf[1] = 0xfe;\n        buf[2] = aad.length >>> 24;\n        buf[3] = aad.length >>> 16;\n        buf[4] = aad.length >>> 8;\n        buf[5] = aad.length >>> 0;\n\n        this.hash.update(buf);\n      } else {\n        throw new RangeError('Invalid AAD length.');\n      }\n\n      this.hash.update(aad);\n      this.hash.pad();\n    }\n\n    block[0] &= 7;\n    block[15] = 1;\n\n    for (let i = 14; i >= 1 + N; i--)\n      block[i] = 0;\n\n    block.copy(this.ctr, 0);\n\n    this.pos = 0;\n    this.tagLen = M;\n    this.iv = null;\n  }\n\n  _crypt(output, input) {\n    if (this.encrypt) {\n      this.hash.update(input);\n      this._encipher(output, input);\n    } else {\n      this._encipher(output, input);\n      this.hash.update(output);\n    }\n  }\n\n  _final() {\n    const mac = this.hash.final();\n\n    // Recreate S_0.\n    let i = 16 - ((this.ctr[0] & 7) + 1);\n\n    while (i < 16)\n      this.ctr[i++] = 0;\n\n    this.pos = 0;\n    this._encipher(mac, mac);\n\n    if (this.encrypt) {\n      this.mac = mac.slice(0, this.tagLen);\n      return Buffer.alloc(0);\n    }\n\n    if (!this.tag)\n      throw new Error('No tag provided.');\n\n    if (!safeEqual(mac, this.tag, this.tagLen))\n      throw new Error('Invalid tag.');\n\n    return Buffer.alloc(0);\n  }\n\n  _destroy() {\n    for (let i = 0; i < 16; i++) {\n      this.state[i] = 0;\n      this.ctr[i] = 0;\n    }\n\n    this.tagLen = 0;\n    this.iv = null;\n    this.tag = null;\n  }\n\n  _getAuthTag() {\n    if (!this.encrypt)\n      throw new Error('Must be a cipher context.');\n\n    if (!this.mac)\n      throw new Error('Cipher is not finalized.');\n\n    return Buffer.from(this.mac);\n  }\n\n  _setAuthTag(tag) {\n    if (this.encrypt)\n      throw new Error('Must be a decipher context.');\n\n    if (this.pos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    if (this.tagLen === 0 || tag.length !== this.tagLen)\n      throw new RangeError('Invalid tag size.');\n\n    this.tag = Buffer.from(tag);\n\n    return this;\n  }\n}\n\n/**\n * CCM Cipher\n */\n\nclass CCMCipher extends CCM {\n  constructor(ctx) {\n    super(ctx, true);\n  }\n}\n\n/**\n * CCM Decipher\n */\n\nclass CCMDecipher extends CCM {\n  constructor(ctx) {\n    super(ctx, false);\n  }\n}\n\n/**\n * CMAC\n * https://tools.ietf.org/html/rfc4493\n */\n\nclass CMAC {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.poly = polyTable[ctx.blockSize >>> 4];\n    this.size = ctx.blockSize;\n    this.mac = Buffer.alloc(this.size);\n    this.pos = -1;\n  }\n\n  init(flag) {\n    this.mac.fill(0);\n    this.pos = 0;\n\n    if (flag != null) {\n      this.mac[this.size - 1] ^= flag;\n      this.pos = this.size;\n    }\n\n    return this;\n  }\n\n  shift(dst, src) {\n    let cy = 0;\n\n    for (let i = this.size - 1; i >= 0; i--) {\n      const c = src[i] >> 7;\n\n      dst[i] = (src[i] << 1) | cy;\n\n      cy = c;\n    }\n\n    cy = -cy & 0xff;\n\n    dst[this.size - 3] ^= (this.poly >> 16) & cy;\n    dst[this.size - 2] ^= (this.poly >>  8) & cy;\n    dst[this.size - 1] ^= (this.poly >>  0) & cy;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (this.pos === -1)\n      throw new Error('Context is not initialized.');\n\n    for (let i = 0; i < data.length; i++) {\n      if (this.pos === this.size) {\n        this.ctx.encrypt(this.mac, 0, this.mac, 0);\n        this.pos = 0;\n      }\n\n      this.mac[this.pos++] ^= data[i];\n    }\n  }\n\n  final() {\n    if (this.pos === -1)\n      throw new Error('Context is not initialized.');\n\n    const k = Buffer.alloc(this.size);\n\n    this.ctx.encrypt(k, 0, k, 0);\n\n    this.shift(k, k);\n\n    if (this.pos < this.size) {\n      this.mac[this.pos] ^= 0x80;\n      this.shift(k, k);\n    }\n\n    for (let i = 0; i < this.size; i++)\n      this.mac[i] ^= k[i];\n\n    this.ctx.encrypt(this.mac, 0, this.mac, 0);\n\n    this.pos = -1;\n\n    return Buffer.from(this.mac);\n  }\n}\n\n/**\n * EAX\n */\n\nclass EAX extends Stream {\n  constructor(ctx, encrypt) {\n    super(ctx);\n\n    this.encrypt = encrypt;\n    this.hash1 = new CMAC(ctx);\n    this.hash2 = new CMAC(ctx);\n    this.state = Buffer.alloc(this.blockSize);\n    this.ctr = Buffer.alloc(this.blockSize);\n    this.mask = Buffer.alloc(this.blockSize);\n    this.mac = null;\n    this.tag = null;\n  }\n\n  _increment() {\n    let i = this.blockSize;\n    let cy = 1;\n\n    while (i--) {\n      cy += this.ctr[i];\n      this.ctr[i] = cy;\n      cy >>= 8;\n    }\n  }\n\n  _encipher(output, input) {\n    const mask = this.blockSize - 1;\n\n    for (let i = 0; i < input.length; i++) {\n      if ((this.pos & mask) === 0) {\n        this.ctx.encrypt(this.state, 0, this.ctr, 0);\n        this._increment();\n        this.pos = 0;\n      }\n\n      output[i] = input[i] ^ this.state[this.pos++];\n    }\n  }\n\n  _init(key, iv) {\n    assert(iv.length > 0);\n\n    this.hash1.init(0);\n    this.hash1.update(iv);\n\n    this.mask = this.hash1.final();\n    this.mask.copy(this.ctr, 0);\n\n    this.hash1.init(1);\n    this.hash2.init(2);\n\n    this.mac = null;\n    this.tag = null;\n  }\n\n  _crypt(output, input) {\n    if (this.encrypt) {\n      this._encipher(output, input);\n      this.hash2.update(output);\n    } else {\n      this.hash2.update(input);\n      this._encipher(output, input);\n    }\n  }\n\n  _final() {\n    const mac = Buffer.alloc(this.blockSize);\n    const mac1 = this.hash1.final();\n    const mac2 = this.hash2.final();\n\n    for (let i = 0; i < this.blockSize; i++)\n      mac[i] = mac1[i] ^ mac2[i] ^ this.mask[i];\n\n    if (this.encrypt) {\n      this.mac = mac;\n      return Buffer.alloc(0);\n    }\n\n    if (!this.tag)\n      throw new Error('No tag provided.');\n\n    if (!safeEqual(mac, this.tag, this.tag.length))\n      throw new Error('Invalid tag.');\n\n    return Buffer.alloc(0);\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++) {\n      this.state[i] = 0;\n      this.ctr[i] = 0;\n      this.mask[i] = 0;\n    }\n\n    this.tag = null;\n  }\n\n  _setAAD(data) {\n    if (this.pos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    this.hash1.update(data);\n\n    return this;\n  }\n\n  _getAuthTag() {\n    if (!this.encrypt)\n      throw new Error('Must be a cipher context.');\n\n    if (!this.mac)\n      throw new Error('Cipher is not finalized.');\n\n    return Buffer.from(this.mac);\n  }\n\n  _setAuthTag(tag) {\n    if (this.encrypt)\n      throw new Error('Must be a decipher context.');\n\n    if (this.pos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    if (tag.length === 0 || tag.length > this.blockSize)\n      throw new RangeError('Invalid tag size.');\n\n    this.tag = Buffer.from(tag);\n\n    return this;\n  }\n}\n\n/**\n * EAX Cipher\n */\n\nclass EAXCipher extends EAX {\n  constructor(ctx) {\n    super(ctx, true);\n  }\n}\n\n/**\n * EAX Decipher\n */\n\nclass EAXDecipher extends EAX {\n  constructor(ctx) {\n    super(ctx, false);\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction get(name, encrypt = true) {\n  assert(typeof name === 'string');\n  assert(typeof encrypt === 'boolean');\n\n  switch (name) {\n    case 'RAW':\n      return encrypt ? RawCipher : RawDecipher;\n    case 'ECB':\n      return encrypt ? ECBCipher : ECBDecipher;\n    case 'CBC':\n      return encrypt ? CBCCipher : CBCDecipher;\n    case 'CTS':\n      return encrypt ? CTSCipher : CTSDecipher;\n    case 'XTS':\n      return encrypt ? XTSCipher : XTSDecipher;\n    case 'CTR':\n      return encrypt ? CTRCipher : CTRDecipher;\n    case 'CFB':\n      return encrypt ? CFBCipher : CFBDecipher;\n    case 'OFB':\n      return encrypt ? OFBCipher : OFBDecipher;\n    case 'GCM':\n      return encrypt ? GCMCipher : GCMDecipher;\n    case 'CCM':\n      return encrypt ? CCMCipher : CCMDecipher;\n    case 'EAX':\n      return encrypt ? EAXCipher : EAXDecipher;\n    default:\n      throw new Error(`Unknown mode: ${name}.`);\n  }\n}\n\nfunction overlap(output, opos, input, ipos) {\n  return output.buffer === input.buffer\n      && output.byteOffset === input.byteOffset\n      && opos === ipos;\n}\n\nfunction safeEqual(x, y, len) {\n  let z = 0;\n\n  for (let i = 0; i < len; i++)\n    z |= x[i] ^ y[i];\n\n  return (z - 1) >>> 31;\n}\n\n/*\n * Expose\n */\n\nexports.Mode = Mode;\nexports.Block = Block;\nexports.Stream = Stream;\nexports.RawCipher = RawCipher;\nexports.RawDecipher = RawDecipher;\nexports.PKCS7Cipher = PKCS7Cipher;\nexports.PKCS7Decipher = PKCS7Decipher;\nexports.ECBCipher = ECBCipher;\nexports.ECBDecipher = ECBDecipher;\nexports.CBCCipher = CBCCipher;\nexports.CBCDecipher = CBCDecipher;\nexports.CTSCipher = CTSCipher;\nexports.CTSDecipher = CTSDecipher;\nexports.XTS = XTS;\nexports.XTSCipher = XTSCipher;\nexports.XTSDecipher = XTSDecipher;\nexports.CTR = CTR;\nexports.CTRCipher = CTRCipher;\nexports.CTRDecipher = CTRDecipher;\nexports.CFB = CFB;\nexports.CFBCipher = CFBCipher;\nexports.CFBDecipher = CFBDecipher;\nexports.OFB = OFB;\nexports.OFBCipher = OFBCipher;\nexports.OFBDecipher = OFBDecipher;\nexports.GCM = GCM;\nexports.GCMCipher = GCMCipher;\nexports.GCMDecipher = GCMDecipher;\nexports.CBCMAC = CBCMAC;\nexports.CCM = CCM;\nexports.CCMCipher = CCMCipher;\nexports.CCMDecipher = CCMDecipher;\nexports.CMAC = CMAC;\nexports.EAX = EAX;\nexports.EAXCipher = EAXCipher;\nexports.EAXDecipher = EAXDecipher;\nexports.get = get;\n","/*!\n * bcrypt.js - bcrypt for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/bcrypt');\n","/*!\n * sha512.js - SHA512 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hash.js:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/hash.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SHA-2\n *   https://tools.ietf.org/html/rfc4634\n *   https://github.com/indutny/hash.js/blob/master/lib/hash/sha/512.js\n */\n\n/* eslint camelcase: \"off\" */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst HMAC = require('../internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = -1;\nconst DESC = Buffer.alloc(16, 0x00);\nconst PADDING = Buffer.alloc(128, 0x00);\n\nPADDING[0] = 0x80;\n\nconst K = new Uint32Array([\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]);\n\n/**\n * SHA512\n */\n\nclass SHA512 {\n  constructor() {\n    this.state = new Uint32Array(16);\n    this.msg = new Uint32Array(160);\n    this.block = Buffer.alloc(128);\n    this.size = FINALIZED;\n  }\n\n  init() {\n    this.state[0] = 0x6a09e667;\n    this.state[1] = 0xf3bcc908;\n    this.state[2] = 0xbb67ae85;\n    this.state[3] = 0x84caa73b;\n    this.state[4] = 0x3c6ef372;\n    this.state[5] = 0xfe94f82b;\n    this.state[6] = 0xa54ff53a;\n    this.state[7] = 0x5f1d36f1;\n    this.state[8] = 0x510e527f;\n    this.state[9] = 0xade682d1;\n    this.state[10] = 0x9b05688c;\n    this.state[11] = 0x2b3e6c1f;\n    this.state[12] = 0x1f83d9ab;\n    this.state[13] = 0xfb41bd6b;\n    this.state[14] = 0x5be0cd19;\n    this.state[15] = 0x137e2179;\n    this.size = 0;\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    this._update(data, data.length);\n    return this;\n  }\n\n  final() {\n    return this._final(Buffer.alloc(64));\n  }\n\n  _update(data, len) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    let pos = this.size & 127;\n    let off = 0;\n\n    this.size += len;\n\n    if (pos > 0) {\n      let want = 128 - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < 128)\n        return;\n\n      this._transform(this.block, 0);\n    }\n\n    while (len >= 128) {\n      this._transform(data, off);\n      off += 128;\n      len -= 128;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n  }\n\n  /**\n   * Finalize SHA512 context.\n   * @private\n   * @param {Buffer} out\n   * @returns {Buffer}\n   */\n\n  _final(out) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    const pos = this.size & 127;\n    const len = this.size * 8;\n\n    writeU32(DESC, (len * (1 / 0x100000000)) >>> 0, 8);\n    writeU32(DESC, len >>> 0, 12);\n\n    this._update(PADDING, 1 + ((239 - pos) & 127));\n    this._update(DESC, 16);\n\n    for (let i = 0; i < 16; i++) {\n      writeU32(out, this.state[i], i * 4);\n      this.state[i] = 0;\n    }\n\n    for (let i = 0; i < 160; i++)\n      this.msg[i] = 0;\n\n    for (let i = 0; i < 128; i++)\n      this.block[i] = 0;\n\n    this.size = FINALIZED;\n\n    return out;\n  }\n\n  _prepare(chunk, pos) {\n    const W = this.msg;\n\n    let i = 0;\n\n    for (; i < 32; i++)\n      W[i] = readU32(chunk, pos + i * 4);\n\n    for (; i < 160; i += 2) {\n      const c0_hi = g1_512_hi(W[i - 4], W[i - 3]);\n      const c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n      const c1_hi = W[i - 14];\n      const c1_lo = W[i - 13];\n      const c2_hi = g0_512_hi(W[i - 30], W[i - 29]);\n      const c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n      const c3_hi = W[i - 32];\n      const c3_lo = W[i - 31];\n\n      W[i + 0] = sum64_4_hi(c0_hi, c0_lo,\n                            c1_hi, c1_lo,\n                            c2_hi, c2_lo,\n                            c3_hi, c3_lo);\n\n      W[i + 1] = sum64_4_lo(c0_hi, c0_lo,\n                            c1_hi, c1_lo,\n                            c2_hi, c2_lo,\n                            c3_hi, c3_lo);\n    }\n  }\n\n  _transform(chunk, pos) {\n    const W = this.msg;\n\n    this._prepare(chunk, pos);\n\n    let ah = this.state[0];\n    let al = this.state[1];\n    let bh = this.state[2];\n    let bl = this.state[3];\n    let ch = this.state[4];\n    let cl = this.state[5];\n    let dh = this.state[6];\n    let dl = this.state[7];\n    let eh = this.state[8];\n    let el = this.state[9];\n    let fh = this.state[10];\n    let fl = this.state[11];\n    let gh = this.state[12];\n    let gl = this.state[13];\n    let hh = this.state[14];\n    let hl = this.state[15];\n\n    for (let i = 0; i < W.length; i += 2) {\n      let c0_hi = hh;\n      let c0_lo = hl;\n      let c1_hi = s1_512_hi(eh, el);\n      let c1_lo = s1_512_lo(eh, el);\n\n      const c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n      const c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n      const c3_hi = K[i + 0];\n      const c3_lo = K[i + 1];\n      const c4_hi = W[i + 0];\n      const c4_lo = W[i + 1];\n\n      const T1_hi = sum64_5_hi(c0_hi, c0_lo,\n                               c1_hi, c1_lo,\n                               c2_hi, c2_lo,\n                               c3_hi, c3_lo,\n                               c4_hi, c4_lo);\n\n      const T1_lo = sum64_5_lo(c0_hi, c0_lo,\n                               c1_hi, c1_lo,\n                               c2_hi, c2_lo,\n                               c3_hi, c3_lo,\n                               c4_hi, c4_lo);\n\n      c0_hi = s0_512_hi(ah, al);\n      c0_lo = s0_512_lo(ah, al);\n      c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n      c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n      const T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n      const T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n      hh = gh;\n      hl = gl;\n\n      gh = fh;\n      gl = fl;\n\n      fh = eh;\n      fl = el;\n\n      eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n      el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n      dh = ch;\n      dl = cl;\n\n      ch = bh;\n      cl = bl;\n\n      bh = ah;\n      bl = al;\n\n      ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n      al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n    }\n\n    sum64(this.state, 0, ah, al);\n    sum64(this.state, 2, bh, bl);\n    sum64(this.state, 4, ch, cl);\n    sum64(this.state, 6, dh, dl);\n    sum64(this.state, 8, eh, el);\n    sum64(this.state, 10, fh, fl);\n    sum64(this.state, 12, gh, gl);\n    sum64(this.state, 14, hh, hl);\n  }\n\n  static hash() {\n    return new SHA512();\n  }\n\n  static hmac() {\n    return new HMAC(SHA512, 128);\n  }\n\n  static digest(data) {\n    return SHA512.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 64);\n    assert(Buffer.isBuffer(right) && right.length === 64);\n    return SHA512.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = SHA512;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return SHA512.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nSHA512.native = 0;\nSHA512.id = 'SHA512';\nSHA512.size = 64;\nSHA512.bits = 512;\nSHA512.blockSize = 128;\nSHA512.zero = Buffer.alloc(64, 0x00);\nSHA512.ctx = new SHA512();\n\n/*\n * Helpers\n */\n\nfunction sum64(buf, pos, ah, al) {\n  const bh = buf[pos + 0];\n  const bl = buf[pos + 1];\n\n  const lo = (al + bl) >>> 0;\n  const hi = (lo < al) + ah + bh;\n\n  buf[pos + 0] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\n\nfunction sum64_hi(ah, al, bh, bl) {\n  const lo = (al + bl) >>> 0;\n  const hi = (lo < al) + ah + bh;\n  return hi >>> 0;\n}\n\nfunction sum64_lo(ah, al, bh, bl) {\n  const lo = al + bl;\n  return lo >>> 0;\n}\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  let carry = 0;\n  let lo = al;\n\n  lo = (lo + bl) >>> 0;\n  carry += (lo < al);\n\n  lo = (lo + cl) >>> 0;\n  carry += (lo < cl);\n\n  lo = (lo + dl) >>> 0;\n  carry += (lo < dl);\n\n  const hi = ah + bh + ch + dh + carry;\n\n  return hi >>> 0;\n}\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  const lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  let carry = 0;\n  let lo = al;\n\n  lo = (lo + bl) >>> 0;\n  carry += (lo < al);\n\n  lo = (lo + cl) >>> 0;\n  carry += (lo < cl);\n\n  lo = (lo + dl) >>> 0;\n  carry += (lo < dl);\n\n  lo = (lo + el) >>> 0;\n  carry += (lo < el);\n\n  const hi = ah + bh + ch + dh + eh + carry;\n\n  return hi >>> 0;\n}\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  const lo = al + bl + cl + dl + el;\n  return lo >>> 0;\n}\n\nfunction rotr64_hi(ah, al, num) {\n  const r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\n\nfunction rotr64_lo(ah, al, num) {\n  const r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\n\nfunction shr64_lo(ah, al, num) {\n  const r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\n\nfunction ch64_hi(xh, xl, yh, yl, zh, zl) {\n  const r = (xh & yh) ^ ((~xh) & zh);\n  return r >>> 0;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  const r = (xl & yl) ^ ((~xl) & zl);\n  return r >>> 0;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh, zl) {\n  const r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  return r >>> 0;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  const r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  return r >>> 0;\n}\n\nfunction s0_512_hi(xh, xl) {\n  const c0_hi = rotr64_hi(xh, xl, 28);\n  const c1_hi = rotr64_hi(xl, xh, 2); // 34\n  const c2_hi = rotr64_hi(xl, xh, 7); // 39\n  const r = c0_hi ^ c1_hi ^ c2_hi;\n  return r >>> 0;\n}\n\nfunction s0_512_lo(xh, xl) {\n  const c0_lo = rotr64_lo(xh, xl, 28);\n  const c1_lo = rotr64_lo(xl, xh, 2); // 34\n  const c2_lo = rotr64_lo(xl, xh, 7); // 39\n  const r = c0_lo ^ c1_lo ^ c2_lo;\n  return r >>> 0;\n}\n\nfunction s1_512_hi(xh, xl) {\n  const c0_hi = rotr64_hi(xh, xl, 14);\n  const c1_hi = rotr64_hi(xh, xl, 18);\n  const c2_hi = rotr64_hi(xl, xh, 9); // 41\n  const r = c0_hi ^ c1_hi ^ c2_hi;\n  return r >>> 0;\n}\n\nfunction s1_512_lo(xh, xl) {\n  const c0_lo = rotr64_lo(xh, xl, 14);\n  const c1_lo = rotr64_lo(xh, xl, 18);\n  const c2_lo = rotr64_lo(xl, xh, 9); // 41\n  const r = c0_lo ^ c1_lo ^ c2_lo;\n  return r >>> 0;\n}\n\nfunction g0_512_hi(xh, xl) {\n  const c0_hi = rotr64_hi(xh, xl, 1);\n  const c1_hi = rotr64_hi(xh, xl, 8);\n  const c2_hi = shr64_hi(xh, xl, 7);\n  const r = c0_hi ^ c1_hi ^ c2_hi;\n  return r >>> 0;\n}\n\nfunction g0_512_lo(xh, xl) {\n  const c0_lo = rotr64_lo(xh, xl, 1);\n  const c1_lo = rotr64_lo(xh, xl, 8);\n  const c2_lo = shr64_lo(xh, xl, 7);\n  const r = c0_lo ^ c1_lo ^ c2_lo;\n  return r >>> 0;\n}\n\nfunction g1_512_hi(xh, xl) {\n  const c0_hi = rotr64_hi(xh, xl, 19);\n  const c1_hi = rotr64_hi(xl, xh, 29); // 61\n  const c2_hi = shr64_hi(xh, xl, 6);\n  const r = c0_hi ^ c1_hi ^ c2_hi;\n  return r >>> 0;\n}\n\nfunction g1_512_lo(xh, xl) {\n  const c0_lo = rotr64_lo(xh, xl, 19);\n  const c1_lo = rotr64_lo(xl, xh, 29); // 61\n  const c2_lo = shr64_lo(xh, xl, 6);\n  const r = c0_lo ^ c1_lo ^ c2_lo;\n  return r >>> 0;\n}\n\nfunction readU32(data, off) {\n  return (data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction writeU32(data, num, off) {\n  data[off++] = num >>> 24;\n  data[off++] = num >>> 16;\n  data[off++] = num >>> 8;\n  data[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = SHA512;\n","/*!\n * blowfish.js - blowfish for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on joyent/node-bcrypt-pbkdf:\n *   Copyright (c) 2016, Joyent Inc\n *   https://github.com/joyent/node-bcrypt-pbkdf\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Blowfish_(cipher)\n *   https://www.schneier.com/blowfish.html\n *   https://github.com/joyent/node-bcrypt-pbkdf/blob/master/index.js\n */\n\n/* eslint no-implicit-coercion: \"off\" */\n\n'use strict';\n\nconst assert = require('../../internal/assert');\n\n/*\n * Constants\n */\n\nconst S0 = new Uint32Array([\n  0xd1310ba6, 0x98dfb5ac, 0x2ffd72db, 0xd01adfb7,\n  0xb8e1afed, 0x6a267e96, 0xba7c9045, 0xf12c7f99,\n  0x24a19947, 0xb3916cf7, 0x0801f2e2, 0x858efc16,\n  0x636920d8, 0x71574e69, 0xa458fea3, 0xf4933d7e,\n  0x0d95748f, 0x728eb658, 0x718bcd58, 0x82154aee,\n  0x7b54a41d, 0xc25a59b5, 0x9c30d539, 0x2af26013,\n  0xc5d1b023, 0x286085f0, 0xca417918, 0xb8db38ef,\n  0x8e79dcb0, 0x603a180e, 0x6c9e0e8b, 0xb01e8a3e,\n  0xd71577c1, 0xbd314b27, 0x78af2fda, 0x55605c60,\n  0xe65525f3, 0xaa55ab94, 0x57489862, 0x63e81440,\n  0x55ca396a, 0x2aab10b6, 0xb4cc5c34, 0x1141e8ce,\n  0xa15486af, 0x7c72e993, 0xb3ee1411, 0x636fbc2a,\n  0x2ba9c55d, 0x741831f6, 0xce5c3e16, 0x9b87931e,\n  0xafd6ba33, 0x6c24cf5c, 0x7a325381, 0x28958677,\n  0x3b8f4898, 0x6b4bb9af, 0xc4bfe81b, 0x66282193,\n  0x61d809cc, 0xfb21a991, 0x487cac60, 0x5dec8032,\n  0xef845d5d, 0xe98575b1, 0xdc262302, 0xeb651b88,\n  0x23893e81, 0xd396acc5, 0x0f6d6ff3, 0x83f44239,\n  0x2e0b4482, 0xa4842004, 0x69c8f04a, 0x9e1f9b5e,\n  0x21c66842, 0xf6e96c9a, 0x670c9c61, 0xabd388f0,\n  0x6a51a0d2, 0xd8542f68, 0x960fa728, 0xab5133a3,\n  0x6eef0b6c, 0x137a3be4, 0xba3bf050, 0x7efb2a98,\n  0xa1f1651d, 0x39af0176, 0x66ca593e, 0x82430e88,\n  0x8cee8619, 0x456f9fb4, 0x7d84a5c3, 0x3b8b5ebe,\n  0xe06f75d8, 0x85c12073, 0x401a449f, 0x56c16aa6,\n  0x4ed3aa62, 0x363f7706, 0x1bfedf72, 0x429b023d,\n  0x37d0d724, 0xd00a1248, 0xdb0fead3, 0x49f1c09b,\n  0x075372c9, 0x80991b7b, 0x25d479d8, 0xf6e8def7,\n  0xe3fe501a, 0xb6794c3b, 0x976ce0bd, 0x04c006ba,\n  0xc1a94fb6, 0x409f60c4, 0x5e5c9ec2, 0x196a2463,\n  0x68fb6faf, 0x3e6c53b5, 0x1339b2eb, 0x3b52ec6f,\n  0x6dfc511f, 0x9b30952c, 0xcc814544, 0xaf5ebd09,\n  0xbee3d004, 0xde334afd, 0x660f2807, 0x192e4bb3,\n  0xc0cba857, 0x45c8740f, 0xd20b5f39, 0xb9d3fbdb,\n  0x5579c0bd, 0x1a60320a, 0xd6a100c6, 0x402c7279,\n  0x679f25fe, 0xfb1fa3cc, 0x8ea5e9f8, 0xdb3222f8,\n  0x3c7516df, 0xfd616b15, 0x2f501ec8, 0xad0552ab,\n  0x323db5fa, 0xfd238760, 0x53317b48, 0x3e00df82,\n  0x9e5c57bb, 0xca6f8ca0, 0x1a87562e, 0xdf1769db,\n  0xd542a8f6, 0x287effc3, 0xac6732c6, 0x8c4f5573,\n  0x695b27b0, 0xbbca58c8, 0xe1ffa35d, 0xb8f011a0,\n  0x10fa3d98, 0xfd2183b8, 0x4afcb56c, 0x2dd1d35b,\n  0x9a53e479, 0xb6f84565, 0xd28e49bc, 0x4bfb9790,\n  0xe1ddf2da, 0xa4cb7e33, 0x62fb1341, 0xcee4c6e8,\n  0xef20cada, 0x36774c01, 0xd07e9efe, 0x2bf11fb4,\n  0x95dbda4d, 0xae909198, 0xeaad8e71, 0x6b93d5a0,\n  0xd08ed1d0, 0xafc725e0, 0x8e3c5b2f, 0x8e7594b7,\n  0x8ff6e2fb, 0xf2122b64, 0x8888b812, 0x900df01c,\n  0x4fad5ea0, 0x688fc31c, 0xd1cff191, 0xb3a8c1ad,\n  0x2f2f2218, 0xbe0e1777, 0xea752dfe, 0x8b021fa1,\n  0xe5a0cc0f, 0xb56f74e8, 0x18acf3d6, 0xce89e299,\n  0xb4a84fe0, 0xfd13e0b7, 0x7cc43b81, 0xd2ada8d9,\n  0x165fa266, 0x80957705, 0x93cc7314, 0x211a1477,\n  0xe6ad2065, 0x77b5fa86, 0xc75442f5, 0xfb9d35cf,\n  0xebcdaf0c, 0x7b3e89a0, 0xd6411bd3, 0xae1e7e49,\n  0x00250e2d, 0x2071b35e, 0x226800bb, 0x57b8e0af,\n  0x2464369b, 0xf009b91e, 0x5563911d, 0x59dfa6aa,\n  0x78c14389, 0xd95a537f, 0x207d5ba2, 0x02e5b9c5,\n  0x83260376, 0x6295cfa9, 0x11c81968, 0x4e734a41,\n  0xb3472dca, 0x7b14a94a, 0x1b510052, 0x9a532915,\n  0xd60f573f, 0xbc9bc6e4, 0x2b60a476, 0x81e67400,\n  0x08ba6fb5, 0x571be91f, 0xf296ec6b, 0x2a0dd915,\n  0xb6636521, 0xe7b9f9b6, 0xff34052e, 0xc5855664,\n  0x53b02d5d, 0xa99f8fa1, 0x08ba4799, 0x6e85076a\n]);\n\nconst S1 = new Uint32Array([\n  0x4b7a70e9, 0xb5b32944, 0xdb75092e, 0xc4192623,\n  0xad6ea6b0, 0x49a7df7d, 0x9cee60b8, 0x8fedb266,\n  0xecaa8c71, 0x699a17ff, 0x5664526c, 0xc2b19ee1,\n  0x193602a5, 0x75094c29, 0xa0591340, 0xe4183a3e,\n  0x3f54989a, 0x5b429d65, 0x6b8fe4d6, 0x99f73fd6,\n  0xa1d29c07, 0xefe830f5, 0x4d2d38e6, 0xf0255dc1,\n  0x4cdd2086, 0x8470eb26, 0x6382e9c6, 0x021ecc5e,\n  0x09686b3f, 0x3ebaefc9, 0x3c971814, 0x6b6a70a1,\n  0x687f3584, 0x52a0e286, 0xb79c5305, 0xaa500737,\n  0x3e07841c, 0x7fdeae5c, 0x8e7d44ec, 0x5716f2b8,\n  0xb03ada37, 0xf0500c0d, 0xf01c1f04, 0x0200b3ff,\n  0xae0cf51a, 0x3cb574b2, 0x25837a58, 0xdc0921bd,\n  0xd19113f9, 0x7ca92ff6, 0x94324773, 0x22f54701,\n  0x3ae5e581, 0x37c2dadc, 0xc8b57634, 0x9af3dda7,\n  0xa9446146, 0x0fd0030e, 0xecc8c73e, 0xa4751e41,\n  0xe238cd99, 0x3bea0e2f, 0x3280bba1, 0x183eb331,\n  0x4e548b38, 0x4f6db908, 0x6f420d03, 0xf60a04bf,\n  0x2cb81290, 0x24977c79, 0x5679b072, 0xbcaf89af,\n  0xde9a771f, 0xd9930810, 0xb38bae12, 0xdccf3f2e,\n  0x5512721f, 0x2e6b7124, 0x501adde6, 0x9f84cd87,\n  0x7a584718, 0x7408da17, 0xbc9f9abc, 0xe94b7d8c,\n  0xec7aec3a, 0xdb851dfa, 0x63094366, 0xc464c3d2,\n  0xef1c1847, 0x3215d908, 0xdd433b37, 0x24c2ba16,\n  0x12a14d43, 0x2a65c451, 0x50940002, 0x133ae4dd,\n  0x71dff89e, 0x10314e55, 0x81ac77d6, 0x5f11199b,\n  0x043556f1, 0xd7a3c76b, 0x3c11183b, 0x5924a509,\n  0xf28fe6ed, 0x97f1fbfa, 0x9ebabf2c, 0x1e153c6e,\n  0x86e34570, 0xeae96fb1, 0x860e5e0a, 0x5a3e2ab3,\n  0x771fe71c, 0x4e3d06fa, 0x2965dcb9, 0x99e71d0f,\n  0x803e89d6, 0x5266c825, 0x2e4cc978, 0x9c10b36a,\n  0xc6150eba, 0x94e2ea78, 0xa5fc3c53, 0x1e0a2df4,\n  0xf2f74ea7, 0x361d2b3d, 0x1939260f, 0x19c27960,\n  0x5223a708, 0xf71312b6, 0xebadfe6e, 0xeac31f66,\n  0xe3bc4595, 0xa67bc883, 0xb17f37d1, 0x018cff28,\n  0xc332ddef, 0xbe6c5aa5, 0x65582185, 0x68ab9802,\n  0xeecea50f, 0xdb2f953b, 0x2aef7dad, 0x5b6e2f84,\n  0x1521b628, 0x29076170, 0xecdd4775, 0x619f1510,\n  0x13cca830, 0xeb61bd96, 0x0334fe1e, 0xaa0363cf,\n  0xb5735c90, 0x4c70a239, 0xd59e9e0b, 0xcbaade14,\n  0xeecc86bc, 0x60622ca7, 0x9cab5cab, 0xb2f3846e,\n  0x648b1eaf, 0x19bdf0ca, 0xa02369b9, 0x655abb50,\n  0x40685a32, 0x3c2ab4b3, 0x319ee9d5, 0xc021b8f7,\n  0x9b540b19, 0x875fa099, 0x95f7997e, 0x623d7da8,\n  0xf837889a, 0x97e32d77, 0x11ed935f, 0x16681281,\n  0x0e358829, 0xc7e61fd6, 0x96dedfa1, 0x7858ba99,\n  0x57f584a5, 0x1b227263, 0x9b83c3ff, 0x1ac24696,\n  0xcdb30aeb, 0x532e3054, 0x8fd948e4, 0x6dbc3128,\n  0x58ebf2ef, 0x34c6ffea, 0xfe28ed61, 0xee7c3c73,\n  0x5d4a14d9, 0xe864b7e3, 0x42105d14, 0x203e13e0,\n  0x45eee2b6, 0xa3aaabea, 0xdb6c4f15, 0xfacb4fd0,\n  0xc742f442, 0xef6abbb5, 0x654f3b1d, 0x41cd2105,\n  0xd81e799e, 0x86854dc7, 0xe44b476a, 0x3d816250,\n  0xcf62a1f2, 0x5b8d2646, 0xfc8883a0, 0xc1c7b6a3,\n  0x7f1524c3, 0x69cb7492, 0x47848a0b, 0x5692b285,\n  0x095bbf00, 0xad19489d, 0x1462b174, 0x23820e00,\n  0x58428d2a, 0x0c55f5ea, 0x1dadf43e, 0x233f7061,\n  0x3372f092, 0x8d937e41, 0xd65fecf1, 0x6c223bdb,\n  0x7cde3759, 0xcbee7460, 0x4085f2a7, 0xce77326e,\n  0xa6078084, 0x19f8509e, 0xe8efd855, 0x61d99735,\n  0xa969a7aa, 0xc50c06c2, 0x5a04abfc, 0x800bcadc,\n  0x9e447a2e, 0xc3453484, 0xfdd56705, 0x0e1e9ec9,\n  0xdb73dbd3, 0x105588cd, 0x675fda79, 0xe3674340,\n  0xc5c43465, 0x713e38d8, 0x3d28f89e, 0xf16dff20,\n  0x153e21e7, 0x8fb03d4a, 0xe6e39f2b, 0xdb83adf7\n]);\n\nconst S2 = new Uint32Array([\n  0xe93d5a68, 0x948140f7, 0xf64c261c, 0x94692934,\n  0x411520f7, 0x7602d4f7, 0xbcf46b2e, 0xd4a20068,\n  0xd4082471, 0x3320f46a, 0x43b7d4b7, 0x500061af,\n  0x1e39f62e, 0x97244546, 0x14214f74, 0xbf8b8840,\n  0x4d95fc1d, 0x96b591af, 0x70f4ddd3, 0x66a02f45,\n  0xbfbc09ec, 0x03bd9785, 0x7fac6dd0, 0x31cb8504,\n  0x96eb27b3, 0x55fd3941, 0xda2547e6, 0xabca0a9a,\n  0x28507825, 0x530429f4, 0x0a2c86da, 0xe9b66dfb,\n  0x68dc1462, 0xd7486900, 0x680ec0a4, 0x27a18dee,\n  0x4f3ffea2, 0xe887ad8c, 0xb58ce006, 0x7af4d6b6,\n  0xaace1e7c, 0xd3375fec, 0xce78a399, 0x406b2a42,\n  0x20fe9e35, 0xd9f385b9, 0xee39d7ab, 0x3b124e8b,\n  0x1dc9faf7, 0x4b6d1856, 0x26a36631, 0xeae397b2,\n  0x3a6efa74, 0xdd5b4332, 0x6841e7f7, 0xca7820fb,\n  0xfb0af54e, 0xd8feb397, 0x454056ac, 0xba489527,\n  0x55533a3a, 0x20838d87, 0xfe6ba9b7, 0xd096954b,\n  0x55a867bc, 0xa1159a58, 0xcca92963, 0x99e1db33,\n  0xa62a4a56, 0x3f3125f9, 0x5ef47e1c, 0x9029317c,\n  0xfdf8e802, 0x04272f70, 0x80bb155c, 0x05282ce3,\n  0x95c11548, 0xe4c66d22, 0x48c1133f, 0xc70f86dc,\n  0x07f9c9ee, 0x41041f0f, 0x404779a4, 0x5d886e17,\n  0x325f51eb, 0xd59bc0d1, 0xf2bcc18f, 0x41113564,\n  0x257b7834, 0x602a9c60, 0xdff8e8a3, 0x1f636c1b,\n  0x0e12b4c2, 0x02e1329e, 0xaf664fd1, 0xcad18115,\n  0x6b2395e0, 0x333e92e1, 0x3b240b62, 0xeebeb922,\n  0x85b2a20e, 0xe6ba0d99, 0xde720c8c, 0x2da2f728,\n  0xd0127845, 0x95b794fd, 0x647d0862, 0xe7ccf5f0,\n  0x5449a36f, 0x877d48fa, 0xc39dfd27, 0xf33e8d1e,\n  0x0a476341, 0x992eff74, 0x3a6f6eab, 0xf4f8fd37,\n  0xa812dc60, 0xa1ebddf8, 0x991be14c, 0xdb6e6b0d,\n  0xc67b5510, 0x6d672c37, 0x2765d43b, 0xdcd0e804,\n  0xf1290dc7, 0xcc00ffa3, 0xb5390f92, 0x690fed0b,\n  0x667b9ffb, 0xcedb7d9c, 0xa091cf0b, 0xd9155ea3,\n  0xbb132f88, 0x515bad24, 0x7b9479bf, 0x763bd6eb,\n  0x37392eb3, 0xcc115979, 0x8026e297, 0xf42e312d,\n  0x6842ada7, 0xc66a2b3b, 0x12754ccc, 0x782ef11c,\n  0x6a124237, 0xb79251e7, 0x06a1bbe6, 0x4bfb6350,\n  0x1a6b1018, 0x11caedfa, 0x3d25bdd8, 0xe2e1c3c9,\n  0x44421659, 0x0a121386, 0xd90cec6e, 0xd5abea2a,\n  0x64af674e, 0xda86a85f, 0xbebfe988, 0x64e4c3fe,\n  0x9dbc8057, 0xf0f7c086, 0x60787bf8, 0x6003604d,\n  0xd1fd8346, 0xf6381fb0, 0x7745ae04, 0xd736fccc,\n  0x83426b33, 0xf01eab71, 0xb0804187, 0x3c005e5f,\n  0x77a057be, 0xbde8ae24, 0x55464299, 0xbf582e61,\n  0x4e58f48f, 0xf2ddfda2, 0xf474ef38, 0x8789bdc2,\n  0x5366f9c3, 0xc8b38e74, 0xb475f255, 0x46fcd9b9,\n  0x7aeb2661, 0x8b1ddf84, 0x846a0e79, 0x915f95e2,\n  0x466e598e, 0x20b45770, 0x8cd55591, 0xc902de4c,\n  0xb90bace1, 0xbb8205d0, 0x11a86248, 0x7574a99e,\n  0xb77f19b6, 0xe0a9dc09, 0x662d09a1, 0xc4324633,\n  0xe85a1f02, 0x09f0be8c, 0x4a99a025, 0x1d6efe10,\n  0x1ab93d1d, 0x0ba5a4df, 0xa186f20f, 0x2868f169,\n  0xdcb7da83, 0x573906fe, 0xa1e2ce9b, 0x4fcd7f52,\n  0x50115e01, 0xa70683fa, 0xa002b5c4, 0x0de6d027,\n  0x9af88c27, 0x773f8641, 0xc3604c06, 0x61a806b5,\n  0xf0177a28, 0xc0f586e0, 0x006058aa, 0x30dc7d62,\n  0x11e69ed7, 0x2338ea63, 0x53c2dd94, 0xc2c21634,\n  0xbbcbee56, 0x90bcb6de, 0xebfc7da1, 0xce591d76,\n  0x6f05e409, 0x4b7c0188, 0x39720a3d, 0x7c927c24,\n  0x86e3725f, 0x724d9db9, 0x1ac15bb4, 0xd39eb8fc,\n  0xed545578, 0x08fca5b5, 0xd83d7cd3, 0x4dad0fc4,\n  0x1e50ef5e, 0xb161e6f8, 0xa28514d9, 0x6c51133c,\n  0x6fd5c7e7, 0x56e14ec4, 0x362abfce, 0xddc6c837,\n  0xd79a3234, 0x92638212, 0x670efa8e, 0x406000e0\n]);\n\nconst S3 = new Uint32Array([\n  0x3a39ce37, 0xd3faf5cf, 0xabc27737, 0x5ac52d1b,\n  0x5cb0679e, 0x4fa33742, 0xd3822740, 0x99bc9bbe,\n  0xd5118e9d, 0xbf0f7315, 0xd62d1c7e, 0xc700c47b,\n  0xb78c1b6b, 0x21a19045, 0xb26eb1be, 0x6a366eb4,\n  0x5748ab2f, 0xbc946e79, 0xc6a376d2, 0x6549c2c8,\n  0x530ff8ee, 0x468dde7d, 0xd5730a1d, 0x4cd04dc6,\n  0x2939bbdb, 0xa9ba4650, 0xac9526e8, 0xbe5ee304,\n  0xa1fad5f0, 0x6a2d519a, 0x63ef8ce2, 0x9a86ee22,\n  0xc089c2b8, 0x43242ef6, 0xa51e03aa, 0x9cf2d0a4,\n  0x83c061ba, 0x9be96a4d, 0x8fe51550, 0xba645bd6,\n  0x2826a2f9, 0xa73a3ae1, 0x4ba99586, 0xef5562e9,\n  0xc72fefd3, 0xf752f7da, 0x3f046f69, 0x77fa0a59,\n  0x80e4a915, 0x87b08601, 0x9b09e6ad, 0x3b3ee593,\n  0xe990fd5a, 0x9e34d797, 0x2cf0b7d9, 0x022b8b51,\n  0x96d5ac3a, 0x017da67d, 0xd1cf3ed6, 0x7c7d2d28,\n  0x1f9f25cf, 0xadf2b89b, 0x5ad6b472, 0x5a88f54c,\n  0xe029ac71, 0xe019a5e6, 0x47b0acfd, 0xed93fa9b,\n  0xe8d3c48d, 0x283b57cc, 0xf8d56629, 0x79132e28,\n  0x785f0191, 0xed756055, 0xf7960e44, 0xe3d35e8c,\n  0x15056dd4, 0x88f46dba, 0x03a16125, 0x0564f0bd,\n  0xc3eb9e15, 0x3c9057a2, 0x97271aec, 0xa93a072a,\n  0x1b3f6d9b, 0x1e6321f5, 0xf59c66fb, 0x26dcf319,\n  0x7533d928, 0xb155fdf5, 0x03563482, 0x8aba3cbb,\n  0x28517711, 0xc20ad9f8, 0xabcc5167, 0xccad925f,\n  0x4de81751, 0x3830dc8e, 0x379d5862, 0x9320f991,\n  0xea7a90c2, 0xfb3e7bce, 0x5121ce64, 0x774fbe32,\n  0xa8b6e37e, 0xc3293d46, 0x48de5369, 0x6413e680,\n  0xa2ae0810, 0xdd6db224, 0x69852dfd, 0x09072166,\n  0xb39a460a, 0x6445c0dd, 0x586cdecf, 0x1c20c8ae,\n  0x5bbef7dd, 0x1b588d40, 0xccd2017f, 0x6bb4e3bb,\n  0xdda26a7e, 0x3a59ff45, 0x3e350a44, 0xbcb4cdd5,\n  0x72eacea8, 0xfa6484bb, 0x8d6612ae, 0xbf3c6f47,\n  0xd29be463, 0x542f5d9e, 0xaec2771b, 0xf64e6370,\n  0x740e0d8d, 0xe75b1357, 0xf8721671, 0xaf537d5d,\n  0x4040cb08, 0x4eb4e2cc, 0x34d2466a, 0x0115af84,\n  0xe1b00428, 0x95983a1d, 0x06b89fb4, 0xce6ea048,\n  0x6f3f3b82, 0x3520ab82, 0x011a1d4b, 0x277227f8,\n  0x611560b1, 0xe7933fdc, 0xbb3a792b, 0x344525bd,\n  0xa08839e1, 0x51ce794b, 0x2f32c9b7, 0xa01fbac9,\n  0xe01cc87e, 0xbcc7d1f6, 0xcf0111c3, 0xa1e8aac7,\n  0x1a908749, 0xd44fbd9a, 0xd0dadecb, 0xd50ada38,\n  0x0339c32a, 0xc6913667, 0x8df9317c, 0xe0b12b4f,\n  0xf79e59b7, 0x43f5bb3a, 0xf2d519ff, 0x27d9459c,\n  0xbf97222c, 0x15e6fc2a, 0x0f91fc71, 0x9b941525,\n  0xfae59361, 0xceb69ceb, 0xc2a86459, 0x12baa8d1,\n  0xb6c1075e, 0xe3056a0c, 0x10d25065, 0xcb03a442,\n  0xe0ec6e0e, 0x1698db3b, 0x4c98a0be, 0x3278e964,\n  0x9f1f9532, 0xe0d392df, 0xd3a0342b, 0x8971f21e,\n  0x1b0a7441, 0x4ba3348c, 0xc5be7120, 0xc37632d8,\n  0xdf359f8d, 0x9b992f2e, 0xe60b6f47, 0x0fe3f11d,\n  0xe54cda54, 0x1edad891, 0xce6279cf, 0xcd3e7e6f,\n  0x1618b166, 0xfd2c1d05, 0x848fd2c5, 0xf6fb2299,\n  0xf523f357, 0xa6327623, 0x93a83531, 0x56cccd02,\n  0xacf08162, 0x5a75ebb5, 0x6e163697, 0x88d273cc,\n  0xde966292, 0x81b949d0, 0x4c50901b, 0x71c65614,\n  0xe6c6c7bd, 0x327a140a, 0x45e1d006, 0xc3f27b9a,\n  0xc9aa53fd, 0x62a80f00, 0xbb25bfe2, 0x35bdd2f6,\n  0x71126905, 0xb2040222, 0xb6cbcf7c, 0xcd769c2b,\n  0x53113ec0, 0x1640e3d3, 0x38abbd60, 0x2547adf0,\n  0xba38209c, 0xf746ce76, 0x77afa1c5, 0x20756060,\n  0x85cbfe4e, 0x8ae88dd8, 0x7aaaf9b0, 0x4cf9aa7e,\n  0x1948c25c, 0x02fb8a8c, 0x01c36ae4, 0xd6ebe1f9,\n  0x90d4f869, 0xa65cdea0, 0x3f09252d, 0xc208e69f,\n  0xb74e6132, 0xce77e25b, 0x578fdfe3, 0x3ac372e6\n]);\n\nconst P = new Uint32Array([\n  0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344,\n  0xa4093822, 0x299f31d0, 0x082efa98, 0xec4e6c89,\n  0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,\n  0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917,\n  0x9216d5d9, 0x8979fb1b\n]);\n\n/**\n * Blowfish\n */\n\nclass Blowfish {\n  constructor() {\n    this.S = [\n      new Uint32Array(S0.length),\n      new Uint32Array(S1.length),\n      new Uint32Array(S2.length),\n      new Uint32Array(S3.length)\n    ];\n    this.P = new Uint32Array(P.length);\n    this.block = new Uint32Array(2);\n    this.off = 0;\n  }\n\n  get blockSize() {\n    return 8;\n  }\n\n  init(key, salt) {\n    assert(Buffer.isBuffer(key));\n    assert(key.length >= 1 && key.length <= 72);\n\n    if (salt != null) {\n      assert(Buffer.isBuffer(salt));\n      assert(salt.length <= 1096);\n    }\n\n    copy(this.S[0], S0);\n    copy(this.S[1], S1);\n    copy(this.S[2], S2);\n    copy(this.S[3], S3);\n    copy(this.P, P);\n\n    this.off = 0;\n\n    if (salt && salt.length > 0)\n      this.expandstate(key, salt);\n    else\n      this.expand0state(key);\n\n    return this;\n  }\n\n  encrypt(output, opos, input, ipos) {\n    const d = this.block;\n\n    d[0] = readU32(input, ipos + 0);\n    d[1] = readU32(input, ipos + 4);\n\n    this.encipher(d, 0);\n\n    writeU32(output, d[0], opos + 0);\n    writeU32(output, d[1], opos + 4);\n\n    return this;\n  }\n\n  decrypt(output, opos, input, ipos) {\n    const d = this.block;\n\n    d[0] = readU32(input, ipos + 0);\n    d[1] = readU32(input, ipos + 4);\n\n    this.decipher(d, 0);\n\n    writeU32(output, d[0], opos + 0);\n    writeU32(output, d[1], opos + 4);\n\n    return this;\n  }\n\n  destroy() {\n    cleanse(this.S[0]);\n    cleanse(this.S[1]);\n    cleanse(this.S[2]);\n    cleanse(this.S[3]);\n    cleanse(this.P);\n    cleanse(this.block);\n\n    this.off = 0;\n\n    return this;\n  }\n\n  encipher(x, off) {\n    const S = this.S;\n    const P = this.P;\n\n    let l = x[off + 0] ^ P[0];\n    let r = x[off + 1];\n\n    r ^= substitute(S, l) ^ P[1];\n    l ^= substitute(S, r) ^ P[2];\n    r ^= substitute(S, l) ^ P[3];\n    l ^= substitute(S, r) ^ P[4];\n    r ^= substitute(S, l) ^ P[5];\n    l ^= substitute(S, r) ^ P[6];\n    r ^= substitute(S, l) ^ P[7];\n    l ^= substitute(S, r) ^ P[8];\n    r ^= substitute(S, l) ^ P[9];\n    l ^= substitute(S, r) ^ P[10];\n    r ^= substitute(S, l) ^ P[11];\n    l ^= substitute(S, r) ^ P[12];\n    r ^= substitute(S, l) ^ P[13];\n    l ^= substitute(S, r) ^ P[14];\n    r ^= substitute(S, l) ^ P[15];\n    l ^= substitute(S, r) ^ P[16];\n\n    x[off + 0] = r ^ P[17];\n    x[off + 1] = l;\n  }\n\n  decipher(x, off) {\n    const S = this.S;\n    const P = this.P;\n\n    let l = x[off + 0] ^ P[17];\n    let r = x[off + 1];\n\n    r ^= substitute(S, l) ^ P[16];\n    l ^= substitute(S, r) ^ P[15];\n    r ^= substitute(S, l) ^ P[14];\n    l ^= substitute(S, r) ^ P[13];\n    r ^= substitute(S, l) ^ P[12];\n    l ^= substitute(S, r) ^ P[11];\n    r ^= substitute(S, l) ^ P[10];\n    l ^= substitute(S, r) ^ P[9];\n    r ^= substitute(S, l) ^ P[8];\n    l ^= substitute(S, r) ^ P[7];\n    r ^= substitute(S, l) ^ P[6];\n    l ^= substitute(S, r) ^ P[5];\n    r ^= substitute(S, l) ^ P[4];\n    l ^= substitute(S, r) ^ P[3];\n    r ^= substitute(S, l) ^ P[2];\n    l ^= substitute(S, r) ^ P[1];\n\n    x[off + 0] = r ^ P[0];\n    x[off + 1] = l;\n  }\n\n  stream2word(data) {\n    if (data.length === 0) {\n      this.off = 0;\n      return 0;\n    }\n\n    const word = (data[(this.off + 0) % data.length] * 0x1000000\n                + data[(this.off + 1) % data.length] * 0x0010000\n                + data[(this.off + 2) % data.length] * 0x0000100\n                + data[(this.off + 3) % data.length] * 0x0000001);\n\n    this.off = (this.off + 4) % data.length;\n\n    return word;\n  }\n\n  expand0state(key) {\n    const d = new Uint32Array(2);\n\n    this.off = 0;\n\n    for (let i = 0; i < 18; i++)\n      this.P[i] ^= this.stream2word(key);\n\n    this.off = 0;\n\n    for (let i = 0; i < 18; i += 2) {\n      this.encipher(d, 0);\n\n      this.P[i + 0] = d[0];\n      this.P[i + 1] = d[1];\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let k = 0; k < 256; k += 2) {\n        this.encipher(d, 0);\n\n        this.S[i][k + 0] = d[0];\n        this.S[i][k + 1] = d[1];\n      }\n    }\n  }\n\n  expandstate(key, data) {\n    const d = new Uint32Array(2);\n\n    this.off = 0;\n\n    for (let i = 0; i < 18; i++)\n      this.P[i] ^= this.stream2word(key);\n\n    this.off = 0;\n\n    for (let i = 0; i < 18; i += 2) {\n      d[0] ^= this.stream2word(data);\n      d[1] ^= this.stream2word(data);\n\n      this.encipher(d, 0);\n\n      this.P[i + 0] = d[0];\n      this.P[i + 1] = d[1];\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let k = 0; k < 256; k += 2) {\n        d[0] ^= this.stream2word(data);\n        d[1] ^= this.stream2word(data);\n\n        this.encipher(d, 0);\n\n        this.S[i][k + 0] = d[0];\n        this.S[i][k + 1] = d[1];\n      }\n    }\n\n    this.off = 0;\n  }\n\n  enc(data) {\n    const blocks = data.length >>> 1;\n\n    for (let i = 0; i < blocks; i++)\n      this.encipher(data, i * 2);\n  }\n\n  dec(data) {\n    const blocks = data.length >>> 1;\n\n    for (let i = 0; i < blocks; i++)\n      this.decipher(data, i * 2);\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction substitute(S, x) {\n  return ((S[0][(x >>> 24) & 0xff]\n         + S[1][(x >>> 16) & 0xff]\n         ^ S[2][(x >>>  8) & 0xff])\n         + S[3][(x >>>  0) & 0xff]);\n}\n\nfunction copy(dst, src) {\n  for (let i = 0; i < src.length; i++)\n    dst[i] = src[i];\n}\n\nfunction cleanse(arr) {\n  for (let i = 0; i < arr.length; i++)\n    arr[i] = 0;\n}\n\nfunction readU32(data, off) {\n  return (data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num >>> 24;\n  dst[off++] = num >>> 16;\n  dst[off++] = num >>> 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Blowfish;\n","/*!\n * custom.js - custom inspect symbol for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nexports.custom = 'inspect';\n","'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*!\n * salsa20.js - salsa20 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/salsa20');\n","/*!\n * poly1305.js - poly1305 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/poly1305');\n","/*!\n * x25519.js - x25519 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/x25519');\n","/*!\n * ecdh.js - ECDH for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://cr.yp.to/ecdh.html\n *   https://cr.yp.to/ecdh/curve25519-20060209.pdf\n *   https://tools.ietf.org/html/rfc7748\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst BN = require('../bn');\nconst elliptic = require('./elliptic');\nconst rng = require('../random');\n\n/**\n * ECDH\n */\n\nclass ECDH {\n  constructor(id, eid, pre) {\n    assert(typeof id === 'string');\n    assert(!eid || typeof eid === 'string');\n\n    this.id = id;\n    this.type = 'ecdh';\n    this.eid = eid || null;\n    this._pre = pre || null;\n    this._curve = null;\n    this._edwards = null;\n    this.native = 0;\n  }\n\n  get curve() {\n    if (!this._curve)\n      this._curve = elliptic.curve(this.id);\n    return this._curve;\n  }\n\n  get edwards() {\n    if (this.eid && !this._edwards) {\n      this._edwards = elliptic.curve(this.eid, this._pre);\n      this._edwards.precompute(rng);\n      this._pre = null;\n    }\n    return this._edwards;\n  }\n\n  get size() {\n    return this.curve.fieldSize;\n  }\n\n  get bits() {\n    return this.curve.fieldBits;\n  }\n\n  privateKeyGenerate() {\n    const key = rng.randomBytes(this.curve.scalarSize);\n    return this.curve.clamp(key);\n  }\n\n  privateKeyVerify(key) {\n    assert(Buffer.isBuffer(key));\n    return key.length === this.curve.scalarSize;\n  }\n\n  privateKeyExport(key, sign) {\n    const pub = this.publicKeyCreate(key);\n    const {x, y} = this.publicKeyExport(pub, sign);\n\n    return {\n      d: Buffer.from(key),\n      x,\n      y\n    };\n  }\n\n  privateKeyImport(json) {\n    assert(json && typeof json === 'object');\n\n    const a = BN.decode(json.d, this.curve.endian);\n\n    if (a.byteLength() > this.curve.scalarSize)\n      throw new Error('Invalid private key.');\n\n    return this.curve.encodeScalar(a);\n  }\n\n  publicKeyCreate(key) {\n    const a = this.curve.decodeClamped(key);\n\n    if (this.edwards && this.edwards.g.pre) {\n      const A = this.edwards.g.mulBlind(a);\n      const P = this.curve.pointFromEdwards(A);\n\n      return P.encode();\n    }\n\n    const G = this.curve.g.toX();\n    const A = G.mulBlind(a, rng);\n\n    return A.encode();\n  }\n\n  publicKeyConvert(key, sign) {\n    assert(sign == null || typeof sign === 'boolean');\n\n    if (!this.edwards)\n      throw new Error('No equivalent edwards curve.');\n\n    const A = this.curve.decodePoint(key);\n    const P = this.edwards.pointFromMont(A);\n\n    if (sign != null) {\n      if (P.isOdd() !== sign)\n        return P.neg().encode();\n    }\n\n    return P.encode();\n  }\n\n  publicKeyFromUniform(bytes) {\n    const u = this.curve.decodeUniform(bytes);\n    const A = this.curve.pointFromUniform(u);\n\n    return A.encode();\n  }\n\n  publicKeyToUniform(key, hint = rng.randomInt()) {\n    const A = this.curve.decodePoint(key);\n    const u = this.curve.pointToUniform(A, hint);\n\n    return this.curve.encodeUniform(u, hint >>> 8);\n  }\n\n  publicKeyFromHash(bytes, pake = false) {\n    const A = this.curve.pointFromHash(bytes, pake);\n\n    return A.encode();\n  }\n\n  publicKeyToHash(key, subgroup = rng.randomInt()) {\n    const A = this.curve.decodePoint(key);\n    return this.curve.pointToHash(A, subgroup, rng);\n  }\n\n  publicKeyVerify(key) {\n    assert(Buffer.isBuffer(key));\n\n    let A;\n    try {\n      A = this.curve.decodeX(key);\n    } catch (e) {\n      return false;\n    }\n\n    return A.validate();\n  }\n\n  publicKeyIsSmall(key) {\n    assert(Buffer.isBuffer(key));\n\n    let A;\n    try {\n      A = this.curve.decodeX(key);\n    } catch (e) {\n      return false;\n    }\n\n    if (!A.validate())\n      return false;\n\n    return A.isSmall();\n  }\n\n  publicKeyHasTorsion(key) {\n    assert(Buffer.isBuffer(key));\n\n    let A;\n    try {\n      A = this.curve.decodeX(key);\n    } catch (e) {\n      return false;\n    }\n\n    if (!A.validate())\n      return false;\n\n    return A.hasTorsion();\n  }\n\n  publicKeyExport(key, sign) {\n    const {x, y} = this.curve.decodePoint(key, sign);\n\n    return {\n      x: this.curve.encodeField(x.fromRed()),\n      y: this.curve.encodeField(y.fromRed())\n    };\n  }\n\n  publicKeyImport(json) {\n    assert(json && typeof json === 'object');\n\n    const x = BN.decode(json.x, this.curve.endian);\n\n    if (x.cmp(this.curve.p) >= 0)\n      throw new Error('Invalid point.');\n\n    if (json.y != null) {\n      const y = BN.decode(json.y, this.curve.endian);\n\n      if (y.cmp(this.curve.p) >= 0)\n        throw new Error('Invalid point.');\n\n      const A = this.curve.point(x, y);\n\n      if (!A.validate())\n        throw new Error('Invalid point.');\n\n      return A.encode();\n    }\n\n    const A = this.curve.pointFromX(x);\n\n    return A.encode();\n  }\n\n  derive(pub, priv) {\n    const A = this.curve.decodeX(pub);\n    const a = this.curve.decodeClamped(priv);\n    const P = A.mulBlind(a, rng);\n\n    return P.encode();\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = ECDH;\n","/*!\n * chacha20.js - chacha20 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/chacha20');\n","/*!\n * keccak.js - Keccak/SHA3 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on emn178/js-sha3:\n *   Copyright (c) 2015-2017, Chen, Yi-Cyuan (MIT License).\n *   https://github.com/emn178/js-sha3\n *\n * Parts of this software are based on rhash/RHash:\n *   Copyright (c) 2005-2014, Aleksey Kravchenko\n *   https://github.com/rhash/RHash\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SHA-3\n *   https://keccak.team/specifications.html\n *   https://csrc.nist.gov/projects/hash-functions/sha-3-project/sha-3-standardization\n *   http://dx.doi.org/10.6028/NIST.FIPS.202\n *   https://github.com/rhash/RHash/blob/master/librhash/sha3.c\n *   https://github.com/emn178/js-sha3/blob/master/src/sha3.js\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst HMAC = require('../internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = 0x80000000;\n\nconst ROUND_CONST = new Uint32Array([\n  0x00000001, 0x00000000, 0x00008082, 0x00000000,\n  0x0000808a, 0x80000000, 0x80008000, 0x80000000,\n  0x0000808b, 0x00000000, 0x80000001, 0x00000000,\n  0x80008081, 0x80000000, 0x00008009, 0x80000000,\n  0x0000008a, 0x00000000, 0x00000088, 0x00000000,\n  0x80008009, 0x00000000, 0x8000000a, 0x00000000,\n  0x8000808b, 0x00000000, 0x0000008b, 0x80000000,\n  0x00008089, 0x80000000, 0x00008003, 0x80000000,\n  0x00008002, 0x80000000, 0x00000080, 0x80000000,\n  0x0000800a, 0x00000000, 0x8000000a, 0x80000000,\n  0x80008081, 0x80000000, 0x00008080, 0x80000000,\n  0x80000001, 0x00000000, 0x80008008, 0x80000000\n]);\n\n/**\n * Keccak\n */\n\nclass Keccak {\n  constructor() {\n    this.state = new Uint32Array(50);\n    this.block = Buffer.alloc(200);\n    this.bs = 136;\n    this.pos = FINALIZED;\n  }\n\n  init(bits) {\n    if (bits == null)\n      bits = 256;\n\n    assert((bits >>> 0) === bits);\n    assert(bits >= 128);\n    assert(bits <= 512);\n\n    const rate = 1600 - bits * 2;\n\n    assert(rate >= 0 && (rate & 63) === 0);\n\n    this.bs = rate >>> 3;\n    this.pos = 0;\n\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    assert(!(this.pos & FINALIZED), 'Context is not initialized.');\n\n    let len = data.length;\n    let pos = this.pos;\n    let off = 0;\n\n    this.pos = (this.pos + len) % this.bs;\n\n    if (pos > 0) {\n      let want = this.bs - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < this.bs)\n        return this;\n\n      this._transform(this.block, 0);\n    }\n\n    while (len >= this.bs) {\n      this._transform(data, off);\n      off += this.bs;\n      len -= this.bs;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n\n    return this;\n  }\n\n  final(pad, len) {\n    if (pad == null)\n      pad = 0x01;\n\n    if (len == null || len === 0)\n      len = 100 - (this.bs >>> 1);\n\n    assert((pad & 0xff) === pad);\n    assert((len >>> 0) === len);\n    assert(!(this.pos & FINALIZED), 'Context is not initialized.');\n\n    this.block.fill(0, this.pos, this.bs);\n    this.block[this.pos] |= pad;\n    this.block[this.bs - 1] |= 0x80;\n    this._transform(this.block, 0);\n    this.pos = FINALIZED;\n\n    assert(len <= this.bs);\n\n    const out = Buffer.alloc(len);\n\n    for (let i = 0; i < len; i++)\n      out[i] = this.state[i >>> 2] >>> (8 * (i & 3));\n\n    for (let i = 0; i < 50; i++)\n      this.state[i] = 0;\n\n    for (let i = 0; i < this.bs; i++)\n      this.block[i] = 0;\n\n    return out;\n  }\n\n  _transform(block, off) {\n    const count = this.bs >>> 2;\n    const s = this.state;\n\n    for (let i = 0; i < count; i++)\n      s[i] ^= readU32(block, off + i * 4);\n\n    for (let n = 0; n < 48; n += 2) {\n      const c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      const c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      const c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      const c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      const c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      const c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      const c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      const c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      const c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      const c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      const h0 = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      const l0 = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      const h1 = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      const l1 = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      const h2 = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      const l2 = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      const h3 = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      const l3 = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      const h4 = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      const l4 = c7 ^ ((c1 << 1) | (c0 >>> 31));\n\n      s[0] ^= h0;\n      s[1] ^= l0;\n      s[10] ^= h0;\n      s[11] ^= l0;\n      s[20] ^= h0;\n      s[21] ^= l0;\n      s[30] ^= h0;\n      s[31] ^= l0;\n      s[40] ^= h0;\n      s[41] ^= l0;\n\n      s[2] ^= h1;\n      s[3] ^= l1;\n      s[12] ^= h1;\n      s[13] ^= l1;\n      s[22] ^= h1;\n      s[23] ^= l1;\n      s[32] ^= h1;\n      s[33] ^= l1;\n      s[42] ^= h1;\n      s[43] ^= l1;\n\n      s[4] ^= h2;\n      s[5] ^= l2;\n      s[14] ^= h2;\n      s[15] ^= l2;\n      s[24] ^= h2;\n      s[25] ^= l2;\n      s[34] ^= h2;\n      s[35] ^= l2;\n      s[44] ^= h2;\n      s[45] ^= l2;\n\n      s[6] ^= h3;\n      s[7] ^= l3;\n      s[16] ^= h3;\n      s[17] ^= l3;\n      s[26] ^= h3;\n      s[27] ^= l3;\n      s[36] ^= h3;\n      s[37] ^= l3;\n      s[46] ^= h3;\n      s[47] ^= l3;\n\n      s[8] ^= h4;\n      s[9] ^= l4;\n      s[18] ^= h4;\n      s[19] ^= l4;\n      s[28] ^= h4;\n      s[29] ^= l4;\n      s[38] ^= h4;\n      s[39] ^= l4;\n      s[48] ^= h4;\n      s[49] ^= l4;\n\n      const b0 = s[0];\n      const b1 = s[1];\n      const b32 = (s[11] << 4) | (s[10] >>> 28);\n      const b33 = (s[10] << 4) | (s[11] >>> 28);\n      const b14 = (s[20] << 3) | (s[21] >>> 29);\n      const b15 = (s[21] << 3) | (s[20] >>> 29);\n      const b46 = (s[31] << 9) | (s[30] >>> 23);\n      const b47 = (s[30] << 9) | (s[31] >>> 23);\n      const b28 = (s[40] << 18) | (s[41] >>> 14);\n      const b29 = (s[41] << 18) | (s[40] >>> 14);\n      const b20 = (s[2] << 1) | (s[3] >>> 31);\n      const b21 = (s[3] << 1) | (s[2] >>> 31);\n      const b2 = (s[13] << 12) | (s[12] >>> 20);\n      const b3 = (s[12] << 12) | (s[13] >>> 20);\n      const b34 = (s[22] << 10) | (s[23] >>> 22);\n      const b35 = (s[23] << 10) | (s[22] >>> 22);\n      const b16 = (s[33] << 13) | (s[32] >>> 19);\n      const b17 = (s[32] << 13) | (s[33] >>> 19);\n      const b48 = (s[42] << 2) | (s[43] >>> 30);\n      const b49 = (s[43] << 2) | (s[42] >>> 30);\n      const b40 = (s[5] << 30) | (s[4] >>> 2);\n      const b41 = (s[4] << 30) | (s[5] >>> 2);\n      const b22 = (s[14] << 6) | (s[15] >>> 26);\n      const b23 = (s[15] << 6) | (s[14] >>> 26);\n      const b4 = (s[25] << 11) | (s[24] >>> 21);\n      const b5 = (s[24] << 11) | (s[25] >>> 21);\n      const b36 = (s[34] << 15) | (s[35] >>> 17);\n      const b37 = (s[35] << 15) | (s[34] >>> 17);\n      const b18 = (s[45] << 29) | (s[44] >>> 3);\n      const b19 = (s[44] << 29) | (s[45] >>> 3);\n      const b10 = (s[6] << 28) | (s[7] >>> 4);\n      const b11 = (s[7] << 28) | (s[6] >>> 4);\n      const b42 = (s[17] << 23) | (s[16] >>> 9);\n      const b43 = (s[16] << 23) | (s[17] >>> 9);\n      const b24 = (s[26] << 25) | (s[27] >>> 7);\n      const b25 = (s[27] << 25) | (s[26] >>> 7);\n      const b6 = (s[36] << 21) | (s[37] >>> 11);\n      const b7 = (s[37] << 21) | (s[36] >>> 11);\n      const b38 = (s[47] << 24) | (s[46] >>> 8);\n      const b39 = (s[46] << 24) | (s[47] >>> 8);\n      const b30 = (s[8] << 27) | (s[9] >>> 5);\n      const b31 = (s[9] << 27) | (s[8] >>> 5);\n      const b12 = (s[18] << 20) | (s[19] >>> 12);\n      const b13 = (s[19] << 20) | (s[18] >>> 12);\n      const b44 = (s[29] << 7) | (s[28] >>> 25);\n      const b45 = (s[28] << 7) | (s[29] >>> 25);\n      const b26 = (s[38] << 8) | (s[39] >>> 24);\n      const b27 = (s[39] << 8) | (s[38] >>> 24);\n      const b8 = (s[48] << 14) | (s[49] >>> 18);\n      const b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= ROUND_CONST[n + 0];\n      s[1] ^= ROUND_CONST[n + 1];\n    }\n  }\n\n  static hash() {\n    return new Keccak();\n  }\n\n  static hmac(bits, pad, len) {\n    if (bits == null)\n      bits = 256;\n\n    assert((bits >>> 0) === bits);\n\n    const rate = 1600 - bits * 2;\n\n    assert(rate >= 0 && (rate & 63) === 0);\n\n    return new HMAC(Keccak, rate >>> 3, [bits], [pad, len]);\n  }\n\n  static digest(data, bits, pad, len) {\n    return Keccak.ctx.init(bits).update(data).final(pad, len);\n  }\n\n  static root(left, right, bits, pad, len) {\n    if (bits == null)\n      bits = 256;\n\n    if (len == null)\n      len = 0;\n\n    if (len === 0)\n      len = bits >>> 3;\n\n    assert((bits >>> 0) === bits);\n    assert((bits & 7) === 0);\n    assert((len >>> 0) === len);\n    assert(Buffer.isBuffer(left) && left.length === len);\n    assert(Buffer.isBuffer(right) && right.length === len);\n\n    return Keccak.ctx.init(bits).update(left).update(right).final(pad, len);\n  }\n\n  static multi(x, y, z, bits, pad, len) {\n    const {ctx} = Keccak;\n\n    ctx.init(bits);\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final(pad, len);\n  }\n\n  static mac(data, key, bits, pad, len) {\n    return Keccak.hmac(bits, pad, len).init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nKeccak.native = 0;\nKeccak.id = 'KECCAK256';\nKeccak.size = 32;\nKeccak.bits = 256;\nKeccak.blockSize = 136;\nKeccak.zero = Buffer.alloc(32, 0x00);\nKeccak.ctx = new Keccak();\n\n/*\n * Helpers\n */\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Keccak;\n","/*!\n * dsa.js - DSA for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/dsa');\n","/*!\n * primes.js - Prime number generation for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009, The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Parts of this software are based on indutny/miller-rabin:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/miller-rabin\n *\n * Resources:\n *   https://github.com/golang/go/blob/master/src/crypto/rsa/rsa.go\n *   https://github.com/golang/go/blob/master/src/math/big/prime.go\n *   https://github.com/golang/go/blob/master/src/math/big/int.go\n *   https://github.com/golang/go/blob/master/src/math/big/nat.go\n *   https://github.com/golang/go/blob/master/src/crypto/rand/util.go\n *   https://github.com/indutny/miller-rabin/blob/master/lib/mr.js\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst BN = require('../bn');\nconst random = require('../random');\n\n/*\n * Constants\n */\n\nconst smallPrimes = new Uint8Array([\n   3,  5,  7,\n  11, 13, 17,\n  19, 23, 29,\n  31, 37, 41,\n  43, 47, 53\n]);\n\nconst smallPrimesProduct = new BN('16294579238595022365', 10);\n\nconst primeBitMaskLo = 0\n  | (1 << 2)\n  | (1 << 3)\n  | (1 << 5)\n  | (1 << 7)\n  | (1 << 11)\n  | (1 << 13)\n  | (1 << 17)\n  | (1 << 19)\n  | (1 << 23)\n  | (1 << 29)\n  | (1 << 31);\n\nconst primeBitMaskHi = 0\n  | (1 << (37 - 32))\n  | (1 << (41 - 32))\n  | (1 << (43 - 32))\n  | (1 << (47 - 32))\n  | (1 << (53 - 32))\n  | (1 << (59 - 32))\n  | (1 << (61 - 32));\n\nconst primesA = new BN(3 * 5 * 7 * 11 * 13 * 17 * 19 * 23 * 37);\nconst primesB = new BN(29 * 31 * 41 * 43 * 47 * 53);\n\n/*\n * Primality\n */\n\nfunction randomPrime(bits, reps = 20, rng = random) {\n  assert((bits >>> 0) === bits);\n  assert((reps >>> 0) === reps);\n  assert(rng != null);\n\n  if (bits < 2)\n    throw new Error('Prime must be at least 2 bits.');\n\n  for (;;) {\n    const p = BN.randomBits(rng, bits);\n\n    p.setn(bits - 1, 1);\n    p.setn(bits - 2, 1);\n    p.setn(0, 1);\n\n    const mod = p.mod(smallPrimesProduct);\n\nnext:\n    for (let delta = 0; delta < (1 << 20); delta += 2) {\n      const m = mod.addn(delta);\n\n      for (let i = 0; i < smallPrimes.length; i++) {\n        const prime = smallPrimes[i];\n\n        if (m.modrn(prime) === 0 && (bits > 6 || m.cmpn(prime) !== 0))\n          continue next;\n      }\n\n      p.iaddn(delta);\n\n      break;\n    }\n\n    if (p.bitLength() !== bits)\n      continue;\n\n    if (!isProbablePrime(p, reps, rng))\n      continue;\n\n    return p;\n  }\n}\n\nfunction isProbablePrime(x, reps, rng = random) {\n  assert(x instanceof BN);\n\n  if (x.sign() <= 0)\n    return false;\n\n  if (x.cmpn(64) < 0) {\n    const w = x.word(0);\n\n    if (w > 31)\n      return (primeBitMaskHi & (1 << (w - 32))) !== 0;\n\n    return (primeBitMaskLo & (1 << w)) !== 0;\n  }\n\n  if (x.isEven())\n    return false;\n\n  const ra = x.mod(primesA).toNumber();\n  const rb = x.mod(primesB).toNumber();\n\n  if (ra % 3 === 0\n      || ra % 5 === 0\n      || ra % 7 === 0\n      || ra % 11 === 0\n      || ra % 13 === 0\n      || ra % 17 === 0\n      || ra % 19 === 0\n      || ra % 23 === 0\n      || ra % 37 === 0\n      || rb % 29 === 0\n      || rb % 31 === 0\n      || rb % 41 === 0\n      || rb % 43 === 0\n      || rb % 47 === 0\n      || rb % 53 === 0) {\n    return false;\n  }\n\n  return x.isPrime(rng, reps);\n}\n\nfunction isSafePrime(x, reps, rng) {\n  // Safe Prime (2p + 1).\n  if (!isProbablePrime(x, reps, rng))\n    return false;\n\n  // Sophie Germain Prime (p).\n  const p = x.subn(1).iushrn(1);\n\n  if (!isProbablePrime(p, reps, rng))\n    return false;\n\n  return true;\n}\n\n/*\n * Expose\n */\n\nexports.randomPrime = randomPrime;\nexports.isProbablePrime = isProbablePrime;\nexports.isSafePrime = isSafePrime;\n","/*!\n * eb2k.js - eb2k for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/eb2k');\n","/*!\n * ed25519.js - ed25519 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/ed25519');\n","/*!\n * eddsa.js - EdDSA for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/elliptic:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/elliptic\n *\n * References:\n *\n *   [EDDSA] High-speed high-security signatures\n *     D. J. Bernstein, N. Duif, T. Lange, P. Schwabe, B. Yang\n *     https://ed25519.cr.yp.to/ed25519-20110926.pdf\n *\n *   [RFC8032] Edwards-Curve Digital Signature Algorithm (EdDSA)\n *     S. Josefsson, I. Liusvaara\n *     https://tools.ietf.org/html/rfc8032\n *\n * Implementation Notes:\n *\n *   - In contrast to the ECDSA backend, we allow points at\n *     infinity (in all functions).\n *\n *   - Mike Hamburg's Ed448-Goldilocks rejects both infinity as\n *     well as the torsion point (0, -1). We do not replicate\n *     this behavior.\n *\n *   - For Ed25519, we do \"cofactor-less\" verification by default.\n *     This means torsion components will affect the result of the\n *     verification.\n *\n *   - For Ed448, we do cofactor verification by default to mimic\n *     OpenSSL and Mike Hamburg's Ed448-Goldilocks implementation.\n *\n *   - `verifySingle`/`verifyBatch` do cofactor verification. Do\n *     not use `verifyBatch` expecting the same results as the\n *     regular `verify` call[1]. This will not be the case for\n *     Ed25519.\n *\n *   - All functions are completely unaware of points of small\n *     order and torsion components (in other words, points will\n *     not be explicitly checked for this, anywhere).\n *\n *   - `deriveWithScalar` and `exchangeWithScalar` automatically\n *     clamp scalars before multiplying (meaning torsion components\n *     are removed from the result and points of small order will\n *     be normalized to infinity).\n *\n *   - The HD function, `publicKeyTweakMul`, _does not_ clamp\n *     automatically. It is possible to end up with a torsion\n *     component in the resulting point (assuming the input\n *     point had one).\n *\n *   - Ed448-Goldilocks is 4-isogenous to Curve448. This means\n *     that when converting to Curve448, small order points will\n *     be normalized to (0, 0). When converting back to Ed448,\n *     any small order points will be normalized to infinity,\n *     and any torsion components will be removed completely.\n *     Also note that when converting back, the implementation\n *     needs to divide the point by 4. This is a major perf hit,\n *     so treat `x448.publicKeyConvert` as if it were a point\n *     multiplication.\n *\n *   - Elligators should not be used with Edwards curves. As\n *     Tibouchi notes[2], regular public keys will map to\n *     _distinguishable_ field elements as they are always in\n *     the primary subgroup. Either the Ristretto Elligator[3],\n *     or a prime order curve with an Elligator Squared[2]\n *     construction are suitable alternatives here.\n *\n *   - These notes also spell out why you should avoid using\n *     Edwards curves on a blockchain[4].\n *\n *   [1] https://moderncrypto.org/mail-archive/curves/2016/000836.html\n *   [2] https://eprint.iacr.org/2014/043.pdf\n *   [3] https://ristretto.group/formulas/elligator.html\n *   [4] https://src.getmonero.org/2017/05/17/disclosure-of-a-major-bug-in-cryptonote-based-currencies.html\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst BatchRNG = require('./batch-rng');\nconst BN = require('../bn');\nconst elliptic = require('./elliptic');\nconst rng = require('../random');\n\n/*\n * EDDSA\n */\n\nclass EDDSA {\n  constructor(id, mid, eid, hash, pre) {\n    assert(typeof id === 'string');\n    assert(!mid || typeof mid === 'string');\n    assert(!eid || typeof eid === 'string');\n    assert(hash);\n\n    this.id = id;\n    this.type = 'eddsa';\n    this.mid = mid || null;\n    this.eid = eid || null;\n    this.hash = hash;\n    this.native = 0;\n\n    this._pre = pre || null;\n    this._curve = null;\n    this._mont = null;\n    this._iso = null;\n    this._rng = null;\n  }\n\n  get curve() {\n    if (!this._curve) {\n      this._curve = elliptic.curve(this.id, this._pre);\n      this._curve.precompute(rng);\n      this._pre = null;\n    }\n    return this._curve;\n  }\n\n  get mont() {\n    if (this.mid && !this._mont)\n      this._mont = elliptic.curve(this.mid);\n    return this._mont;\n  }\n\n  get iso() {\n    if (!this.eid)\n      return this.mont;\n\n    if (!this._iso)\n      this._iso = elliptic.curve(this.eid);\n\n    return this._iso;\n  }\n\n  get rng() {\n    if (!this._rng)\n      this._rng = new BatchRNG(this.curve);\n\n    return this._rng;\n  }\n\n  get size() {\n    return this.curve.adjustedSize;\n  }\n\n  get bits() {\n    return this.curve.fieldBits;\n  }\n\n  hashNonce(prefix, msg, ph, ctx) {\n    const hash = new Hash(this);\n\n    hash.init(ph, ctx);\n    hash.update(prefix);\n    hash.update(msg);\n\n    return hash.final();\n  }\n\n  hashChallenge(R, A, m, ph, ctx) {\n    const hash = new Hash(this);\n\n    hash.init(ph, ctx);\n    hash.update(R);\n    hash.update(A);\n    hash.update(m);\n\n    return hash.final();\n  }\n\n  privateKeyGenerate() {\n    return rng.randomBytes(this.curve.adjustedSize);\n  }\n\n  scalarGenerate() {\n    const scalar = rng.randomBytes(this.curve.scalarSize);\n    return this.curve.clamp(scalar);\n  }\n\n  privateKeyExpand(secret) {\n    assert(Buffer.isBuffer(secret));\n    assert(secret.length === this.curve.adjustedSize);\n\n    const hash = this.hash.digest(secret, this.curve.adjustedSize * 2);\n\n    return this.curve.splitHash(hash);\n  }\n\n  privateKeyConvert(secret) {\n    const [key] = this.privateKeyExpand(secret);\n    return key;\n  }\n\n  privateKeyVerify(secret) {\n    assert(Buffer.isBuffer(secret));\n    return secret.length === this.curve.adjustedSize;\n  }\n\n  scalarVerify(scalar) {\n    assert(Buffer.isBuffer(scalar));\n    return scalar.length === this.curve.scalarSize;\n  }\n\n  scalarIsZero(scalar) {\n    assert(Buffer.isBuffer(scalar));\n\n    let k;\n    try {\n      k = this.curve.decodeScalar(scalar).imod(this.curve.n);\n    } catch (e) {\n      return false;\n    }\n\n    return k.isZero();\n  }\n\n  scalarClamp(scalar) {\n    assert(Buffer.isBuffer(scalar));\n    assert(scalar.length === this.curve.scalarSize);\n\n    return this.curve.clamp(Buffer.from(scalar));\n  }\n\n  privateKeyExport(secret) {\n    const pub = this.publicKeyCreate(secret);\n    const {x, y} = this.publicKeyExport(pub);\n\n    return {\n      d: Buffer.from(secret),\n      x,\n      y\n    };\n  }\n\n  privateKeyImport(json) {\n    assert(json && typeof json === 'object');\n    assert(Buffer.isBuffer(json.d));\n\n    if (json.d.length !== this.curve.adjustedSize)\n      throw new Error('Invalid private key.');\n\n    return Buffer.from(json.d);\n  }\n\n  scalarTweakAdd(scalar, tweak) {\n    const a = this.curve.decodeScalar(scalar);\n    const t = this.curve.decodeScalar(tweak);\n    const k = a.add(t).imod(this.curve.n);\n\n    return this.curve.encodeScalar(k);\n  }\n\n  scalarTweakMul(scalar, tweak) {\n    const a = this.curve.decodeScalar(scalar);\n    const t = this.curve.decodeScalar(tweak);\n    const k = a.mul(t).imod(this.curve.n);\n\n    return this.curve.encodeScalar(k);\n  }\n\n  scalarReduce(scalar) {\n    const a = this.curve.decodeScalar(scalar);\n    const k = a.imod(this.curve.n);\n\n    return this.curve.encodeScalar(k);\n  }\n\n  scalarNegate(scalar) {\n    const a = this.curve.decodeScalar(scalar).imod(this.curve.n);\n    const k = a.neg().imod(this.curve.n);\n\n    return this.curve.encodeScalar(k);\n  }\n\n  scalarInvert(scalar) {\n    const a = this.curve.decodeScalar(scalar).imod(this.curve.n);\n\n    if (a.isZero())\n      return this.curve.encodeScalar(a);\n\n    const k = a.invert(this.curve.n);\n\n    return this.curve.encodeScalar(k);\n  }\n\n  publicKeyCreate(secret) {\n    const key = this.privateKeyConvert(secret);\n    return this.publicKeyFromScalar(key);\n  }\n\n  publicKeyFromScalar(scalar) {\n    const a = this.curve.decodeScalar(scalar).imod(this.curve.n);\n    const A = this.curve.g.mulBlind(a);\n\n    return A.encode();\n  }\n\n  publicKeyConvert(key) {\n    if (!this.mont)\n      throw new Error('No equivalent montgomery curve.');\n\n    const A = this.curve.decodePoint(key);\n    const P = this.mont.pointFromEdwards(A);\n\n    return P.encode();\n  }\n\n  publicKeyFromUniform(bytes) {\n    const u = this.curve.decodeUniform(bytes);\n    const A = this.curve.pointFromUniform(u, this.iso);\n\n    return A.encode();\n  }\n\n  publicKeyToUniform(key, hint = rng.randomInt()) {\n    const A = this.curve.decodePoint(key);\n    const u = this.curve.pointToUniform(A, hint, this.iso);\n\n    return this.curve.encodeUniform(u, hint >>> 8);\n  }\n\n  publicKeyFromHash(bytes, pake = false) {\n    const A = this.curve.pointFromHash(bytes, pake, this.iso);\n    return A.encode();\n  }\n\n  publicKeyToHash(key, subgroup = rng.randomInt()) {\n    const A = this.curve.decodePoint(key);\n    return this.curve.pointToHash(A, subgroup, rng, this.iso);\n  }\n\n  publicKeyVerify(key) {\n    assert(Buffer.isBuffer(key));\n\n    try {\n      this.curve.decodePoint(key);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  publicKeyIsInfinity(key) {\n    assert(Buffer.isBuffer(key));\n\n    let A;\n    try {\n      A = this.curve.decodePoint(key);\n    } catch (e) {\n      return false;\n    }\n\n    return A.isInfinity();\n  }\n\n  publicKeyIsSmall(key) {\n    assert(Buffer.isBuffer(key));\n\n    let A;\n    try {\n      A = this.curve.decodePoint(key);\n    } catch (e) {\n      return false;\n    }\n\n    return A.isSmall();\n  }\n\n  publicKeyHasTorsion(key) {\n    assert(Buffer.isBuffer(key));\n\n    let A;\n    try {\n      A = this.curve.decodePoint(key);\n    } catch (e) {\n      return false;\n    }\n\n    return A.hasTorsion();\n  }\n\n  publicKeyExport(key) {\n    const {x, y} = this.curve.decodePoint(key);\n\n    return {\n      x: this.curve.encodeField(x.fromRed()),\n      y: this.curve.encodeField(y.fromRed())\n    };\n  }\n\n  publicKeyImport(json) {\n    assert(json && typeof json === 'object');\n\n    let x = null;\n    let y = null;\n    let A;\n\n    if (json.x != null) {\n      x = BN.decode(json.x, this.curve.endian);\n\n      if (x.cmp(this.curve.p) >= 0)\n        throw new Error('Invalid point.');\n    }\n\n    if (json.y != null) {\n      y = BN.decode(json.y, this.curve.endian);\n\n      if (y.cmp(this.curve.p) >= 0)\n        throw new Error('Invalid point.');\n    }\n\n    if (x && y) {\n      A = this.curve.point(x, y);\n\n      if (!A.validate())\n        throw new Error('Invalid point.');\n    } else if (x) {\n      A = this.curve.pointFromX(x, json.sign);\n    } else if (y) {\n      A = this.curve.pointFromY(y, json.sign);\n    } else {\n      throw new Error('Invalid point.');\n    }\n\n    return A.encode();\n  }\n\n  publicKeyTweakAdd(key, tweak) {\n    const t = this.curve.decodeScalar(tweak).imod(this.curve.n);\n    const A = this.curve.decodePoint(key);\n    const T = this.curve.g.mul(t);\n    const P = T.add(A);\n\n    return P.encode();\n  }\n\n  publicKeyTweakMul(key, tweak) {\n    const t = this.curve.decodeScalar(tweak);\n    const A = this.curve.decodePoint(key);\n    const P = A.mul(t);\n\n    return P.encode();\n  }\n\n  publicKeyCombine(keys) {\n    assert(Array.isArray(keys));\n\n    let P = this.curve.point();\n\n    for (const key of keys) {\n      const A = this.curve.decodePoint(key);\n\n      P = P.add(A);\n    }\n\n    return P.encode();\n  }\n\n  publicKeyNegate(key) {\n    const A = this.curve.decodePoint(key);\n    const P = A.neg();\n\n    return P.encode();\n  }\n\n  sign(msg, secret, ph, ctx) {\n    const [key, prefix] = this.privateKeyExpand(secret);\n    return this.signWithScalar(msg, key, prefix, ph, ctx);\n  }\n\n  signWithScalar(msg, scalar, prefix, ph, ctx) {\n    // EdDSA Signing.\n    //\n    // [EDDSA] Page 12, Section 4.\n    // [RFC8032] Page 8, Section 3.3.\n    //\n    // Assumptions:\n    //\n    //   - Let `H` be a cryptographic hash function.\n    //   - Let `m` be a byte array of arbitrary size.\n    //   - Let `a` be a secret scalar.\n    //   - Let `w` be a secret byte array.\n    //\n    // Computation:\n    //\n    //   k = H(w, m) mod n\n    //   R = G * k\n    //   A = G * a\n    //   e = H(R, A, m) mod n\n    //   s = (k + e * a) mod n\n    //   S = (R, s)\n    //\n    // Note that `k` must remain secret,\n    // otherwise an attacker can compute:\n    //\n    //   a = (s - k) / e mod n\n    //\n    // The same is true of `w` as `k`\n    // can be re-derived as `H(w, m)`.\n    if (ctx == null)\n      ctx = Buffer.alloc(0);\n\n    assert(Buffer.isBuffer(msg));\n    assert(Buffer.isBuffer(prefix));\n    assert(prefix.length === this.curve.adjustedSize);\n\n    const {n} = this.curve;\n    const G = this.curve.g;\n    const k = this.hashNonce(prefix, msg, ph, ctx);\n    const Rraw = G.mulBlind(k).encode();\n    const a = this.curve.decodeScalar(scalar);\n    const Araw = G.mulBlind(a).encode();\n    const e = this.hashChallenge(Rraw, Araw, msg, ph, ctx);\n    const s = k.add(e.mul(a)).imod(n);\n\n    return Buffer.concat([Rraw, this.curve.encodeAdjusted(s)]);\n  }\n\n  signTweakAdd(msg, secret, tweak, ph, ctx) {\n    const [key_, prefix_] = this.privateKeyExpand(secret);\n    const key = this.scalarTweakAdd(key_, tweak);\n    const expanded = this.hash.multi(prefix_, tweak, null,\n                                     this.curve.adjustedSize * 2);\n    const prefix = expanded.slice(0, this.curve.adjustedSize);\n\n    return this.signWithScalar(msg, key, prefix, ph, ctx);\n  }\n\n  signTweakMul(msg, secret, tweak, ph, ctx) {\n    const [key_, prefix_] = this.privateKeyExpand(secret);\n    const key = this.scalarTweakMul(key_, tweak);\n    const expanded = this.hash.multi(prefix_, tweak, null,\n                                     this.curve.adjustedSize * 2);\n    const prefix = expanded.slice(0, this.curve.adjustedSize);\n\n    return this.signWithScalar(msg, key, prefix, ph, ctx);\n  }\n\n  verify(msg, sig, key, ph, ctx) {\n    if (ctx == null)\n      ctx = Buffer.alloc(0);\n\n    assert(Buffer.isBuffer(msg));\n    assert(Buffer.isBuffer(sig));\n    assert(Buffer.isBuffer(key));\n    assert(ph == null || typeof ph === 'boolean');\n    assert(Buffer.isBuffer(ctx));\n\n    if (sig.length !== this.curve.adjustedSize * 2)\n      return false;\n\n    if (key.length !== this.curve.adjustedSize)\n      return false;\n\n    try {\n      return this._verify(msg, sig, key, ph, ctx);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  _verify(msg, sig, key, ph, ctx) {\n    // EdDSA Verification.\n    //\n    // [EDDSA] Page 15, Section 5.\n    // [RFC8032] Page 8, Section 3.4.\n    //\n    // Assumptions:\n    //\n    //   - Let `H` be a cryptographic hash function.\n    //   - Let `m` be a byte array of arbitrary size.\n    //   - Let `R` and `s` be signature elements.\n    //   - Let `A` be a valid group element.\n    //   - s < n.\n    //\n    // Computation:\n    //\n    //   e = H(R, A, m) mod n\n    //   G * s == R + A * e\n    //\n    // Alternatively, we can compute:\n    //\n    //   R == G * s - A * e\n    //\n    // This allows us to make use of a\n    // multi-exponentiation algorithm.\n    const {n} = this.curve;\n    const G = this.curve.g;\n    const Rraw = sig.slice(0, this.curve.adjustedSize);\n    const sraw = sig.slice(this.curve.adjustedSize);\n    const R = this.curve.decodePoint(Rraw);\n    const s = this.curve.decodeAdjusted(sraw);\n    const A = this.curve.decodePoint(key);\n\n    if (s.cmp(n) >= 0)\n      return false;\n\n    const e = this.hashChallenge(Rraw, key, msg, ph, ctx);\n\n    return G.mulAdd(s, A.neg(), e).eq(R);\n  }\n\n  verifySingle(msg, sig, key, ph, ctx) {\n    if (ctx == null)\n      ctx = Buffer.alloc(0);\n\n    assert(Buffer.isBuffer(msg));\n    assert(Buffer.isBuffer(sig));\n    assert(Buffer.isBuffer(key));\n    assert(ph == null || typeof ph === 'boolean');\n    assert(Buffer.isBuffer(ctx));\n\n    if (sig.length !== this.curve.adjustedSize * 2)\n      return false;\n\n    if (key.length !== this.curve.adjustedSize)\n      return false;\n\n    try {\n      return this._verifySingle(msg, sig, key, ph, ctx);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  _verifySingle(msg, sig, key, ph, ctx) {\n    // EdDSA Verification (with cofactor multiplication).\n    //\n    // [EDDSA] Page 15, Section 5.\n    // [RFC8032] Page 8, Section 3.4.\n    //\n    // Assumptions:\n    //\n    //   - Let `H` be a cryptographic hash function.\n    //   - Let `m` be a byte array of arbitrary size.\n    //   - Let `R` and `s` be signature elements.\n    //   - Let `A` be a valid group element.\n    //   - s < n.\n    //\n    // Computation:\n    //\n    //   e = H(R, A, m) mod n\n    //   (G * s) * h == (R + A * e) * h\n    //\n    // Alternatively, we can compute:\n    //\n    //   R * h == G * (s * h) - (A * h) * e\n    //\n    // This allows us to make use of a\n    // multi-exponentiation algorithm.\n    const {n} = this.curve;\n    const G = this.curve.g;\n    const Rraw = sig.slice(0, this.curve.adjustedSize);\n    const sraw = sig.slice(this.curve.adjustedSize);\n    const R = this.curve.decodePoint(Rraw);\n    const s = this.curve.decodeAdjusted(sraw);\n    const A = this.curve.decodePoint(key);\n\n    if (s.cmp(n) >= 0)\n      return false;\n\n    const e = this.hashChallenge(Rraw, key, msg, ph, ctx);\n    const sh = this.curve.imulH(s);\n    const Ah = A.mulH();\n    const Rh = R.mulH();\n\n    return G.mulAdd(sh, Ah.neg(), e).eq(Rh);\n  }\n\n  verifyBatch(batch, ph, ctx) {\n    if (ctx == null)\n      ctx = Buffer.alloc(0);\n\n    assert(Array.isArray(batch));\n    assert(ph == null || typeof ph === 'boolean');\n    assert(Buffer.isBuffer(ctx));\n\n    for (const item of batch) {\n      assert(Array.isArray(item) && item.length === 3);\n\n      const [msg, sig, key] = item;\n\n      assert(Buffer.isBuffer(msg));\n      assert(Buffer.isBuffer(sig));\n      assert(Buffer.isBuffer(key));\n\n      if (sig.length !== this.curve.adjustedSize * 2)\n        return false;\n\n      if (key.length !== this.curve.adjustedSize)\n        return false;\n    }\n\n    try {\n      return this._verifyBatch(batch, ph, ctx);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  _verifyBatch(batch, ph, ctx) {\n    // EdDSA Batch Verification.\n    //\n    // [EDDSA] Page 16, Section 5.\n    //\n    // Assumptions:\n    //\n    //   - Let `H` be a cryptographic hash function.\n    //   - Let `R` and `s` be signature elements.\n    //   - Let `A` be a valid group element.\n    //   - Let `i` be the batch item index.\n    //   - s < n.\n    //   - a1 = 1 mod n.\n    //\n    // Computation:\n    //\n    //   ei = H(Ri, Ai, mi) mod n\n    //   ai = random integer in [1,n-1]\n    //   lhs = (si * ai + ...) * h mod n\n    //   rhs = (Ri * h) * ai + (Ai * h) * (ei * ai mod n) + ...\n    //   G * -lhs + rhs == O\n    const {n} = this.curve;\n    const G = this.curve.g;\n    const points = new Array(1 + batch.length * 2);\n    const coeffs = new Array(1 + batch.length * 2);\n    const sum = new BN(0);\n\n    this.rng.init(batch);\n\n    points[0] = G;\n    coeffs[0] = sum;\n\n    for (let i = 0; i < batch.length; i++) {\n      const [msg, sig, key] = batch[i];\n      const Rraw = sig.slice(0, this.curve.adjustedSize);\n      const sraw = sig.slice(this.curve.adjustedSize);\n      const R = this.curve.decodePoint(Rraw);\n      const s = this.curve.decodeAdjusted(sraw);\n      const A = this.curve.decodePoint(key);\n\n      if (s.cmp(n) >= 0)\n        return false;\n\n      const e = this.hashChallenge(Rraw, key, msg, ph, ctx);\n      const a = this.rng.generate(i);\n      const ea = e.mul(a).imod(n);\n\n      sum.iadd(s.mul(a)).imod(n);\n\n      points[1 + i * 2 + 0] = R.mulH();\n      coeffs[1 + i * 2 + 0] = a;\n      points[1 + i * 2 + 1] = A.mulH();\n      coeffs[1 + i * 2 + 1] = ea;\n    }\n\n    this.curve.imulH(sum.ineg());\n\n    return this.curve.mulAll(points, coeffs).isInfinity();\n  }\n\n  derive(pub, secret) {\n    const scalar = this.privateKeyConvert(secret);\n    return this.deriveWithScalar(pub, scalar);\n  }\n\n  deriveWithScalar(pub, scalar) {\n    const A = this.curve.decodePoint(pub);\n    const a = this.curve.decodeClamped(scalar);\n    const P = A.mulBlind(a, rng);\n\n    if (P.isInfinity())\n      throw new Error('Invalid point.');\n\n    return P.encode();\n  }\n}\n\n/*\n * Hash\n */\n\nclass Hash {\n  constructor(eddsa) {\n    this.curve = eddsa.curve;\n    // eslint-disable-next-line\n    this.hash = new eddsa.hash();\n  }\n\n  init(ph, ctx) {\n    assert(ph == null || typeof ph === 'boolean');\n    assert(Buffer.isBuffer(ctx));\n\n    if (ctx.length > 255)\n      ctx = ctx.slice(0, 255);\n\n    this.hash.init();\n\n    if (this.curve.context || ph != null || ctx.length > 0) {\n      if (this.curve.prefix)\n        this.hash.update(this.curve.prefix);\n\n      this.hash.update(byte(ph));\n      this.hash.update(byte(ctx.length));\n      this.hash.update(ctx);\n    }\n\n    return this;\n  }\n\n  update(data) {\n    this.hash.update(data);\n    return this;\n  }\n\n  final() {\n    const hash = this.hash.final(this.curve.adjustedSize * 2);\n    const num = BN.decode(hash, this.curve.endian);\n\n    return num.imod(this.curve.n);\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction byte(ch) {\n  const buf = Buffer.alloc(1);\n  buf[0] = ch & 0xff;\n  return buf;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = EDDSA;\n","'use strict';\n\nexports.custom = 'inspect';\n","/*!\n * reader.js - buffer reader for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst enforce = require('./enforce');\nconst encoding = require('./encoding');\nconst EncodingError = require('./error');\n\n/*\n * Constants\n */\n\nconst EMPTY = Buffer.alloc(0);\n\n/**\n * Buffer Reader\n */\n\nclass BufferReader {\n  /**\n   * Create a buffer reader.\n   * @constructor\n   * @param {Buffer} data\n   * @param {Boolean?} zeroCopy - Do not reallocate buffers when\n   * slicing. Note that this can lead to memory leaks if not used\n   * carefully.\n   */\n\n  constructor(data, zeroCopy = false) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    enforce(typeof zeroCopy === 'boolean', 'zeroCopy', 'boolean');\n\n    this.data = data;\n    this.offset = 0;\n    this.zeroCopy = zeroCopy;\n    this.stack = [];\n  }\n\n  /**\n   * Assertion.\n   * @param {Number} size\n   */\n\n  check(size) {\n    if (this.offset + size > this.data.length)\n      throw new EncodingError(this.offset, 'Out of bounds read', this.check);\n  }\n\n  /**\n   * Get total size of passed-in Buffer.\n   * @returns {Buffer}\n   */\n\n  getSize() {\n    return this.data.length;\n  }\n\n  /**\n   * Calculate number of bytes left to read.\n   * @returns {Number}\n   */\n\n  left() {\n    this.check(0);\n    return this.data.length - this.offset;\n  }\n\n  /**\n   * Seek to a position to read from by offset.\n   * @param {Number} off - Offset (positive or negative).\n   */\n\n  seek(off) {\n    enforce(Number.isSafeInteger(off), 'off', 'integer');\n\n    if (this.offset + off < 0)\n      throw new EncodingError(this.offset, 'Out of bounds read');\n\n    this.check(off);\n    this.offset += off;\n\n    return this;\n  }\n\n  /**\n   * Mark the current starting position.\n   */\n\n  start() {\n    this.stack.push(this.offset);\n    return this.offset;\n  }\n\n  /**\n   * Stop reading. Pop the start position off the stack\n   * and calculate the size of the data read.\n   * @returns {Number} Size.\n   * @throws on empty stack.\n   */\n\n  end() {\n    if (this.stack.length === 0)\n      throw new Error('Cannot end without a stack item.');\n\n    const start = this.stack.pop();\n\n    return this.offset - start;\n  }\n\n  /**\n   * Stop reading. Pop the start position off the stack\n   * and return the data read.\n   * @param {Bolean?} zeroCopy - Do a fast buffer\n   * slice instead of allocating a new buffer (warning:\n   * may cause memory leaks if not used with care).\n   * @returns {Buffer} Data read.\n   * @throws on empty stack.\n   */\n\n  endData(zeroCopy = false) {\n    enforce(typeof zeroCopy === 'boolean', 'zeroCopy', 'boolean');\n\n    if (this.stack.length === 0)\n      throw new Error('Cannot end without a stack item.');\n\n    const start = this.stack.pop();\n    const end = this.offset;\n    const size = end - start;\n    const data = this.data;\n\n    if (size === data.length)\n      return data;\n\n    if (this.zeroCopy || zeroCopy)\n      return data.slice(start, end);\n\n    const ret = Buffer.allocUnsafeSlow(size);\n\n    data.copy(ret, 0, start, end);\n\n    return ret;\n  }\n\n  /**\n   * Destroy the reader. Remove references to the data.\n   */\n\n  destroy() {\n    this.data = EMPTY;\n    this.offset = 0;\n    this.stack.length = 0;\n    return this;\n  }\n\n  /**\n   * Read uint8.\n   * @returns {Number}\n   */\n\n  readU8() {\n    this.check(1);\n\n    const ret = this.data[this.offset];\n\n    this.offset += 1;\n\n    return ret;\n  }\n\n  /**\n   * Read uint16le.\n   * @returns {Number}\n   */\n\n  readU16() {\n    this.check(2);\n\n    const ret = encoding.readU16(this.data, this.offset);\n\n    this.offset += 2;\n\n    return ret;\n  }\n\n  /**\n   * Read uint16be.\n   * @returns {Number}\n   */\n\n  readU16BE() {\n    this.check(2);\n\n    const ret = encoding.readU16BE(this.data, this.offset);\n\n    this.offset += 2;\n\n    return ret;\n  }\n\n  /**\n   * Read uint24le.\n   * @returns {Number}\n   */\n\n  readU24() {\n    this.check(3);\n\n    const ret = encoding.readU24(this.data, this.offset);\n\n    this.offset += 3;\n\n    return ret;\n  }\n\n  /**\n   * Read uint24be.\n   * @returns {Number}\n   */\n\n  readU24BE() {\n    this.check(3);\n\n    const ret = encoding.readU24BE(this.data, this.offset);\n\n    this.offset += 3;\n\n    return ret;\n  }\n\n  /**\n   * Read uint32le.\n   * @returns {Number}\n   */\n\n  readU32() {\n    this.check(4);\n\n    const ret = encoding.readU32(this.data, this.offset);\n\n    this.offset += 4;\n\n    return ret;\n  }\n\n  /**\n   * Read uint32be.\n   * @returns {Number}\n   */\n\n  readU32BE() {\n    this.check(4);\n\n    const ret = encoding.readU32BE(this.data, this.offset);\n\n    this.offset += 4;\n\n    return ret;\n  }\n\n  /**\n   * Read uint40le.\n   * @returns {Number}\n   */\n\n  readU40() {\n    this.check(5);\n\n    const ret = encoding.readU40(this.data, this.offset);\n\n    this.offset += 5;\n\n    return ret;\n  }\n\n  /**\n   * Read uint40be.\n   * @returns {Number}\n   */\n\n  readU40BE() {\n    this.check(5);\n\n    const ret = encoding.readU40BE(this.data, this.offset);\n\n    this.offset += 5;\n\n    return ret;\n  }\n\n  /**\n   * Read uint48le.\n   * @returns {Number}\n   */\n\n  readU48() {\n    this.check(6);\n\n    const ret = encoding.readU48(this.data, this.offset);\n\n    this.offset += 6;\n\n    return ret;\n  }\n\n  /**\n   * Read uint48be.\n   * @returns {Number}\n   */\n\n  readU48BE() {\n    this.check(6);\n\n    const ret = encoding.readU48BE(this.data, this.offset);\n\n    this.offset += 6;\n\n    return ret;\n  }\n\n  /**\n   * Read uint56le.\n   * @returns {Number}\n   */\n\n  readU56() {\n    this.check(7);\n\n    const ret = encoding.readU56(this.data, this.offset);\n\n    this.offset += 7;\n\n    return ret;\n  }\n\n  /**\n   * Read uint56be.\n   * @returns {Number}\n   */\n\n  readU56BE() {\n    this.check(7);\n\n    const ret = encoding.readU56BE(this.data, this.offset);\n\n    this.offset += 7;\n\n    return ret;\n  }\n\n  /**\n   * Read uint64le as a js number.\n   * @returns {Number}\n   * @throws on num > MAX_SAFE_INTEGER\n   */\n\n  readU64() {\n    this.check(8);\n\n    const ret = encoding.readU64(this.data, this.offset);\n\n    this.offset += 8;\n\n    return ret;\n  }\n\n  /**\n   * Read uint64be as a js number.\n   * @returns {Number}\n   * @throws on num > MAX_SAFE_INTEGER\n   */\n\n  readU64BE() {\n    this.check(8);\n\n    const ret = encoding.readU64BE(this.data, this.offset);\n\n    this.offset += 8;\n\n    return ret;\n  }\n\n  /**\n   * Read int8.\n   * @returns {Number}\n   */\n\n  readI8() {\n    this.check(1);\n\n    const ret = encoding.readI8(this.data, this.offset);\n\n    this.offset += 1;\n\n    return ret;\n  }\n\n  /**\n   * Read int16le.\n   * @returns {Number}\n   */\n\n  readI16() {\n    this.check(2);\n\n    const ret = encoding.readI16(this.data, this.offset);\n\n    this.offset += 2;\n\n    return ret;\n  }\n\n  /**\n   * Read int16be.\n   * @returns {Number}\n   */\n\n  readI16BE() {\n    this.check(2);\n\n    const ret = encoding.readI16BE(this.data, this.offset);\n\n    this.offset += 2;\n\n    return ret;\n  }\n\n  /**\n   * Read int24le.\n   * @returns {Number}\n   */\n\n  readI24() {\n    this.check(3);\n\n    const ret = encoding.readI24(this.data, this.offset);\n\n    this.offset += 3;\n\n    return ret;\n  }\n\n  /**\n   * Read int24be.\n   * @returns {Number}\n   */\n\n  readI24BE() {\n    this.check(3);\n\n    const ret = encoding.readI24BE(this.data, this.offset);\n\n    this.offset += 3;\n\n    return ret;\n  }\n\n  /**\n   * Read int32le.\n   * @returns {Number}\n   */\n\n  readI32() {\n    this.check(4);\n\n    const ret = encoding.readI32(this.data, this.offset);\n\n    this.offset += 4;\n\n    return ret;\n  }\n\n  /**\n   * Read int32be.\n   * @returns {Number}\n   */\n\n  readI32BE() {\n    this.check(4);\n\n    const ret = encoding.readI32BE(this.data, this.offset);\n\n    this.offset += 4;\n\n    return ret;\n  }\n\n  /**\n   * Read int40le.\n   * @returns {Number}\n   */\n\n  readI40() {\n    this.check(5);\n\n    const ret = encoding.readI40(this.data, this.offset);\n\n    this.offset += 5;\n\n    return ret;\n  }\n\n  /**\n   * Read int40be.\n   * @returns {Number}\n   */\n\n  readI40BE() {\n    this.check(5);\n\n    const ret = encoding.readI40BE(this.data, this.offset);\n\n    this.offset += 5;\n\n    return ret;\n  }\n\n  /**\n   * Read int48le.\n   * @returns {Number}\n   */\n\n  readI48() {\n    this.check(6);\n\n    const ret = encoding.readI48(this.data, this.offset);\n\n    this.offset += 6;\n\n    return ret;\n  }\n\n  /**\n   * Read int48be.\n   * @returns {Number}\n   */\n\n  readI48BE() {\n    this.check(6);\n\n    const ret = encoding.readI48BE(this.data, this.offset);\n\n    this.offset += 6;\n\n    return ret;\n  }\n\n  /**\n   * Read int56le.\n   * @returns {Number}\n   */\n\n  readI56() {\n    this.check(7);\n\n    const ret = encoding.readI56(this.data, this.offset);\n\n    this.offset += 7;\n\n    return ret;\n  }\n\n  /**\n   * Read int56be.\n   * @returns {Number}\n   */\n\n  readI56BE() {\n    this.check(7);\n\n    const ret = encoding.readI56BE(this.data, this.offset);\n\n    this.offset += 7;\n\n    return ret;\n  }\n\n  /**\n   * Read int64le as a js number.\n   * @returns {Number}\n   * @throws on num > MAX_SAFE_INTEGER\n   */\n\n  readI64() {\n    this.check(8);\n\n    const ret = encoding.readI64(this.data, this.offset);\n\n    this.offset += 8;\n\n    return ret;\n  }\n\n  /**\n   * Read int64be as a js number.\n   * @returns {Number}\n   * @throws on num > MAX_SAFE_INTEGER\n   */\n\n  readI64BE() {\n    this.check(8);\n\n    const ret = encoding.readI64BE(this.data, this.offset);\n\n    this.offset += 8;\n\n    return ret;\n  }\n\n  /**\n   * Read float le.\n   * @returns {Number}\n   */\n\n  readFloat() {\n    this.check(4);\n\n    const ret = encoding.readFloat(this.data, this.offset);\n\n    this.offset += 4;\n\n    return ret;\n  }\n\n  /**\n   * Read float be.\n   * @returns {Number}\n   */\n\n  readFloatBE() {\n    this.check(4);\n\n    const ret = encoding.readFloatBE(this.data, this.offset);\n\n    this.offset += 4;\n\n    return ret;\n  }\n\n  /**\n   * Read double float le.\n   * @returns {Number}\n   */\n\n  readDouble() {\n    this.check(8);\n\n    const ret = encoding.readDouble(this.data, this.offset);\n\n    this.offset += 8;\n\n    return ret;\n  }\n\n  /**\n   * Read double float be.\n   * @returns {Number}\n   */\n\n  readDoubleBE() {\n    this.check(8);\n\n    const ret = encoding.readDoubleBE(this.data, this.offset);\n\n    this.offset += 8;\n\n    return ret;\n  }\n\n  /**\n   * Read a varint.\n   * @returns {Number}\n   */\n\n  readVarint() {\n    const {size, value} = encoding.readVarint(this.data, this.offset);\n\n    this.offset += size;\n\n    return value;\n  }\n\n  /**\n   * Read a varint (type 2).\n   * @returns {Number}\n   */\n\n  readVarint2() {\n    const {size, value} = encoding.readVarint2(this.data, this.offset);\n\n    this.offset += size;\n\n    return value;\n  }\n\n  /**\n   * Read N bytes (will do a fast slice if zero copy).\n   * @param {Number} size\n   * @param {Bolean?} zeroCopy - Do a fast buffer\n   * slice instead of allocating a new buffer (warning:\n   * may cause memory leaks if not used with care).\n   * @returns {Buffer}\n   */\n\n  readBytes(size, zeroCopy = false) {\n    enforce((size >>> 0) === size, 'size', 'integer');\n    enforce(typeof zeroCopy === 'boolean', 'zeroCopy', 'boolean');\n\n    this.check(size);\n\n    let ret;\n\n    if (this.zeroCopy || zeroCopy) {\n      ret = this.data.slice(this.offset, this.offset + size);\n    } else {\n      ret = Buffer.allocUnsafeSlow(size);\n      this.data.copy(ret, 0, this.offset, this.offset + size);\n    }\n\n    this.offset += size;\n\n    return ret;\n  }\n\n  /**\n   * Read a varint number of bytes (will do a fast slice if zero copy).\n   * @param {Bolean?} zeroCopy - Do a fast buffer\n   * slice instead of allocating a new buffer (warning:\n   * may cause memory leaks if not used with care).\n   * @returns {Buffer}\n   */\n\n  readVarBytes(zeroCopy = false) {\n    return this.readBytes(this.readVarint(), zeroCopy);\n  }\n\n  /**\n   * Slice N bytes and create a child reader.\n   * @param {Number} size\n   * @returns {BufferReader}\n   */\n\n  readChild(size) {\n    enforce((size >>> 0) === size, 'size', 'integer');\n\n    this.check(size);\n\n    const data = this.data.slice(0, this.offset + size);\n    const br = new this.constructor(data);\n\n    br.offset = this.offset;\n\n    this.offset += size;\n\n    return br;\n  }\n\n  /**\n   * Read a string.\n   * @param {Number} size\n   * @param {String} enc - Any buffer-supported encoding.\n   * @returns {String}\n   */\n\n  readString(size, enc) {\n    if (enc == null)\n      enc = 'binary';\n\n    enforce((size >>> 0) === size, 'size', 'integer');\n    enforce(typeof enc === 'string', 'enc', 'string');\n\n    this.check(size);\n\n    const ret = this.data.toString(enc, this.offset, this.offset + size);\n\n    this.offset += size;\n\n    return ret;\n  }\n\n  /**\n   * Read a 32-byte hash.\n   * @param {String} enc - `\"hex\"` or `null`.\n   * @returns {Hash|Buffer}\n   */\n\n  readHash(enc) {\n    if (enc)\n      return this.readString(32, enc);\n    return this.readBytes(32);\n  }\n\n  /**\n   * Read string of a varint length.\n   * @param {String} enc - Any buffer-supported encoding.\n   * @param {Number?} limit - Size limit.\n   * @returns {String}\n   */\n\n  readVarString(enc, limit = 0) {\n    if (enc == null)\n      enc = 'binary';\n\n    enforce(typeof enc === 'string', 'enc', 'string');\n    enforce((limit >>> 0) === limit, 'limit', 'integer');\n\n    const size = this.readVarint();\n\n    if (limit !== 0 && size > limit)\n      throw new EncodingError(this.offset, 'String exceeds limit');\n\n    return this.readString(size, enc);\n  }\n\n  /**\n   * Read a null-terminated string.\n   * @param {String} enc - Any buffer-supported encoding.\n   * @returns {String}\n   */\n\n  readNullString(enc) {\n    if (enc == null)\n      enc = 'binary';\n\n    enforce(typeof enc === 'string', 'enc', 'string');\n\n    let i = this.offset;\n\n    for (; i < this.data.length; i++) {\n      if (this.data[i] === 0)\n        break;\n    }\n\n    if (i === this.data.length)\n      throw new EncodingError(this.offset, 'No NUL terminator');\n\n    const ret = this.readString(i - this.offset, enc);\n\n    this.offset = i + 1;\n\n    return ret;\n  }\n\n  /**\n   * Create a checksum from the last start position.\n   * @param {Function} hash\n   * @returns {Number} Checksum.\n   */\n\n  createChecksum(hash) {\n    if (!hash || typeof hash.digest !== 'function')\n      enforce(typeof hash === 'function', 'hash', 'function');\n\n    let start = 0;\n\n    if (this.stack.length > 0)\n      start = this.stack[this.stack.length - 1];\n\n    const data = this.data.slice(start, this.offset);\n    const raw = hash.digest ? hash.digest(data) : hash(data);\n\n    return encoding.readU32(raw, 0);\n  }\n\n  /**\n   * Verify a 4-byte checksum against a calculated checksum.\n   * @param {Function} hash\n   * @returns {Number} checksum\n   * @throws on bad checksum\n   */\n\n  verifyChecksum(hash) {\n    const checksum = this.createChecksum(hash);\n    const expect = this.readU32();\n\n    if (checksum !== expect)\n      throw new EncodingError(this.offset, 'Checksum mismatch');\n\n    return checksum;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = BufferReader;\n","/*!\n * writer.js - buffer writer for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst enforce = require('./enforce');\nconst encoding = require('./encoding');\nconst EncodingError = require('./error');\n\n/*\n * Constants\n */\n\nconst SEEK = 0;\nconst U8 = 1;\nconst U16 = 2;\nconst U16BE = 3;\nconst U24 = 4;\nconst U24BE = 5;\nconst U32 = 6;\nconst U32BE = 7;\nconst U40 = 8;\nconst U40BE = 9;\nconst U48 = 10;\nconst U48BE = 11;\nconst U56 = 12;\nconst U56BE = 13;\nconst U64 = 14;\nconst U64BE = 15;\nconst I8 = 16;\nconst I16 = 17;\nconst I16BE = 18;\nconst I24 = 19;\nconst I24BE = 20;\nconst I32 = 21;\nconst I32BE = 22;\nconst I40 = 23;\nconst I40BE = 24;\nconst I48 = 25;\nconst I48BE = 26;\nconst I56 = 27;\nconst I56BE = 28;\nconst I64 = 29;\nconst I64BE = 30;\nconst FL = 31;\nconst FLBE = 32;\nconst DBL = 33;\nconst DBLBE = 34;\nconst VARINT = 35;\nconst VARINT2 = 36;\nconst BYTES = 37;\nconst STR = 38;\nconst CHECKSUM = 39;\nconst FILL = 40;\n\n/**\n * Buffer Writer\n */\n\nclass BufferWriter {\n  /**\n   * Create a buffer writer.\n   * @constructor\n   */\n\n  constructor() {\n    this.ops = [];\n    this.offset = 0;\n  }\n\n  /**\n   * Allocate and render the final buffer.\n   * @returns {Buffer} Rendered buffer.\n   */\n\n  render() {\n    const data = Buffer.allocUnsafeSlow(this.offset);\n\n    let off = 0;\n\n    for (const op of this.ops) {\n      switch (op.type) {\n        case SEEK:\n          off += op.value;\n          break;\n        case U8:\n          off = encoding.writeU8(data, op.value, off);\n          break;\n        case U16:\n          off = encoding.writeU16(data, op.value, off);\n          break;\n        case U16BE:\n          off = encoding.writeU16BE(data, op.value, off);\n          break;\n        case U24:\n          off = encoding.writeU24(data, op.value, off);\n          break;\n        case U24BE:\n          off = encoding.writeU24BE(data, op.value, off);\n          break;\n        case U32:\n          off = encoding.writeU32(data, op.value, off);\n          break;\n        case U32BE:\n          off = encoding.writeU32BE(data, op.value, off);\n          break;\n        case U40:\n          off = encoding.writeU40(data, op.value, off);\n          break;\n        case U40BE:\n          off = encoding.writeU40BE(data, op.value, off);\n          break;\n        case U48:\n          off = encoding.writeU48(data, op.value, off);\n          break;\n        case U48BE:\n          off = encoding.writeU48BE(data, op.value, off);\n          break;\n        case U56:\n          off = encoding.writeU56(data, op.value, off);\n          break;\n        case U56BE:\n          off = encoding.writeU56BE(data, op.value, off);\n          break;\n        case U64:\n          off = encoding.writeU64(data, op.value, off);\n          break;\n        case U64BE:\n          off = encoding.writeU64BE(data, op.value, off);\n          break;\n        case I8:\n          off = encoding.writeI8(data, op.value, off);\n          break;\n        case I16:\n          off = encoding.writeI16(data, op.value, off);\n          break;\n        case I16BE:\n          off = encoding.writeI16BE(data, op.value, off);\n          break;\n        case I24:\n          off = encoding.writeI24(data, op.value, off);\n          break;\n        case I24BE:\n          off = encoding.writeI24BE(data, op.value, off);\n          break;\n        case I32:\n          off = encoding.writeI32(data, op.value, off);\n          break;\n        case I32BE:\n          off = encoding.writeI32BE(data, op.value, off);\n          break;\n        case I40:\n          off = encoding.writeI40(data, op.value, off);\n          break;\n        case I40BE:\n          off = encoding.writeI40BE(data, op.value, off);\n          break;\n        case I48:\n          off = encoding.writeI48(data, op.value, off);\n          break;\n        case I48BE:\n          off = encoding.writeI48BE(data, op.value, off);\n          break;\n        case I56:\n          off = encoding.writeI56(data, op.value, off);\n          break;\n        case I56BE:\n          off = encoding.writeI56BE(data, op.value, off);\n          break;\n        case I64:\n          off = encoding.writeI64(data, op.value, off);\n          break;\n        case I64BE:\n          off = encoding.writeI64BE(data, op.value, off);\n          break;\n        case FL:\n          off = encoding.writeFloat(data, op.value, off);\n          break;\n        case FLBE:\n          off = encoding.writeFloatBE(data, op.value, off);\n          break;\n        case DBL:\n          off = encoding.writeDouble(data, op.value, off);\n          break;\n        case DBLBE:\n          off = encoding.writeDoubleBE(data, op.value, off);\n          break;\n        case VARINT:\n          off = encoding.writeVarint(data, op.value, off);\n          break;\n        case VARINT2:\n          off = encoding.writeVarint2(data, op.value, off);\n          break;\n        case BYTES:\n          off += op.data.copy(data, off);\n          break;\n        case STR:\n          off += data.write(op.value, off, op.enc);\n          break;\n        case CHECKSUM:\n          off += op.func(data.slice(0, off)).copy(data, off, 0, 4);\n          break;\n        case FILL:\n          data.fill(op.value, off, off + op.size);\n          off += op.size;\n          break;\n        default:\n          throw new Error('Invalid type.');\n      }\n    }\n\n    if (off !== data.length)\n      throw new EncodingError(off, 'Out of bounds write');\n\n    this.destroy();\n\n    return data;\n  }\n\n  /**\n   * Get size of data written so far.\n   * @returns {Number}\n   */\n\n  getSize() {\n    return this.offset;\n  }\n\n  /**\n   * Seek to relative offset.\n   * @param {Number} offset\n   */\n\n  seek(off) {\n    enforce(Number.isSafeInteger(off), 'off', 'integer');\n\n    if (this.offset + off < 0)\n      throw new EncodingError(this.offset, 'Out of bounds write');\n\n    this.offset += off;\n    this.ops.push(new NumberOp(SEEK, off));\n\n    return this;\n  }\n\n  /**\n   * Destroy the buffer writer. Remove references to `ops`.\n   */\n\n  destroy() {\n    this.ops.length = 0;\n    this.offset = 0;\n    return this;\n  }\n\n  /**\n   * Write uint8.\n   * @param {Number} value\n   */\n\n  writeU8(value) {\n    this.offset += 1;\n    this.ops.push(new NumberOp(U8, value));\n    return this;\n  }\n\n  /**\n   * Write uint16le.\n   * @param {Number} value\n   */\n\n  writeU16(value) {\n    this.offset += 2;\n    this.ops.push(new NumberOp(U16, value));\n    return this;\n  }\n\n  /**\n   * Write uint16be.\n   * @param {Number} value\n   */\n\n  writeU16BE(value) {\n    this.offset += 2;\n    this.ops.push(new NumberOp(U16BE, value));\n    return this;\n  }\n\n  /**\n   * Write uint24le.\n   * @param {Number} value\n   */\n\n  writeU24(value) {\n    this.offset += 3;\n    this.ops.push(new NumberOp(U24, value));\n    return this;\n  }\n\n  /**\n   * Write uint24be.\n   * @param {Number} value\n   */\n\n  writeU24BE(value) {\n    this.offset += 3;\n    this.ops.push(new NumberOp(U24BE, value));\n    return this;\n  }\n\n  /**\n   * Write uint32le.\n   * @param {Number} value\n   */\n\n  writeU32(value) {\n    this.offset += 4;\n    this.ops.push(new NumberOp(U32, value));\n    return this;\n  }\n\n  /**\n   * Write uint32be.\n   * @param {Number} value\n   */\n\n  writeU32BE(value) {\n    this.offset += 4;\n    this.ops.push(new NumberOp(U32BE, value));\n    return this;\n  }\n\n  /**\n   * Write uint40le.\n   * @param {Number} value\n   */\n\n  writeU40(value) {\n    this.offset += 5;\n    this.ops.push(new NumberOp(U40, value));\n    return this;\n  }\n\n  /**\n   * Write uint40be.\n   * @param {Number} value\n   */\n\n  writeU40BE(value) {\n    this.offset += 5;\n    this.ops.push(new NumberOp(U40BE, value));\n    return this;\n  }\n\n  /**\n   * Write uint48le.\n   * @param {Number} value\n   */\n\n  writeU48(value) {\n    this.offset += 6;\n    this.ops.push(new NumberOp(U48, value));\n    return this;\n  }\n\n  /**\n   * Write uint48be.\n   * @param {Number} value\n   */\n\n  writeU48BE(value) {\n    this.offset += 6;\n    this.ops.push(new NumberOp(U48BE, value));\n    return this;\n  }\n\n  /**\n   * Write uint56le.\n   * @param {Number} value\n   */\n\n  writeU56(value) {\n    this.offset += 7;\n    this.ops.push(new NumberOp(U56, value));\n    return this;\n  }\n\n  /**\n   * Write uint56be.\n   * @param {Number} value\n   */\n\n  writeU56BE(value) {\n    this.offset += 7;\n    this.ops.push(new NumberOp(U56BE, value));\n    return this;\n  }\n\n  /**\n   * Write uint64le.\n   * @param {Number} value\n   */\n\n  writeU64(value) {\n    this.offset += 8;\n    this.ops.push(new NumberOp(U64, value));\n    return this;\n  }\n\n  /**\n   * Write uint64be.\n   * @param {Number} value\n   */\n\n  writeU64BE(value) {\n    this.offset += 8;\n    this.ops.push(new NumberOp(U64BE, value));\n    return this;\n  }\n\n  /**\n   * Write int8.\n   * @param {Number} value\n   */\n\n  writeI8(value) {\n    this.offset += 1;\n    this.ops.push(new NumberOp(I8, value));\n    return this;\n  }\n\n  /**\n   * Write int16le.\n   * @param {Number} value\n   */\n\n  writeI16(value) {\n    this.offset += 2;\n    this.ops.push(new NumberOp(I16, value));\n    return this;\n  }\n\n  /**\n   * Write int16be.\n   * @param {Number} value\n   */\n\n  writeI16BE(value) {\n    this.offset += 2;\n    this.ops.push(new NumberOp(I16BE, value));\n    return this;\n  }\n\n  /**\n   * Write int24le.\n   * @param {Number} value\n   */\n\n  writeI24(value) {\n    this.offset += 3;\n    this.ops.push(new NumberOp(I24, value));\n    return this;\n  }\n\n  /**\n   * Write int24be.\n   * @param {Number} value\n   */\n\n  writeI24BE(value) {\n    this.offset += 3;\n    this.ops.push(new NumberOp(I24BE, value));\n    return this;\n  }\n\n  /**\n   * Write int32le.\n   * @param {Number} value\n   */\n\n  writeI32(value) {\n    this.offset += 4;\n    this.ops.push(new NumberOp(I32, value));\n    return this;\n  }\n\n  /**\n   * Write int32be.\n   * @param {Number} value\n   */\n\n  writeI32BE(value) {\n    this.offset += 4;\n    this.ops.push(new NumberOp(I32BE, value));\n    return this;\n  }\n\n  /**\n   * Write int40le.\n   * @param {Number} value\n   */\n\n  writeI40(value) {\n    this.offset += 5;\n    this.ops.push(new NumberOp(I40, value));\n    return this;\n  }\n\n  /**\n   * Write int40be.\n   * @param {Number} value\n   */\n\n  writeI40BE(value) {\n    this.offset += 5;\n    this.ops.push(new NumberOp(I40BE, value));\n    return this;\n  }\n\n  /**\n   * Write int48le.\n   * @param {Number} value\n   */\n\n  writeI48(value) {\n    this.offset += 6;\n    this.ops.push(new NumberOp(I48, value));\n    return this;\n  }\n\n  /**\n   * Write int48be.\n   * @param {Number} value\n   */\n\n  writeI48BE(value) {\n    this.offset += 6;\n    this.ops.push(new NumberOp(I48BE, value));\n    return this;\n  }\n\n  /**\n   * Write int56le.\n   * @param {Number} value\n   */\n\n  writeI56(value) {\n    this.offset += 7;\n    this.ops.push(new NumberOp(I56, value));\n    return this;\n  }\n\n  /**\n   * Write int56be.\n   * @param {Number} value\n   */\n\n  writeI56BE(value) {\n    this.offset += 7;\n    this.ops.push(new NumberOp(I56BE, value));\n    return this;\n  }\n\n  /**\n   * Write int64le.\n   * @param {Number} value\n   */\n\n  writeI64(value) {\n    this.offset += 8;\n    this.ops.push(new NumberOp(I64, value));\n    return this;\n  }\n\n  /**\n   * Write int64be.\n   * @param {Number} value\n   */\n\n  writeI64BE(value) {\n    this.offset += 8;\n    this.ops.push(new NumberOp(I64BE, value));\n    return this;\n  }\n\n  /**\n   * Write float le.\n   * @param {Number} value\n   */\n\n  writeFloat(value) {\n    this.offset += 4;\n    this.ops.push(new NumberOp(FL, value));\n    return this;\n  }\n\n  /**\n   * Write float be.\n   * @param {Number} value\n   */\n\n  writeFloatBE(value) {\n    this.offset += 4;\n    this.ops.push(new NumberOp(FLBE, value));\n    return this;\n  }\n\n  /**\n   * Write double le.\n   * @param {Number} value\n   */\n\n  writeDouble(value) {\n    this.offset += 8;\n    this.ops.push(new NumberOp(DBL, value));\n    return this;\n  }\n\n  /**\n   * Write double be.\n   * @param {Number} value\n   */\n\n  writeDoubleBE(value) {\n    this.offset += 8;\n    this.ops.push(new NumberOp(DBLBE, value));\n    return this;\n  }\n\n  /**\n   * Write a varint.\n   * @param {Number} value\n   */\n\n  writeVarint(value) {\n    this.offset += encoding.sizeVarint(value);\n    this.ops.push(new NumberOp(VARINT, value));\n    return this;\n  }\n\n  /**\n   * Write a varint (type 2).\n   * @param {Number} value\n   */\n\n  writeVarint2(value) {\n    this.offset += encoding.sizeVarint2(value);\n    this.ops.push(new NumberOp(VARINT2, value));\n    return this;\n  }\n\n  /**\n   * Write bytes.\n   * @param {Buffer} value\n   */\n\n  writeBytes(value) {\n    enforce(Buffer.isBuffer(value), 'value', 'buffer');\n\n    if (value.length === 0)\n      return this;\n\n    this.offset += value.length;\n    this.ops.push(new BufferOp(BYTES, value));\n\n    return this;\n  }\n\n  /**\n   * Write bytes with a varint length before them.\n   * @param {Buffer} value\n   */\n\n  writeVarBytes(value) {\n    enforce(Buffer.isBuffer(value), 'value', 'buffer');\n\n    this.offset += encoding.sizeVarint(value.length);\n    this.ops.push(new NumberOp(VARINT, value.length));\n\n    if (value.length === 0)\n      return this;\n\n    this.offset += value.length;\n    this.ops.push(new BufferOp(BYTES, value));\n\n    return this;\n  }\n\n  /**\n   * Copy bytes.\n   * @param {Buffer} value\n   * @param {Number} start\n   * @param {Number} end\n   */\n\n  copy(value, start, end) {\n    enforce(Buffer.isBuffer(value), 'value', 'buffer');\n    enforce((start >>> 0) === start, 'start', 'integer');\n    enforce((end >>> 0) === end, 'end', 'integer');\n    enforce(end >= start, 'start', 'integer');\n\n    const buf = value.slice(start, end);\n\n    this.writeBytes(buf);\n\n    return this;\n  }\n\n  /**\n   * Write string to buffer.\n   * @param {String} value\n   * @param {String?} enc - Any buffer-supported encoding.\n   */\n\n  writeString(value, enc) {\n    if (enc == null)\n      enc = 'binary';\n\n    enforce(typeof value === 'string', 'value', 'string');\n    enforce(typeof enc === 'string', 'enc', 'string');\n\n    if (value.length === 0)\n      return this;\n\n    this.offset += Buffer.byteLength(value, enc);\n    this.ops.push(new StringOp(STR, value, enc));\n\n    return this;\n  }\n\n  /**\n   * Write a 32 byte hash.\n   * @param {Hash} value\n   */\n\n  writeHash(value) {\n    if (typeof value !== 'string') {\n      enforce(Buffer.isBuffer(value), 'value', 'buffer');\n      enforce(value.length === 32, 'value', '32-byte hash');\n      this.writeBytes(value);\n      return this;\n    }\n\n    enforce(value.length === 64, 'value', '32-byte hash');\n\n    this.writeString(value, 'hex');\n\n    return this;\n  }\n\n  /**\n   * Write a string with a varint length before it.\n   * @param {String}\n   * @param {String?} enc - Any buffer-supported encoding.\n   */\n\n  writeVarString(value, enc) {\n    if (enc == null)\n      enc = 'binary';\n\n    enforce(typeof value === 'string', 'value', 'string');\n    enforce(typeof enc === 'string', 'enc', 'string');\n\n    if (value.length === 0) {\n      this.ops.push(new NumberOp(VARINT, 0));\n      return this;\n    }\n\n    const size = Buffer.byteLength(value, enc);\n\n    this.offset += encoding.sizeVarint(size);\n    this.offset += size;\n\n    this.ops.push(new NumberOp(VARINT, size));\n    this.ops.push(new StringOp(STR, value, enc));\n\n    return this;\n  }\n\n  /**\n   * Write a null-terminated string.\n   * @param {String|Buffer}\n   * @param {String?} enc - Any buffer-supported encoding.\n   */\n\n  writeNullString(value, enc) {\n    this.writeString(value, enc);\n    this.writeU8(0);\n    return this;\n  }\n\n  /**\n   * Calculate and write a checksum for the data written so far.\n   * @param {Function} hash\n   */\n\n  writeChecksum(hash) {\n    if (hash && typeof hash.digest === 'function')\n      hash = hash.digest.bind(hash);\n\n    enforce(typeof hash === 'function', 'hash', 'function');\n\n    this.offset += 4;\n    this.ops.push(new FunctionOp(CHECKSUM, hash));\n\n    return this;\n  }\n\n  /**\n   * Fill N bytes with value.\n   * @param {Number} value\n   * @param {Number} size\n   */\n\n  fill(value, size) {\n    enforce((value & 0xff) === value, 'value', 'byte');\n    enforce((size >>> 0) === size, 'size', 'integer');\n\n    if (size === 0)\n      return this;\n\n    this.offset += size;\n    this.ops.push(new FillOp(FILL, value, size));\n\n    return this;\n  }\n}\n\n/*\n * Helpers\n */\n\nclass WriteOp {\n  constructor(type) {\n    this.type = type;\n  }\n}\n\nclass NumberOp extends WriteOp {\n  constructor(type, value) {\n    super(type);\n    this.value = value;\n  }\n}\n\nclass BufferOp extends WriteOp {\n  constructor(type, data) {\n    super(type);\n    this.data = data;\n  }\n}\n\nclass StringOp extends WriteOp {\n  constructor(type, value, enc) {\n    super(type);\n    this.value = value;\n    this.enc = enc;\n  }\n}\n\nclass FunctionOp extends WriteOp {\n  constructor(type, func) {\n    super(type);\n    this.func = func;\n  }\n}\n\nclass FillOp extends WriteOp {\n  constructor(type, value, size) {\n    super(type);\n    this.value = value;\n    this.size = size;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = BufferWriter;\n","/*!\n * staticwriter.js - buffer writer for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst enforce = require('./enforce');\nconst encoding = require('./encoding');\nconst EncodingError = require('./error');\n\n/*\n * Constants\n */\n\nconst EMPTY = Buffer.alloc(0);\nconst POOL_SIZE = 100 << 10;\n\nlet POOL = null;\n\n/**\n * Statically Allocated Writer\n */\n\nclass StaticWriter {\n  /**\n   * Statically allocated buffer writer.\n   * @constructor\n   * @param {Number|Buffer} options\n   */\n\n  constructor(options) {\n    this.data = EMPTY;\n    this.offset = 0;\n\n    if (options != null)\n      this.init(options);\n  }\n\n  /**\n   * Assertion.\n   * @param {Number} size\n   */\n\n  check(size) {\n    if (this.offset + size > this.data.length)\n      throw new EncodingError(this.offset, 'Out of bounds write', this.check);\n  }\n\n  /**\n   * Initialize options.\n   * @param {Object} options\n   */\n\n  init(options) {\n    if (Buffer.isBuffer(options)) {\n      this.data = options;\n      this.offset = 0;\n      return this;\n    }\n\n    enforce((options >>> 0) === options, 'size', 'integer');\n\n    this.data = Buffer.allocUnsafeSlow(options);\n    this.offset = 0;\n\n    return this;\n  }\n\n  /**\n   * Allocate writer from preallocated 100kb pool.\n   * @param {Number} size\n   * @returns {StaticWriter}\n   */\n\n  static pool(size) {\n    enforce((size >>> 0) === size, 'size', 'integer');\n\n    if (size <= POOL_SIZE) {\n      if (!POOL)\n        POOL = Buffer.allocUnsafeSlow(POOL_SIZE);\n\n      const bw = new StaticWriter();\n\n      bw.data = POOL.slice(0, size);\n\n      return bw;\n    }\n\n    return new StaticWriter(size);\n  }\n\n  /**\n   * Allocate and render the final buffer.\n   * @returns {Buffer} Rendered buffer.\n   */\n\n  render() {\n    const {data, offset} = this;\n\n    if (offset !== data.length)\n      throw new EncodingError(offset, 'Out of bounds write');\n\n    this.destroy();\n\n    return data;\n  }\n\n  /**\n   * Slice the final buffer at written offset.\n   * @returns {Buffer} Rendered buffer.\n   */\n\n  slice() {\n    const {data, offset} = this;\n\n    if (offset > data.length)\n      throw new EncodingError(offset, 'Out of bounds write');\n\n    this.destroy();\n\n    return data.slice(0, offset);\n  }\n\n  /**\n   * Get size of data written so far.\n   * @returns {Number}\n   */\n\n  getSize() {\n    return this.offset;\n  }\n\n  /**\n   * Seek to relative offset.\n   * @param {Number} off\n   */\n\n  seek(off) {\n    enforce(Number.isSafeInteger(off), 'off', 'integer');\n\n    if (this.offset + off < 0)\n      throw new EncodingError(this.offset, 'Out of bounds write');\n\n    this.check(off);\n    this.offset += off;\n\n    return this;\n  }\n\n  /**\n   * Destroy the buffer writer.\n   */\n\n  destroy() {\n    this.data = EMPTY;\n    this.offset = 0;\n    return this;\n  }\n\n  /**\n   * Write uint8.\n   * @param {Number} value\n   */\n\n  writeU8(value) {\n    this.check(1);\n    this.offset = encoding.writeU8(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint16le.\n   * @param {Number} value\n   */\n\n  writeU16(value) {\n    this.check(2);\n    this.offset = encoding.writeU16(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint16be.\n   * @param {Number} value\n   */\n\n  writeU16BE(value) {\n    this.check(2);\n    this.offset = encoding.writeU16BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint24le.\n   * @param {Number} value\n   */\n\n  writeU24(value) {\n    this.check(3);\n    this.offset = encoding.writeU24(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint24be.\n   * @param {Number} value\n   */\n\n  writeU24BE(value) {\n    this.check(3);\n    this.offset = encoding.writeU24BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint32le.\n   * @param {Number} value\n   */\n\n  writeU32(value) {\n    this.check(4);\n    this.offset = encoding.writeU32(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint32be.\n   * @param {Number} value\n   */\n\n  writeU32BE(value) {\n    this.check(4);\n    this.offset = encoding.writeU32BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint40le.\n   * @param {Number} value\n   */\n\n  writeU40(value) {\n    this.check(5);\n    this.offset = encoding.writeU40(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint40be.\n   * @param {Number} value\n   */\n\n  writeU40BE(value) {\n    this.check(5);\n    this.offset = encoding.writeU40BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint48le.\n   * @param {Number} value\n   */\n\n  writeU48(value) {\n    this.check(6);\n    this.offset = encoding.writeU48(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint48be.\n   * @param {Number} value\n   */\n\n  writeU48BE(value) {\n    this.check(6);\n    this.offset = encoding.writeU48BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint56le.\n   * @param {Number} value\n   */\n\n  writeU56(value) {\n    this.check(7);\n    this.offset = encoding.writeU56(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint56be.\n   * @param {Number} value\n   */\n\n  writeU56BE(value) {\n    this.check(7);\n    this.offset = encoding.writeU56BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint64le.\n   * @param {Number} value\n   */\n\n  writeU64(value) {\n    this.check(8);\n    this.offset = encoding.writeU64(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint64be.\n   * @param {Number} value\n   */\n\n  writeU64BE(value) {\n    this.check(8);\n    this.offset = encoding.writeU64BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int8.\n   * @param {Number} value\n   */\n\n  writeI8(value) {\n    this.check(1);\n    this.offset = encoding.writeI8(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int16le.\n   * @param {Number} value\n   */\n\n  writeI16(value) {\n    this.check(2);\n    this.offset = encoding.writeI16(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int16be.\n   * @param {Number} value\n   */\n\n  writeI16BE(value) {\n    this.check(2);\n    this.offset = encoding.writeI16BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int24le.\n   * @param {Number} value\n   */\n\n  writeI24(value) {\n    this.check(3);\n    this.offset = encoding.writeI24(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int24be.\n   * @param {Number} value\n   */\n\n  writeI24BE(value) {\n    this.check(3);\n    this.offset = encoding.writeI24BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int32le.\n   * @param {Number} value\n   */\n\n  writeI32(value) {\n    this.check(4);\n    this.offset = encoding.writeI32(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int32be.\n   * @param {Number} value\n   */\n\n  writeI32BE(value) {\n    this.check(4);\n    this.offset = encoding.writeI32BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int40le.\n   * @param {Number} value\n   */\n\n  writeI40(value) {\n    this.check(5);\n    this.offset = encoding.writeI40(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int40be.\n   * @param {Number} value\n   */\n\n  writeI40BE(value) {\n    this.check(5);\n    this.offset = encoding.writeI40BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int48le.\n   * @param {Number} value\n   */\n\n  writeI48(value) {\n    this.check(6);\n    this.offset = encoding.writeI48(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int48be.\n   * @param {Number} value\n   */\n\n  writeI48BE(value) {\n    this.check(6);\n    this.offset = encoding.writeI48BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int56le.\n   * @param {Number} value\n   */\n\n  writeI56(value) {\n    this.check(7);\n    this.offset = encoding.writeI56(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int56be.\n   * @param {Number} value\n   */\n\n  writeI56BE(value) {\n    this.check(7);\n    this.offset = encoding.writeI56BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int64le.\n   * @param {Number} value\n   */\n\n  writeI64(value) {\n    this.check(8);\n    this.offset = encoding.writeI64(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int64be.\n   * @param {Number} value\n   */\n\n  writeI64BE(value) {\n    this.check(8);\n    this.offset = encoding.writeI64BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write float le.\n   * @param {Number} value\n   */\n\n  writeFloat(value) {\n    this.check(4);\n    this.offset = encoding.writeFloat(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write float be.\n   * @param {Number} value\n   */\n\n  writeFloatBE(value) {\n    this.check(4);\n    this.offset = encoding.writeFloatBE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write double le.\n   * @param {Number} value\n   */\n\n  writeDouble(value) {\n    this.check(8);\n    this.offset = encoding.writeDouble(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write double be.\n   * @param {Number} value\n   */\n\n  writeDoubleBE(value) {\n    this.check(8);\n    this.offset = encoding.writeDoubleBE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write a varint.\n   * @param {Number} value\n   */\n\n  writeVarint(value) {\n    this.offset = encoding.writeVarint(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write a varint (type 2).\n   * @param {Number} value\n   */\n\n  writeVarint2(value) {\n    this.offset = encoding.writeVarint2(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write bytes.\n   * @param {Buffer} value\n   */\n\n  writeBytes(value) {\n    enforce(Buffer.isBuffer(value), 'value', 'buffer');\n\n    this.check(value.length);\n    this.offset += value.copy(this.data, this.offset);\n\n    return this;\n  }\n\n  /**\n   * Write bytes with a varint length before them.\n   * @param {Buffer} value\n   */\n\n  writeVarBytes(value) {\n    enforce(Buffer.isBuffer(value), 'value', 'buffer');\n\n    this.writeVarint(value.length);\n    this.writeBytes(value);\n\n    return this;\n  }\n\n  /**\n   * Copy bytes.\n   * @param {Buffer} value\n   * @param {Number} start\n   * @param {Number} end\n   */\n\n  copy(value, start, end) {\n    enforce(Buffer.isBuffer(value), 'value', 'buffer');\n    enforce((start >>> 0) === start, 'start', 'integer');\n    enforce((end >>> 0) === end, 'end', 'integer');\n    enforce(end >= start, 'start', 'integer');\n\n    this.check(end - start);\n    this.offset += value.copy(this.data, this.offset, start, end);\n\n    return this;\n  }\n\n  /**\n   * Write string to buffer.\n   * @param {String} value\n   * @param {String?} enc - Any buffer-supported encoding.\n   */\n\n  writeString(value, enc) {\n    if (enc == null)\n      enc = 'binary';\n\n    enforce(typeof value === 'string', 'value', 'string');\n    enforce(typeof enc === 'string', 'enc', 'string');\n\n    if (value.length === 0)\n      return this;\n\n    const size = Buffer.byteLength(value, enc);\n\n    this.check(size);\n\n    this.offset += this.data.write(value, this.offset, enc);\n\n    return this;\n  }\n\n  /**\n   * Write a 32 byte hash.\n   * @param {Hash} value\n   */\n\n  writeHash(value) {\n    if (typeof value !== 'string') {\n      enforce(Buffer.isBuffer(value), 'value', 'buffer');\n      enforce(value.length === 32, 'value', '32-byte hash');\n      this.writeBytes(value);\n      return this;\n    }\n\n    enforce(value.length === 64, 'value', '32-byte hash');\n\n    this.check(32);\n    this.offset += this.data.write(value, this.offset, 'hex');\n\n    return this;\n  }\n\n  /**\n   * Write a string with a varint length before it.\n   * @param {String}\n   * @param {String?} enc - Any buffer-supported encoding.\n   */\n\n  writeVarString(value, enc) {\n    if (enc == null)\n      enc = 'binary';\n\n    enforce(typeof value === 'string', 'value', 'string');\n    enforce(typeof enc === 'string', 'enc', 'string');\n\n    if (value.length === 0) {\n      this.writeVarint(0);\n      return this;\n    }\n\n    const size = Buffer.byteLength(value, enc);\n\n    this.writeVarint(size);\n    this.check(size);\n    this.offset += this.data.write(value, this.offset, enc);\n\n    return this;\n  }\n\n  /**\n   * Write a null-terminated string.\n   * @param {String|Buffer}\n   * @param {String?} enc - Any buffer-supported encoding.\n   */\n\n  writeNullString(value, enc) {\n    this.writeString(value, enc);\n    this.writeU8(0);\n    return this;\n  }\n\n  /**\n   * Calculate and write a checksum for the data written so far.\n   * @param {Function} hash\n   */\n\n  writeChecksum(hash) {\n    if (!hash || typeof hash.digest !== 'function')\n      enforce(typeof hash === 'function', 'hash', 'function');\n\n    this.check(4);\n\n    const data = this.data.slice(0, this.offset);\n    const raw = hash.digest ? hash.digest(data) : hash(data);\n\n    raw.copy(this.data, this.offset, 0, 4);\n\n    this.offset += 4;\n\n    return this;\n  }\n\n  /**\n   * Fill N bytes with value.\n   * @param {Number} value\n   * @param {Number} size\n   */\n\n  fill(value, size) {\n    enforce((value & 0xff) === value, 'value', 'byte');\n    enforce((size >>> 0) === size, 'size', 'integer');\n\n    this.check(size);\n\n    this.data.fill(value, this.offset, this.offset + size);\n    this.offset += size;\n\n    return this;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = StaticWriter;\n","/*!\n * lines.js - line reader for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n/* eslint spaced-comment: \"off\" */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * Lines\n */\n\nfunction *lines(str) {\n  assert(typeof str === 'string');\n\n  let i = 0;\n  let j = 0;\n  let n = 0;\n\n  if (str.length > 0) {\n    if (str.charCodeAt(0) === 0xfeff) {\n      i += 1;\n      j += 1;\n    }\n  }\n\n  for (; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    switch (ch) {\n      case 0x0d /*'\\r'*/:\n      case 0x0a /*'\\n'*/:\n      case 0x85 /*NEL*/: {\n        if (j !== i) {\n          const line = trimSpace(str.substring(j, i));\n\n          if (line.length > 0)\n            yield [n, line];\n        }\n\n        if (ch === 0x0d && i + 1 < str.length) {\n          if (str.charCodeAt(i + 1) === 0x0a)\n            i += 1;\n        }\n\n        j = i + 1;\n        n += 1;\n\n        break;\n      }\n    }\n  }\n\n  if (j !== i) {\n    const line = trimSpace(str.substring(j, i));\n\n    if (line.length > 0)\n      yield [n, line];\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction trimSpace(str) {\n  assert(typeof str === 'string');\n\n  for (let i = str.length - 1; i >= 0; i--) {\n    const ch = str.charCodeAt(i);\n\n    switch (ch) {\n      case 0x09 /*'\\t'*/:\n      case 0x0b /*'\\v'*/:\n      case 0x0c /*'\\f'*/:\n      case 0x20 /*' '*/:\n      case 0xa0 /*nbsp*/:\n        continue;\n    }\n\n    return str.substring(0, i + 1);\n  }\n\n  return str;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = lines;\n","/*!\n * openssl.js - openssl-specific encoding for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://www.openssl.org/docs/man1.1.0/apps/dsa.html\n *   https://superuser.com/questions/478966/dsa-private-key-format\n *   https://github.com/dlitz/pycrypto/blob/master/lib/Crypto/PublicKey/DSA.py\n *   https://github.com/openssl/openssl/blob/master/crypto/dsa/dsa_asn1.c\n */\n\n'use strict';\n\nconst asn1 = require('./asn1');\nconst pem = require('./pem');\n\n/**\n * DSAParams\n */\n\n// DSSParams_OpenSSL ::= SEQUENCE {\n//   p INTEGER,\n//   q INTEGER,\n//   g INTEGER\n// }\n\nclass DSAParams extends asn1.Sequence {\n  constructor(p, q, g) {\n    super();\n    this.p = new asn1.Unsigned(p);\n    this.q = new asn1.Unsigned(q);\n    this.g = new asn1.Unsigned(g);\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.p.getSize();\n    size += this.q.getSize();\n    size += this.g.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.p.write(bw);\n    this.q.write(bw);\n    this.g.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.p.read(br);\n    this.q.read(br);\n    this.g.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.p.clean()\n        && this.q.clean()\n        && this.g.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'DSA PARAMETERS');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'DSA PARAMETERS');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      p: this.p,\n      q: this.q,\n      g: this.g\n    };\n  }\n}\n\n/**\n * DSAPublicKey\n */\n\n// DSSPublicKey_OpenSSL ::= SEQUENCE {\n//   y INTEGER,\n//   p INTEGER,\n//   q INTEGER,\n//   g INTEGER\n// }\n\nclass DSAPublicKey extends asn1.Sequence {\n  constructor(y, p, q, g) {\n    super();\n    this.y = new asn1.Unsigned(y);\n    this.p = new asn1.Unsigned(p);\n    this.q = new asn1.Unsigned(q);\n    this.g = new asn1.Unsigned(g);\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.y.getSize();\n    size += this.p.getSize();\n    size += this.q.getSize();\n    size += this.g.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.y.write(bw);\n    this.p.write(bw);\n    this.q.write(bw);\n    this.g.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.y.read(br);\n    this.p.read(br);\n    this.q.read(br);\n    this.g.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.y.clean()\n        && this.p.clean()\n        && this.q.clean()\n        && this.g.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'DSA PUBLIC KEY');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'DSA PUBLIC KEY');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      y: this.y,\n      p: this.p,\n      q: this.q,\n      g: this.g\n    };\n  }\n}\n\n/**\n * DSAPrivateKey\n */\n\n// DSSPrivatKey_OpenSSL ::= SEQUENCE {\n//   version INTEGER,\n//   p INTEGER,\n//   q INTEGER,\n//   g INTEGER,\n//   y INTEGER,\n//   x INTEGER\n// }\n\nclass DSAPrivateKey extends asn1.Sequence {\n  constructor(version, p, q, g, y, x) {\n    super();\n    this.version = new asn1.Unsigned(version);\n    this.p = new asn1.Unsigned(p);\n    this.q = new asn1.Unsigned(q);\n    this.g = new asn1.Unsigned(g);\n    this.y = new asn1.Unsigned(y);\n    this.x = new asn1.Unsigned(x);\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.version.getSize();\n    size += this.p.getSize();\n    size += this.q.getSize();\n    size += this.g.getSize();\n    size += this.y.getSize();\n    size += this.x.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.version.write(bw);\n    this.p.write(bw);\n    this.q.write(bw);\n    this.g.write(bw);\n    this.y.write(bw);\n    this.x.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.version.read(br);\n    this.p.read(br);\n    this.q.read(br);\n    this.g.read(br);\n    this.y.read(br);\n    this.x.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.p.clean()\n        && this.q.clean()\n        && this.g.clean()\n        && this.y.clean()\n        && this.x.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'DSA PRIVATE KEY');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'DSA PRIVATE KEY');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      version: this.version,\n      p: this.p,\n      q: this.q,\n      g: this.g,\n      y: this.y,\n      x: this.x\n    };\n  }\n}\n\n/*\n * Expose\n */\n\nexports.DSAParams = DSAParams;\nexports.DSAPublicKey = DSAPublicKey;\nexports.DSAPrivateKey = DSAPrivateKey;\n","/*!\n * pemcrypt.js - PEM encryption for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://tools.ietf.org/html/rfc1421\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst {PEMBlock} = require('./pem');\nconst cipher = require('../cipher');\nconst random = require('../random');\nconst eb2k = require('../eb2k');\nconst MD5 = require('../md5');\n\n/*\n * Constants\n */\n\nconst ciphers = {\n  __proto__: null,\n  'AES-128': [16, 16],\n  'AES-192': [24, 16],\n  'AES-256': [32, 16],\n  'ARC2-40': [5, 8],\n  'ARC2-64': [8, 8],\n  'ARC2-128': [16, 8],\n  'BF': [16, 8],\n  'BLOWFISH': [16, 8],\n  'CAMELLIA-128': [16, 16],\n  'CAMELLIA-192': [24, 16],\n  'CAMELLIA-256': [32, 16],\n  'CAST5': [16, 8],\n  'DES': [8, 8],\n  'DES-EDE': [16, 8],\n  'DES-EDE3': [24, 8],\n  'IDEA': [16, 8],\n  'SERPENT-128': [16, 16],\n  'SERPENT-192': [24, 16],\n  'SERPENT-256': [32, 16],\n  'TWOFISH-128': [16, 16],\n  'TWOFISH-192': [24, 16],\n  'TWOFISH-256': [32, 16]\n};\n\n/**\n * Encrypt a block.\n * @param {PEMBlock} block\n * @param {String} name\n * @param {String} passwd\n * @returns {PEMBlock}\n */\n\nfunction encrypt(block, name, passwd) {\n  assert(block instanceof PEMBlock);\n  assert(typeof name === 'string');\n  assert(typeof passwd === 'string');\n\n  if (block.isEncrypted())\n    throw new Error('PEM block is already encrypted.');\n\n  const [keySize, ivSize] = cipherInfo(name);\n  const iv = random.randomBytes(ivSize);\n  const [key] = eb2k.derive(MD5, passwd, iv, keySize, ivSize);\n\n  block.data = cipher.encrypt(name, key, iv, block.data);\n\n  block.setProcType(4, 'ENCRYPTED');\n  block.setDEKInfo(name, iv);\n\n  return block;\n}\n\n/**\n * Decrypt a block.\n * @param {PEMBlock} block\n * @param {String} passwd\n * @returns {PEMBlock}\n */\n\nfunction decrypt(block, passwd) {\n  assert(block instanceof PEMBlock);\n  assert(typeof passwd === 'string');\n\n  if (!block.isEncrypted())\n    throw new Error('PEM block is not encrypted.');\n\n  const info = block.getDEKInfo();\n\n  if (!info)\n    throw new Error('DEK-Info not found.');\n\n  const [keySize, ivSize] = cipherInfo(info.name);\n  const [key] = eb2k.derive(MD5, passwd, info.iv, keySize, ivSize);\n\n  block.data = cipher.decrypt(info.name, key, info.iv, block.data);\n\n  block.unsetProcType();\n  block.unsetDEKInfo();\n\n  return block;\n}\n\n/*\n * Helpers\n */\n\nfunction cipherInfo(name) {\n  assert(typeof name === 'string');\n\n  if (name.substring(0, 3) === 'RC2')\n    name = 'A' + name;\n\n  if (name.length < 5 || name[name.length - 4] !== '-')\n    throw new Error(`Unsupported cipher: ${name}.`);\n\n  const algo = name.substring(0, name.length - 4);\n  const info = ciphers[algo];\n\n  if (!info)\n    throw new Error(`Unsupported cipher: ${name}.`);\n\n  return info;\n}\n\n/*\n * Expose\n */\n\nexports.encrypt = encrypt;\nexports.decrypt = decrypt;\n","/*!\n * md5.js - MD5 implementation for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/MD5\n *   https://tools.ietf.org/html/rfc1321\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst HMAC = require('../internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = -1;\nconst DESC = Buffer.alloc(8, 0x00);\nconst PADDING = Buffer.alloc(64, 0x00);\n\nPADDING[0] = 0x80;\n\nconst K = new Uint32Array([\n  0xd76aa478, 0xe8c7b756, 0x242070db, 0xc1bdceee,\n  0xf57c0faf, 0x4787c62a, 0xa8304613, 0xfd469501,\n  0x698098d8, 0x8b44f7af, 0xffff5bb1, 0x895cd7be,\n  0x6b901122, 0xfd987193, 0xa679438e, 0x49b40821,\n  0xf61e2562, 0xc040b340, 0x265e5a51, 0xe9b6c7aa,\n  0xd62f105d, 0x02441453, 0xd8a1e681, 0xe7d3fbc8,\n  0x21e1cde6, 0xc33707d6, 0xf4d50d87, 0x455a14ed,\n  0xa9e3e905, 0xfcefa3f8, 0x676f02d9, 0x8d2a4c8a,\n  0xfffa3942, 0x8771f681, 0x6d9d6122, 0xfde5380c,\n  0xa4beea44, 0x4bdecfa9, 0xf6bb4b60, 0xbebfbc70,\n  0x289b7ec6, 0xeaa127fa, 0xd4ef3085, 0x04881d05,\n  0xd9d4d039, 0xe6db99e5, 0x1fa27cf8, 0xc4ac5665,\n  0xf4292244, 0x432aff97, 0xab9423a7, 0xfc93a039,\n  0x655b59c3, 0x8f0ccc92, 0xffeff47d, 0x85845dd1,\n  0x6fa87e4f, 0xfe2ce6e0, 0xa3014314, 0x4e0811a1,\n  0xf7537e82, 0xbd3af235, 0x2ad7d2bb, 0xeb86d391\n]);\n\nconst S = new Uint8Array([\n  7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22,\n  7, 12, 17, 22, 5,  9, 14, 20, 5,  9, 14, 20,\n  5,  9, 14, 20, 5,  9, 14, 20, 4, 11, 16, 23,\n  4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23,\n  6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21,\n  6, 10, 15, 21\n]);\n\n/**\n * MD5\n */\n\nclass MD5 {\n  constructor() {\n    this.state = new Uint32Array(4);\n    this.msg = new Uint32Array(16);\n    this.block = Buffer.alloc(64);\n    this.size = FINALIZED;\n  }\n\n  init() {\n    this.state[0] = 0x67452301;\n    this.state[1] = 0xefcdab89;\n    this.state[2] = 0x98badcfe;\n    this.state[3] = 0x10325476;\n    this.size = 0;\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    this._update(data, data.length);\n    return this;\n  }\n\n  final() {\n    return this._final(Buffer.alloc(16));\n  }\n\n  _update(data, len) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    let pos = this.size & 63;\n    let off = 0;\n\n    this.size += len;\n\n    if (pos > 0) {\n      let want = 64 - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < 64)\n        return;\n\n      this._transform(this.block, 0);\n    }\n\n    while (len >= 64) {\n      this._transform(data, off);\n      off += 64;\n      len -= 64;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n  }\n\n  _final(out) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    const pos = this.size & 63;\n    const len = this.size * 8;\n\n    writeU32(DESC, len >>> 0, 0);\n    writeU32(DESC, (len * (1 / 0x100000000)) >>> 0, 4);\n\n    this._update(PADDING, 1 + ((119 - pos) & 63));\n    this._update(DESC, 8);\n\n    for (let i = 0; i < 4; i++) {\n      writeU32(out, this.state[i], i * 4);\n      this.state[i] = 0;\n    }\n\n    for (let i = 0; i < 16; i++)\n      this.msg[i] = 0;\n\n    for (let i = 0; i < 64; i++)\n      this.block[i] = 0;\n\n    this.size = FINALIZED;\n\n    return out;\n  }\n\n  _transform(chunk, pos) {\n    const W = this.msg;\n\n    let a = this.state[0];\n    let b = this.state[1];\n    let c = this.state[2];\n    let d = this.state[3];\n    let i = 0;\n\n    for (; i < 16; i++)\n      W[i] = readU32(chunk, pos + i * 4);\n\n    for (i = 0; i < 64; i++) {\n      let f, g;\n\n       if (i < 16) {\n        f = (b & c) | (~b & d);\n        g = i;\n      } else if (i < 32) {\n        f = (d & b) | (~d & c);\n        g = (5 * i + 1) & 15;\n      } else if (i < 48) {\n        f = b ^ c ^ d;\n        g = (3 * i + 5) & 15;\n      } else {\n        f = c ^ (b | ~d);\n        g = (7 * i) & 15;\n      }\n\n      f >>>= 0;\n\n      f = f + a + K[i] + W[g];\n      f >>>= 0;\n\n      a = d;\n      d = c;\n      c = b;\n      b = b + rotl32(f, S[i]);\n      b >>>= 0;\n    }\n\n    this.state[0] += a;\n    this.state[1] += b;\n    this.state[2] += c;\n    this.state[3] += d;\n  }\n\n  static hash() {\n    return new MD5();\n  }\n\n  static hmac() {\n    return new HMAC(MD5, 64);\n  }\n\n  static digest(data) {\n    return MD5.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 16);\n    assert(Buffer.isBuffer(right) && right.length === 16);\n    return MD5.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = MD5;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return MD5.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nMD5.native = 0;\nMD5.id = 'MD5';\nMD5.size = 16;\nMD5.bits = 128;\nMD5.blockSize = 64;\nMD5.zero = Buffer.alloc(16, 0x00);\nMD5.ctx = new MD5();\n\n/*\n * Helpers\n */\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = MD5;\n","/*!\n * pkcs1.js - PKCS1 encoding for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009 The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/PKCS_1\n *   https://tools.ietf.org/html/rfc3447\n *   https://tools.ietf.org/html/rfc8017#appendix-A.1.1\n *   https://tools.ietf.org/html/rfc8017#appendix-A.1.2\n *   https://github.com/golang/go/blob/master/src/crypto/x509/pkcs1.go\n *   https://github.com/openssl/openssl/blob/master/crypto/rsa/rsa_asn1.c\n */\n\n'use strict';\n\nconst asn1 = require('./asn1');\nconst pem = require('./pem');\n\n/**\n * RSAPublicKey\n */\n\n// RSAPublicKey ::= SEQUENCE {\n//     modulus           INTEGER,  -- n\n//     publicExponent    INTEGER   -- e\n// }\n\nclass RSAPublicKey extends asn1.Sequence {\n  constructor(n, e) {\n    super();\n    this.n = new asn1.Unsigned(n);\n    this.e = new asn1.Unsigned(e);\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.n.getSize();\n    size += this.e.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.n.write(bw);\n    this.e.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.n.read(br);\n    this.e.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.n.clean() && this.e.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'RSA PUBLIC KEY');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'RSA PUBLIC KEY');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      n: this.n,\n      e: this.e\n    };\n  }\n}\n\n/**\n * RSAPrivateKey\n */\n\n// RSAPrivateKey ::= SEQUENCE {\n//   version           Version,\n//   modulus           INTEGER,  -- n\n//   publicExponent    INTEGER,  -- e\n//   privateExponent   INTEGER,  -- d\n//   prime1            INTEGER,  -- p\n//   prime2            INTEGER,  -- q\n//   exponent1         INTEGER,  -- d mod (p-1)\n//   exponent2         INTEGER,  -- d mod (q-1)\n//   coefficient       INTEGER,  -- (inverse of q) mod p\n//   otherPrimeInfos   OtherPrimeInfos OPTIONAL\n// }\n\nclass RSAPrivateKey extends asn1.Sequence {\n  constructor(version, n, e, d, p, q, dp, dq, qi) {\n    super();\n    this.version = new asn1.Unsigned(version);\n    this.n = new asn1.Unsigned(n);\n    this.e = new asn1.Unsigned(e);\n    this.d = new asn1.Unsigned(d);\n    this.p = new asn1.Unsigned(p);\n    this.q = new asn1.Unsigned(q);\n    this.dp = new asn1.Unsigned(dp);\n    this.dq = new asn1.Unsigned(dq);\n    this.qi = new asn1.Unsigned(qi);\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.version.getSize();\n    size += this.n.getSize();\n    size += this.e.getSize();\n    size += this.d.getSize();\n    size += this.p.getSize();\n    size += this.q.getSize();\n    size += this.dp.getSize();\n    size += this.dq.getSize();\n    size += this.qi.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.version.write(bw);\n    this.n.write(bw);\n    this.e.write(bw);\n    this.d.write(bw);\n    this.p.write(bw);\n    this.q.write(bw);\n    this.dp.write(bw);\n    this.dq.write(bw);\n    this.qi.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.version.read(br);\n    this.n.read(br);\n    this.e.read(br);\n    this.d.read(br);\n    this.p.read(br);\n    this.q.read(br);\n    this.dp.read(br);\n    this.dq.read(br);\n    this.qi.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.n.clean()\n        && this.e.clean()\n        && this.d.clean()\n        && this.p.clean()\n        && this.q.clean()\n        && this.dp.clean()\n        && this.dq.clean()\n        && this.qi.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'RSA PRIVATE KEY');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'RSA PRIVATE KEY');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      version: this.version,\n      n: this.n,\n      e: this.e,\n      d: this.d,\n      p: this.p,\n      q: this.q,\n      dp: this.dp,\n      dq: this.dq,\n      qi: this.qi\n    };\n  }\n}\n\n/*\n * Expose\n */\n\nexports.RSAPublicKey = RSAPublicKey;\nexports.RSAPrivateKey = RSAPrivateKey;\n","/*!\n * x509.js - X509 for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/asn1.js:\n *   Copyright Fedor Indutny, 2013.\n *   https://github.com/indutny/asn1.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/X.509\n *   https://tools.ietf.org/html/rfc4158\n *   https://www.ietf.org/rfc/rfc2560.txt\n *   https://www.ietf.org/rfc/rfc5280.txt\n *   https://github.com/indutny/asn1.js/blob/master/rfc/2560/index.js\n *   https://github.com/indutny/asn1.js/blob/master/rfc/5280/index.js\n *   https://github.com/indutny/asn1.js/blob/master/lib/asn1/base/node.js\n *   https://github.com/indutny/asn1.js/blob/master/lib/asn1/encoders/der.js\n *   https://github.com/indutny/asn1.js/blob/master/lib/asn1/decoders/der.js\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst asn1 = require('./asn1');\nconst pem = require('./pem');\nconst {types} = asn1;\n\n/**\n * Certificate\n */\n\n// Certificate  ::=  SEQUENCE  {\n//      tbsCertificate       TBSCertificate,\n//      signatureAlgorithm   AlgorithmIdentifier,\n//      signature            BIT STRING  }\n\nclass Certificate extends asn1.Sequence {\n  constructor() {\n    super();\n    this.tbsCertificate = new TBSCertificate();\n    this.signatureAlgorithm = new AlgorithmIdentifier();\n    this.signature = new asn1.BitString();\n  }\n\n  get isRaw() {\n    return true;\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.tbsCertificate.getSize();\n    size += this.signatureAlgorithm.getSize();\n    size += this.signature.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.tbsCertificate.write(bw);\n    this.signatureAlgorithm.write(bw);\n    this.signature.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.tbsCertificate.read(br);\n    this.signatureAlgorithm.read(br);\n    this.signature.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.tbsCertificate.clean()\n        && this.signatureAlgorithm.clean()\n        && this.signature.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'CERTIFICATE');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'CERTIFICATE');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      tbsCertificate: this.tbsCertificate,\n      signatureAlgorithm: this.signatureAlgorithm,\n      signature: this.signature\n    };\n  }\n}\n\n/**\n * TBSCertificate\n */\n\n// TBSCertificate  ::=  SEQUENCE  {\n//      version         [0]  Version DEFAULT v1,\n//      serialNumber         CertificateSerialNumber,\n//      signature            AlgorithmIdentifier,\n//      issuer               Name,\n//      validity             Validity,\n//      subject              Name,\n//      subjectPublicKeyInfo SubjectPublicKeyInfo,\n//      issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n//      subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n//      extensions      [3]  Extensions OPTIONAL }\n//\n// Version  ::=  INTEGER  {  v1(0), v2(1), v3(2)  }\n\nclass TBSCertificate extends asn1.Sequence {\n  constructor() {\n    super();\n    this.version = new asn1.Unsigned().explicit(0).optional();\n    this.serialNumber = new asn1.Integer();\n    this.signature = new AlgorithmIdentifier();\n    this.issuer = new RDNSequence();\n    this.validity = new Validity();\n    this.subject = new RDNSequence();\n    this.subjectPublicKeyInfo = new SubjectPublicKeyInfo();\n    this.issuerUniqueID = new asn1.BitString().implicit(1).optional();\n    this.subjectUniqueID = new asn1.BitString().implicit(2).optional();\n    this.extensions = new Extensions().explicit(3).optional();\n  }\n\n  get isRaw() {\n    return true;\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.version.getSize();\n    size += this.serialNumber.getSize();\n    size += this.signature.getSize();\n    size += this.issuer.getSize();\n    size += this.validity.getSize();\n    size += this.subject.getSize();\n    size += this.subjectPublicKeyInfo.getSize();\n    size += this.issuerUniqueID.getSize();\n    size += this.subjectUniqueID.getSize();\n    size += this.extensions.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.version.write(bw);\n    this.serialNumber.write(bw);\n    this.signature.write(bw);\n    this.issuer.write(bw);\n    this.validity.write(bw);\n    this.subject.write(bw);\n    this.subjectPublicKeyInfo.write(bw);\n    this.issuerUniqueID.write(bw);\n    this.subjectUniqueID.write(bw);\n    this.extensions.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.version.read(br);\n    this.serialNumber.read(br);\n    this.signature.read(br);\n    this.issuer.read(br);\n    this.validity.read(br);\n    this.subject.read(br);\n    this.subjectPublicKeyInfo.read(br);\n    this.issuerUniqueID.read(br);\n    this.subjectUniqueID.read(br);\n    this.extensions.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.version.clean()\n        && this.serialNumber.clean()\n        && this.signature.clean()\n        && this.issuer.clean()\n        && this.validity.clean()\n        && this.subject.clean()\n        && this.subjectPublicKeyInfo.clean()\n        && this.issuerUniqueID.clean()\n        && this.subjectUniqueID.clean()\n        && this.extensions.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'TBS CERTIFICATE');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'TBS CERTIFICATE');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      version: this.version,\n      serialNumber: this.serialNumber,\n      signature: this.signature,\n      issuer: this.issuer,\n      validity: this.validity,\n      subject: this.subject,\n      subjectPublicKeyInfo: this.subjectPublicKeyInfo,\n      issuerUniqueID: this.issuerUniqueID,\n      subjectUniqueID: this.subjectUniqueID,\n      extensions: this.extensions\n    };\n  }\n}\n\n/**\n * AlgorithmIdentifier\n */\n\n// AlgorithmIdentifier  ::=  SEQUENCE  {\n//      algorithm               OBJECT IDENTIFIER,\n//      parameters              ANY DEFINED BY algorithm OPTIONAL  }\n\nclass AlgorithmIdentifier extends asn1.Sequence {\n  constructor(algorithm, parameters) {\n    super();\n\n    this.algorithm = new asn1.OID(algorithm);\n    this.parameters = new asn1.Any(parameters).optional();\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.algorithm.getSize();\n    size += this.parameters.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.algorithm.write(bw);\n    this.parameters.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.algorithm.read(br);\n    this.parameters.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.algorithm.clean()\n        && this.parameters.clean();\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      algorithm: this.algorithm,\n      parameters: this.parameters\n    };\n  }\n}\n\n/**\n * RDNSequence\n */\n\n// Name ::= CHOICE { -- only one possibility for now --\n//      rdnSequence  RDNSequence }\n//\n// RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n\nclass RDNSequence extends asn1.Sequence {\n  constructor() {\n    super();\n    this.names = [];\n  }\n\n  getBodySize() {\n    let size = 0;\n\n    for (const rdn of this.names)\n      size += rdn.getSize();\n\n    return size;\n  }\n\n  writeBody(bw) {\n    for (const rdn of this.names)\n      rdn.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    while (br.left()) {\n      const rdn = RDN.read(br);\n      this.names.push(rdn);\n    }\n\n    return this;\n  }\n\n  clean() {\n    return this.names.length === 0;\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      names: this.names\n    };\n  }\n}\n\n/**\n * RDN\n */\n\n// RelativeDistinguishedName ::=\n//      SET SIZE (1..MAX) OF AttributeTypeAndValue\n//\n\nclass RDN extends asn1.Set {\n  constructor(id, value) {\n    super();\n    this.attributes = [new Attribute(id, value)];\n  }\n\n  getBodySize() {\n    let size = 0;\n\n    assert(this.attributes.length >= 1);\n\n    for (const attr of this.attributes)\n      size += attr.getSize();\n\n    return size;\n  }\n\n  writeBody(bw) {\n    assert(this.attributes.length >= 1);\n\n    for (const attr of this.attributes)\n      attr.write(bw);\n\n    return bw;\n  }\n\n  readBody(br) {\n    this.attributes[0].read(br);\n\n    while (br.left()) {\n      const attr = Attribute.read(br);\n      this.attributes.push(attr);\n    }\n\n    return this;\n  }\n\n  clean() {\n    return this.attributes.length === 1 && this.attributes[0].clean();\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      attributes: this.attributes\n    };\n  }\n}\n\n/**\n * Attribute\n */\n\n// AttributeTypeAndValue ::= SEQUENCE {\n//      type     AttributeType,\n//      value    AttributeValue }\n//\n// AttributeType ::= OBJECT IDENTIFIER\n//\n// AttributeValue ::= ANY -- DEFINED BY AttributeType\n\nclass Attribute extends asn1.Sequence {\n  constructor(id, value) {\n    super();\n\n    this.id = new asn1.OID(id);\n    this.value = new asn1.Any(value);\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.id.getSize();\n    size += this.value.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.id.write(bw);\n    this.value.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.id.read(br);\n    this.value.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.id.clean()\n        && this.value.clean();\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      id: this.id,\n      value: this.value\n    };\n  }\n}\n\n/**\n * Validity\n */\n\n// Validity ::= SEQUENCE {\n//      notBefore      Time,\n//      notAfter       Time  }\n\nclass Validity extends asn1.Sequence {\n  constructor() {\n    super();\n    this.notBefore = new Time();\n    this.notAfter = new Time();\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.notBefore.getSize();\n    size += this.notAfter.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.notBefore.write(bw);\n    this.notAfter.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.notBefore.read(br);\n    this.notAfter.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.notBefore.clean()\n        && this.notAfter.clean();\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      notBefore: this.notBefore,\n      notAfter: this.notAfter\n    };\n  }\n}\n\n/**\n * Time\n */\n\n// Time ::= CHOICE {\n//      utcTime        UTCTime,\n//      generalTime    GeneralizedTime }\n\nclass Time extends asn1.Choice {\n  constructor(options) {\n    super(new asn1.UTCTime(), options);\n  }\n\n  choices() {\n    return [\n      types.UTCTIME,\n      types.GENTIME\n    ];\n  }\n}\n\n// SubjectPublicKeyInfo  ::=  SEQUENCE  {\n//      algorithm            AlgorithmIdentifier,\n//      subjectPublicKey     BIT STRING  }\n\nclass SubjectPublicKeyInfo extends asn1.Sequence {\n  constructor(algorithm, parameters, publicKey) {\n    super();\n    this.algorithm = new AlgorithmIdentifier(algorithm, parameters);\n    this.publicKey = new asn1.BitString(publicKey);\n  }\n\n  get isRaw() {\n    return true;\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.algorithm.getSize();\n    size += this.publicKey.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.algorithm.write(bw);\n    this.publicKey.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.algorithm.read(br);\n    this.publicKey.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.algorithm.clean()\n        && this.publicKey.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'PUBLIC KEY');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'PUBLIC KEY');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      algorithm: this.algorithm,\n      publicKey: this.publicKey\n    };\n  }\n}\n\n/**\n * Extensions\n */\n\nclass Extensions extends asn1.Sequence {\n  constructor() {\n    super();\n    this.extensions = [];\n  }\n\n  getBodySize() {\n    let size = 0;\n\n    for (const ext of this.extensions)\n      size += ext.getSize();\n\n    return size;\n  }\n\n  writeBody(bw) {\n    for (const ext of this.extensions)\n      ext.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    for (const ext of this.extensions)\n      ext.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.extensions.length === 0;\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      extensions: this.extensions\n    };\n  }\n}\n\n/**\n * Extension\n */\n\n// Extension  ::=  SEQUENCE  {\n//      extnID      OBJECT IDENTIFIER,\n//      critical    BOOLEAN DEFAULT FALSE,\n//      extnValue   OCTET STRING }\n\nclass Extension extends asn1.Sequence {\n  constructor() {\n    super();\n    this.extnID = new asn1.OID();\n    this.critical = new asn1.Bool().optional();\n    this.extnValue = new asn1.OctString();\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.extnID.getSize();\n    size += this.critical.getSize();\n    size += this.extnValue.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.extnID.write(bw);\n    this.critical.write(bw);\n    this.extnValue.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.extnID.read(br);\n    this.critical.read(br);\n    this.extnValue.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.extnID.clean()\n        && this.critical.clean()\n        && this.extnValue.clean();\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      extnID: this.extnID,\n      critical: this.critical,\n      extnValue: this.extnValue\n    };\n  }\n}\n\n/**\n * DigestInfo\n */\n\n// See: https://www.ietf.org/rfc/rfc3447.txt\n// Section 9.2\n//\n// DigestInfo ::= SEQUENCE {\n//   digestAlgorithm AlgorithmIdentifier,\n//   digest OCTET STRING\n// }\n\nclass DigestInfo extends asn1.Sequence {\n  constructor(algorithm, digest) {\n    super();\n    this.algorithm = new AlgorithmIdentifier(algorithm);\n    this.algorithm.parameters.optional(false);\n    this.digest = new asn1.OctString(digest);\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.algorithm.getSize();\n    size += this.digest.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.algorithm.write(bw);\n    this.digest.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.algorithm.read(br);\n    this.digest.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.algorithm.clean()\n        && this.digest.clean();\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      algorithm: this.algorithm,\n      digest: this.digest\n    };\n  }\n}\n\n/*\n * Expose\n */\n\nexports.Certificate = Certificate;\nexports.TBSCertificate = TBSCertificate;\nexports.AlgorithmIdentifier = AlgorithmIdentifier;\nexports.RDNSequence = RDNSequence;\nexports.RDN = RDN;\nexports.Attribute = Attribute;\nexports.Validity = Validity;\nexports.Time = Time;\nexports.SubjectPublicKeyInfo = SubjectPublicKeyInfo;\nexports.Extensions = Extensions;\nexports.Extension = Extension;\nexports.DigestInfo = DigestInfo;\n","/*!\n * sec1.js - SEC1 encoding for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009, The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Resources:\n *   http://www.secg.org/sec1-v2.pdf\n *   https://github.com/openssl/openssl/blob/master/crypto/ec/ec_asn1.c\n *   https://github.com/golang/go/blob/master/src/crypto/x509/sec1.go\n *   https://tools.ietf.org/html/rfc5915\n */\n\n'use strict';\n\nconst asn1 = require('./asn1');\nconst pem = require('./pem');\n\n/**\n * ECPrivateKey\n */\n\n// ECPrivateKey ::= SEQUENCE {\n//   version INTEGER { ecPrivkeyVer1(1) } (ecPrivkeyVer1),\n//   privateKey OCTET STRING,\n//   parameters [0] ECDomainParameters {{ SECGCurveNames }} OPTIONAL,\n//   publicKey [1] BIT STRING OPTIONAL\n// }\n\n// ECDomainParameters{ECDOMAIN:IOSet} ::= CHOICE {\n//   specified SpecifiedECDomain,\n//   named ECDOMAIN.&id({IOSet}),\n//   implicitCA NULL\n// }\n\n// ECDOMAIN ::= CLASS {\n//   &id OBJECT IDENTIFIER UNIQUE\n// }\n\n// Golang seems to be using this instead:\n// ECPrivateKey ::= SEQUENCE {\n//   version       INTEGER { ecPrivkeyVer1(1) },\n//   privateKey    OCTET STRING,\n//   parameters    [0] EXPLICIT ECDomainParameters OPTIONAL,\n//   publicKey     [1] EXPLICIT BIT STRING OPTIONAL\n// }\n\nclass ECPrivateKey extends asn1.Sequence {\n  constructor(version, privateKey, namedCurveOID, publicKey) {\n    super();\n    this.version = new asn1.Unsigned(version);\n    this.privateKey = new asn1.OctString(privateKey);\n    this.namedCurveOID = new asn1.OID(namedCurveOID).explicit(0).optional();\n    this.publicKey = new asn1.BitString(publicKey).explicit(1).optional();\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.version.getSize();\n    size += this.privateKey.getSize();\n    size += this.namedCurveOID.getSize();\n    size += this.publicKey.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.version.write(bw);\n    this.privateKey.write(bw);\n    this.namedCurveOID.write(bw);\n    this.publicKey.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.version.read(br);\n    this.privateKey.read(br);\n    this.namedCurveOID.read(br);\n    this.publicKey.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.version.clean()\n        && this.privateKey.clean()\n        && this.namedCurveOID.clean()\n        && this.publicKey.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'EC PRIVATE KEY');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'EC PRIVATE KEY');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      version: this.version,\n      privateKey: this.privateKey,\n      namedCurveOID: this.namedCurveOID,\n      publicKey: this.publicKey\n    };\n  }\n}\n\n/**\n * ECDSA Signature\n */\n\n// ECDSA-Signature ::= CHOICE {\n//   two-ints-plus ECDSA-Sig-Value,\n//   point-int [0] ECDSA-Full-R,\n//   ... -- Future representations may be added\n// }\n\n// ECDSA-Full-R ::= SEQUENCE {\n//   r ECPoint,\n//   s INTEGER\n// }\n\n// ECPoint ::= OCTET STRING\n\n// ECDSA-Sig-Value ::= SEQUENCE {\n//   r INTEGER,\n//   s INTEGER,\n//   a INTEGER OPTIONAL,\n//   y CHOICE { b BOOLEAN, f FieldElement } OPTIONAL\n// }\n\nclass ECDSASignature extends asn1.Sequence {\n  constructor(r, s) {\n    super();\n    this.r = new asn1.Unsigned(r);\n    this.s = new asn1.Unsigned(s);\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.r.getSize();\n    size += this.s.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.r.write(bw);\n    this.s.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.r.read(br);\n    this.s.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.r.clean() && this.s.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'EC SIGNATURE');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'EC SIGNATURE');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      r: this.r,\n      s: this.s\n    };\n  }\n}\n\n/*\n * Expose\n */\n\nexports.ECPrivateKey = ECPrivateKey;\nexports.ECDSASignature = ECDSASignature;\n","/*!\n * ripemd160.js - RIPEMD160 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hash.js:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/hash.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/RIPEMD-160\n *   https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\n *   https://github.com/indutny/hash.js/blob/master/lib/hash/ripemd.js\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst HMAC = require('../internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = -1;\nconst DESC = Buffer.alloc(8, 0x00);\nconst PADDING = Buffer.alloc(64, 0x00);\n\nPADDING[0] = 0x80;\n\nconst r = new Uint8Array([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]);\n\nconst rh = new Uint8Array([\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]);\n\nconst s = new Uint8Array([\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]);\n\nconst sh = new Uint8Array([\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]);\n\n/**\n * RIPEMD160\n */\n\nclass RIPEMD160 {\n  constructor() {\n    this.state = new Uint32Array(5);\n    this.msg = new Uint32Array(16);\n    this.block = Buffer.alloc(64);\n    this.size = FINALIZED;\n  }\n\n  init() {\n    this.state[0] = 0x67452301;\n    this.state[1] = 0xefcdab89;\n    this.state[2] = 0x98badcfe;\n    this.state[3] = 0x10325476;\n    this.state[4] = 0xc3d2e1f0;\n    this.size = 0;\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    this._update(data, data.length);\n    return this;\n  }\n\n  final() {\n    return this._final(Buffer.alloc(20));\n  }\n\n  _update(data, len) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    let pos = this.size & 63;\n    let off = 0;\n\n    this.size += len;\n\n    if (pos > 0) {\n      let want = 64 - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < 64)\n        return;\n\n      this._transform(this.block, 0);\n    }\n\n    while (len >= 64) {\n      this._transform(data, off);\n      off += 64;\n      len -= 64;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n  }\n\n  _final(out) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    const pos = this.size & 63;\n    const len = this.size * 8;\n\n    writeU32(DESC, len >>> 0, 0);\n    writeU32(DESC, (len * (1 / 0x100000000)) >>> 0, 4);\n\n    this._update(PADDING, 1 + ((119 - pos) & 63));\n    this._update(DESC, 8);\n\n    for (let i = 0; i < 5; i++) {\n      writeU32(out, this.state[i], i * 4);\n      this.state[i] = 0;\n    }\n\n    for (let i = 0; i < 16; i++)\n      this.msg[i] = 0;\n\n    for (let i = 0; i < 64; i++)\n      this.block[i] = 0;\n\n    this.size = FINALIZED;\n\n    return out;\n  }\n\n  _transform(chunk, pos) {\n    const W = this.msg;\n\n    let A = this.state[0];\n    let B = this.state[1];\n    let C = this.state[2];\n    let D = this.state[3];\n    let E = this.state[4];\n    let Ah = A;\n    let Bh = B;\n    let Ch = C;\n    let Dh = D;\n    let Eh = E;\n\n    for (let i = 0; i < 16; i++)\n      W[i] = readU32(chunk, pos + i * 4);\n\n    for (let j = 0; j < 80; j++) {\n      let a = A + f(j, B, C, D) + W[r[j]] + K(j);\n      let b = rotl32(a, s[j]);\n      let T = b + E;\n\n      A = E;\n      E = D;\n      D = rotl32(C, 10);\n      C = B;\n      B = T;\n\n      a = Ah + f(79 - j, Bh, Ch, Dh) + W[rh[j]] + Kh(j);\n      b = rotl32(a, sh[j]);\n      T = b + Eh;\n      Ah = Eh;\n      Eh = Dh;\n      Dh = rotl32(Ch, 10);\n      Ch = Bh;\n      Bh = T;\n    }\n\n    const T = this.state[1] + C + Dh;\n\n    this.state[1] = this.state[2] + D + Eh;\n    this.state[2] = this.state[3] + E + Ah;\n    this.state[3] = this.state[4] + A + Bh;\n    this.state[4] = this.state[0] + B + Ch;\n    this.state[0] = T;\n  }\n\n  static hash() {\n    return new RIPEMD160();\n  }\n\n  static hmac() {\n    return new HMAC(RIPEMD160, 64);\n  }\n\n  static digest(data) {\n    return RIPEMD160.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 20);\n    assert(Buffer.isBuffer(right) && right.length === 20);\n    return RIPEMD160.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = RIPEMD160;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return RIPEMD160.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nRIPEMD160.native = 0;\nRIPEMD160.id = 'RIPEMD160';\nRIPEMD160.size = 20;\nRIPEMD160.bits = 160;\nRIPEMD160.blockSize = 64;\nRIPEMD160.zero = Buffer.alloc(20, 0x00);\nRIPEMD160.ctx = new RIPEMD160();\n\n/*\n * Helpers\n */\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n\n  if (j <= 31)\n    return (x & y) | ((~x) & z);\n\n  if (j <= 47)\n    return (x | (~y)) ^ z;\n\n  if (j <= 63)\n    return (x & z) | (y & (~z));\n\n  return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n\n  if (j <= 31)\n    return 0x5a827999;\n\n  if (j <= 47)\n    return 0x6ed9eba1;\n\n  if (j <= 63)\n    return 0x8f1bbcdc;\n\n  return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n\n  if (j <= 31)\n    return 0x5c4dd124;\n\n  if (j <= 47)\n    return 0x6d703ef3;\n\n  if (j <= 63)\n    return 0x7a6d76e9;\n\n  return 0x00000000;\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = RIPEMD160;\n","/*!\n * sha1.js - SHA1 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hash.js:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/hash.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SHA-1\n *   https://tools.ietf.org/html/rfc3174\n *   http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *   https://github.com/indutny/hash.js/blob/master/lib/hash/sha/1.js\n */\n\n/* eslint camelcase: \"off\" */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst HMAC = require('../internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = -1;\nconst DESC = Buffer.alloc(8, 0x00);\nconst PADDING = Buffer.alloc(64, 0x00);\n\nPADDING[0] = 0x80;\n\nconst K = new Uint32Array([\n  0x5a827999,\n  0x6ed9eba1,\n  0x8f1bbcdc,\n  0xca62c1d6\n]);\n\n/**\n * SHA1\n */\n\nclass SHA1 {\n  constructor() {\n    this.state = new Uint32Array(5);\n    this.msg = new Uint32Array(80);\n    this.block = Buffer.alloc(64);\n    this.size = FINALIZED;\n  }\n\n  init() {\n    this.state[0] = 0x67452301;\n    this.state[1] = 0xefcdab89;\n    this.state[2] = 0x98badcfe;\n    this.state[3] = 0x10325476;\n    this.state[4] = 0xc3d2e1f0;\n    this.size = 0;\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    this._update(data, data.length);\n    return this;\n  }\n\n  final() {\n    return this._final(Buffer.alloc(20));\n  }\n\n  _update(data, len) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    let pos = this.size & 63;\n    let off = 0;\n\n    this.size += len;\n\n    if (pos > 0) {\n      let want = 64 - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < 64)\n        return;\n\n      this._transform(this.block, 0);\n    }\n\n    while (len >= 64) {\n      this._transform(data, off);\n      off += 64;\n      len -= 64;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n  }\n\n  _final(out) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    const pos = this.size & 63;\n    const len = this.size * 8;\n\n    writeU32(DESC, (len * (1 / 0x100000000)) >>> 0, 0);\n    writeU32(DESC, len >>> 0, 4);\n\n    this._update(PADDING, 1 + ((119 - pos) & 63));\n    this._update(DESC, 8);\n\n    for (let i = 0; i < 5; i++) {\n      writeU32(out, this.state[i], i * 4);\n      this.state[i] = 0;\n    }\n\n    for (let i = 0; i < 80; i++)\n      this.msg[i] = 0;\n\n    for (let i = 0; i < 64; i++)\n      this.block[i] = 0;\n\n    this.size = FINALIZED;\n\n    return out;\n  }\n\n  _transform(chunk, pos) {\n    const W = this.msg;\n\n    let a = this.state[0];\n    let b = this.state[1];\n    let c = this.state[2];\n    let d = this.state[3];\n    let e = this.state[4];\n    let i = 0;\n\n    for (; i < 16; i++)\n      W[i] = readU32(chunk, pos + i * 4);\n\n    for (; i < 80; i++)\n      W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n    for (i = 0; i < 80; i++) {\n      const s = i / 20 | 0;\n      const t = rotl32(a, 5) + ft_1(s, b, c, d) + e + W[i] + K[s];\n\n      e = d;\n      d = c;\n      c = rotl32(b, 30);\n      b = a;\n      a = t >>> 0;\n    }\n\n    this.state[0] += a;\n    this.state[1] += b;\n    this.state[2] += c;\n    this.state[3] += d;\n    this.state[4] += e;\n  }\n\n  static hash() {\n    return new SHA1();\n  }\n\n  static hmac() {\n    return new HMAC(SHA1, 64);\n  }\n\n  static digest(data) {\n    return SHA1.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 20);\n    assert(Buffer.isBuffer(right) && right.length === 20);\n    return SHA1.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = SHA1;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return SHA1.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nSHA1.native = 0;\nSHA1.id = 'SHA1';\nSHA1.size = 20;\nSHA1.bits = 160;\nSHA1.blockSize = 64;\nSHA1.zero = Buffer.alloc(20, 0x00);\nSHA1.ctx = new SHA1();\n\n/*\n * Helpers\n */\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n\n  if (s === 2)\n    return maj32(x, y, z);\n\n  return 0;\n}\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\n\nfunction readU32(data, off) {\n  return (data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction writeU32(data, num, off) {\n  data[off++] = num >>> 24;\n  data[off++] = num >>> 16;\n  data[off++] = num >>> 8;\n  data[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = SHA1;\n","/*!\n * p256.js - p256 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/p256');\n","/*!\n * p384.js - p384 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/p384');\n","/*!\n * p521.js - p521 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/p521');\n","/*!\n * pbkdf2.js - pbkdf2 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/pbkdf2');\n","/*!\n * sha1.js - sha1 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/sha1');\n","/*!\n * ripemd160.js - ripemd160 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/ripemd160');\n","/*!\n * sha224.js - SHA224 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/sha224');\n","/*!\n * rsa.js - RSA for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/rsa');\n","/*!\n * safe.js - constant-time equals for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009 The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Resources:\n *   https://github.com/golang/go/blob/master/src/crypto/subtle/constant_time.go\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\n\n/*\n * Safe\n */\n\nfunction safeCompare(x, y) {\n  assert(Buffer.isBuffer(x));\n  assert(Buffer.isBuffer(y));\n\n  if (safeEqualInt(x.length, 0))\n    return safeEqualInt(y.length, 0);\n\n  // Assumes `y` is the \"constant size\"\n  // parameter. Note that constant size\n  // doesn't necessarily mean secret.\n  // Assuming we have a constant-size\n  // secret key or passphrase. This\n  // function should be called as:\n  //\n  // if (!safeCompare(input, key))\n  //   throw new Error('Bad passphrase.');\n  let v = x.length ^ y.length;\n\n  for (let i = 0; i < y.length; i++)\n    v |= x[i % x.length] ^ y[i];\n\n  return (v - 1) >>> 31;\n}\n\nfunction safeEqual(x, y) {\n  assert(Buffer.isBuffer(x));\n  assert(Buffer.isBuffer(y));\n\n  // Assumes the lengths of both\n  // `x` and `y` are not secret.\n  if (!safeEqualInt(x.length, y.length))\n    return 0;\n\n  let v = 0;\n\n  for (let i = 0; i < x.length; i++)\n    v |= x[i] ^ y[i];\n\n  return (v - 1) >>> 31;\n}\n\nfunction safeEqualByte(x, y) {\n  return safeEqualInt(x & 0xff, y & 0xff);\n}\n\nfunction safeEqualInt(x, y) {\n  return ((x ^ y) - 1) >>> 31;\n}\n\nfunction safeSelect(x, y, v) {\n  return (x & (v - 1)) | (y & ~(v - 1));\n}\n\nfunction safeLT(x, y) {\n  return (x - y) >>> 31;\n}\n\nfunction safeLTE(x, y) {\n  return (x - y - 1) >>> 31;\n}\n\nfunction safeGT(x, y) {\n  return (y - x) >>> 31;\n}\n\nfunction safeGTE(x, y) {\n  return (y - x - 1) >>> 31;\n}\n\nfunction safeMin(x, y) {\n  return safeSelect(x, y, safeLT(y, x));\n}\n\nfunction safeMax(x, y) {\n  return safeSelect(x, y, safeGT(y, x));\n}\n\nfunction safeAbs(x) {\n  return (x | 0) * ((x >> 31) | 1);\n}\n\nfunction safeBool(x) {\n  return ((x >> 31) | (-x >> 31)) & 1;\n}\n\nfunction safeCopy(x, y, v) {\n  assert(Buffer.isBuffer(x));\n  assert(Buffer.isBuffer(y));\n  assert(safeEqualInt(x.length, y.length));\n\n  const xmask = (v - 1) & 0xff;\n  const ymask = ~(v - 1) & 0xff;\n\n  for (let i = 0; i < x.length; i++)\n    x[i] = (x[i] & xmask) | (y[i] & ymask);\n}\n\n/*\n * Expose\n */\n\nexports.safeCompare = safeCompare;\nexports.safeEqual = safeEqual;\nexports.safeEqualByte = safeEqualByte;\nexports.safeEqualInt = safeEqualInt;\nexports.safeSelect = safeSelect;\nexports.safeLT = safeLT;\nexports.safeLTE = safeLTE;\nexports.safeGT = safeGT;\nexports.safeGTE = safeGTE;\nexports.safeMin = safeMin;\nexports.safeMax = safeMax;\nexports.safeAbs = safeAbs;\nexports.safeBool = safeBool;\nexports.safeCopy = safeCopy;\n","import { Opcode } from \"./model/Opcode\";\nimport { opcodesBitcoinSegwit } from \"./BITCOIN_SEGWIT\";\n\nexport const opcodesLiquidSegwit: Opcode[] = [\n  ...opcodesBitcoinSegwit,\n\n  /*\n   * Constants\n   * * 0 - 96\n   */\n\n  /*\n   * Flow control\n   * * 97 - 106\n   */\n\n  /*\n   * Stack\n   * * 107 - 125\n   */\n\n  /*\n   * Splice\n   * 126 - 130\n   */\n  { word: \"OP_CAT\", opcode: 126, hex: \"0x7e\", description: \"Concatenates two strings.\" }, //\tx1 x2\tout\tConcatenates two strings. disabled.\n  { word: \"OP_SUBSTR\", opcode: 127, hex: \"0x7f\", description: \"Returns a section of a string.\" }, //\tin begin size\tout\tReturns a section of a string. disabled.\n  { word: \"OP_LEFT\", opcode: 128, hex: \"0x80\", description: \"Keeps only characters left of the specified point in a string.\" }, //\tin size\tout\tKeeps only characters left of the specified point in a string. disabled.\n  { word: \"OP_RIGHT\", opcode: 129, hex: \"0x81\", description: \"Keeps only characters right of the specified point in a string\" }, //\tin size\tout\tKeeps only characters right of the specified point in a string. disabled.\n\n  /*\n   * Bitwise logic\n   * 131 - 136\n   */\n  { word: \"OP_INVERT\", opcode: 131, hex: \"0x83\", description: \"Flips all of the bits in the input.\" }, //\tin\tout\tFlips all of the bits in the input. disabled.\n  { word: \"OP_AND\", opcode: 132, hex: \"0x84\", description: \"Boolean and between each bit in the inputs.\" }, //\tx1 x2\tout\tBoolean and between each bit in the inputs. disabled.\n  { word: \"OP_OR\", opcode: 133, hex: \"0x85\", description: \"Boolean or between each bit in the inputs.\" }, //\tx1 x2\tout\tBoolean or between each bit in the inputs. disabled.\n  { word: \"OP_XOR\", opcode: 134, hex: \"0x86\", description: \"Boolean exclusive or between each bit in the inputs.\" }, //\tx1 x2\tout\tBoolean exclusive or between each bit in the inputs. disabled.\n\n  /*\n   * Arithmetic\n   * 139 - 165\n   */\n  { word: \"OP_LSHIFT\", opcode: 152, hex: \"0x98\", description: \"Shifts a left b bits, preserving sign.\" }, //\ta b\tout\tShifts a left b bits, preserving sign. disabled.\n  { word: \"OP_RSHIFT\", opcode: 153, hex: \"0x99\", description: \"Shifts a right b bits, preserving sign.\" }, //\ta b\tout\tShifts a right b bits, preserving sign. disabled.\n\n  /*\n   * Crypto\n   * 166 - 175\n   */\n\n  /*\n   * Locktime\n   * 177 - 178\n   */\n\n  /*\n   * Reserved words\n   * 80, 98, 101, 102, 137, 138, 176, 179-185\n   */\n\n  /*\n   * Liquid words\n   * 193, 194, 195\n   */\n  {\n    word: \"OP_CHECKSIGFROMSTACK\",\n    opcode: 193,\n    hex: \"0xc1\",\n    description:\n      \"Pop the top 3 items from the stack. Treat the top as a public key, the second as a message, and the third as a signature. If the signature is valid, push a Script Number 1, otherwise push a Script Number 0.\",\n  },\n  {\n    word: \"OP_CHECKSIGFROMSTACKVERIFY\",\n    opcode: 194,\n    hex: \"0xc2\",\n    description:\n      \"Pop the top 3 items from the stack. Treat the top as a public key, the second as a message, and the third as a signature. If the signature is valid, push a Script Number 1, otherwise push a Script Number 0.\",\n  },\n  { word: \"OP_SUBSTR_LAZY\", opcode: 195, hex: \"0xc3\", description: \"Returns a section of a string.\" }, //\tliquid network feature.\n\n  /*\n   * Pseudo-words\n   * 253 - 255\n   */\n];\n","import { hexLE } from \"@script-wiz/wiz-data\";\n\nconst toLEPadByte = (number: number) => {\n  const hex = number.toString(16);\n  const padHex = hex.length % 2 === 0 ? hex : \"0\" + hex;\n  return hexLE(padHex);\n};\n\nexport const compileData = (hex: string): string => {\n  const byteLength = hex.length / 2;\n\n  // 0byte\n  if (byteLength === 0) {\n    return \"00\";\n  }\n\n  // 1 byte\n  else if (byteLength === 1) {\n    const n = parseInt(hex, 16);\n    if (0 < n && n < 17) {\n      return (n + 80).toString(16);\n    } else {\n      return \"01\" + hex;\n    }\n  }\n\n  // 1 < byte <= 75\n  else if (1 < byteLength && byteLength <= 75) {\n    return toLEPadByte(byteLength) + hex;\n  }\n\n  // 76 < byte <= 255\n  else if (76 < byteLength && byteLength <= 255) {\n    return \"4c\" + toLEPadByte(byteLength) + hex;\n  }\n\n  // 256 < byte <= 520\n  else if (256 < byteLength && byteLength <= 520) {\n    return \"4d\" + toLEPadByte(byteLength) + hex;\n  }\n\n  // 520 < byte\n  else {\n    throw \"compileAll: Push exceeds the push size limit of 520 bytes.\";\n  }\n};\n\nexport const compileJoin = (hexes: string[]): string => \"0x\" + hexes.join(\"\");\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./lib-typedarrays\"), require(\"./enc-utf16\"), require(\"./enc-base64\"), require(\"./enc-base64url\"), require(\"./md5\"), require(\"./sha1\"), require(\"./sha256\"), require(\"./sha224\"), require(\"./sha512\"), require(\"./sha384\"), require(\"./sha3\"), require(\"./ripemd160\"), require(\"./hmac\"), require(\"./pbkdf2\"), require(\"./evpkdf\"), require(\"./cipher-core\"), require(\"./mode-cfb\"), require(\"./mode-ctr\"), require(\"./mode-ctr-gladman\"), require(\"./mode-ofb\"), require(\"./mode-ecb\"), require(\"./pad-ansix923\"), require(\"./pad-iso10126\"), require(\"./pad-iso97971\"), require(\"./pad-zeropadding\"), require(\"./pad-nopadding\"), require(\"./format-hex\"), require(\"./aes\"), require(\"./tripledes\"), require(\"./rc4\"), require(\"./rabbit\"), require(\"./rabbit-legacy\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./enc-base64url\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64url encoding strategy.\n\t     */\n\t    var Base64url = C_enc.Base64url = {\n\t        /**\n\t         * Converts a word array to a Base64url string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {string} The Base64url string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray, urlSafe=true) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64url string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64url string.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);\n\t         */\n\t        parse: function (base64Str, urlSafe=true) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                reverseMap = this._reverseMap = [];\n\t                for (var j = 0; j < map.length; j++) {\n\t                    reverseMap[map.charCodeAt(j)] = j;\n\t                }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\t        _safe_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t        var words = [];\n\t        var nBytes = 0;\n\t        for (var i = 0; i < base64StrLength; i++) {\n\t            if (i % 4) {\n\t                var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t                var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t                var bitsCombined = bits1 | bits2;\n\t                words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t                nBytes++;\n\t            }\n\t        }\n\t        return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\treturn CryptoJS.enc.Base64url;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    var tMsw;\n\t                    var tLsw;\n\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by Cédric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA1 = C_algo.SHA1;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA1\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA1,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        var keystream;\n\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        for (var i = data.sigBytes - 1; i >= 0; i--) {\n\t            if (((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t                data.sigBytes = i + 1;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            var t;\n\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            // Make sure the key length is valid (64, 128 or >= 192 bit)\n\t            if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {\n\t                throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');\n\t            }\n\n\t            // Extend the key according to the keying options defined in 3DES standard\n\t            var key1 = keyWords.slice(0, 2);\n\t            var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);\n\t            var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(key1));\n\t            this._des2 = DES.createEncryptor(WordArray.create(key2));\n\t            this._des3 = DES.createEncryptor(WordArray.create(key3));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","// Copyright (c) 2017, 2021 Pieter Wuille\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport * as bech32 from \"./bech32\";\n\nfunction convertbits(data: any, frombits: any, tobits: any, pad: any) {\n  var acc = 0;\n  var bits = 0;\n  var ret = [];\n  var maxv = (1 << tobits) - 1;\n  for (var p = 0; p < data.length; ++p) {\n    var value = data[p];\n    if (value < 0 || value >> frombits !== 0) {\n      return null;\n    }\n    acc = (acc << frombits) | value;\n    bits += frombits;\n    while (bits >= tobits) {\n      bits -= tobits;\n      ret.push((acc >> bits) & maxv);\n    }\n  }\n  if (pad) {\n    if (bits > 0) {\n      ret.push((acc << (tobits - bits)) & maxv);\n    }\n  } else if (bits >= frombits || (acc << (tobits - bits)) & maxv) {\n    return null;\n  }\n  return ret;\n}\n\nfunction decode(hrp: string, addr: string) {\n  var bech32m = false;\n  var dec = bech32.decode(addr, bech32.encodings.BECH32);\n  if (dec === null) {\n    dec = bech32.decode(addr, bech32.encodings.BECH32M);\n    bech32m = true;\n  }\n  if (dec === null || dec.hrp !== hrp || dec.data.length < 1 || dec.data[0] > 16) {\n    return null;\n  }\n  var res = convertbits(dec.data.slice(1), 5, 8, false);\n  if (res === null || res.length < 2 || res.length > 40) {\n    return null;\n  }\n  if (dec.data[0] === 0 && res.length !== 20 && res.length !== 32) {\n    return null;\n  }\n  if (dec.data[0] === 0 && bech32m) {\n    return null;\n  }\n  if (dec.data[0] !== 0 && !bech32m) {\n    return null;\n  }\n  return { version: dec.data[0], program: res };\n}\n\nexport function encode(hrp: string, version: number, program: any) {\n  var enc = bech32.encodings.BECH32;\n  if (version > 0) {\n    enc = bech32.encodings.BECH32M;\n  }\n  var ret = bech32.encode(hrp, [version].concat(convertbits(program, 8, 5, true) as any), enc);\n  if (decode(hrp, ret) === null) {\n    return null;\n  }\n  return ret;\n}\n","// Copyright (c) 2017, 2021 Pieter Wuille\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nconst CHARSET = \"qpzry9x8gf2tvdw0s3jn54khce6mua7l\";\nconst GENERATOR = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n\nexport const encodings = {\n  BECH32: \"bech32\",\n  BECH32M: \"bech32m\",\n};\n\nfunction getEncodingConst(enc: string) {\n  if (enc == encodings.BECH32) {\n    return 1;\n  } else if (enc == encodings.BECH32M) {\n    return 0x2bc830a3;\n  } else {\n    return null;\n  }\n}\n\nfunction polymod(values: string | any[]) {\n  var chk = 1;\n  for (var p = 0; p < values.length; ++p) {\n    var top = chk >> 25;\n    chk = ((chk & 0x1ffffff) << 5) ^ values[p];\n    for (var i = 0; i < 5; ++i) {\n      if ((top >> i) & 1) {\n        chk ^= GENERATOR[i];\n      }\n    }\n  }\n  return chk;\n}\n\nfunction hrpExpand(hrp: string) {\n  var ret = [];\n  var p;\n  for (p = 0; p < hrp.length; ++p) {\n    ret.push(hrp.charCodeAt(p) >> 5);\n  }\n  ret.push(0);\n  for (p = 0; p < hrp.length; ++p) {\n    ret.push(hrp.charCodeAt(p) & 31);\n  }\n  return ret;\n}\n\nfunction verifyChecksum(hrp: any, data: any, enc: string) {\n  return polymod(hrpExpand(hrp).concat(data)) === getEncodingConst(enc);\n}\n\nfunction createChecksum(hrp: any, data: any, enc: string) {\n  var values = hrpExpand(hrp).concat(data).concat([0, 0, 0, 0, 0, 0]);\n  var mod = polymod(values) ^ (getEncodingConst(enc) || 0);\n  var ret = [];\n  for (var p = 0; p < 6; ++p) {\n    ret.push((mod >> (5 * (5 - p))) & 31);\n  }\n  return ret;\n}\n\nexport function encode(hrp: string, data: any[], enc: any) {\n  var combined = data.concat(createChecksum(hrp, data, enc));\n  var ret = hrp + \"1\";\n  for (var p = 0; p < combined.length; ++p) {\n    ret += CHARSET.charAt(combined[p]);\n  }\n  return ret;\n}\n\nexport function decode(bechString: string, enc: any) {\n  var p;\n  var has_lower = false;\n  var has_upper = false;\n  for (p = 0; p < bechString.length; ++p) {\n    if (bechString.charCodeAt(p) < 33 || bechString.charCodeAt(p) > 126) {\n      return null;\n    }\n    if (bechString.charCodeAt(p) >= 97 && bechString.charCodeAt(p) <= 122) {\n      has_lower = true;\n    }\n    if (bechString.charCodeAt(p) >= 65 && bechString.charCodeAt(p) <= 90) {\n      has_upper = true;\n    }\n  }\n  if (has_lower && has_upper) {\n    return null;\n  }\n  bechString = bechString.toLowerCase();\n  var pos = bechString.lastIndexOf(\"1\");\n  if (pos < 1 || pos + 7 > bechString.length || bechString.length > 90) {\n    return null;\n  }\n  var hrp = bechString.substring(0, pos);\n  var data = [];\n  for (p = pos + 1; p < bechString.length; ++p) {\n    var d = CHARSET.indexOf(bechString.charAt(p));\n    if (d === -1) {\n      return null;\n    }\n    data.push(d);\n  }\n  if (!verifyChecksum(hrp, data, enc)) {\n    return null;\n  }\n  return { hrp: hrp, data: data.slice(0, data.length - 6) };\n}\n","/*!\n * aead.js - aead for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/aead');\n","/*!\n * aead.js - aead for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://tools.ietf.org/html/rfc7539#section-2.8\n *   https://github.com/openssh/openssh-portable\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst ChaCha20 = require('./chacha20');\nconst Poly1305 = require('./poly1305');\n\n/*\n * Constants\n */\n\nconst zero16 = Buffer.alloc(16, 0x00);\n\n/**\n * AEAD\n */\n\nclass AEAD {\n  /**\n   * Create an AEAD context.\n   * @constructor\n   */\n\n  constructor() {\n    this.chacha = new ChaCha20();\n    this.poly = new Poly1305();\n    this.key = Buffer.alloc(64);\n    this.mode = -1;\n    this.aadLen = 0;\n    this.cipherLen = 0;\n  }\n\n  /**\n   * Initialize the AEAD with a key and iv.\n   * @param {Buffer} key\n   * @param {Buffer} iv - IV / packet sequence number.\n   */\n\n  init(key, iv) {\n    assert(Buffer.isBuffer(key));\n    assert(Buffer.isBuffer(iv));\n\n    this.key.fill(0);\n    this.chacha.init(key, iv, 0);\n    this.chacha.encrypt(this.key);\n    this.poly.init(this.key);\n\n    this.mode = 0;\n    this.aadLen = 0;\n    this.cipherLen = 0;\n\n    return this;\n  }\n\n  /**\n   * Update the aad (will be finalized\n   * on an encrypt/decrypt call).\n   * @param {Buffer} aad\n   */\n\n  aad(data) {\n    if (this.mode === -1)\n      throw new Error('Context is not initialized.');\n\n    if (this.mode !== 0)\n      throw new Error('Invalid state for aad.');\n\n    this.poly.update(data);\n    this.aadLen += data.length;\n\n    return this;\n  }\n\n  /**\n   * Encrypt a piece of data.\n   * @param {Buffer} data\n   */\n\n  encrypt(data) {\n    if (this.mode === -1)\n      throw new Error('Context is not initialized.');\n\n    if (this.mode !== 0 && this.mode !== 1)\n      throw new Error('Invalid state for encrypt.');\n\n    if (this.mode === 0) {\n      this._pad16(this.aadLen);\n      this.mode = 1;\n    }\n\n    this.chacha.encrypt(data);\n    this.poly.update(data);\n\n    this.cipherLen += data.length;\n\n    return data;\n  }\n\n  /**\n   * Decrypt a piece of data.\n   * @param {Buffer} data\n   */\n\n  decrypt(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (this.mode === -1)\n      throw new Error('Context is not initialized.');\n\n    if (this.mode !== 0 && this.mode !== 2)\n      throw new Error('Invalid state for decrypt.');\n\n    if (this.mode === 0) {\n      this._pad16(this.aadLen);\n      this.mode = 2;\n    }\n\n    this.cipherLen += data.length;\n\n    this.poly.update(data);\n    this.chacha.encrypt(data);\n\n    return data;\n  }\n\n  /**\n   * Authenticate data without decrypting.\n   * @param {Buffer} data\n   */\n\n  auth(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (this.mode === -1)\n      throw new Error('Context is not initialized.');\n\n    if (this.mode !== 0 && this.mode !== 3)\n      throw new Error('Invalid state for auth.');\n\n    if (this.mode === 0) {\n      this._pad16(this.aadLen);\n      this.mode = 3;\n    }\n\n    this.cipherLen += data.length;\n\n    this.poly.update(data);\n\n    return data;\n  }\n\n  /**\n   * Finalize the aead and generate a MAC.\n   * @returns {Buffer} MAC\n   */\n\n  final() {\n    if (this.mode === -1)\n      throw new Error('Context is not initialized.');\n\n    const len = Buffer.alloc(16);\n\n    writeU64(len, this.aadLen, 0);\n    writeU64(len, this.cipherLen, 8);\n\n    if (this.mode === 0)\n      this._pad16(this.aadLen);\n\n    this._pad16(this.cipherLen);\n    this.poly.update(len);\n\n    const mac = this.poly.final();\n\n    this.destroy();\n\n    return mac;\n  }\n\n  /**\n   * Destroy the context.\n   */\n\n  destroy() {\n    this.chacha.destroy();\n    this.poly.destroy();\n\n    for (let i = 0; i < 64; i++)\n      this.key[i] = 0;\n\n    this.mode = -1;\n    this.aadLen = 0;\n    this.cipherLen = 0;\n\n    return this;\n  }\n\n  /**\n   * Finalize and verify MAC against tag.\n   * @param {Buffer} tag\n   * @returns {Boolean}\n   */\n\n  verify(tag) {\n    assert(Buffer.isBuffer(tag));\n    assert(tag.length === 16);\n\n    const mac = this.final();\n\n    let z = 0;\n\n    for (let i = 0; i < 16; i++)\n      z |= mac[i] ^ tag[i];\n\n    return ((z - 1) >>> 31) !== 0;\n  }\n\n  /**\n   * Pad a chunk before updating mac.\n   * @private\n   * @param {Number} size\n   */\n\n  _pad16(size) {\n    const pos = size & 15;\n\n    if (pos > 0)\n      this.poly.update(zero16.slice(0, 16 - pos));\n  }\n\n  /**\n   * Encrypt a piece of data.\n   * @param {Buffer} key\n   * @param {Buffer} iv\n   * @param {Buffer} msg\n   * @param {Buffer?} aad\n   * @returns {Buffer} tag\n   */\n\n  static encrypt(key, iv, msg, aad) {\n    const aead = new AEAD();\n\n    aead.init(key, iv);\n\n    if (aad)\n      aead.aad(aad);\n\n    aead.encrypt(msg);\n\n    return aead.final();\n  }\n\n  /**\n   * Decrypt a piece of data.\n   * @param {Buffer} key\n   * @param {Buffer} iv\n   * @param {Buffer} msg\n   * @param {Buffer} tag\n   * @param {Buffer?} aad\n   * @returns {Boolean}\n   */\n\n  static decrypt(key, iv, msg, tag, aad) {\n    const aead = new AEAD();\n\n    aead.init(key, iv);\n\n    if (aad)\n      aead.aad(aad);\n\n    aead.decrypt(msg);\n\n    return aead.verify(tag);\n  }\n\n  /**\n   * Authenticate data without decrypting.\n   * @param {Buffer} key\n   * @param {Buffer} iv\n   * @param {Buffer} msg\n   * @param {Buffer} tag\n   * @param {Buffer?} aad\n   * @returns {Boolean}\n   */\n\n  static auth(key, iv, msg, tag, aad) {\n    const aead = new AEAD();\n\n    aead.init(key, iv);\n\n    if (aad)\n      aead.aad(aad);\n\n    aead.auth(msg);\n\n    return aead.verify(tag);\n  }\n}\n\n/*\n * Static\n */\n\nAEAD.native = ChaCha20.native;\n\n/*\n * Helpers\n */\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  return off;\n}\n\nfunction writeU64(dst, num, off) {\n  const hi = (num * (1 / 0x100000000)) >>> 0;\n  const lo = num >>> 0;\n\n  writeU32(dst, lo, off + 0);\n  writeU32(dst, hi, off + 4);\n\n  return off + 8;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = AEAD;\n","/*!\n * aes.js - aes for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/aes');\n","/*!\n * aes.js - aes128/192/256 for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst AES = require('./ciphers/aes');\nconst {CBCCipher, CBCDecipher} = require('./ciphers/modes');\n\n/**\n * Encrypt data with aes 256 cbc.\n * @param {Buffer} data\n * @param {Buffer} key\n * @param {Buffer} iv\n * @returns {Buffer}\n */\n\nfunction encipher(data, key, iv) {\n  const ctx = new CBCCipher(new AES(256));\n  ctx.init(key, iv);\n  return Buffer.concat([ctx.update(data), ctx.final()]);\n}\n\n/**\n * Decrypt data with aes 256 cbc.\n * @param {Buffer} data\n * @param {Buffer} key\n * @param {Buffer} iv\n * @returns {Buffer}\n */\n\nfunction decipher(data, key, iv) {\n  const ctx = new CBCDecipher(new AES(256));\n  ctx.init(key, iv);\n  return Buffer.concat([ctx.update(data), ctx.final()]);\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.encipher = encipher;\nexports.decipher = decipher;\n","/*!\n * ghash.js - ghash for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009, The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Galois/Counter_Mode\n *   https://dx.doi.org/10.6028/NIST.SP.800-38D\n *   https://github.com/golang/go/blob/master/src/crypto/cipher/gcm.go\n *   https://github.com/golang/go/blob/master/src/crypto/cipher/gcm_test.go\n *   https://github.com/DaGenix/rust-crypto/blob/master/src/ghash.rs\n */\n\n'use strict';\n\nconst assert = require('../../internal/assert');\n\n/*\n * Constants\n */\n\nconst PADDING = Buffer.alloc(16, 0x00);\nconst FINALIZED = -1;\n\nconst REDUCTION = new Uint16Array([\n  0x0000, 0x1c20, 0x3840, 0x2460,\n  0x7080, 0x6ca0, 0x48c0, 0x54e0,\n  0xe100, 0xfd20, 0xd940, 0xc560,\n  0x9180, 0x8da0, 0xa9c0, 0xb5e0\n]);\n\n/**\n * GHASH\n */\n\nclass GHASH {\n  constructor() {\n    this.state = new Uint32Array(4);\n    this.block = Buffer.alloc(16);\n    this.size = FINALIZED;\n    this.adLen = 0;\n    this.ctLen = 0;\n    this.table = new Array(16);\n\n    for (let i = 0; i < 16; i++)\n      this.table[i] = new Uint32Array(4);\n  }\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n    assert(key.length === 16);\n\n    for (let i = 0; i < 4; i++)\n      this.state[i] = 0;\n\n    this.size = 0;\n    this.adLen = 0;\n    this.ctLen = 0;\n\n    for (let i = 0; i < 16; i++) {\n      for (let j = 0; j < 4; j++)\n        this.table[i][j] = 0;\n    }\n\n    const x = new Uint32Array(4);\n\n    x[1] = readU32(key, 0);\n    x[0] = readU32(key, 4);\n    x[3] = readU32(key, 8);\n    x[2] = readU32(key, 12);\n\n    this.table[reverse(1)] = x;\n\n    for (let i = 2; i < 16; i += 2) {\n      this.table[reverse(i)] = this.double(this.table[reverse(i >>> 1)]);\n      this.table[reverse(i + 1)] = this.add(this.table[reverse(i)], x);\n    }\n\n    return this;\n  }\n\n  absorb(data) {\n    this._absorb(data, data.length);\n    return this;\n  }\n\n  _absorb(data, len) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    let pos = this.size & 15;\n    let off = 0;\n\n    this.size += len;\n\n    if (pos > 0) {\n      let want = 16 - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < 16)\n        return;\n\n      this.transform(this.block, 0);\n    }\n\n    while (len >= 16) {\n      this.transform(data, off);\n      off += 16;\n      len -= 16;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n  }\n\n  transform(block, off) {\n    this.state[1] ^= readU32(block, off + 0);\n    this.state[0] ^= readU32(block, off + 4);\n    this.state[3] ^= readU32(block, off + 8);\n    this.state[2] ^= readU32(block, off + 12);\n    this.mul(this.state);\n  }\n\n  pad() {\n    const pos = this.size & 15;\n\n    if (pos !== 0)\n      this._absorb(PADDING, 16 - pos);\n  }\n\n  aad(data) {\n    assert(Buffer.isBuffer(data));\n    assert(this.ctLen === 0);\n\n    this.adLen += data.length;\n\n    return this.absorb(data);\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (data.length === 0)\n      return this;\n\n    if (this.ctLen === 0)\n      this.pad();\n\n    this.ctLen += data.length;\n\n    return this.absorb(data);\n  }\n\n  final() {\n    const out = Buffer.alloc(16);\n\n    this.pad();\n\n    const adLen = this.adLen * 8;\n    const ctLen = this.ctLen * 8;\n\n    this.state[1] ^= hi32(adLen);\n    this.state[0] ^= lo32(adLen);\n    this.state[3] ^= hi32(ctLen);\n    this.state[2] ^= lo32(ctLen);\n\n    this.mul(this.state);\n\n    writeU32(out, this.state[1], 0);\n    writeU32(out, this.state[0], 4);\n    writeU32(out, this.state[3], 8);\n    writeU32(out, this.state[2], 12);\n\n    for (let i = 0; i < 4; i++)\n      this.state[i] = 0;\n\n    for (let i = 0; i < 16; i++)\n      this.block[i] = 0;\n\n    this.size = FINALIZED;\n    this.adLen = 0;\n    this.ctLen = 0;\n\n    for (let i = 0; i < 16; i++) {\n      for (let j = 0; j < 4; j++)\n        this.table[i][j] = 0;\n    }\n\n    return out;\n  }\n\n  destroy() {\n    for (let i = 0; i < 4; i++)\n      this.state[i] = 0;\n\n    for (let i = 0; i < 16; i++)\n      this.block[i] = 0;\n\n    this.size = FINALIZED;\n    this.adLen = 0;\n    this.ctLen = 0;\n\n    for (let i = 0; i < 16; i++) {\n      for (let j = 0; j < 4; j++)\n        this.table[i][j] = 0;\n    }\n  }\n\n  add(x, y) {\n    assert(x instanceof Uint32Array);\n    assert(x.length === 4);\n    assert(y instanceof Uint32Array);\n    assert(y.length === 4);\n\n    const z = new Uint32Array(4);\n\n    z[0] = x[0] ^ y[0];\n    z[1] = x[1] ^ y[1];\n    z[2] = x[2] ^ y[2];\n    z[3] = x[3] ^ y[3];\n\n    return z;\n  }\n\n  double(x) {\n    assert(x instanceof Uint32Array);\n    assert(x.length === 4);\n\n    const d = new Uint32Array(4);\n    const msb = (x[2] & 1) === 1;\n\n    let v;\n\n    d[3] = x[3];\n    d[2] = x[2];\n    v = d[3] & 1;\n    d[3] >>>= 1;\n    d[2] >>>= 1;\n    d[2] |= v << 31;\n\n    d[3] |= (x[0] & 1) << 31;\n\n    d[1] = x[1];\n    d[0] = x[0];\n    v = d[1] & 1;\n    d[1] >>>= 1;\n    d[0] >>>= 1;\n    d[0] |= v << 31;\n\n    if (msb) {\n      d[1] ^= 0xe1000000;\n      d[0] ^= 0x00000000;\n    }\n\n    return d;\n  }\n\n  mul(y) {\n    assert(y instanceof Uint32Array);\n    assert(y.length === 4);\n\n    const z = new Uint32Array(4);\n    const w = new Uint32Array(2);\n\n    let v, t;\n\n    for (let i = 0; i < 2; i++) {\n      w[0] = y[2];\n      w[1] = y[3];\n\n      if (i === 1) {\n        w[0] = y[0];\n        w[1] = y[1];\n      }\n\n      for (let j = 0; j < 64; j += 4) {\n        const msw = z[2] & 0x0f;\n\n        v = z[3] & 0x0f;\n        z[3] >>>= 4;\n        z[2] >>>= 4;\n        z[2] |= v << 28;\n\n        z[3] |= z[0] << 28;\n\n        v = z[1] & 0x0f;\n        z[1] >>>= 4;\n        z[0] >>>= 4;\n        z[0] |= v << 28;\n\n        z[1] ^= REDUCTION[msw] << 16;\n\n        t = this.table[w[0] & 0x0f];\n\n        z[0] ^= t[0];\n        z[1] ^= t[1];\n\n        z[2] ^= t[2];\n        z[3] ^= t[3];\n\n        v = w[1] & 0x0f;\n        w[1] >>>= 4;\n        w[0] >>>= 4;\n        w[0] |= v << 28;\n      }\n    }\n\n    y[0] = z[0];\n    y[1] = z[1];\n    y[2] = z[2];\n    y[3] = z[3];\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction hi32(num) {\n  return (num * (1 / 0x100000000)) >>> 0;\n}\n\nfunction lo32(num) {\n  return num >>> 0;\n}\n\nfunction reverse(i) {\n  i = ((i << 2) & 0x0c) | ((i >>> 2) & 0x03);\n  i = ((i << 1) & 0x0a) | ((i >>> 1) & 0x05);\n  return i;\n}\n\nfunction readU32(data, off) {\n  return (data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off++]);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num >>> 24;\n  dst[off++] = num >>> 16;\n  dst[off++] = num >>> 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = GHASH;\n","/*!\n * arc4.js - arc4 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/arc4');\n","/*!\n * arc4.js - ARC4 for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009, The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/RC4\n *   http://cypherpunks.venona.com/archive/1994/09/msg00304.html\n *   https://web.archive.org/web/20080207125928/http://cypherpunks.venona.com/archive/1994/09/msg00304.html\n *   https://tools.ietf.org/html/rfc4345\n *   https://tools.ietf.org/html/rfc6229\n *   https://github.com/golang/go/blob/master/src/crypto/rc4/rc4.go\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/**\n * ARC4\n */\n\nclass ARC4 {\n  constructor() {\n    this.s = new Uint32Array(256);\n    this.i = -1;\n    this.j = -1;\n  }\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n\n    const k = key.length;\n\n    if (k < 1 || k > 256)\n      throw new Error('Invalid key size.');\n\n    const s = this.s;\n\n    for (let i = 0; i < 256; i++)\n      s[i] = i;\n\n    let j = 0;\n\n    for (let i = 0; i < 256; i++) {\n      j += s[i] + key[i % k];\n      j &= 0xff;\n\n      [s[i], s[j]] = [s[j], s[i]];\n    }\n\n    this.i = 0;\n    this.j = 0;\n\n    return this;\n  }\n\n  encrypt(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (this.i === -1)\n      throw new Error('Context is not initialized.');\n\n    const s = this.s;\n\n    let {i, j} = this;\n    let x, y;\n\n    for (let k = 0; k < data.length; k++) {\n      i = (i + 1) & 0xff;\n      x = s[i];\n\n      j = (j + x) & 0xff;\n      y = s[j];\n\n      s[i] = y;\n      s[j] = x;\n\n      data[k] ^= s[(x + y) & 0xff];\n    }\n\n    this.i = i;\n    this.j = j;\n\n    return data;\n  }\n\n  destroy() {\n    for (let i = 0; i < 256; i++)\n      this.s[i] = 0;\n\n    this.i = -1;\n    this.j = -1;\n\n    return this;\n  }\n}\n\n/*\n * Static\n */\n\nARC4.native = 0;\n\n/*\n * Expose\n */\n\nmodule.exports = ARC4;\n","/*!\n * bcrypt.js - bcrypt for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on joyent/node-bcrypt-pbkdf:\n *   Copyright (c) 2016, Joyent Inc\n *   https://github.com/joyent/node-bcrypt-pbkdf\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Bcrypt\n *   http://www.usenix.org/events/usenix99/provos/provos_html/node1.html\n *   https://hackernoon.com/the-bcrypt-protocol-is-kind-of-a-mess-4aace5eb31bd\n *   https://github.com/openbsd/src/blob/master/lib/libc/crypt/bcrypt.c\n *   https://github.com/openssh/openssh-portable\n *   https://github.com/openssh/openssh-portable/blob/master/openbsd-compat/bcrypt_pbkdf.c\n *   https://github.com/openssh/openssh-portable/blob/master/openbsd-compat/blowfish.c\n *   https://github.com/joyent/node-bcrypt-pbkdf/blob/master/index.js\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst SHA512 = require('../sha512');\nconst Blowfish = require('./ciphers/blowfish');\n\n/*\n * Constants\n */\n\nconst CIPHERTEXT192 = Buffer.from('OrpheanBeholderScryDoubt', 'binary');\nconst BCRYPT_BLOCKS192 = 6;\nconst BCRYPT_SIZE192 = 24;\nconst BCRYPT_SALT192 = 16;\nconst BCRYPT_HASH192 = 23;\n\nconst CIPHERTEXT256 = Buffer.from('OxychromaticBlowfishSwatDynamite', 'binary');\nconst BCRYPT_BLOCKS256 = 8;\nconst BCRYPT_SIZE256 = 32;\n\nconst NUL = Buffer.alloc(1, 0x00);\n\n/*\n * Bcrypt\n */\n\nfunction hash192(pass, salt, rounds) {\n  if (typeof pass === 'string')\n    pass = Buffer.from(pass, 'utf8');\n\n  if (typeof salt === 'string')\n    salt = Buffer.from(salt, 'utf8');\n\n  if (salt == null)\n    salt = Buffer.alloc(0);\n\n  assert(Buffer.isBuffer(pass));\n  assert(Buffer.isBuffer(salt));\n  assert((rounds >>> 0) === rounds);\n\n  if (rounds < 4 || rounds > 31)\n    throw new RangeError('Invalid rounds.');\n\n  return _hash192(Buffer.alloc(BCRYPT_SIZE192), pass, salt, rounds);\n}\n\nfunction derive(pass, salt, rounds, minor = 'b') {\n  if (typeof pass === 'string')\n    pass = Buffer.from(pass, 'utf8');\n\n  if (typeof salt === 'string')\n    salt = Buffer.from(salt, 'utf8');\n\n  assert(Buffer.isBuffer(pass));\n  assert(Buffer.isBuffer(salt));\n  assert((rounds >>> 0) === rounds);\n  assert(typeof minor === 'string');\n\n  if (salt.length !== BCRYPT_SALT192)\n    throw new RangeError('Invalid salt length.');\n\n  switch (minor) {\n    case 'a':\n      pass = Buffer.concat([pass, NUL]);\n      pass = pass.slice(0, pass.length & 0xff);\n      break;\n    case 'b':\n      if (pass.length > 72)\n        pass = pass.slice(0, 73);\n      else\n        pass = Buffer.concat([pass, NUL]);\n      break;\n    default:\n      throw new Error('Invalid minor version.');\n  }\n\n  return hash192(pass, salt, rounds).slice(0, BCRYPT_HASH192);\n}\n\nfunction generate(pass, salt, rounds, minor = 'b') {\n  if (typeof salt === 'string') {\n    const [i, data] = decode64(salt, 0, BCRYPT_SALT192);\n\n    if (i !== salt.length || data == null)\n      throw new Error('Invalid salt string.');\n\n    salt = data;\n  }\n\n  const hash = derive(pass, salt, rounds, minor);\n\n  return encode(minor, rounds, salt, hash);\n}\n\nfunction verify(pass, record) {\n  const [minor, rounds, salt, expect] = decode(record);\n  const hash = derive(pass, salt, rounds, minor);\n\n  let res = 0;\n\n  for (let i = 0; i < BCRYPT_HASH192; i++)\n    res |= hash[i] ^ expect[i];\n\n  return ((res - 1) >>> 31) !== 0;\n}\n\n/*\n * PBKDF\n */\n\nfunction hash256(pass, salt, rounds) {\n  if (typeof pass === 'string')\n    pass = Buffer.from(pass, 'utf8');\n\n  if (typeof salt === 'string')\n    salt = Buffer.from(salt, 'utf8');\n\n  if (salt == null)\n    salt = Buffer.alloc(0);\n\n  assert(Buffer.isBuffer(pass));\n  assert(Buffer.isBuffer(salt));\n  assert((rounds >>> 0) === rounds);\n\n  if (rounds < 4 || rounds > 31)\n    throw new RangeError('Invalid rounds.');\n\n  return _hash256(Buffer.alloc(BCRYPT_SIZE256), pass, salt, rounds);\n}\n\nfunction pbkdf(pass, salt, rounds, size) {\n  if (typeof pass === 'string')\n    pass = Buffer.from(pass, 'utf8');\n\n  if (typeof salt === 'string')\n    salt = Buffer.from(salt, 'utf8');\n\n  if (salt == null)\n    salt = Buffer.alloc(0);\n\n  assert(Buffer.isBuffer(pass));\n  assert(Buffer.isBuffer(salt));\n  assert((rounds >>> 0) === rounds);\n  assert((size >>> 0) === size);\n\n  const out = Buffer.alloc(BCRYPT_SIZE256);\n  const tmpout = Buffer.alloc(BCRYPT_SIZE256);\n  const countsalt = Buffer.alloc(salt.length + 4);\n  const key = Buffer.alloc(size);\n\n  if (rounds < 1\n      || pass.length === 0\n      || salt.length === 0\n      || size === 0\n      || size > out.length ** 2\n      || salt.length > (1 << 20)) {\n    throw new Error('Invalid bcrypt parameters.');\n  }\n\n  const stride = ((size + out.length - 1) / out.length) >>> 0;\n  const amount = ((size + stride - 1) / stride) >>> 0;\n\n  salt.copy(countsalt, 0);\n\n  const sha2pass = SHA512.digest(pass);\n\n  let sha2salt = Buffer.alloc(0);\n  let keylen = size;\n  let amt = amount;\n\n  for (let count = 1; keylen > 0; count++) {\n    countsalt[salt.length + 0] = count >>> 24;\n    countsalt[salt.length + 1] = count >>> 16;\n    countsalt[salt.length + 2] = count >>> 8;\n    countsalt[salt.length + 3] = count;\n\n    sha2salt = SHA512.digest(countsalt);\n\n    _hash256(tmpout, sha2pass, sha2salt, 6);\n\n    tmpout.copy(out, 0);\n\n    for (let i = 1; i < rounds; i++) {\n      sha2salt = SHA512.digest(tmpout);\n\n      _hash256(tmpout, sha2pass, sha2salt, 6);\n\n      for (let j = 0; j < out.length; j++)\n        out[j] ^= tmpout[j];\n    }\n\n    amt = Math.min(amt, keylen);\n\n    let i = 0;\n\n    for (; i < amt; i++) {\n      const dest = i * stride + (count - 1);\n\n      if (dest >= size)\n        break;\n\n      key[dest] = out[i];\n    }\n\n    keylen -= i;\n  }\n\n  return key;\n}\n\nasync function pbkdfAsync(pass, salt, rounds, size) {\n  return pbkdf(pass, salt, rounds, size);\n}\n\n/*\n * Hashing\n */\n\nfunction _hash192(out, pass, salt, rounds) {\n  const state = new Blowfish();\n  const cdata = new Uint32Array(BCRYPT_BLOCKS192);\n\n  state.init(pass, salt);\n\n  const r = 2 ** rounds;\n\n  for (let i = 0; i < r; i++) {\n    state.expand0state(pass);\n    state.expand0state(salt);\n  }\n\n  for (let i = 0; i < BCRYPT_BLOCKS192; i++)\n    cdata[i] = state.stream2word(CIPHERTEXT192);\n\n  for (let i = 0; i < 64; i++)\n    state.enc(cdata);\n\n  for (let i = 0; i < BCRYPT_BLOCKS192; i++) {\n    out[4 * i + 0] = cdata[i] >>> 24;\n    out[4 * i + 1] = cdata[i] >>> 16;\n    out[4 * i + 2] = cdata[i] >>> 8;\n    out[4 * i + 3] = cdata[i];\n  }\n\n  return out;\n}\n\nfunction _hash256(out, pass, salt, rounds) {\n  const state = new Blowfish();\n  const cdata = new Uint32Array(BCRYPT_BLOCKS256);\n\n  state.init(pass, salt);\n\n  const r = 2 ** rounds;\n\n  for (let i = 0; i < r; i++) {\n    state.expand0state(salt);\n    state.expand0state(pass);\n  }\n\n  for (let i = 0; i < BCRYPT_BLOCKS256; i++)\n    cdata[i] = state.stream2word(CIPHERTEXT256);\n\n  for (let i = 0; i < 64; i++)\n    state.enc(cdata);\n\n  for (let i = 0; i < BCRYPT_BLOCKS256; i++) {\n    out[4 * i + 3] = cdata[i] >>> 24;\n    out[4 * i + 2] = cdata[i] >>> 16;\n    out[4 * i + 1] = cdata[i] >>> 8;\n    out[4 * i + 0] = cdata[i];\n  }\n\n  return out;\n}\n\n/*\n * Encoding\n */\n\nfunction encode(minor, rounds, salt, hash) {\n  assert(typeof minor === 'string');\n  assert((rounds >>> 0) === rounds);\n  assert(Buffer.isBuffer(salt));\n  assert(Buffer.isBuffer(hash));\n  assert(minor === 'a' || minor === 'b');\n  assert(rounds >= 4 && rounds <= 31);\n  assert(salt.length === BCRYPT_SALT192);\n  assert(hash.length === BCRYPT_HASH192);\n\n  let logr = rounds.toString(10);\n\n  if (rounds < 10)\n    logr = '0' + logr;\n\n  return `$2${minor}$${logr}$${encode64(salt)}${encode64(hash)}`;\n}\n\nfunction decode(str) {\n  assert(typeof str === 'string');\n\n  if (str.length < 46)\n    throw new Error('Invalid bcrypt string.');\n\n  if (str[0] !== '$' || str[1] !== '2')\n    throw new Error('Invalid major version.');\n\n  const minor = str[2];\n\n  switch (minor) {\n    case 'a':\n    case 'b':\n      break;\n    default:\n      throw new Error('Invalid minor version.');\n  }\n\n  if (str[3] !== '$')\n    throw new Error('Invalid bcrypt string.');\n\n  const p = str.charCodeAt(4) - 0x30;\n  const q = str.charCodeAt(5) - 0x30;\n\n  if (p < 0 || p > 9 || q < 0 || q > 9)\n    throw new Error('Invalid bcrypt string.');\n\n  const rounds = p * 10 + q;\n\n  if (rounds < 4 || rounds > 31)\n    throw new Error('Invalid log rounds.');\n\n  if (str[6] !== '$')\n    throw new Error('Invalid bcrypt string.');\n\n  let i = 7;\n  let salt, hash;\n\n  [i, salt] = decode64(str, i, BCRYPT_SALT192);\n\n  if (salt == null)\n    throw new Error('Invalid salt.');\n\n  [i, hash] = decode64(str, i, BCRYPT_HASH192);\n\n  if (hash == null)\n    throw new Error('Invalid hash.');\n\n  if (i !== str.length)\n    throw new Error('Invalid bcrypt string.');\n\n  return [minor, rounds, salt, hash];\n}\n\n/*\n * Base64\n */\n\nconst CHARSET =\n  './ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\nconst TABLE = [\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  1,\n  54, 55, 56, 57, 58, 59, 60, 61, 62, 63, -1, -1, -1, -1, -1, -1,\n  -1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n  17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, -1, -1, -1, -1, -1,\n  -1, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\n  43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, -1, -1, -1, -1, -1\n];\n\nfunction encode64(data) {\n  assert(Buffer.isBuffer(data));\n\n  let p = 0;\n  let s = '';\n  let a, b;\n\n  while (p < data.length) {\n    a = data[p++];\n    s += CHARSET[(a >>> 2)];\n    a = (a & 3) << 4;\n\n    if (p >= data.length) {\n      s += CHARSET[a];\n      break;\n    }\n\n    b = data[p++];\n    a |= (b >>> 4) & 15;\n    s += CHARSET[a];\n    a = (b & 0x0f) << 2;\n\n    if (p >= data.length) {\n      s += CHARSET[a];\n      break;\n    }\n\n    b = data[p++];\n    a |= (b >>> 6) & 3;\n    s += CHARSET[a];\n    s += CHARSET[b & 63];\n  }\n\n  return s;\n}\n\nfunction decode64(s, i, len) {\n  assert(typeof s === 'string');\n  assert((i >>> 0) === i);\n  assert((len >>> 0) === len);\n\n  const data = Buffer.alloc(len);\n\n  let p = 0;\n  let a, b, c, d;\n\n  while (p < len) {\n    a = unbase64(s, i++);\n\n    if (a === -1)\n      return [i, null];\n\n    b = unbase64(s, i++);\n\n    if (b === -1)\n      return [i, null];\n\n    data[p++] = (a << 2) | ((b & 48) >>> 4);\n\n    if (p >= len)\n      break;\n\n    c = unbase64(s, i++);\n\n    if (c === -1)\n      return [i, null];\n\n    data[p++] = ((b & 15) << 4) | ((c & 60) >>> 2);\n\n    if (p >= len)\n      break;\n\n    d = unbase64(s, i++);\n\n    if (d === -1)\n      return [i, null];\n\n    data[p++] = ((c & 3) << 6) | d;\n  }\n\n  return [i, data];\n}\n\nfunction unbase64(s, i) {\n  if (i >= s.length)\n    return -1;\n\n  const ch = s.charCodeAt(i);\n\n  if (ch & 0xff80)\n    return -1;\n\n  return TABLE[ch];\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.hash192 = hash192;\nexports.derive = derive;\nexports.generate = generate;\nexports.verify = verify;\nexports.hash256 = hash256;\nexports.pbkdf = pbkdf;\nexports.pbkdfAsync = pbkdfAsync;\n","/*!\n * blake2b.js - BLAKE2b implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on dcposch/blakejs:\n *   Daniel Clemens Posch (CC0)\n *   https://github.com/dcposch/blakejs/blob/master/blake2b.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/BLAKE_(hash_function)\n *   https://tools.ietf.org/html/rfc7693\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst HMAC = require('../internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = 0x80000000;\n\nconst IV = new Uint32Array([\n  0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85,\n  0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,\n  0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c,\n  0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n]);\n\nconst SIGMA = new Uint8Array([\n  0x00, 0x02, 0x04, 0x06, 0x08, 0x0a, 0x0c, 0x0e,\n  0x10, 0x12, 0x14, 0x16, 0x18, 0x1a, 0x1c, 0x1e,\n  0x1c, 0x14, 0x08, 0x10, 0x12, 0x1e, 0x1a, 0x0c,\n  0x02, 0x18, 0x00, 0x04, 0x16, 0x0e, 0x0a, 0x06,\n  0x16, 0x10, 0x18, 0x00, 0x0a, 0x04, 0x1e, 0x1a,\n  0x14, 0x1c, 0x06, 0x0c, 0x0e, 0x02, 0x12, 0x08,\n  0x0e, 0x12, 0x06, 0x02, 0x1a, 0x18, 0x16, 0x1c,\n  0x04, 0x0c, 0x0a, 0x14, 0x08, 0x00, 0x1e, 0x10,\n  0x12, 0x00, 0x0a, 0x0e, 0x04, 0x08, 0x14, 0x1e,\n  0x1c, 0x02, 0x16, 0x18, 0x0c, 0x10, 0x06, 0x1a,\n  0x04, 0x18, 0x0c, 0x14, 0x00, 0x16, 0x10, 0x06,\n  0x08, 0x1a, 0x0e, 0x0a, 0x1e, 0x1c, 0x02, 0x12,\n  0x18, 0x0a, 0x02, 0x1e, 0x1c, 0x1a, 0x08, 0x14,\n  0x00, 0x0e, 0x0c, 0x06, 0x12, 0x04, 0x10, 0x16,\n  0x1a, 0x16, 0x0e, 0x1c, 0x18, 0x02, 0x06, 0x12,\n  0x0a, 0x00, 0x1e, 0x08, 0x10, 0x0c, 0x04, 0x14,\n  0x0c, 0x1e, 0x1c, 0x12, 0x16, 0x06, 0x00, 0x10,\n  0x18, 0x04, 0x1a, 0x0e, 0x02, 0x08, 0x14, 0x0a,\n  0x14, 0x04, 0x10, 0x08, 0x0e, 0x0c, 0x02, 0x0a,\n  0x1e, 0x16, 0x12, 0x1c, 0x06, 0x18, 0x1a, 0x00,\n  0x00, 0x02, 0x04, 0x06, 0x08, 0x0a, 0x0c, 0x0e,\n  0x10, 0x12, 0x14, 0x16, 0x18, 0x1a, 0x1c, 0x1e,\n  0x1c, 0x14, 0x08, 0x10, 0x12, 0x1e, 0x1a, 0x0c,\n  0x02, 0x18, 0x00, 0x04, 0x16, 0x0e, 0x0a, 0x06\n]);\n\n/**\n * BLAKE2b\n */\n\nclass BLAKE2b {\n  constructor() {\n    this.state = new Uint32Array(16);\n    this.V = new Uint32Array(32);\n    this.M = new Uint32Array(32);\n    this.block = Buffer.alloc(128);\n    this.size = 32;\n    this.count = 0;\n    this.pos = FINALIZED;\n  }\n\n  init(size, key) {\n    if (size == null)\n      size = 32;\n\n    assert((size >>> 0) === size);\n    assert(key == null || Buffer.isBuffer(key));\n\n    if (size === 0 || size > 64)\n      throw new Error('Bad output length.');\n\n    if (key && key.length > 64)\n      throw new Error('Bad key length.');\n\n    const klen = key ? key.length : 0;\n\n    for (let i = 0; i < 16; i++)\n      this.state[i] = IV[i];\n\n    this.size = size;\n    this.count = 0;\n    this.pos = 0;\n\n    this.state[0] ^= 0x01010000 ^ (klen << 8) ^ this.size;\n\n    if (klen > 0) {\n      const block = Buffer.alloc(128, 0x00);\n\n      key.copy(block, 0);\n\n      this.update(block);\n    }\n\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    assert(!(this.pos & FINALIZED), 'Context is not initialized.');\n\n    let off = 0;\n    let len = data.length;\n\n    if (len > 0) {\n      const left = this.pos;\n      const fill = 128 - left;\n\n      if (len > fill) {\n        this.pos = 0;\n\n        data.copy(this.block, left, off, off + fill);\n\n        this.count += 128;\n        this._compress(this.block, 0, false);\n\n        off += fill;\n        len -= fill;\n\n        while (len > 128) {\n          this.count += 128;\n          this._compress(data, off, false);\n          off += 128;\n          len -= 128;\n        }\n      }\n\n      data.copy(this.block, this.pos, off, off + len);\n\n      this.pos += len;\n    }\n\n    return this;\n  }\n\n  final() {\n    assert(!(this.pos & FINALIZED), 'Context is not initialized.');\n\n    this.count += this.pos;\n    this.block.fill(0, this.pos, 128);\n    this._compress(this.block, 0, true);\n    this.pos = FINALIZED;\n\n    const out = Buffer.alloc(this.size);\n\n    for (let i = 0; i < this.size; i++)\n      out[i] = this.state[i >>> 2] >>> (8 * (i & 3));\n\n    for (let i = 0; i < 16; i++)\n      this.state[i] = 0;\n\n    for (let i = 0; i < 32; i++) {\n      this.V[i] = 0;\n      this.M[i] = 0;\n    }\n\n    for (let i = 0; i < 128; i++)\n      this.block[i] = 0;\n\n    return out;\n  }\n\n  _compress(block, off, last) {\n    const {V, M} = this;\n\n    for (let i = 0; i < 16; i++) {\n      V[i] = this.state[i];\n      V[i + 16] = IV[i];\n    }\n\n    // uint128\n    V[24] ^= this.count;\n    V[25] ^= this.count * (1 / 0x100000000);\n    V[26] ^= 0;\n    V[27] ^= 0;\n\n    if (last) {\n      // last block\n      V[28] ^= -1;\n      V[29] ^= -1;\n\n      // last node\n      V[29] ^= 0;\n      V[30] ^= 0;\n    }\n\n    for (let i = 0; i < 32; i++) {\n      M[i] = readU32(block, off);\n      off += 4;\n    }\n\n    for (let i = 0; i < 12; i++) {\n      G(V, M, 0, 8, 16, 24, SIGMA[i * 16 + 0], SIGMA[i * 16 + 1]);\n      G(V, M, 2, 10, 18, 26, SIGMA[i * 16 + 2], SIGMA[i * 16 + 3]);\n      G(V, M, 4, 12, 20, 28, SIGMA[i * 16 + 4], SIGMA[i * 16 + 5]);\n      G(V, M, 6, 14, 22, 30, SIGMA[i * 16 + 6], SIGMA[i * 16 + 7]);\n      G(V, M, 0, 10, 20, 30, SIGMA[i * 16 + 8], SIGMA[i * 16 + 9]);\n      G(V, M, 2, 12, 22, 24, SIGMA[i * 16 + 10], SIGMA[i * 16 + 11]);\n      G(V, M, 4, 14, 16, 26, SIGMA[i * 16 + 12], SIGMA[i * 16 + 13]);\n      G(V, M, 6, 8, 18, 28, SIGMA[i * 16 + 14], SIGMA[i * 16 + 15]);\n    }\n\n    for (let i = 0; i < 16; i++)\n      this.state[i] ^= V[i] ^ V[i + 16];\n  }\n\n  static hash() {\n    return new BLAKE2b();\n  }\n\n  static hmac(size) {\n    return new HMAC(BLAKE2b, 128, [size]);\n  }\n\n  static digest(data, size, key) {\n    const {ctx} = BLAKE2b;\n\n    ctx.init(size, key);\n    ctx.update(data);\n\n    return ctx.final();\n  }\n\n  static root(left, right, size, key) {\n    if (size == null)\n      size = 32;\n\n    assert(Buffer.isBuffer(left) && left.length === size);\n    assert(Buffer.isBuffer(right) && right.length === size);\n\n    const {ctx} = BLAKE2b;\n\n    ctx.init(size, key);\n    ctx.update(left);\n    ctx.update(right);\n\n    return ctx.final();\n  }\n\n  static multi(x, y, z, size, key) {\n    const {ctx} = BLAKE2b;\n\n    ctx.init(size, key);\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key, size) {\n    return BLAKE2b.hmac(size).init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nBLAKE2b.native = 0;\nBLAKE2b.id = 'BLAKE2B256';\nBLAKE2b.size = 32;\nBLAKE2b.bits = 256;\nBLAKE2b.blockSize = 128;\nBLAKE2b.zero = Buffer.alloc(32, 0x00);\nBLAKE2b.ctx = new BLAKE2b();\n\n/*\n * Helpers\n */\n\nfunction sum64i(v, a, b) {\n  const o0 = v[a + 0] + v[b + 0];\n  const o1 = v[a + 1] + v[b + 1];\n  const c = (o0 >= 0x100000000) | 0;\n\n  v[a + 0] = o0;\n  v[a + 1] = o1 + c;\n}\n\nfunction sum64w(v, a, b0, b1) {\n  const o0 = v[a + 0] + b0;\n  const o1 = v[a + 1] + b1;\n  const c = (o0 >= 0x100000000) | 0;\n\n  v[a + 0] = o0;\n  v[a + 1] = o1 + c;\n}\n\nfunction G(v, m, a, b, c, d, ix, iy) {\n  const x0 = m[ix + 0];\n  const x1 = m[ix + 1];\n  const y0 = m[iy + 0];\n  const y1 = m[iy + 1];\n\n  sum64i(v, a, b);\n  sum64w(v, a, x0, x1);\n\n  const xor0 = v[d + 0] ^ v[a + 0];\n  const xor1 = v[d + 1] ^ v[a + 1];\n\n  v[d + 0] = xor1;\n  v[d + 1] = xor0;\n\n  sum64i(v, c, d);\n\n  const xor2 = v[b + 0] ^ v[c + 0];\n  const xor3 = v[b + 1] ^ v[c + 1];\n\n  v[b + 0] = (xor2 >>> 24) ^ (xor3 << 8);\n  v[b + 1] = (xor3 >>> 24) ^ (xor2 << 8);\n\n  sum64i(v, a, b);\n  sum64w(v, a, y0, y1);\n\n  const xor4 = v[d + 0] ^ v[a + 0];\n  const xor5 = v[d + 1] ^ v[a + 1];\n\n  v[d + 0] = (xor4 >>> 16) ^ (xor5 << 16);\n  v[d + 1] = (xor5 >>> 16) ^ (xor4 << 16);\n\n  sum64i(v, c, d);\n\n  const xor6 = v[b + 0] ^ v[c + 0];\n  const xor7 = v[b + 1] ^ v[c + 1];\n\n  v[b + 0] = (xor7 >>> 31) ^ (xor6 << 1);\n  v[b + 1] = (xor6 >>> 31) ^ (xor7 << 1);\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\n/*\n * Expose\n */\n\nmodule.exports = BLAKE2b;\n","/*!\n * blake2b160.js - BLAKE2b implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst BLAKE2b = require('./blake2b');\n\n/**\n * BLAKE2b160\n */\n\nclass BLAKE2b160 extends BLAKE2b {\n  constructor() {\n    super();\n  }\n\n  init(key) {\n    return super.init(20, key);\n  }\n\n  static hash() {\n    return new BLAKE2b160();\n  }\n\n  static hmac() {\n    return super.hmac(20);\n  }\n\n  static digest(data, key) {\n    return super.digest(data, 20, key);\n  }\n\n  static root(left, right, key) {\n    return super.root(left, right, 20, key);\n  }\n\n  static multi(x, y, z, key) {\n    return super.multi(x, y, z, 20, key);\n  }\n\n  static mac(data, key) {\n    return super.mac(data, key, 20);\n  }\n}\n\n/*\n * Static\n */\n\nBLAKE2b160.native = BLAKE2b.native;\nBLAKE2b160.id = 'BLAKE2B160';\nBLAKE2b160.size = 20;\nBLAKE2b160.bits = 160;\nBLAKE2b160.blockSize = 128;\nBLAKE2b160.zero = Buffer.alloc(20, 0x00);\nBLAKE2b160.ctx = new BLAKE2b160();\n\n/*\n * Expose\n */\n\nmodule.exports = BLAKE2b160;\n","/*!\n * blake2b256.js - BLAKE2b implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst BLAKE2b = require('./blake2b');\n\n/**\n * BLAKE2b256\n */\n\nclass BLAKE2b256 extends BLAKE2b {\n  constructor() {\n    super();\n  }\n\n  init(key) {\n    return super.init(32, key);\n  }\n\n  static hash() {\n    return new BLAKE2b256();\n  }\n\n  static hmac() {\n    return super.hmac(32);\n  }\n\n  static digest(data, key) {\n    return super.digest(data, 32, key);\n  }\n\n  static root(left, right, key) {\n    return super.root(left, right, 32, key);\n  }\n\n  static multi(x, y, z, key) {\n    return super.multi(x, y, z, 32, key);\n  }\n\n  static mac(data, key) {\n    return super.mac(data, key, 32);\n  }\n}\n\n/*\n * Static\n */\n\nBLAKE2b256.native = BLAKE2b.native;\nBLAKE2b256.id = 'BLAKE2B256';\nBLAKE2b256.size = 32;\nBLAKE2b256.bits = 256;\nBLAKE2b256.blockSize = 128;\nBLAKE2b256.zero = Buffer.alloc(32, 0x00);\nBLAKE2b256.ctx = new BLAKE2b256();\n\n/*\n * Expose\n */\n\nmodule.exports = BLAKE2b256;\n","/*!\n * blake2b384.js - BLAKE2b implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst BLAKE2b = require('./blake2b');\n\n/**\n * BLAKE2b384\n */\n\nclass BLAKE2b384 extends BLAKE2b {\n  constructor() {\n    super();\n  }\n\n  init(key) {\n    return super.init(48, key);\n  }\n\n  static hash() {\n    return new BLAKE2b384();\n  }\n\n  static hmac() {\n    return super.hmac(48);\n  }\n\n  static digest(data, key) {\n    return super.digest(data, 48, key);\n  }\n\n  static root(left, right, key) {\n    return super.root(left, right, 48, key);\n  }\n\n  static multi(x, y, z, key) {\n    return super.multi(x, y, z, 48, key);\n  }\n\n  static mac(data, key) {\n    return super.mac(data, key, 48);\n  }\n}\n\n/*\n * Static\n */\n\nBLAKE2b384.native = BLAKE2b.native;\nBLAKE2b384.id = 'BLAKE2B384';\nBLAKE2b384.size = 48;\nBLAKE2b384.bits = 384;\nBLAKE2b384.blockSize = 128;\nBLAKE2b384.zero = Buffer.alloc(48, 0x00);\nBLAKE2b384.ctx = new BLAKE2b384();\n\n/*\n * Expose\n */\n\nmodule.exports = BLAKE2b384;\n","/*!\n * blake2b512.js - BLAKE2b implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst BLAKE2b = require('./blake2b');\n\n/**\n * BLAKE2b512\n */\n\nclass BLAKE2b512 extends BLAKE2b {\n  constructor() {\n    super();\n  }\n\n  init(key) {\n    return super.init(64, key);\n  }\n\n  static hash() {\n    return new BLAKE2b512();\n  }\n\n  static hmac() {\n    return super.hmac(64);\n  }\n\n  static digest(data, key) {\n    return super.digest(data, 64, key);\n  }\n\n  static root(left, right, key) {\n    return super.root(left, right, 64, key);\n  }\n\n  static multi(x, y, z, key) {\n    return super.multi(x, y, z, 64, key);\n  }\n\n  static mac(data, key) {\n    return super.mac(data, key, 64);\n  }\n}\n\n/*\n * Static\n */\n\nBLAKE2b512.native = BLAKE2b.native;\nBLAKE2b512.id = 'BLAKE2B512';\nBLAKE2b512.size = 64;\nBLAKE2b512.bits = 512;\nBLAKE2b512.blockSize = 128;\nBLAKE2b512.zero = Buffer.alloc(64, 0x00);\nBLAKE2b512.ctx = new BLAKE2b512();\n\n/*\n * Expose\n */\n\nmodule.exports = BLAKE2b512;\n","/*!\n * blake2s.js - BLAKE2s implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on dcposch/blakejs:\n *   Daniel Clemens Posch (CC0)\n *   https://github.com/dcposch/blakejs/blob/master/blake2s.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/BLAKE_(hash_function)\n *   https://tools.ietf.org/html/rfc7693\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst HMAC = require('../internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = 0x80000000;\n\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n  0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\nconst SIGMA = new Uint8Array([\n  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n  0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,\n  0x0e, 0x0a, 0x04, 0x08, 0x09, 0x0f, 0x0d, 0x06,\n  0x01, 0x0c, 0x00, 0x02, 0x0b, 0x07, 0x05, 0x03,\n  0x0b, 0x08, 0x0c, 0x00, 0x05, 0x02, 0x0f, 0x0d,\n  0x0a, 0x0e, 0x03, 0x06, 0x07, 0x01, 0x09, 0x04,\n  0x07, 0x09, 0x03, 0x01, 0x0d, 0x0c, 0x0b, 0x0e,\n  0x02, 0x06, 0x05, 0x0a, 0x04, 0x00, 0x0f, 0x08,\n  0x09, 0x00, 0x05, 0x07, 0x02, 0x04, 0x0a, 0x0f,\n  0x0e, 0x01, 0x0b, 0x0c, 0x06, 0x08, 0x03, 0x0d,\n  0x02, 0x0c, 0x06, 0x0a, 0x00, 0x0b, 0x08, 0x03,\n  0x04, 0x0d, 0x07, 0x05, 0x0f, 0x0e, 0x01, 0x09,\n  0x0c, 0x05, 0x01, 0x0f, 0x0e, 0x0d, 0x04, 0x0a,\n  0x00, 0x07, 0x06, 0x03, 0x09, 0x02, 0x08, 0x0b,\n  0x0d, 0x0b, 0x07, 0x0e, 0x0c, 0x01, 0x03, 0x09,\n  0x05, 0x00, 0x0f, 0x04, 0x08, 0x06, 0x02, 0x0a,\n  0x06, 0x0f, 0x0e, 0x09, 0x0b, 0x03, 0x00, 0x08,\n  0x0c, 0x02, 0x0d, 0x07, 0x01, 0x04, 0x0a, 0x05,\n  0x0a, 0x02, 0x08, 0x04, 0x07, 0x06, 0x01, 0x05,\n  0x0f, 0x0b, 0x09, 0x0e, 0x03, 0x0c, 0x0d, 0x00\n]);\n\n/**\n * BLAKE2s\n */\n\nclass BLAKE2s {\n  constructor() {\n    this.state = new Uint32Array(8);\n    this.V = new Uint32Array(16);\n    this.M = new Uint32Array(16);\n    this.block = Buffer.alloc(64);\n    this.size = 32;\n    this.count = 0;\n    this.pos = FINALIZED;\n  }\n\n  init(size, key) {\n    if (size == null)\n      size = 32;\n\n    assert((size >>> 0) === size);\n    assert(key == null || Buffer.isBuffer(key));\n\n    if (size === 0 || size > 32)\n      throw new Error('Bad output length.');\n\n    if (key && key.length > 32)\n      throw new Error('Bad key length.');\n\n    const klen = key ? key.length : 0;\n\n    for (let i = 0; i < 8; i++)\n      this.state[i] = IV[i];\n\n    this.size = size;\n    this.count = 0;\n    this.pos = 0;\n\n    this.state[0] ^= 0x01010000 ^ (klen << 8) ^ this.size;\n\n    if (klen > 0) {\n      const block = Buffer.alloc(64, 0x00);\n\n      key.copy(block, 0);\n\n      this.update(block);\n    }\n\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    assert(!(this.pos & FINALIZED), 'Context is not initialized.');\n\n    let off = 0;\n    let len = data.length;\n\n    if (len > 0) {\n      const left = this.pos;\n      const fill = 64 - left;\n\n      if (len > fill) {\n        this.pos = 0;\n\n        data.copy(this.block, left, off, off + fill);\n\n        this.count += 64;\n        this._compress(this.block, 0, false);\n\n        off += fill;\n        len -= fill;\n\n        while (len > 64) {\n          this.count += 64;\n          this._compress(data, off, false);\n          off += 64;\n          len -= 64;\n        }\n      }\n\n      data.copy(this.block, this.pos, off, off + len);\n\n      this.pos += len;\n    }\n\n    return this;\n  }\n\n  final() {\n    assert(!(this.pos & FINALIZED), 'Context is not initialized.');\n\n    this.count += this.pos;\n    this.block.fill(0, this.pos, 64);\n    this._compress(this.block, 0, true);\n    this.pos = FINALIZED;\n\n    const out = Buffer.alloc(this.size);\n\n    for (let i = 0; i < this.size; i++)\n      out[i] = this.state[i >>> 2] >>> (8 * (i & 3));\n\n    for (let i = 0; i < 8; i++)\n      this.state[i] = 0;\n\n    for (let i = 0; i < 16; i++) {\n      this.V[i] = 0;\n      this.M[i] = 0;\n    }\n\n    for (let i = 0; i < 64; i++)\n      this.block[i] = 0;\n\n    return out;\n  }\n\n  _compress(block, off, last) {\n    const {V, M} = this;\n\n    for (let i = 0; i < 8; i++) {\n      V[i] = this.state[i];\n      V[i + 8] = IV[i];\n    }\n\n    // uint64\n    V[12] ^= this.count;\n    V[13] ^= this.count * (1 / 0x100000000);\n\n    if (last) {\n      // last block\n      V[14] ^= -1;\n\n      // last node\n      V[15] ^= 0;\n    }\n\n    for (let i = 0; i < 16; i++) {\n      M[i] = readU32(block, off);\n      off += 4;\n    }\n\n    for (let i = 0; i < 10; i++) {\n      G(V, M, 0, 4, 8, 12, SIGMA[i * 16 + 0], SIGMA[i * 16 + 1]);\n      G(V, M, 1, 5, 9, 13, SIGMA[i * 16 + 2], SIGMA[i * 16 + 3]);\n      G(V, M, 2, 6, 10, 14, SIGMA[i * 16 + 4], SIGMA[i * 16 + 5]);\n      G(V, M, 3, 7, 11, 15, SIGMA[i * 16 + 6], SIGMA[i * 16 + 7]);\n      G(V, M, 0, 5, 10, 15, SIGMA[i * 16 + 8], SIGMA[i * 16 + 9]);\n      G(V, M, 1, 6, 11, 12, SIGMA[i * 16 + 10], SIGMA[i * 16 + 11]);\n      G(V, M, 2, 7, 8, 13, SIGMA[i * 16 + 12], SIGMA[i * 16 + 13]);\n      G(V, M, 3, 4, 9, 14, SIGMA[i * 16 + 14], SIGMA[i * 16 + 15]);\n    }\n\n    for (let i = 0; i < 8; i++)\n      this.state[i] ^= V[i] ^ V[i + 8];\n  }\n\n  static hash() {\n    return new BLAKE2s();\n  }\n\n  static hmac(size) {\n    return new HMAC(BLAKE2s, 64, [size]);\n  }\n\n  static digest(data, size, key) {\n    const {ctx} = BLAKE2s;\n\n    ctx.init(size, key);\n    ctx.update(data);\n\n    return ctx.final();\n  }\n\n  static root(left, right, size, key) {\n    if (size == null)\n      size = 32;\n\n    assert(Buffer.isBuffer(left) && left.length === size);\n    assert(Buffer.isBuffer(right) && right.length === size);\n\n    const {ctx} = BLAKE2s;\n\n    ctx.init(size, key);\n    ctx.update(left);\n    ctx.update(right);\n\n    return ctx.final();\n  }\n\n  static multi(x, y, z, size, key) {\n    const {ctx} = BLAKE2s;\n\n    ctx.init(size, key);\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key, size) {\n    return BLAKE2s.hmac(size).init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nBLAKE2s.native = 0;\nBLAKE2s.id = 'BLAKE2S256';\nBLAKE2s.size = 32;\nBLAKE2s.bits = 256;\nBLAKE2s.blockSize = 64;\nBLAKE2s.zero = Buffer.alloc(32, 0x00);\nBLAKE2s.ctx = new BLAKE2s();\n\n/*\n * Helpers\n */\n\nfunction rotr32(x, y) {\n  return (x >>> y) ^ (x << (32 - y));\n}\n\nfunction G(v, m, a, b, c, d, ix, iy) {\n  const x = m[ix];\n  const y = m[iy];\n\n  v[a] = v[a] + v[b] + x;\n  v[d] = rotr32(v[d] ^ v[a], 16);\n  v[c] = v[c] + v[d];\n  v[b] = rotr32(v[b] ^ v[c], 12);\n  v[a] = v[a] + v[b] + y;\n  v[d] = rotr32(v[d] ^ v[a], 8);\n  v[c] = v[c] + v[d];\n  v[b] = rotr32(v[b] ^ v[c], 7);\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\n/*\n * Expose\n */\n\nmodule.exports = BLAKE2s;\n","/*!\n * blake2s128.js - BLAKE2s implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst BLAKE2s = require('./blake2s');\n\n/**\n * BLAKE2s128\n */\n\nclass BLAKE2s128 extends BLAKE2s {\n  constructor() {\n    super();\n  }\n\n  init(key) {\n    return super.init(16, key);\n  }\n\n  static hash() {\n    return new BLAKE2s128();\n  }\n\n  static hmac() {\n    return super.hmac(16);\n  }\n\n  static digest(data, key) {\n    return super.digest(data, 16, key);\n  }\n\n  static root(left, right, key) {\n    return super.root(left, right, 16, key);\n  }\n\n  static multi(x, y, z, key) {\n    return super.multi(x, y, z, 16, key);\n  }\n\n  static mac(data, key) {\n    return super.mac(data, key, 16);\n  }\n}\n\n/*\n * Static\n */\n\nBLAKE2s128.native = BLAKE2s.native;\nBLAKE2s128.id = 'BLAKE2S128';\nBLAKE2s128.size = 16;\nBLAKE2s128.bits = 128;\nBLAKE2s128.blockSize = 64;\nBLAKE2s128.zero = Buffer.alloc(16, 0x00);\nBLAKE2s128.ctx = new BLAKE2s128();\n\n/*\n * Expose\n */\n\nmodule.exports = BLAKE2s128;\n","/*!\n * blake2s160.js - BLAKE2s implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst BLAKE2s = require('./blake2s');\n\n/**\n * BLAKE2s160\n */\n\nclass BLAKE2s160 extends BLAKE2s {\n  constructor() {\n    super();\n  }\n\n  init(key) {\n    return super.init(20, key);\n  }\n\n  static hash() {\n    return new BLAKE2s160();\n  }\n\n  static hmac() {\n    return super.hmac(20);\n  }\n\n  static digest(data, key) {\n    return super.digest(data, 20, key);\n  }\n\n  static root(left, right, key) {\n    return super.root(left, right, 20, key);\n  }\n\n  static multi(x, y, z, key) {\n    return super.multi(x, y, z, 20, key);\n  }\n\n  static mac(data, key) {\n    return super.mac(data, key, 20);\n  }\n}\n\n/*\n * Static\n */\n\nBLAKE2s160.native = BLAKE2s.native;\nBLAKE2s160.id = 'BLAKE2S160';\nBLAKE2s160.size = 20;\nBLAKE2s160.bits = 160;\nBLAKE2s160.blockSize = 64;\nBLAKE2s160.zero = Buffer.alloc(20, 0x00);\nBLAKE2s160.ctx = new BLAKE2s160();\n\n/*\n * Expose\n */\n\nmodule.exports = BLAKE2s160;\n","/*!\n * blake2s224.js - BLAKE2s implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst BLAKE2s = require('./blake2s');\n\n/**\n * BLAKE2s224\n */\n\nclass BLAKE2s224 extends BLAKE2s {\n  constructor() {\n    super();\n  }\n\n  init(key) {\n    return super.init(28, key);\n  }\n\n  static hash() {\n    return new BLAKE2s224();\n  }\n\n  static hmac() {\n    return super.hmac(28);\n  }\n\n  static digest(data, key) {\n    return super.digest(data, 28, key);\n  }\n\n  static root(left, right, key) {\n    return super.root(left, right, 28, key);\n  }\n\n  static multi(x, y, z, key) {\n    return super.multi(x, y, z, 28, key);\n  }\n\n  static mac(data, key) {\n    return super.mac(data, key, 28);\n  }\n}\n\n/*\n * Static\n */\n\nBLAKE2s224.native = BLAKE2s.native;\nBLAKE2s224.id = 'BLAKE2S224';\nBLAKE2s224.size = 28;\nBLAKE2s224.bits = 224;\nBLAKE2s224.blockSize = 64;\nBLAKE2s224.zero = Buffer.alloc(28, 0x00);\nBLAKE2s224.ctx = new BLAKE2s224();\n\n/*\n * Expose\n */\n\nmodule.exports = BLAKE2s224;\n","/*!\n * blake2s256.js - BLAKE2s implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst BLAKE2s = require('./blake2s');\n\n/**\n * BLAKE2s256\n */\n\nclass BLAKE2s256 extends BLAKE2s {\n  constructor() {\n    super();\n  }\n\n  init(key) {\n    return super.init(32, key);\n  }\n\n  static hash() {\n    return new BLAKE2s256();\n  }\n\n  static hmac() {\n    return super.hmac(32);\n  }\n\n  static digest(data, key) {\n    return super.digest(data, 32, key);\n  }\n\n  static root(left, right, key) {\n    return super.root(left, right, 32, key);\n  }\n\n  static multi(x, y, z, key) {\n    return super.multi(x, y, z, 32, key);\n  }\n\n  static mac(data, key) {\n    return super.mac(data, key, 32);\n  }\n}\n\n/*\n * Static\n */\n\nBLAKE2s256.native = BLAKE2s.native;\nBLAKE2s256.id = 'BLAKE2S256';\nBLAKE2s256.size = 32;\nBLAKE2s256.bits = 256;\nBLAKE2s256.blockSize = 64;\nBLAKE2s256.zero = Buffer.alloc(32, 0x00);\nBLAKE2s256.ctx = new BLAKE2s256();\n\n/*\n * Expose\n */\n\nmodule.exports = BLAKE2s256;\n","/*!\n * bn.js - big numbers for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/bn.js:\n *   Copyright (c) 2015, Fedor Indutny (MIT License).\n *   https://github.com/indutny/bn.js\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009, The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Parts of this software are based on openssl/openssl:\n *   Copyright (c) 1998-2018, The OpenSSL Project (Apache License v2.0).\n *   Copyright (c) 1995-1998, Eric A. Young, Tim J. Hudson. All rights reserved.\n *   https://github.com/openssl/openssl\n *\n * Parts of this software are based on libgmp:\n *   Copyright (c) 1991-1997, 1999-2014, Free Software Foundation, Inc.\n *   https://gmplib.org/\n *\n * Parts of this software are based on v8/v8:\n *   Copyright (c) 2017, The V8 Project Authors (BSD-Style License).\n *   https://github.com/v8/v8\n *\n * Resources:\n *   https://github.com/indutny/bn.js/blob/master/lib/bn.js\n *   https://github.com/indutny/miller-rabin/blob/master/lib/mr.js\n *   https://github.com/golang/go/blob/master/src/math/big/int.go\n *   https://github.com/golang/go/blob/master/src/math/big/nat.go\n *   https://github.com/golang/go/blob/master/src/math/big/prime.go\n *   https://github.com/openssl/openssl/tree/master/crypto/bn\n *   https://github.com/openssl/openssl/blob/master/crypto/bn/bn_kron.c\n *   https://github.com/gnutls/nettle/blob/master/mini-gmp.c\n *   https://github.com/v8/v8/blob/master/src/objects/bigint.cc\n */\n\n/* eslint valid-typeof: \"off\" */\n\n'use strict';\n\nconst {custom} = require('../internal/custom');\n\n/*\n * Constants\n */\n\nconst zeros = [\n  '',\n  '0',\n  '00',\n  '000',\n  '0000',\n  '00000',\n  '000000',\n  '0000000',\n  '00000000',\n  '000000000',\n  '0000000000',\n  '00000000000',\n  '000000000000',\n  '0000000000000',\n  '00000000000000',\n  '000000000000000',\n  '0000000000000000',\n  '00000000000000000',\n  '000000000000000000',\n  '0000000000000000000',\n  '00000000000000000000',\n  '000000000000000000000',\n  '0000000000000000000000',\n  '00000000000000000000000',\n  '000000000000000000000000',\n  '0000000000000000000000000'\n];\n\nconst groupSizes = [\n  0x00, 0x19, 0x10, 0x0c, 0x0b, 0x0a,\n  0x09, 0x08, 0x08, 0x07, 0x07, 0x07,\n  0x07, 0x06, 0x06, 0x06, 0x06, 0x06,\n  0x06, 0x06, 0x05, 0x05, 0x05, 0x05,\n  0x05, 0x05, 0x05, 0x05, 0x05, 0x05,\n  0x05, 0x05, 0x05, 0x05, 0x05, 0x05\n];\n\nconst groupBases = [\n  0x00000000, 0x02000000, 0x0290d741, 0x01000000,\n  0x02e90edd, 0x039aa400, 0x0267bf47, 0x01000000,\n  0x0290d741, 0x00989680, 0x012959c3, 0x0222c000,\n  0x03bd7765, 0x0072e440, 0x00adcea1, 0x01000000,\n  0x01704f61, 0x0206fc40, 0x02cddcf9, 0x03d09000,\n  0x003e5185, 0x004ea360, 0x006235f7, 0x00798000,\n  0x009502f9, 0x00b54ba0, 0x00daf26b, 0x01069c00,\n  0x0138f9ad, 0x0172c9e0, 0x01b4d89f, 0x02000000,\n  0x025528a1, 0x02b54a20, 0x03216b93, 0x039aa400\n];\n\nconst primes = {\n  p192: null,\n  p224: null,\n  p521: null,\n  k256: null,\n  p251: null,\n  p25519: null,\n  p448: null\n};\n\nconst modes = {\n  NONE: 0,\n  QUO: 1,\n  REM: 2,\n  BOTH: 3,\n  EUCLID: 4,\n  ALL: 7\n};\n\nconst WND_WIDTH = 4;\nconst WND_SIZE = 1 << (WND_WIDTH - 1);\n\nconst HAS_BIGINT = typeof BigInt === 'function';\n\n/**\n * BN\n */\n\nclass BN {\n  constructor(num, base, endian) {\n    this.words = [0];\n    this.length = 1;\n    this.negative = 0;\n    this.red = null;\n    this.from(num, base, endian);\n  }\n\n  /*\n   * Addition Engine\n   */\n\n  _iadd(a, b) {\n    let carry = 0;\n    let i = 0;\n\n    // a.length > b.length\n    if (a.length < b.length)\n      [a, b] = [b, a];\n\n    if (a !== this)\n      this._alloc(a.length);\n\n    for (; i < b.length; i++) {\n      const r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n\n      this.words[i] = r & 0x3ffffff;\n\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      const r = (a.words[i] | 0) + carry;\n\n      this.words[i] = r & 0x3ffffff;\n\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this._alloc(this.length + 1);\n      this.words[this.length++] = carry;\n    } else if (a !== this) {\n      // Copy the rest of the words.\n      for (; i < a.length; i++)\n        this.words[i] = a.words[i];\n    }\n\n    // Note: we shouldn't need to strip here.\n    return this;\n  }\n\n  _iaddn(num) {\n    this.words[0] += num;\n\n    if (this.words[0] < 0x4000000)\n      return this;\n\n    // Carry.\n    let i = 0;\n\n    this._alloc(this.length + 1);\n\n    this.words[this.length] = 0;\n\n    for (; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      this.words[i + 1] += 1;\n    }\n\n    this.length = Math.max(this.length, i + 1);\n\n    // Note: we shouldn't need to strip here.\n    return this;\n  }\n\n  /*\n   * Addition\n   */\n\n  iadd(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.negative === num.negative) {\n      // x + y == x + y\n      // (-x) + (-y) == -(x + y)\n      this._iadd(this, num);\n    } else {\n      // x + (-y) == x - y == -(y - x)\n      // (-x) + y == y - x == -(x - y)\n      const cmp = this.ucmp(num);\n\n      // x + (-x) == (-x) + x == 0\n      if (cmp === 0) {\n        this.words[0] = 0;\n        this.length = 1;\n        this.negative = 0;\n        return this;\n      }\n\n      if (cmp < 0) {\n        this._isub(num, this);\n        this.negative ^= 1;\n      } else {\n        this._isub(this, num);\n      }\n    }\n\n    return this;\n  }\n\n  iaddn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    const negative = (num < 0) | 0;\n\n    if (negative)\n      num = -num;\n\n    if (this.negative === negative) {\n      // x + y == x + y\n      // (-x) + (-y) == -(x + y)\n      this._iaddn(num);\n    } else {\n      // x + (-y) == x - y == -(y - x)\n      // (-x) + y == y - x == -(x - y)\n      if (this.length === 1 && this.words[0] < num) {\n        this.words[0] = num - this.words[0];\n        this.negative ^= 1;\n      } else {\n        this._isubn(num);\n      }\n    }\n\n    return this;\n  }\n\n  add(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (num.length > this.length)\n      return num.clone().iadd(this);\n\n    return this.clone().iadd(num);\n  }\n\n  addn(num) {\n    return this.clone().iaddn(num);\n  }\n\n  /*\n   * Subtraction Engine\n   */\n\n  _isub(a, b) {\n    let carry = 0;\n    let i = 0;\n\n    // a > b\n    assert(a.length >= b.length);\n\n    if (a !== this)\n      this._alloc(a.length);\n\n    for (; i < b.length; i++) {\n      const r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n\n      carry = r >> 26;\n\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      const r = (a.words[i] | 0) + carry;\n\n      carry = r >> 26;\n\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    assert(carry === 0);\n\n    // Copy rest of the words.\n    if (a !== this) {\n      for (; i < a.length; i++)\n        this.words[i] = a.words[i];\n    }\n\n    this.length = Math.max(this.length, i);\n\n    return this._strip();\n  }\n\n  _isubn(num) {\n    this.words[0] -= num;\n\n    if (this.words[0] >= 0)\n      return this._normalize();\n\n    assert(this.length !== 1);\n\n    // Carry.\n    this._alloc(this.length + 1);\n\n    for (let i = 0; i < this.length && this.words[i] < 0; i++) {\n      this.words[i] += 0x4000000;\n      this.words[i + 1] -= 1;\n    }\n\n    this.words[this.length] = 0;\n\n    return this._strip();\n  }\n\n  /*\n   * Subtraction\n   */\n\n  isub(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.negative !== num.negative) {\n      // x - (-y) == x + y\n      // (-x) - y == -(x + y)\n      this._iadd(this, num);\n    } else {\n      // x - y == x - y == -(y - x)\n      // (-x) - (-y) == y - x == -(x - y)\n      const cmp = this.ucmp(num);\n\n      // x - x == 0\n      if (cmp === 0) {\n        this.words[0] = 0;\n        this.length = 1;\n        this.negative = 0;\n        return this;\n      }\n\n      if (cmp < 0) {\n        this._isub(num, this);\n        this.negative ^= 1;\n      } else {\n        this._isub(this, num);\n      }\n    }\n\n    return this;\n  }\n\n  isubn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    const negative = (num < 0) | 0;\n\n    if (negative)\n      num = -num;\n\n    if (this.negative !== negative) {\n      // x - (-y) == x + y\n      // (-x) - y == -(x + y)\n      this._iaddn(num);\n    } else {\n      // x - y == x - y == -(y - x)\n      // (-x) - (-y) == y - x == -(x - y)\n      if (this.length === 1 && this.words[0] < num) {\n        this.words[0] = num - this.words[0];\n        this.negative ^= 1;\n      } else {\n        this._isubn(num);\n      }\n    }\n\n    return this;\n  }\n\n  sub(num) {\n    return this.clone().isub(num);\n  }\n\n  subn(num) {\n    return this.clone().isubn(num);\n  }\n\n  /*\n   * Multiplication Engine\n   */\n\n  _mul(num, out) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    enforce(BN.isBN(out), 'out', 'bignum');\n\n    if (this.length === 10 && num.length === 10)\n      return comb10MulTo(this, num, out);\n\n    const len = this.length + num.length;\n\n    if (len < 63)\n      return smallMulTo(this, num, out);\n\n    if (len < 1024)\n      return bigMulTo(this, num, out);\n\n    return jumboMulTo(this, num, out);\n  }\n\n  /*\n   * Multiplication\n   */\n\n  imul(num) {\n    return this.mul(num)._move(this);\n  }\n\n  imuln(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    const neg = (num < 0) | 0;\n\n    if (neg)\n      num = -num;\n\n    // Carry.\n    let carry = 0;\n\n    for (let i = 0; i < this.length; i++) {\n      const w = this.words[i] * num;\n      const lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      carry += lo >>> 26;\n\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    this.negative ^= neg;\n\n    if (carry !== 0) {\n      this._alloc(this.length + 1);\n      this.words[this.length++] = carry;\n    } else {\n      this._strip();\n    }\n\n    return this;\n  }\n\n  mul(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    const len = this.length + num.length;\n    const out = new BN();\n\n    out.words = new Array(len);\n\n    for (let i = 0; i < len; i ++)\n      out.words[i] = 0;\n\n    return this._mul(num, out);\n  }\n\n  muln(num) {\n    return this.clone().imuln(num);\n  }\n\n  /*\n   * Multiplication + Shift\n   */\n\n  mulShift(num, bits) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    const r = this.mul(num);\n    const b = r.utestn(bits - 1);\n\n    r.iushrn(bits);\n\n    if (this.negative ^ num.negative)\n      return r.isubn(b);\n\n    return r.iaddn(b);\n  }\n\n  /*\n   * Division Engine\n   */\n\n  _div(num, flags) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    assert((flags & modes.ALL) === flags);\n    assert(flags !== modes.NONE);\n\n    const a = this;\n    const b = num;\n\n    nonzero(!b.isZero());\n\n    if (a.isZero())\n      return [new BN(0), new BN(0)];\n\n    const as = a.negative;\n    const bs = b.negative;\n\n    a.negative = 0;\n    b.negative = 0;\n\n    let q = null;\n    let r = null;\n\n    if (a.ucmp(b) < 0) {\n      if (flags & modes.QUO)\n        q = new BN(0);\n\n      if (flags & modes.REM)\n        r = a.clone();\n    } else if (b.length === 1) {\n      if (flags & modes.QUO)\n        q = a.quon(b.words[0]);\n\n      if (flags & modes.REM)\n        r = a.remn(b.words[0]);\n    } else {\n      [q, r] = a._wordDiv(b, flags);\n    }\n\n    a.negative = as;\n    b.negative = bs;\n\n    if (flags & modes.QUO) {\n      q.negative = a.negative ^ b.negative;\n      q._normalize();\n    }\n\n    if (flags & modes.REM) {\n      r.negative = a.negative;\n      r._normalize();\n    }\n\n    if (flags & modes.EUCLID) {\n      if (flags & modes.QUO) {\n        assert((flags & modes.REM) !== 0);\n\n        if (r.negative !== 0) {\n          if (b.negative !== 0)\n            q.iaddn(1);\n          else\n            q.isubn(1);\n        }\n      }\n\n      if (flags & modes.REM) {\n        if (r.negative !== 0) {\n          if (b.negative !== 0)\n            r.isub(b);\n          else\n            r.iadd(b);\n        }\n      }\n    }\n\n    return [q, r];\n  }\n\n  _wordDiv(num, flags) {\n    let a = this.clone();\n    let b = num;\n    let q = null;\n    let hi;\n\n    // Normalize.\n    const word = b.words[b.length - 1] | 0;\n    const shift = 26 - countBits(word);\n\n    if (shift !== 0) {\n      b = b.clone();\n\n      a.iushln(shift);\n      b.iushln(shift);\n\n      hi = b.words[b.length - 1] | 0;\n    } else {\n      hi = word;\n    }\n\n    // Initialize quotient.\n    const m = a.length - b.length;\n\n    assert(m >= 0);\n\n    if (flags & modes.QUO) {\n      q = new BN(0);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (let i = 0; i < q.length; i++)\n        q.words[i] = 0;\n    }\n\n    // Diff.\n    const d = a.clone();\n\n    d._ishlnsubmul(b, 1, m);\n\n    if (d.negative === 0) {\n      if (q)\n        q.words[m] = 1;\n\n      a = d;\n    }\n\n    // Divide.\n    for (let j = m - 1; j >= 0; j--) {\n      const ahi = a.words[b.length + j];\n      const alo = a.words[b.length + j - 1];\n      const quo = ((ahi * 0x4000000 + alo) / hi) | 0;\n\n      let qj = Math.min(quo, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj -= 1;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        a.ineg();\n      }\n\n      if (q)\n        q.words[j] = qj;\n    }\n\n    // Strip.\n    if (q)\n      q._strip();\n\n    // Denormalize.\n    // Note: we shouldn't need to strip `a` here.\n    if ((flags & modes.REM) && shift !== 0)\n      a.iushrn(shift);\n\n    return [q, a];\n  }\n\n  _ishlnsubmul(num, mul, shift) {\n    let carry = 0;\n    let i = 0;\n\n    this._expand(num.length + shift);\n\n    for (; i < num.length; i++) {\n      const k = (this.words[i + shift] | 0) + carry;\n      const r = num.words[i] * mul;\n      const w = k - (r & 0x3ffffff);\n\n      carry = (w >> 26) - ((r / 0x4000000) | 0);\n\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      const w = (this.words[i + shift] | 0) + carry;\n\n      carry = w >> 26;\n\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0)\n      return this._strip();\n\n    // Subtraction overflow.\n    assert(carry === -1);\n\n    carry = 0;\n\n    for (let i = 0; i < this.length; i++) {\n      const w = -(this.words[i] | 0) + carry;\n\n      carry = w >> 26;\n\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n\n    return this._strip();\n  }\n\n  /*\n   * Truncation Division + Modulo\n   */\n\n  quorem(num) {\n    return this._div(num, modes.BOTH);\n  }\n\n  /*\n   * Truncation Division\n   */\n\n  iquo(num) {\n    return this.quo(num)._move(this);\n  }\n\n  iquon(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    nonzero(num !== 0);\n\n    const neg = (num < 0) | 0;\n\n    if (neg)\n      num = -num;\n\n    let carry = 0;\n\n    for (let i = this.length - 1; i >= 0; i--) {\n      const w = (this.words[i] | 0) + carry * 0x4000000;\n\n      this.words[i] = (w / num) | 0;\n\n      carry = w % num;\n    }\n\n    this.negative ^= neg;\n\n    return this._strip();\n  }\n\n  quo(num) {\n    return this._div(num, modes.QUO)[0];\n  }\n\n  quon(num) {\n    return this.clone().iquon(num);\n  }\n\n  /*\n   * Truncation Modulo\n   */\n\n  irem(num) {\n    return this.rem(num)._move(this);\n  }\n\n  iremn(num) {\n    let m = this.remrn(num);\n\n    if (m < 0)\n      m = -m;\n\n    this.words[0] = m;\n    this.length = 1;\n\n    return this._normalize();\n  }\n\n  rem(num) {\n    return this._div(num, modes.REM)[1];\n  }\n\n  remn(num) {\n    return this.clone().iremn(num);\n  }\n\n  remrn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    nonzero(num !== 0);\n\n    if (num < 0)\n      num = -num;\n\n    const p = (1 << 26) % num;\n\n    let acc = 0;\n\n    for (let i = this.length - 1; i >= 0; i--)\n      acc = (p * acc + (this.words[i] | 0)) % num;\n\n    return this.negative !== 0 ? (-acc | 0) : acc;\n  }\n\n  /*\n   * Euclidean Division + Modulo\n   */\n\n  divmod(num) {\n    return this._div(num, modes.BOTH | modes.EUCLID);\n  }\n\n  /*\n   * Euclidean Division\n   */\n\n  idiv(num) {\n    return this.div(num)._move(this);\n  }\n\n  idivn(num) {\n    if (this.negative === 0)\n      return this.iquon(num);\n\n    const r = this.remrn(num);\n\n    this.iquon(num);\n\n    if (r < 0) {\n      if (num < 0)\n        this.iaddn(1);\n      else\n        this.isubn(1);\n    }\n\n    return this;\n  }\n\n  div(num) {\n    return this._div(num, modes.BOTH | modes.EUCLID)[0];\n  }\n\n  divn(num) {\n    return this.clone().idivn(num);\n  }\n\n  /*\n   * Euclidean Modulo\n   */\n\n  imod(num) {\n    if (this.ucmp(num) < 0) {\n      if (this.negative !== 0) {\n        this._isub(num, this);\n        this.negative = 0;\n      }\n      return this;\n    }\n\n    return this.mod(num)._move(this);\n  }\n\n  imodn(num) {\n    this.words[0] = this.modrn(num);\n    this.length = 1;\n    this.negative = 0;\n    return this;\n  }\n\n  mod(num) {\n    return this._div(num, modes.REM | modes.EUCLID)[1];\n  }\n\n  modn(num) {\n    return this.clone().imodn(num);\n  }\n\n  modrn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    let r = this.remrn(num);\n\n    if (r < 0) {\n      if (num < 0)\n        r -= num;\n      else\n        r += num;\n    }\n\n    return r;\n  }\n\n  /*\n   * Round Division\n   */\n\n  divRound(num) {\n    const [q, r] = this.quorem(num);\n\n    // Fast case - exact division.\n    if (r.isZero())\n      return q;\n\n    const bit = num.words[0] & 1;\n\n    num.iushrn(1);\n\n    const cmp = r.ucmp(num);\n\n    num.iushln(1);\n\n    num.words[0] |= bit;\n\n    // Round down.\n    if (cmp < 0 || (num.isOdd() && cmp === 0))\n      return q;\n\n    // Round up.\n    if (this.negative ^ num.negative)\n      return q.isubn(1);\n\n    return q.iaddn(1);\n  }\n\n  /*\n   * Exponentiation\n   */\n\n  ipow(num) {\n    return this.pow(num)._move(this);\n  }\n\n  ipown(num) {\n    return this.pown(num)._move(this);\n  }\n\n  pow(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    let b = countBits(num.words[num.length - 1]);\n    let r = new BN(1);\n\n    for (let i = num.length - 1; i >= 0; i--) {\n      const word = num.words[i];\n\n      for (let j = b - 1; j >= 0; j--) {\n        r = r.sqr();\n\n        if ((word >> j) & 1)\n          r = r.mul(this);\n      }\n\n      b = 26;\n    }\n\n    return r;\n  }\n\n  pown(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if (num < 0)\n      num = -num;\n\n    if (num === 0)\n      return new BN(1);\n\n    if (num === 1)\n      return this.clone();\n\n    const bits = countBits(num);\n\n    let r = this;\n\n    for (let i = bits - 2; i >= 0; i--) {\n      r = r.sqr();\n\n      if ((num >> i) & 1)\n        r = r.mul(this);\n    }\n\n    return r;\n  }\n\n  isqr() {\n    return this.imul(this);\n  }\n\n  sqr() {\n    return this.mul(this);\n  }\n\n  /*\n   * Roots Engine\n   */\n\n  _rootrem(pow, rem) {\n    enforce((pow >>> 0) === pow, 'num', 'uint32');\n\n    if (pow === 0)\n      throw new RangeError('Zeroth root.');\n\n    if (~pow & this.negative)\n      throw new RangeError('Negative with even root.');\n\n    if (this.ucmpn(1) <= 0)\n      return [this.clone(), new BN(0)];\n\n    let u = new BN(0);\n    let t = BN.shift(1, this.bitLength() / pow + 1 | 0);\n    let v, r;\n\n    if (this.negative !== 0)\n      t.ineg();\n\n    if (pow === 2) {\n      do {\n        u = t;\n        t = this.quo(u);\n        t.iadd(u);\n        t.iushrn(1);\n      } while (t.ucmp(u) < 0);\n    } else {\n      do {\n        u = t;\n        t = u.pown(pow - 1);\n        t = this.quo(t);\n        v = u.muln(pow - 1);\n        t.iadd(v);\n        t = t.quon(pow);\n      } while (t.ucmp(u) < 0);\n    }\n\n    if (rem) {\n      t = u.pown(pow);\n      r = this.sub(t);\n    }\n\n    return [u, r];\n  }\n\n  /*\n   * Roots\n   */\n\n  rootrem(pow) {\n    return this._rootrem(pow, 1);\n  }\n\n  iroot(pow) {\n    return this.root(pow)._move(this);\n  }\n\n  root(pow) {\n    return this._rootrem(pow, 0)[0];\n  }\n\n  isPower(pow) {\n    enforce((pow >>> 0) === pow, 'num', 'uint32');\n\n    if (pow === 0 || (~pow & this.negative))\n      return false;\n\n    const [, r] = this.rootrem(pow);\n\n    return r.sign() === 0;\n  }\n\n  sqrtrem() {\n    return this.rootrem(2);\n  }\n\n  isqrt() {\n    return this.sqrt()._move(this);\n  }\n\n  sqrt() {\n    return this.root(2);\n  }\n\n  isSquare() {\n    return this.isPower(2);\n  }\n\n  /*\n   * AND\n   */\n\n  iand(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    let x = this;\n    let y = num;\n\n    if (x === y)\n      return x;\n\n    if ((x.negative | y.negative) === 0)\n      return x.iuand(y);\n\n    if ((x.negative & y.negative) === 1) {\n      // (-x) & (-y) == ~(x-1) & ~(y-1)\n      //             == ~((x-1) | (y-1))\n      //             == -(((x-1) | (y-1)) + 1)\n      x.iaddn(1);\n      y.iaddn(1);\n      x.iuor(y);\n      x.isubn(1);\n      y.isubn(1);\n      return x;\n    }\n\n    // Assume x is the positive number.\n    if (x.negative !== 0)\n      [x, y] = [y.clone(), x];\n\n    // x & (-y) == x & ~(y-1)\n    //          == x & ~(y-1)\n    const width = x.bitLength();\n\n    y.iaddn(1);\n    y.inotn(width);\n    x.iuand(y);\n    y.inotn(width);\n    y.isubn(1);\n\n    return x._move(this);\n  }\n\n  iandn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if ((this.negative | (num < 0)) !== 0)\n      return this.iand(new BN(num));\n\n    this.words[0] &= num;\n    this.length = 1;\n\n    return this;\n  }\n\n  and(num) {\n    return this.clone().iand(num);\n  }\n\n  andn(num) {\n    return this.clone().iandn(num);\n  }\n\n  andrn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if ((this.negative | (num < 0)) !== 0) {\n      const n = this.iand(new BN(num));\n\n      if (n.length > 1)\n        throw new RangeError('Number exceeds 26 bits.');\n\n      return n.negative !== 0 ? -n.words[0] : n.words[0];\n    }\n\n    return this.words[0] & num;\n  }\n\n  /*\n   * Unsigned AND\n   */\n\n  iuand(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    this.length = Math.min(this.length, num.length);\n\n    for (let i = 0; i < this.length; i++)\n      this.words[i] &= num.words[i];\n\n    return this._strip();\n  }\n\n  iuandn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    this.words[0] &= Math.abs(num);\n    this.length = 1;\n\n    return this._normalize();\n  }\n\n  uand(num) {\n    return this.clone().iuand(num);\n  }\n\n  uandn(num) {\n    return this.clone().iuandn(num);\n  }\n\n  uandrn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    const n = this.words[0] & Math.abs(num);\n\n    return this.negative !== 0 ? (-n | 0) : n;\n  }\n\n  /*\n   * OR\n   */\n\n  ior(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    let x = this;\n    let y = num;\n\n    if (x === y)\n      return x;\n\n    if ((x.negative | y.negative) === 0)\n      return x.iuor(y);\n\n    if ((x.negative & y.negative) === 1) {\n      // (-x) | (-y) == ~(x-1) | ~(y-1)\n      //             == ~((x-1) & (y-1))\n      //             == -(((x-1) & (y-1)) + 1)\n      x.iaddn(1);\n      y.iaddn(1);\n      x.iuand(y);\n      x.isubn(1);\n      y.isubn(1);\n      return x;\n    }\n\n    // Assume x is the positive number.\n    y = y.clone();\n\n    if (x.negative !== 0)\n      [x, y] = [y, x];\n\n    // x | (-y) == x | ~(y-1)\n    //          == ~((y-1) & ~x)\n    //          == -(((y-1) & ~x) + 1)\n    y.iaddn(1);\n    x.inotn(y.bitLength());\n    y.iuand(x);\n    y.isubn(1);\n\n    return y._move(this);\n  }\n\n  iorn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if ((this.negative | (num < 0)) !== 0)\n      return this.ior(new BN(num));\n\n    this.words[0] |= num;\n\n    return this;\n  }\n\n  or(num) {\n    return this.clone().ior(num);\n  }\n\n  orn(num) {\n    return this.clone().iorn(num);\n  }\n\n  /*\n   * Unsigned OR\n   */\n\n  iuor(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    this._expand(num.length);\n\n    for (let i = 0; i < num.length; i++)\n      this.words[i] |= num.words[i];\n\n    // Note: we shouldn't need to strip here.\n    return this;\n  }\n\n  iuorn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    this.words[0] |= Math.abs(num);\n\n    return this;\n  }\n\n  uor(num) {\n    return this.clone().iuor(num);\n  }\n\n  uorn(num) {\n    return this.clone().iuorn(num);\n  }\n\n  /*\n   * XOR\n   */\n\n  ixor(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    let x = this;\n    let y = num;\n\n    if (x === y) {\n      x.words[0] = 0;\n      x.length = 1;\n      x.negative = 0;\n      return x;\n    }\n\n    if ((x.negative | y.negative) === 0)\n      return x.iuxor(y);\n\n    if ((x.negative & y.negative) === 1) {\n      // (-x) ^ (-y) == ~(x-1) ^ ~(y-1)\n      //             == (x-1) ^ (y-1)\n      x.iaddn(1);\n      y.iaddn(1);\n      x.iuxor(y);\n      x.ineg();\n      y.isubn(1);\n      return x;\n    }\n\n    // Assume x is the positive number.\n    if (x.negative !== 0)\n      [x, y] = [y.clone(), x];\n\n    // x ^ (-y) == x ^ ~(y-1)\n    //          == ~(x ^ (y-1))\n    //          == -((x ^ (y-1)) + 1)\n    y.iaddn(1);\n    x.iuxor(y);\n    x.iaddn(1);\n    x.ineg();\n    y.isubn(1);\n\n    return x._move(this);\n  }\n\n  ixorn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if ((this.negative | (num < 0)) !== 0)\n      return this.ixor(new BN(num));\n\n    this.words[0] ^= num;\n\n    return this;\n  }\n\n  xor(num) {\n    return this.clone().ixor(num);\n  }\n\n  xorn(num) {\n    return this.clone().ixorn(num);\n  }\n\n  /*\n   * Unsigned XOR\n   */\n\n  iuxor(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    let a = this;\n    let b = num;\n\n    if (a.length < b.length)\n      [a, b] = [b, a];\n\n    let i = 0;\n\n    for (; i < b.length; i++)\n      this.words[i] = a.words[i] ^ b.words[i];\n\n    if (a !== this) {\n      this._alloc(a.length);\n\n      for (; i < a.length; i++)\n        this.words[i] = a.words[i];\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  }\n\n  iuxorn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    this.words[0] ^= Math.abs(num);\n\n    return this._normalize();\n  }\n\n  uxor(num) {\n    return this.clone().iuxor(num);\n  }\n\n  uxorn(num) {\n    return this.clone().iuxorn(num);\n  }\n\n  /*\n   * NOT\n   */\n\n  inot() {\n    if (this.negative !== 0) {\n      // ~(-x) == ~(~(x-1)) == x-1\n      this.ineg().isubn(1);\n    } else {\n      // ~x == -x-1 == -(x+1)\n      this.iaddn(1).ineg();\n    }\n    return this;\n  }\n\n  not() {\n    return this.clone().inot();\n  }\n\n  inotn(width) {\n    enforce((width >>> 0) === width, 'width', 'uint32');\n\n    const r = width % 26;\n\n    let s = Math.ceil(width / 26);\n    let i = 0;\n\n    // Extend the buffer with leading zeroes.\n    this._expand(s);\n\n    if (r > 0)\n      s -= 1;\n\n    // Handle complete words.\n    for (; i < s; i++)\n      this.words[i] ^= 0x3ffffff;\n\n    // Handle the residue.\n    if (r > 0)\n      this.words[i] ^= (1 << r) - 1;\n\n    // And remove leading zeroes.\n    return this._strip();\n  }\n\n  notn(width) {\n    return this.clone().inotn(width);\n  }\n\n  /*\n   * Left Shift\n   */\n\n  ishl(num) {\n    enforce(BN.isBN(num), 'bits', 'bignum');\n    enforce(num.bitLength() <= 32, 'bits', 'uint32');\n    return this.ishln(num.toNumber());\n  }\n\n  ishln(bits) {\n    return this.iushln(bits);\n  }\n\n  shl(num) {\n    return this.clone().ishl(num);\n  }\n\n  shln(bits) {\n    return this.clone().ishln(bits);\n  }\n\n  /*\n   * Unsigned Left Shift\n   */\n\n  iushl(num) {\n    enforce(BN.isBN(num), 'bits', 'bignum');\n    enforce(num.bitLength() <= 32, 'bits', 'uint32');\n    return this.iushln(num.toNumber());\n  }\n\n  iushln(bits) {\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    const r = bits % 26;\n    const s = (bits - r) / 26;\n    const mask = ((1 << r) - 1) << (26 - r);\n\n    if (r !== 0) {\n      let carry = 0;\n\n      for (let i = 0; i < this.length; i++) {\n        const ncarry = this.words[i] & mask;\n        const c = ((this.words[i] | 0) - ncarry) << r;\n\n        this.words[i] = c | carry;\n\n        carry = ncarry >>> (26 - r);\n      }\n\n      if (carry !== 0) {\n        this._alloc(this.length + 1);\n        this.words[this.length++] = carry;\n      }\n    }\n\n    if (s !== 0) {\n      this._alloc(this.length + s);\n\n      for (let i = this.length - 1; i >= 0; i--)\n        this.words[i + s] = this.words[i];\n\n      for (let i = 0; i < s; i++)\n        this.words[i] = 0;\n\n      this.length += s;\n    }\n\n    return this._strip();\n  }\n\n  ushl(num) {\n    return this.clone().iushl(num);\n  }\n\n  ushln(bits) {\n    return this.clone().iushln(bits);\n  }\n\n  /*\n   * Right Shift Engine\n   */\n\n  _split(bits, output) {\n    const r = bits % 26;\n    const s = Math.min((bits - r) / 26, this.length);\n    const mask = (1 << r) - 1;\n\n    // Extended mode, copy masked part.\n    if (output) {\n      output._alloc(s);\n\n      for (let i = 0; i < s; i++)\n        output.words[i] = this.words[i];\n\n      output.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all.\n    } else if (this.length > s) {\n      this.length -= s;\n      for (let i = 0; i < this.length; i++)\n        this.words[i] = this.words[i + s];\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    let carry = 0;\n\n    if (r !== 0) {\n      for (let i = this.length - 1; i >= 0; i--) {\n        const word = this.words[i] | 0;\n\n        this.words[i] = (carry << (26 - r)) | (word >>> r);\n\n        carry = word & mask;\n      }\n    }\n\n    // Push carried bits as a mask.\n    if (output) {\n      if (carry !== 0) {\n        output._alloc(output.length + 1);\n        output.words[output.length++] = carry;\n      } else {\n        if (output.length === 0)\n          output.words[output.length++] = 0;\n\n        output._strip();\n      }\n    }\n\n    return this._strip();\n  }\n\n  /*\n   * Right Shift\n   */\n\n  ishr(num) {\n    enforce(BN.isBN(num), 'bits', 'bignum');\n    enforce(num.bitLength() <= 32, 'bits', 'uint32');\n    return this.ishrn(num.toNumber());\n  }\n\n  ishrn(bits) {\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    if (this.negative !== 0) {\n      // (-x) >> y == ~(x-1) >> y\n      //           == ~((x-1) >> y)\n      //           == -(((x-1) >> y) + 1)\n      this.iaddn(1);\n      this.iushrn(bits);\n      this.isubn(1);\n      return this;\n    }\n\n    return this.iushrn(bits);\n  }\n\n  shr(num) {\n    return this.clone().ishr(num);\n  }\n\n  shrn(bits) {\n    return this.clone().ishrn(bits);\n  }\n\n  /*\n   * Unsigned Right Shift\n   */\n\n  iushr(num) {\n    enforce(BN.isBN(num), 'bits', 'bignum');\n    enforce(num.bitLength() <= 32, 'bits', 'uint32');\n    return this.iushrn(num.toNumber());\n  }\n\n  iushrn(bits) {\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n    return this._split(bits, null);\n  }\n\n  ushr(num) {\n    return this.clone().iushr(num);\n  }\n\n  ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }\n\n  /*\n   * Bit Manipulation\n   */\n\n  setn(bit, val) {\n    enforce((bit >>> 0) === bit, 'bit', 'uint32');\n\n    if (this.negative !== 0) {\n      this.iaddn(1);\n      this.usetn(bit, !val);\n      this.isubn(1);\n      return this;\n    }\n\n    return this.usetn(bit, val);\n  }\n\n  usetn(bit, val) {\n    enforce((bit >>> 0) === bit, 'bit', 'uint32');\n\n    const r = bit % 26;\n    const s = (bit - r) / 26;\n\n    this._expand(s + 1);\n\n    if (val)\n      this.words[s] |= (1 << r);\n    else\n      this.words[s] &= ~(1 << r);\n\n    return this._strip();\n  }\n\n  testn(bit) {\n    enforce((bit >>> 0) === bit, 'bit', 'uint32');\n\n    const r = bit % 26;\n    const s = (bit - r) / 26;\n\n    // Fast case: bit is much higher than all existing words.\n    if (this.length <= s)\n      return this.negative;\n\n    // Check bit and return.\n    const w = this.words[s];\n    const val = (w >> r) & 1;\n\n    if (this.negative !== 0) {\n      if (r > 0 && (w & ((1 << r) - 1)))\n        return val ^ 1;\n\n      let j = s;\n\n      while (j--) {\n        if (this.words[j] > 0)\n          return val ^ 1;\n      }\n    }\n\n    return val;\n  }\n\n  utestn(bit) {\n    enforce((bit >>> 0) === bit, 'bit', 'uint32');\n\n    const r = bit % 26;\n    const s = (bit - r) / 26;\n\n    // Fast case: bit is much higher than all existing words.\n    if (this.length <= s)\n      return 0;\n\n    // Check bit and return.\n    return (this.words[s] >> r) & 1;\n  }\n\n  imaskn(bits) {\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    if (this.negative !== 0) {\n      this.iaddn(1);\n      this.inotn(bits + 1);\n      this.ineg();\n    }\n\n    return this.iumaskn(bits);\n  }\n\n  maskn(bits) {\n    return this.clone().imaskn(bits);\n  }\n\n  iumaskn(bits) {\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    const r = bits % 26;\n\n    let s = (bits - r) / 26;\n\n    if (this.length <= s)\n      return this;\n\n    if (r !== 0)\n      s += 1;\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0)\n      this.words[this.length - 1] &= (1 << r) - 1;\n\n    if (this.length === 0)\n      this.words[this.length++] = 0;\n\n    return this._strip();\n  }\n\n  umaskn(bits) {\n    return this.clone().iumaskn(bits);\n  }\n\n  andln(num) {\n    return this.words[0] & num;\n  }\n\n  bit(pos) {\n    return this.utestn(pos);\n  }\n\n  bits(pos, width) {\n    enforce((pos >>> 0) === pos, 'pos', 'uint32');\n    enforce((width >>> 0) === width, 'width', 'uint32');\n    enforce(width <= 26, 'width', 'width');\n\n    const shift = pos % 26;\n    const index = (pos - shift) / 26;\n\n    if (index >= this.length)\n      return 0;\n\n    let bits = (this.words[index] >> shift) & ((1 << width) - 1);\n\n    if (shift + width > 26 && index + 1 < this.length) {\n      const more = shift + width - 26;\n      const next = this.words[index + 1] & ((1 << more) - 1);\n\n      bits |= next << (26 - shift);\n    }\n\n    return bits;\n  }\n\n  /*\n   * Negation\n   */\n\n  ineg() {\n    if (!this.isZero())\n      this.negative ^= 1;\n\n    return this;\n  }\n\n  neg() {\n    return this.clone().ineg();\n  }\n\n  iabs() {\n    this.negative = 0;\n    return this;\n  }\n\n  abs() {\n    return this.clone().iabs();\n  }\n\n  /*\n   * Comparison\n   */\n\n  cmp(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.negative !== num.negative)\n      return num.negative - this.negative;\n\n    const res = this.ucmp(num);\n\n    if (this.negative !== 0)\n      return -res | 0;\n\n    return res;\n  }\n\n  cmpn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    const negative = (num < 0) | 0;\n\n    if (this.negative !== negative)\n      return negative - this.negative;\n\n    const res = this.ucmpn(num);\n\n    if (this.negative !== 0)\n      return -res | 0;\n\n    return res;\n  }\n\n  eq(num) {\n    return this.cmp(num) === 0;\n  }\n\n  eqn(num) {\n    return this.cmpn(num) === 0;\n  }\n\n  gt(num) {\n    return this.cmp(num) > 0;\n  }\n\n  gtn(num) {\n    return this.cmpn(num) > 0;\n  }\n\n  gte(num) {\n    return this.cmp(num) >= 0;\n  }\n\n  gten(num) {\n    return this.cmpn(num) >= 0;\n  }\n\n  lt(num) {\n    return this.cmp(num) < 0;\n  }\n\n  ltn(num) {\n    return this.cmpn(num) < 0;\n  }\n\n  lte(num) {\n    return this.cmp(num) <= 0;\n  }\n\n  lten(num) {\n    return this.cmpn(num) <= 0;\n  }\n\n  sign() {\n    if (this.negative !== 0)\n      return -1;\n\n    if (this.length === 1 && this.words[0] === 0)\n      return 0;\n\n    return 1;\n  }\n\n  isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  }\n\n  isNeg() {\n    return this.negative !== 0;\n  }\n\n  isPos() {\n    return this.negative === 0;\n  }\n\n  isOdd() {\n    return (this.words[0] & 1) === 1;\n  }\n\n  isEven() {\n    return (this.words[0] & 1) === 0;\n  }\n\n  /*\n   * Unsigned Comparison\n   */\n\n  ucmp(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.length < num.length)\n      return -1;\n\n    if (this.length > num.length)\n      return 1;\n\n    for (let i = this.length - 1; i >= 0; i--) {\n      const a = this.words[i] | 0;\n      const b = num.words[i] | 0;\n\n      if (a === b)\n        continue;\n\n      return (a > b) - (a < b);\n    }\n\n    return 0;\n  }\n\n  ucmpn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if (this.length > 1)\n      return 1;\n\n    const w = this.words[0] | 0;\n\n    if (num < 0)\n      num = -num;\n\n    return (w > num) - (w < num);\n  }\n\n  /*\n   * Number Theoretic Functions\n   */\n\n  legendre(num) {\n    const red = HAS_BIGINT ? BN.red(num) : BN.mont(num);\n    return this.toRed(red).redLegendre();\n  }\n\n  jacobi(num) {\n    // See: A Binary Algorithm for the Jacobi Symbol\n    //   J. Shallit, J. Sorenson\n    //   Page 3, Section 3\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (num.isZero() || num.isEven())\n      throw new Error('jacobi: `num` must be odd.');\n\n    let a = this._cloneNormal();\n    let b = num.clone();\n    let j = 1;\n\n    if (b.isNeg()) {\n      if (a.isNeg())\n        j = -1;\n      b.ineg();\n    }\n\n    if (a.isNeg() || a.ucmp(b) >= 0)\n      a.imod(b);\n\n    while (!a.isZero()) {\n      const bits = a._makeOdd();\n\n      if (bits & 1) {\n        const bmod8 = b.andln(7);\n\n        if (bmod8 === 3 || bmod8 === 5)\n          j = -j;\n      }\n\n      if (a.ucmp(b) < 0) {\n        [a, b] = [b, a];\n\n        if (a.andln(3) === 3 && b.andln(3) === 3)\n          j = -j;\n      }\n\n      a._isub(a, b).iushrn(1);\n\n      const bmod8 = b.andln(7);\n\n      if (bmod8 === 3 || bmod8 === 5)\n        j = -j;\n    }\n\n    if (b.cmpn(1) !== 0)\n      return 0;\n\n    return j;\n  }\n\n  kronecker(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    const table = [\n      0,  1, 0, -1,\n      0, -1, 0,  1\n    ];\n\n    let a = this._cloneNormal();\n    let b = num.clone();\n    let k = 1;\n\n    if (b.isZero())\n      return a.ucmpn(1) === 0 ? k : 0;\n\n    if (!a.isOdd() && !b.isOdd())\n      return 0;\n\n    const bits = b._makeOdd();\n\n    if (bits & 1)\n      k = table[a.andln(7)];\n\n    if (b.isNeg()) {\n      if (a.isNeg())\n        k = -k;\n      b.ineg();\n    }\n\n    while (!a.isZero()) {\n      const bits = a._makeOdd();\n\n      if (bits & 1)\n        k *= table[b.andln(7)];\n\n      const w = a.words[0] ^ (a.negative * 0x3ffffff);\n\n      if (w & b.words[0] & 2)\n        k = -k;\n\n      b.imod(a);\n\n      [a, b] = [b, a];\n\n      b.negative = 0;\n    }\n\n    if (b.cmpn(1) !== 0)\n      return 0;\n\n    return k;\n  }\n\n  igcd(num) {\n    return this.gcd(num)._move(this);\n  }\n\n  gcd(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.isZero())\n      return num.abs();\n\n    if (num.isZero())\n      return this.abs();\n\n    let a = this.clone();\n    let b = num.clone();\n\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two.\n    const shift = a._factor2(b);\n\n    if (shift !== 0) {\n      a.iushrn(shift);\n      b.iushrn(shift);\n    }\n\n    for (;;) {\n      a._makeOdd();\n      b._makeOdd();\n\n      const cmp = a.ucmp(b);\n\n      if (cmp < 0) {\n        // a > b\n        [a, b] = [b, a];\n      } else if (cmp === 0 || b.ucmpn(1) === 0) {\n        // Break if a == b.\n        // Break if b == 1 to avoid repeated subtraction.\n        break;\n      }\n\n      a._isub(a, b);\n    }\n\n    return b.iushln(shift);\n  }\n\n  ilcm(num) {\n    return this.lcm(num)._move(this);\n  }\n\n  lcm(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.isZero() || num.isZero())\n      return new BN(0);\n\n    return this.quo(this.gcd(num)).mul(num).iabs();\n  }\n\n  egcd(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.isZero()) {\n      return [\n        new BN(0),\n        new BN(num.sign()),\n        num.abs()\n      ];\n    }\n\n    if (num.isZero()) {\n      return [\n        new BN(this.sign()),\n        new BN(0),\n        this.abs()\n      ];\n    }\n\n    const x = this.clone();\n    const y = num.clone();\n\n    x.negative = 0;\n    y.negative = 0;\n\n    // A * x + B * y = x\n    const A = new BN(1);\n    const B = new BN(0);\n\n    // C * x + D * y = y\n    const C = new BN(0);\n    const D = new BN(1);\n\n    // Remove common factor of two.\n    const g = x._factor2(y);\n\n    if (g > 0) {\n      x.iushrn(g);\n      y.iushrn(g);\n    }\n\n    const xp = x.clone();\n    const yp = y.clone();\n\n    while (!x.isZero()) {\n      let i = x._makeOdd();\n      let j = y._makeOdd();\n\n      while (i--) {\n        if (A.isOdd() || B.isOdd()) {\n          A.iadd(yp);\n          B.isub(xp);\n        }\n\n        A.iushrn(1);\n        B.iushrn(1);\n      }\n\n      while (j--) {\n        if (C.isOdd() || D.isOdd()) {\n          C.iadd(yp);\n          D.isub(xp);\n        }\n\n        C.iushrn(1);\n        D.iushrn(1);\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    if (this.negative !== 0)\n      C.ineg();\n\n    if (num.negative !== 0)\n      D.ineg();\n\n    return [C, D, y.iushln(g)];\n  }\n\n  iinvert(num) {\n    return this.invert(num)._move(this);\n  }\n\n  invert(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    range(num.sign() > 0, 'invert');\n\n    if (num.isOdd())\n      return this._invertp(num);\n\n    if (num.cmpn(1) === 0)\n      throw new RangeError('Not invertible.');\n\n    const [s,, g] = this.egcd(num);\n\n    if (g.cmpn(1) !== 0)\n      throw new RangeError('Not invertible.');\n\n    return s.imod(num);\n  }\n\n  ifermat(num) {\n    return this.fermat(num)._move(this);\n  }\n\n  fermat(num) {\n    const red = HAS_BIGINT ? BN.red(num) : BN.mont(num);\n    return this.toRed(red).redFermat().fromRed();\n  }\n\n  ipowm(y, m, mont) {\n    return this.powm(y, m, mont)._move(this);\n  }\n\n  powm(y, m, mont) {\n    const red = !HAS_BIGINT && mont ? BN.mont(m) : BN.red(m);\n    return this.toRed(red).redPow(y).fromRed();\n  }\n\n  ipowmn(y, m, mont) {\n    return this.powmn(y, m, mont)._move(this);\n  }\n\n  powmn(y, m, mont) {\n    const red = mont ? BN.mont(m) : BN.red(m);\n    return this.toRed(red).redPown(y).fromRed();\n  }\n\n  isqrtm(p) {\n    return this.sqrtm(p)._move(this);\n  }\n\n  sqrtm(p) {\n    enforce(BN.isBN(p), 'p', 'bignum');\n\n    let red;\n\n    if (p.andln(3) === 3 || p.andln(7) === 5) {\n      // Probably not worth the setup.\n      red = BN.red(p);\n    } else {\n      red = BN.mont(p);\n    }\n\n    return this.toRed(red).redSqrt().fromRed();\n  }\n\n  isqrtpq(p, q) {\n    return this.sqrtpq(p, q)._move(this);\n  }\n\n  sqrtpq(p, q) {\n    const sp = this.sqrtm(p);\n    const sq = this.sqrtm(q);\n    const [mp, mq] = p.egcd(q);\n    const lhs = sq.mul(mp).mul(p);\n    const rhs = sp.mul(mq).mul(q);\n    const n = p.mul(q);\n\n    return lhs.iadd(rhs).imod(n);\n  }\n\n  /*\n   * Primality Testing\n   */\n\n  isPrime(rng, reps, limit) {\n    enforce((reps >>> 0) === reps, 'reps', 'uint32');\n\n    if (!this.isPrimeMR(rng, reps + 1, true))\n      return false;\n\n    if (!this.isPrimeLucas(limit))\n      return false;\n\n    return true;\n  }\n\n  isPrimeMR(rng, reps, force2 = false) {\n    enforce((reps >>> 0) === reps, 'reps', 'uint32');\n    enforce(reps > 0, 'reps', 'integer');\n    enforce(typeof force2 === 'boolean', 'force2', 'boolean');\n\n    const n = this;\n\n    if (n.cmpn(7) < 0) {\n      return n.cmpn(2) === 0\n          || n.cmpn(3) === 0\n          || n.cmpn(5) === 0;\n    }\n\n    if (n.isEven())\n      return false;\n\n    const nm1 = n.subn(1);\n    const nm3 = nm1.subn(2);\n    const k = nm1.zeroBits();\n    const q = nm1.ushrn(k);\n\n    const red = BN.red(n);\n    const rnm1 = nm1.toRed(red);\n    const rone = new BN(1).toRed(red);\n\nnext:\n    for (let i = 0; i < reps; i++) {\n      let x;\n\n      if (i === reps - 1 && force2) {\n        x = new BN(2);\n      } else {\n        x = BN.random(rng, 0, nm3);\n        x.iaddn(2);\n      }\n\n      let y = x.toRed(red).redPow(q);\n\n      if (y.cmp(rone) === 0 || y.cmp(rnm1) === 0)\n        continue;\n\n      for (let j = 1; j < k; j++) {\n        y = y.redSqr();\n\n        if (y.cmp(rnm1) === 0)\n          continue next;\n\n        if (y.cmp(rone) === 0)\n          return false;\n      }\n\n      return false;\n    }\n\n    return true;\n  }\n\n  isPrimeLucas(limit = 0) {\n    enforce((limit >>> 0) === limit, 'limit', 'uint32');\n\n    const n = this;\n\n    // Ignore 0 and 1.\n    if (n.cmpn(1) <= 0)\n      return false;\n\n    // Two is the only even prime.\n    if (n.isEven())\n      return n.cmpn(2) === 0;\n\n    let p = 3;\n\n    for (;;) {\n      if (p > 10000) {\n        // Thought to be impossible.\n        throw new Error(`Cannot find (D/n) = -1 for ${n.toString(10)}.`);\n      }\n\n      if (limit !== 0 && p > limit) {\n        // Optional DoS limit.\n        return false;\n      }\n\n      const d = new BN(p * p - 4);\n      const j = d.jacobi(n);\n\n      if (j === -1)\n        break;\n\n      if (j === 0)\n        return n.cmpn(p + 2) === 0;\n\n      if (p === 40) {\n        if (n.isSquare())\n          return false;\n      }\n\n      p += 1;\n    }\n\n    const s = n.addn(1);\n    const r = s._makeOdd();\n\n    let vk = new BN(2);\n    let vk1 = new BN(p);\n\n    for (let i = s.bitLength(); i >= 0; i--) {\n      if (s.utestn(i)) {\n        vk = vk.mul(vk1).isubn(p).imod(n);\n        vk1 = vk1.sqr().isubn(2).imod(n);\n      } else {\n        vk1 = vk1.mul(vk).isubn(p).imod(n);\n        vk = vk.sqr().isubn(2).imod(n);\n      }\n    }\n\n    if (vk.cmpn(2) === 0 || vk.cmp(n.subn(2)) === 0) {\n      const a = vk.muln(p).imod(n);\n      const b = vk1.ushln(1).imod(n);\n\n      if (a.cmp(b) === 0)\n        return true;\n    }\n\n    for (let t = 0; t < r - 1; t++) {\n      if (vk.isZero())\n        return true;\n\n      if (vk.cmpn(2) === 0)\n        return false;\n\n      vk = vk.sqr().isubn(2).imod(n);\n    }\n\n    return false;\n  }\n\n  /*\n   * Twos Complement\n   */\n\n  toTwos(width) {\n    if (this.negative !== 0)\n      return this.abs().inotn(width).iaddn(1);\n\n    return this.clone();\n  }\n\n  fromTwos(width) {\n    enforce((width >>> 0) === width, 'width', 'uint32');\n    range(width > 0, 'width');\n\n    if (this.testn(width - 1))\n      return this.notn(width).iaddn(1).ineg();\n\n    return this.clone();\n  }\n\n  /*\n   * Reduction Context\n   */\n\n  toRed(ctx) {\n    enforce(ctx instanceof Red, 'ctx', 'reduction context');\n\n    if (this.red)\n      throw new Error('Already in reduction context.');\n\n    return ctx.convertTo(this);\n  }\n\n  fromRed() {\n    red(this.red, 'fromRed');\n    return this.red.convertFrom(this);\n  }\n\n  forceRed(ctx) {\n    enforce(ctx instanceof Red, 'ctx', 'reduction context');\n\n    if (this.red) {\n      if (!ctx.m.eq(this.red.m) || ctx.mont !== this.red.mont)\n        throw new Error('Already in reduction context.');\n    } else {\n      range(this.negative === 0, 'red');\n      range(this.ucmp(ctx.m) < 0, 'red');\n    }\n\n    return this.clone()._forceRed(ctx);\n  }\n\n  redIAdd(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redIAdd');\n    return this.red.iadd(this, num);\n  }\n\n  redAdd(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redAdd');\n    return this.red.add(this, num);\n  }\n\n  redIAddn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redIAddn');\n    return this.red.iaddn(this, num);\n  }\n\n  redAddn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redAddn');\n    return this.red.addn(this, num);\n  }\n\n  redISub(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redISub');\n    return this.red.isub(this, num);\n  }\n\n  redSub(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redSub');\n    return this.red.sub(this, num);\n  }\n\n  redISubn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redISubn');\n    return this.red.isubn(this, num);\n  }\n\n  redSubn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redSubn');\n    return this.red.subn(this, num);\n  }\n\n  redIMul(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redIMul');\n    return this.red.imul(this, num);\n  }\n\n  redMul(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redMul');\n    return this.red.mul(this, num);\n  }\n\n  redIMuln(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redIMuln');\n    return this.red.imuln(this, num);\n  }\n\n  redMuln(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redMuln');\n    return this.red.muln(this, num);\n  }\n\n  redIDiv(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redIDiv');\n    return this.red.idiv(this, num);\n  }\n\n  redDiv(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redDiv');\n    return this.red.div(this, num);\n  }\n\n  redIDivn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redIDivn');\n    return this.red.idivn(this, num);\n  }\n\n  redDivn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redDivn');\n    return this.red.divn(this, num);\n  }\n\n  redIPow(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redIPow');\n    nonred(!num.red, 'redIPow');\n    return this.red.ipow(this, num);\n  }\n\n  redPow(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redPow');\n    nonred(!num.red, 'redPow');\n    return this.red.pow(this, num);\n  }\n\n  redIPown(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redIPown');\n    return this.red.ipown(this, num);\n  }\n\n  redPown(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redPown');\n    return this.red.pown(this, num);\n  }\n\n  redISqr() {\n    red(this.red, 'redISqr');\n    return this.red.isqr(this);\n  }\n\n  redSqr() {\n    red(this.red, 'redSqr');\n    return this.red.sqr(this);\n  }\n\n  redISqrt() {\n    red(this.red, 'redISqrt');\n    return this.red.isqrt(this);\n  }\n\n  redSqrt() {\n    red(this.red, 'redSqrt');\n    return this.red.sqrt(this);\n  }\n\n  redIDivSqrt(v) {\n    red(this.red, 'redIDivSqrt');\n    return this.red.idivsqrt(this, v);\n  }\n\n  redDivSqrt(v) {\n    red(this.red, 'redDivSqrt');\n    return this.red.divsqrt(this, v);\n  }\n\n  redIsSquare() {\n    red(this.red, 'redIsSquare');\n    return this.red.isSquare(this);\n  }\n\n  redIShl(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redIShl');\n    nonred(!num.red, 'redIShl');\n    return this.red.ishl(this, num);\n  }\n\n  redShl(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redShl');\n    nonred(!num.red, 'redShl');\n    return this.red.shl(this, num);\n  }\n\n  redIShln(num) {\n    enforce((num >>> 0) === num, 'num', 'uint32');\n    red(this.red, 'redIShln');\n    return this.red.ishln(this, num);\n  }\n\n  redShln(num) {\n    enforce((num >>> 0) === num, 'num', 'uint32');\n    red(this.red, 'redShln');\n    return this.red.shln(this, num);\n  }\n\n  redINeg() {\n    red(this.red, 'redINeg');\n    return this.red.ineg(this);\n  }\n\n  redNeg() {\n    red(this.red, 'redNeg');\n    return this.red.neg(this);\n  }\n\n  redEq(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redEq');\n    return this.red.eq(this, num);\n  }\n\n  redEqn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redEqn');\n    return this.red.eqn(this, num);\n  }\n\n  redIsHigh() {\n    red(this.red, 'redIsHigh');\n    return this.red.isHigh(this);\n  }\n\n  redIsLow() {\n    red(this.red, 'redIsLow');\n    return this.red.isLow(this);\n  }\n\n  redIsOdd() {\n    red(this.red, 'redIsOdd');\n    return this.red.isOdd(this);\n  }\n\n  redIsEven() {\n    red(this.red, 'redIsEven');\n    return this.red.isEven(this);\n  }\n\n  redLegendre() {\n    red(this.red, 'redLegendre');\n    return this.red.legendre(this);\n  }\n\n  redJacobi() {\n    red(this.red, 'redJacobi');\n    return this.red.jacobi(this);\n  }\n\n  redKronecker() {\n    red(this.red, 'redKronecker');\n    return this.red.kronecker(this);\n  }\n\n  redIInvert() {\n    red(this.red, 'redIInvert');\n    return this.red.iinvert(this);\n  }\n\n  redInvert() {\n    red(this.red, 'redInvert');\n    return this.red.invert(this);\n  }\n\n  redIFermat() {\n    red(this.red, 'redIFermat');\n    return this.red.ifermat(this);\n  }\n\n  redFermat() {\n    red(this.red, 'redFermat');\n    return this.red.fermat(this);\n  }\n\n  /*\n   * Internal\n   */\n\n  _move(dest) {\n    dest.words = this.words;\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n    return dest;\n  }\n\n  _alloc(size) {\n    while (this.words.length < size)\n      this.words.push(0);\n\n    return this;\n  }\n\n  _expand(size) {\n    this._alloc(size);\n\n    while (this.length < size)\n      this.words[this.length++] = 0;\n\n    return this;\n  }\n\n  _strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0)\n      this.length -= 1;\n\n    return this._normalize();\n  }\n\n  _normalize() {\n    assert(this.length > 0);\n\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0)\n      this.negative = 0;\n\n    return this;\n  }\n\n  _check() {\n    // We never have a zero length number.\n    assert(this.length > 0);\n\n    // Cannot exceed array bounds.\n    assert(this.length <= this.words.length);\n\n    if (this.length === 1) {\n      // Must be normalized.\n      if (this.words[0] === 0)\n        assert(this.negative === 0);\n      return this;\n    }\n\n    // Must be stripped.\n    assert(this.words[this.length - 1] !== 0);\n\n    return this;\n  }\n\n  _invertp(p) {\n    // Penk's right shift binary EGCD.\n    //\n    // See: The Art of Computer Programming,\n    //      Volume 2, Seminumerical Algorithms\n    //   Donald E. Knuth\n    //   Exercise 4.5.2.39\n    enforce(BN.isBN(p), 'p', 'bignum');\n    range(p.sign() > 0, 'invert');\n    assert(p.isOdd());\n\n    if (p.cmpn(1) === 0)\n      throw new RangeError('Not invertible.');\n\n    const a = this.clone();\n    const b = p.clone();\n    const u = new BN(1);\n    const v = new BN(0);\n\n    if (a.isNeg() || a.ucmp(b) >= 0)\n      a.imod(b);\n\n    while (!a.isZero()) {\n      let i = a._makeOdd();\n      let j = b._makeOdd();\n\n      while (i--) {\n        if (u.isOdd())\n          u._iadd(u, p);\n\n        u.iushrn(1);\n      }\n\n      while (j--) {\n        if (v.isOdd())\n          v._iadd(v, p);\n\n        v.iushrn(1);\n      }\n\n      if (a.ucmp(b) >= 0) {\n        a._isub(a, b);\n        if (u.ucmp(v) < 0) {\n          u._isub(v, u);\n          u._isub(p, u);\n        } else {\n          u._isub(u, v);\n        }\n      } else {\n        b._isub(b, a);\n        if (v.ucmp(u) < 0) {\n          v._isub(u, v);\n          v._isub(p, v);\n        } else {\n          v._isub(v, u);\n        }\n      }\n    }\n\n    if (b.cmpn(1) !== 0)\n      throw new RangeError('Not invertible.');\n\n    assert(v.negative === 0);\n    assert(v.ucmp(p) < 0);\n\n    return v;\n  }\n\n  _makeOdd() {\n    const shift = this.zeroBits();\n\n    if (shift > 0)\n      this.iushrn(shift);\n\n    return shift;\n  }\n\n  _factor2(num) {\n    // Find common factor of two.\n    // Expects inputs to be non-zero.\n    if ((this.words[0] | num.words[0]) & 1)\n      return 0;\n\n    const len = Math.min(this.length, num.length);\n\n    let r = 0;\n\n    for (let i = 0; i < len; i++) {\n      const b = zeroBits(this.words[i] | num.words[i]);\n\n      r += b;\n\n      if (b !== 26)\n        break;\n    }\n\n    return r;\n  }\n\n  _cloneNormal() {\n    return this.red ? this.fromRed() : this.clone();\n  }\n\n  _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  }\n\n  /*\n   * Helpers\n   */\n\n  clone() {\n    const copy = new BN();\n\n    copy.words = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++)\n      copy.words[i] = this.words[i];\n\n    copy.length = this.length;\n    copy.negative = this.negative;\n    copy.red = this.red;\n\n    return copy;\n  }\n\n  inject(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    this._alloc(num.length);\n\n    for (let i = 0; i < num.length; i++)\n      this.words[i] = num.words[i];\n\n    this.length = num.length;\n    this.negative = num.negative;\n    this.red = num.red;\n\n    return this;\n  }\n\n  set(num, endian) {\n    return this.fromNumber(num, endian);\n  }\n\n  swap(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    const x = this;\n    const y = num;\n\n    [x.words, y.words] = [y.words, x.words];\n    [x.length, y.length] = [y.length, x.length];\n    [x.negative, y.negative] = [y.negative, x.negative];\n    [x.red, y.red] = [y.red, x.red];\n\n    return x;\n  }\n\n  reverse() {\n    const neg = this.negative;\n\n    this.fromBuffer(this.toBuffer('be'), 'le');\n    this.negative = neg;\n\n    return this;\n  }\n\n  byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  }\n\n  bitLength() {\n    const w = this.words[this.length - 1];\n    const hi = countBits(w);\n    return (this.length - 1) * 26 + hi;\n  }\n\n  zeroBits() {\n    if (this.isZero())\n      return 0;\n\n    if (this.isOdd())\n      return 0;\n\n    let r = 0;\n\n    for (let i = 0; i < this.length; i++) {\n      const b = zeroBits(this.words[i]);\n\n      r += b;\n\n      if (b !== 26)\n        break;\n    }\n\n    return r;\n  }\n\n  isSafe() {\n    if (this.length <= 2)\n      return true;\n\n    if (this.length === 3 && this.words[2] === 0x01)\n      return true;\n\n    return false;\n  }\n\n  word(pos) {\n    enforce((pos >>> 0) === pos, 'pos', 'uint32');\n\n    if (pos >= this.length)\n      return 0;\n\n    return this.words[pos];\n  }\n\n  [custom]() {\n    let prefix = 'BN';\n\n    if (this.red)\n      prefix = 'BN-R';\n\n    return `<${prefix}: ${this.toString(10)}>`;\n  }\n\n  /*\n   * Conversion\n   */\n\n  toNumber() {\n    let num = this.words[0];\n\n    if (this.length === 2) {\n      num += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // Note: at this stage it is known that the top bit is set.\n      num += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      throw new RangeError('Number can only safely store up to 53 bits.');\n    }\n\n    return this.negative !== 0 ? -num : num;\n  }\n\n  toDouble() {\n    let num = 0;\n\n    for (let i = this.length - 1; i >= 0; i--)\n      num = (num * 0x4000000) + this.words[i];\n\n    return this.negative !== 0 ? -num : num;\n  }\n\n  valueOf() {\n    return this.toDouble();\n  }\n\n  toBigInt() {\n    if (!HAS_BIGINT)\n      throw new Error('BigInt is not supported!');\n\n    const s52 = BigInt(52);\n    const s26 = BigInt(26);\n\n    let i = this.length - 1;\n    let num = BigInt(0);\n\n    for (; i >= 1; i -= 2) {\n      const hi = this.words[i] * 0x4000000;\n      const lo = this.words[i - 1];\n\n      num = (num << s52) | BigInt(hi + lo);\n    }\n\n    if (i >= 0)\n      num = (num << s26) | BigInt(this.words[0]);\n\n    return this.negative !== 0 ? -num : num;\n  }\n\n  toBool() {\n    return !this.isZero();\n  }\n\n  toString(base, padding) {\n    base = getBase(base);\n\n    if (padding == null)\n      padding = 0;\n\n    if (padding === 0)\n      padding = 1;\n\n    enforce((base >>> 0) === base, 'base', 'uint32');\n    enforce((padding >>> 0) === padding, 'padding', 'uint32');\n\n    if (base < 2 || base > 36)\n      throw new RangeError('Base ranges between 2 and 36.');\n\n    this._check();\n\n    if (base === 16) {\n      let out = '';\n      let off = 0;\n      let carry = 0;\n\n      for (let i = 0; i < this.length; i++) {\n        const w = this.words[i];\n        const word = (((w << off) | carry) & 0xffffff).toString(16);\n\n        carry = (w >>> (24 - off)) & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1)\n          out = zeros[6 - word.length] + word + out;\n        else\n          out = word + out;\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i -= 1;\n        }\n      }\n\n      if (carry !== 0)\n        out = carry.toString(16) + out;\n\n      while (out.length % padding !== 0)\n        out = '0' + out;\n\n      if (this.negative !== 0)\n        out = '-' + out;\n\n      return out;\n    }\n\n    const groupSize = groupSizes[base - 1];\n    const groupBase = groupBases[base - 1];\n    const c = this.clone();\n\n    let out = '';\n\n    c.negative = 0;\n\n    while (!c.isZero()) {\n      const r = c.remrn(groupBase).toString(base);\n\n      c.iquon(groupBase);\n\n      if (!c.isZero())\n        out = zeros[groupSize - r.length] + r + out;\n      else\n        out = r + out;\n    }\n\n    if (this.isZero())\n      out = '0';\n\n    while (out.length % padding !== 0)\n      out = '0' + out;\n\n    if (this.negative !== 0)\n      out = '-' + out;\n\n    return out;\n  }\n\n  toJSON() {\n    return this.toString(16, 2);\n  }\n\n  toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  }\n\n  toBuffer(endian, length) {\n    return this.toArrayLike(Buffer, endian, length);\n  }\n\n  toArrayLike(ArrayType, endian, length) {\n    if (endian == null)\n      endian = 'be';\n\n    if (length == null)\n      length = 0;\n\n    enforce(typeof ArrayType === 'function', 'ArrayType', 'function');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n    enforce((length >>> 0) === length, 'length', 'uint32');\n\n    this._check();\n\n    const bytes = this.byteLength();\n    const size = length || Math.max(1, bytes);\n\n    if (bytes > size)\n      throw new RangeError('Byte array longer than desired length.');\n\n    const res = allocate(ArrayType, size);\n\n    // See: https://github.com/indutny/bn.js/pull/222\n    if (endian === 'be') {\n      let pos = res.length - 1;\n      let carry = 0;\n\n      for (let i = 0; i < this.length; i++) {\n        const shift = (i & 3) << 1;\n        const word = (this.words[i] << shift) | carry;\n\n        res[pos--] = word & 0xff;\n\n        if (pos >= 0)\n          res[pos--] = (word >>> 8) & 0xff;\n\n        if (pos >= 0)\n          res[pos--] = (word >>> 16) & 0xff;\n\n        if (shift === 6) {\n          if (pos >= 0)\n            res[pos--] = (word >>> 24) & 0xff;\n\n          carry = 0;\n        } else {\n          carry = word >>> 24;\n        }\n      }\n\n      if (pos >= 0) {\n        res[pos--] = carry;\n\n        while (pos >= 0)\n          res[pos--] = 0;\n\n        carry = 0;\n      }\n\n      assert(carry === 0);\n    } else {\n      let pos = 0;\n      let carry = 0;\n\n      for (let i = 0; i < this.length; i++) {\n        const shift = (i & 3) << 1;\n        const word = (this.words[i] << shift) | carry;\n\n        res[pos++] = word & 0xff;\n\n        if (pos < res.length)\n          res[pos++] = (word >>> 8) & 0xff;\n\n        if (pos < res.length)\n          res[pos++] = (word >>> 16) & 0xff;\n\n        if (shift === 6) {\n          if (pos < res.length)\n            res[pos++] = (word >>> 24) & 0xff;\n\n          carry = 0;\n        } else {\n          carry = word >>> 24;\n        }\n      }\n\n      if (pos < res.length) {\n        res[pos++] = carry;\n\n        while (pos < res.length)\n          res[pos++] = 0;\n\n        carry = 0;\n      }\n\n      assert(carry === 0);\n    }\n\n    return res;\n  }\n\n  encode(endian, length) {\n    return this.toBuffer(endian, length);\n  }\n\n  /*\n   * Instantiation\n   */\n\n  of(num, endian) {\n    return this.fromNumber(num, endian);\n  }\n\n  fromNumber(num, endian) {\n    if (endian == null)\n      endian = 'be';\n\n    enforce(isInteger(num), 'num', 'integer');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n\n    const neg = (num < 0) | 0;\n\n    if (neg)\n      num = -num;\n\n    if (num < 0x4000000) {\n      this.words[0] = num & 0x3ffffff;\n      this.length = 1;\n    } else if (num < 0x10000000000000) {\n      this.words = [\n        num & 0x3ffffff,\n        (num / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      this.words = [\n        num & 0x3ffffff,\n        (num / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    this.negative = neg;\n\n    if (endian === 'le')\n      this.reverse();\n\n    return this;\n  }\n\n  fromDouble(num, endian) {\n    if (endian == null)\n      endian = 'be';\n\n    enforce(typeof num === 'number', 'num', 'double');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n\n    if (!isFinite(num))\n      num = 0;\n\n    const neg = (num <= -1) | 0;\n\n    if (num < 0)\n      num = -num;\n\n    num = Math.floor(num);\n\n    this.words = [];\n\n    while (num > 0) {\n      const lo = num % 0x4000000;\n      const hi = (num - lo) / 0x4000000;\n\n      this.words.push(lo);\n\n      num = hi;\n    }\n\n    if (this.words.length === 0)\n      this.words.push(0);\n\n    this.length = this.words.length;\n    this.negative = neg;\n\n    if (endian === 'le')\n      this.reverse();\n\n    return this;\n  }\n\n  fromBigInt(num, endian) {\n    if (endian == null)\n      endian = 'be';\n\n    enforce(typeof num === 'bigint', 'num', 'bigint');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n\n    if (!HAS_BIGINT)\n      throw new Error('BigInt is not supported!');\n\n    // You know the implementation has a\n    // problem when strings are twice\n    // as fast as bigints.\n    const start = (num < BigInt(0)) | 0;\n\n    this._fromHex(num.toString(16), start);\n    this.negative = start;\n\n    if (endian === 'le')\n      this.reverse();\n\n    return this;\n  }\n\n  fromBool(value) {\n    enforce(typeof value === 'boolean', 'value', 'boolean');\n\n    this.words[0] = value | 0;\n    this.length = 1;\n    this.negative = 0;\n\n    return this;\n  }\n\n  fromString(str, base, endian) {\n    if (base === 'le' || base === 'be')\n      [base, endian] = [endian, base];\n\n    base = getBase(base);\n\n    if (endian == null)\n      endian = 'be';\n\n    enforce(typeof str === 'string', 'string', 'string');\n    enforce((base >>> 0) === base, 'base', 'uint32');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n\n    if (base < 2 || base > 36)\n      throw new Error('Base ranges between 2 and 36.');\n\n    str = str.replace(/\\s+/g, '');\n\n    let start = 0;\n\n    if (str.length > 0 && str.charCodeAt(0) === 0x2d)\n      start = 1;\n\n    if (base === 16)\n      this._fromHex(str, start);\n    else\n      this._fromBase(str, base, start);\n\n    this.negative = start;\n\n    this._normalize();\n\n    if (endian === 'le')\n      this.reverse();\n\n    return this;\n  }\n\n  _fromHex(str, start) {\n    this.length = Math.max(2, Math.ceil((str.length - start) / 6));\n    this.words = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++)\n      this.words[i] = 0;\n\n    // Scan 24-bit chunks and add them to the number.\n    let off = 0;\n    let i = str.length - 6;\n    let j = 0;\n\n    for (; i >= start; i -= 6) {\n      const w = parseHex(str, i, i + 6);\n\n      this.words[j] |= (w << off) & 0x3ffffff;\n\n      // `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb.\n      this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;\n\n      off += 24;\n\n      if (off >= 26) {\n        off -= 26;\n        j += 1;\n      }\n    }\n\n    if (i + 6 !== start) {\n      const w = parseHex(str, start, i + 6);\n\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;\n    }\n\n    return this._strip();\n  }\n\n  _fromBase(str, base, start) {\n    // Initialize as zero.\n    this.words[0] = 0;\n    this.length = 1;\n    this.negative = 0;\n\n    // Find length of limb in base.\n    let limbLen = 0;\n    let limbPow = 1;\n\n    for (; limbPow <= 0x3ffffff; limbPow *= base)\n      limbLen += 1;\n\n    limbLen -= 1;\n    limbPow = (limbPow / base) | 0;\n\n    const total = str.length - start;\n    const mod = total % limbLen;\n    const end = Math.min(total, total - mod) + start;\n\n    let i = start;\n\n    for (; i < end; i += limbLen) {\n      const word = parseBase(str, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      this._iaddn(word);\n    }\n\n    if (mod !== 0) {\n      const pow = Math.pow(base, mod);\n      const word = parseBase(str, i, str.length, base);\n\n      this.imuln(pow);\n      this._iaddn(word);\n    }\n\n    return this;\n  }\n\n  fromJSON(json) {\n    if (BN.isBN(json)) {\n      if (json.red)\n        return json.fromRed();\n\n      return json.clone();\n    }\n\n    if (Array.isArray(json)) {\n      for (const chunk of json)\n        enforce(typeof chunk === 'string', 'chunk', 'string');\n\n      json = json.join('');\n    }\n\n    return this.fromString(json, 16);\n  }\n\n  fromBN(num) {\n    return this.inject(num);\n  }\n\n  fromArray(data, endian) {\n    enforce(Array.isArray(data), 'data', 'array');\n    return this.fromArrayLike(data, endian);\n  }\n\n  fromBuffer(data, endian) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    return this.fromArrayLike(data, endian);\n  }\n\n  fromArrayLike(data, endian) {\n    if (endian == null)\n      endian = 'be';\n\n    enforce(data && (data.length >>> 0) === data.length, 'data', 'array-like');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n\n    if (data.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n      this.negative = 0;\n      return this;\n    }\n\n    this.length = Math.max(2, Math.ceil(data.length / 3));\n    this.words = new Array(this.length);\n    this.negative = 0;\n\n    for (let i = 0; i < this.length; i++)\n      this.words[i] = 0;\n\n    const left = data.length % 3;\n\n    let off = 0;\n    let j = 0;\n    let w = 0;\n\n    if (endian === 'be') {\n      for (let i = data.length - 1; i >= 2; i -= 3) {\n        const w = data[i] | (data[i - 1] << 8) | (data[i - 2] << 16);\n\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j += 1;\n        }\n      }\n\n      switch (left) {\n        case 2:\n          w = data[1] | (data[0] << 8);\n          break;\n        case 1:\n          w = data[0];\n          break;\n      }\n    } else {\n      const len = data.length - left;\n\n      for (let i = 0; i < len; i += 3) {\n        const w = data[i] | (data[i + 1] << 8) | (data[i + 2] << 16);\n\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j += 1;\n        }\n      }\n\n      switch (left) {\n        case 2:\n          w = data[len] | (data[len + 1] << 8);\n          break;\n        case 1:\n          w = data[len];\n          break;\n      }\n    }\n\n    if (left > 0) {\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n    }\n\n    return this._strip();\n  }\n\n  decode(data, endian) {\n    return this.fromBuffer(data, endian);\n  }\n\n  from(num, base, endian) {\n    if (num == null)\n      return this;\n\n    if (base === 'le' || base === 'be')\n      [base, endian] = [endian, base];\n\n    if (typeof num === 'number')\n      return this.fromNumber(num, endian);\n\n    if (typeof num === 'bigint')\n      return this.fromBigInt(num, endian);\n\n    if (typeof num === 'string')\n      return this.fromString(num, base, endian);\n\n    if (typeof num === 'object') {\n      if (BN.isBN(num))\n        return this.fromBN(num, endian);\n\n      if ((num.length >>> 0) === num.length)\n        return this.fromArrayLike(num, endian);\n    }\n\n    if (typeof num === 'boolean')\n      return this.fromBool(num);\n\n    throw new TypeError('Non-numeric object passed to BN.');\n  }\n\n  /*\n   * Static Methods\n   */\n\n  static min(...args) {\n    let min = null;\n\n    for (const num of args) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n\n      if (!min || num.cmp(min) < 0)\n        min = num;\n    }\n\n    return min || new BN(0);\n  }\n\n  static max(...args) {\n    let max = null;\n\n    for (const num of args) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n\n      if (!max || num.cmp(max) > 0)\n        max = num;\n    }\n\n    return max || new BN(0);\n  }\n\n  static cmp(a, b) {\n    enforce(BN.isBN(a), 'a', 'bignum');\n    return a.cmp(b);\n  }\n\n  static ucmp(a, b) {\n    enforce(BN.isBN(a), 'a', 'bignum');\n    return a.ucmp(b);\n  }\n\n  static red(num) {\n    return new Red(num);\n  }\n\n  static barrett(num) {\n    return new Barrett(num);\n  }\n\n  static mont(num) {\n    return new Mont(num);\n  }\n\n  static _prime(name) {\n    if (primes[name])\n      return primes[name];\n\n    let prime;\n\n    if (name === 'p192')\n      prime = new P192();\n    else if (name === 'p224')\n      prime = new P224();\n    else if (name === 'p521')\n      prime = new P521();\n    else if (name === 'k256')\n      prime = new K256();\n    else if (name === 'p251')\n      prime = new P251();\n    else if (name === 'p25519')\n      prime = new P25519();\n    else if (name === 'p448')\n      prime = new P448();\n    else\n      throw new Error(`Unknown prime: \"${name}\".`);\n\n    primes[name] = prime;\n\n    return prime;\n  }\n\n  static prime(name) {\n    return BN._prime(name).p.clone();\n  }\n\n  static pow(num, exp) {\n    if (num === 2)\n      return BN.shift(1, exp);\n\n    return new BN().fromNumber(num).pown(exp);\n  }\n\n  static shift(num, bits) {\n    if (num === 1)\n      return new BN(0).usetn(bits, 1);\n\n    return new BN().fromNumber(num).ishln(bits);\n  }\n\n  static mask(bits) {\n    return BN.shift(1, bits).isubn(1);\n  }\n\n  static randomBits(rng, bits) {\n    enforce(rng != null, 'rng', 'rng');\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    if (typeof rng === 'object') {\n      enforce(typeof rng.randomBytes === 'function', 'rng', 'rng');\n\n      const size = (bits + 7) >>> 3;\n      const total = size * 8;\n      const bytes = rng.randomBytes(size);\n\n      enforce(Buffer.isBuffer(bytes), 'bytes', 'buffer');\n\n      if (bytes.length !== size)\n        throw new RangeError('Invalid number of bytes returned from RNG.');\n\n      const num = BN.fromBuffer(bytes);\n\n      if (total > bits)\n        num.iushrn(total - bits);\n\n      return num;\n    }\n\n    enforce(typeof rng === 'function', 'rng', 'rng');\n\n    const num = rng(bits);\n\n    enforce(BN.isBN(num), 'num', 'bignum');\n    range(num.negative === 0, 'RNG');\n    nonred(!num.red, 'RNG');\n\n    if (num.bitLength() > bits)\n      throw new RangeError('Invalid number of bits returned from RNG.');\n\n    return num;\n  }\n\n  static random(rng, min, max) {\n    min = BN.cast(min, 16);\n    max = BN.cast(max, 16);\n\n    if (min.cmp(max) > 0)\n      throw new RangeError('Minimum cannot be greater than maximum.');\n\n    const space = max.sub(min).iabs();\n    const bits = space.bitLength();\n\n    if (bits === 0)\n      return min.clone();\n\n    for (;;) {\n      const num = BN.randomBits(rng, bits);\n\n      // Maximum is _exclusive_!\n      if (num.cmp(space) >= 0)\n        continue;\n\n      // Minimum is _inclusive_!\n      num.iadd(min);\n\n      return num;\n    }\n  }\n\n  static of(num, endian) {\n    return new BN().of(num, endian);\n  }\n\n  static fromNumber(num, endian) {\n    return new BN().fromNumber(num, endian);\n  }\n\n  static fromDouble(num, endian) {\n    return new BN().fromDouble(num, endian);\n  }\n\n  static fromBigInt(num, endian) {\n    return new BN().fromBigInt(num, endian);\n  }\n\n  static fromBool(value) {\n    return new BN().fromBool(value);\n  }\n\n  static fromString(str, base, endian) {\n    return new BN().fromString(str, base, endian);\n  }\n\n  static fromJSON(json) {\n    return new BN().fromJSON(json);\n  }\n\n  static fromBN(num) {\n    return new BN().fromBN(num);\n  }\n\n  static fromArray(data, endian) {\n    return new BN().fromArray(data, endian);\n  }\n\n  static fromBuffer(data, endian) {\n    return new BN().fromBuffer(data, endian);\n  }\n\n  static fromArrayLike(data, endian) {\n    return new BN().fromArrayLike(data, endian);\n  }\n\n  static decode(data, endian) {\n    return new BN().decode(data, endian);\n  }\n\n  static from(num, base, endian) {\n    return new BN().from(num, base, endian);\n  }\n\n  static cast(num, base, endian) {\n    if (BN.isBN(num))\n      return num;\n\n    return new BN(num, base, endian);\n  }\n\n  static isBN(obj) {\n    return obj instanceof BN;\n  }\n}\n\n/*\n * Static\n */\n\nBN.BN = BN;\nBN.wordSize = 26;\nBN.native = 0;\n\n/**\n * Prime\n */\n\nclass Prime {\n  constructor(name, p) {\n    // P = 2^N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = BN.shift(1, this.n).isub(this.p);\n    this.lo = this.p.clone();\n    this.one = this.p.clone();\n  }\n\n  ireduce(num) {\n    // Assumes that `num` is less than `P^2`:\n    // num = HI * (2^N - K) + HI * K + LO = HI * K + LO (mod P)\n    const neg = num.negative !== 0;\n\n    // Track bits.\n    let bits = num.bitLength();\n\n    // Must be less than P^2.\n    assert(bits <= this.n * 2);\n\n    // Ensure positive.\n    num.negative = 0;\n\n    // Reduce.\n    while (bits > this.n) {\n      // lo = num & ((1 << n) - 1)\n      // num = num >> n\n      this.split(num, this.lo);\n\n      // num = num * K\n      this.imulK(num);\n\n      // num = num + lo\n      num._iadd(num, this.lo);\n\n      // bits = bitlen(num)\n      bits = num.bitLength();\n    }\n\n    // Final reduction.\n    const cmp = bits < this.n ? -1 : num.ucmp(this.p);\n\n    if (cmp === 0) {\n      num.words[0] = 0;\n      num.length = 1;\n    } else if (cmp > 0) {\n      num._isub(num, this.p);\n    } else {\n      // Note: we shouldn't need to strip here.\n    }\n\n    // Adjust sign.\n    if (neg && !num.isZero())\n      num._isub(this.p, num);\n\n    return num;\n  }\n\n  split(input, out) {\n    input._split(this.n, out);\n  }\n\n  imulK(num) {\n    return num.imul(this.k);\n  }\n\n  pm2(x1) {\n    // Exponent: p - 2\n    throw new Error('Not implemented.');\n  }\n\n  fermat(x) {\n    return this.pm2(x);\n  }\n}\n\n/**\n * Prime (3 mod 4)\n */\n\nclass Prime34 extends Prime {\n  constructor(name, p) {\n    super(name, p);\n  }\n\n  pm3d4(x1) {\n    // Exponent: (p - 3) / 4\n    throw new Error('Not implemented.');\n  }\n\n  pp1d4(x1) {\n    // Exponent: (p + 1) / 4\n    throw new Error('Not implemented.');\n  }\n\n  sqrt(x) {\n    // r = x^((p + 1) / 4) mod p\n    const {red} = x;\n    const r = this.pp1d4(x);\n\n    if (!red.sqr(r).eq(x))\n      throw new SquareRootError(r);\n\n    return r;\n  }\n\n  divsqrt(u, v) {\n    // x = u^3 * v * (u^5 * v^3)^((p - 3) / 4) mod p\n    const {red} = u;\n    const u2 = red.sqr(u);\n    const u3 = red.mul(u2, u);\n    const u5 = red.mul(u3, u2);\n    const v3 = red.mul(red.sqr(v), v);\n    const p = this.pm3d4(red.mul(u5, v3));\n    const x = red.mul(red.mul(u3, v), p);\n    const c = red.mul(v, red.sqr(x));\n\n    if (c.eq(u))\n      return x;\n\n    throw new SquareRootError(x);\n  }\n}\n\n/**\n * Prime (5 mod 8)\n */\n\nclass Prime58 extends Prime {\n  constructor(name, p, sm1) {\n    super(name, p);\n\n    this.sm1 = new BN(sm1, 16);\n  }\n\n  pm5d8(x1) {\n    // Exponent: (p - 5) / 8\n    throw new Error('Not implemented.');\n  }\n\n  pp3d8(x1) {\n    // Exponent: (p + 3) / 8\n    throw new Error('Not implemented.');\n  }\n\n  sqrt(x) {\n    // r = x^((p + 3) / 8) mod p\n    const {red} = x;\n    const sm1 = this.sm1._forceRed(red);\n    const r = this.pp3d8(x);\n\n    if (red.sqr(r).eq(x))\n      return r;\n\n    const c = red.mul(r, sm1);\n\n    if (red.sqr(c).eq(x))\n      return c;\n\n    throw new SquareRootError(r);\n  }\n\n  divsqrt(u, v) {\n    // x = u * v^3 * (u * v^7)^((p - 5) / 8) mod p\n    const {red} = u;\n    const sm1 = this.sm1._forceRed(red);\n    const v3 = red.mul(red.sqr(v), v);\n    const v7 = red.mul(red.sqr(v3), v);\n    const p = this.pm5d8(red.mul(u, v7));\n    const x = red.mul(red.mul(u, v3), p);\n    const c = red.mul(v, red.sqr(x));\n\n    if (c.eq(u))\n      return x;\n\n    const mc = red.ineg(c);\n\n    if (mc.eq(u))\n      return red.mul(x, sm1);\n\n    if (mc.eq(red.mul(u, sm1)))\n      throw new SquareRootError(red.mul(x, sm1));\n\n    throw new SquareRootError(x);\n  }\n}\n\n/**\n * Prime (1 mod 16)\n */\n\nclass Prime116 extends Prime {\n  constructor(name, p, g) {\n    super(name, p);\n\n    this.g = new BN(g, 16);\n    this.z = this.p.subn(1).zeroBits();\n  }\n\n  powS(x1) {\n    // Exponent: (p - 1) / 2^k\n    throw new Error('Not implemented.');\n  }\n\n  powE(x1) {\n    // Exponent: (s + 1) / 2\n    throw new Error('Not implemented.');\n  }\n\n  sqrt(x) {\n    // Tonelli-Shanks (variable time).\n    //\n    // Constants:\n    //\n    //   k = factors of 2 for (p - 1)\n    //   s = (p - 1) / 2^k\n    //   e = (s + 1) / 2\n    //   n = first non-square in F(p)\n    //\n    // Algorithm:\n    //\n    //   g = n^s mod p\n    //   y = x^e mod p\n    //   b = x^s mod p\n    //\n    //   loop:\n    //     t = b\n    //     m = 0\n    //\n    //     while t != 1:\n    //       t = t^2 mod p\n    //       m += 1\n    //\n    //     if m == 0:\n    //       break\n    //\n    //     if m >= k:\n    //       fail\n    //\n    //     t = g^(2^(k - m - 1)) mod p\n    //     g = t^2 mod p\n    //     y = y * t mod p\n    //     b = b * g mod p\n    //     k = m\n    //\n    //   return y\n    //\n    const {red} = x;\n\n    switch (red.jacobi(x)) {\n      case -1:\n        throw new SquareRootError(x);\n      case 0:\n        return x.clone();\n      case 1:\n        break;\n    }\n\n    let g = this.g._forceRed(red);\n    let y = this.powE(x);\n    let b = this.powS(x);\n    let k = this.z;\n\n    for (;;) {\n      let t = b;\n      let m = 0;\n\n      while (t.cmpn(1) !== 0 && m < k) {\n        t = red.sqr(t);\n        m += 1;\n      }\n\n      if (m === 0)\n        break;\n\n      assert(m < k);\n\n      t = red.sqrn(g, k - m - 1);\n      g = red.sqr(t);\n      y = red.mul(y, t);\n      b = red.mul(b, g);\n      k = m;\n    }\n\n    return y;\n  }\n\n  divsqrt(u, v) {\n    const {red} = u;\n\n    if (v.isZero())\n      throw new SquareRootError(v);\n\n    return this.sqrt(red.div(u, v));\n  }\n}\n\n/**\n * P192\n */\n\nclass P192 extends Prime34 {\n  constructor() {\n    // 2^192 - 2^64 - 1 (= 3 mod 4)\n    super('p192', 'ffffffff ffffffff ffffffff fffffffe'\n                + 'ffffffff ffffffff');\n  }\n\n  imulK(num) {\n    // K = 0x10000000000000001\n    // K = 2^64 + 1\n    const one = this.one.inject(num);\n    return num.iushln(64)._iadd(num, one);\n  }\n\n  core(x1) {\n    // Exponent: (p - 3) / 4\n    // Bits: 127x1 1x0 62x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const x3 = red.sqrnmul(x2, 1, x1);\n    const x6 = red.sqrnmul(x3, 3, x3);\n    const x12 = red.sqrnmul(x6, 6, x6);\n    const x24 = red.sqrnmul(x12, 12, x12);\n    const x30 = red.sqrnmul(x24, 6, x6);\n    const x31 = red.sqrnmul(x30, 1, x1);\n    const x62 = red.sqrnmul(x31, 31, x31);\n    const x124 = red.sqrnmul(x62, 62, x62);\n    const x127 = red.sqrnmul(x124, 3, x3);\n    const r0 = red.sqrn(x127, 1);\n    const r1 = red.sqrnmul(r0, 62, x62);\n\n    return r1;\n  }\n\n  pm3d4(x1) {\n    // Exponent: (p - 3) / 4\n    // Bits: 127x1 1x0 62x1\n    return this.core(x1);\n  }\n\n  pm2(x1) {\n    // Exponent: p - 2\n    // Bits: 127x1 1x0 62x1 1x0 1x1\n    const {red} = x1;\n    const r0 = this.core(x1);\n    const r1 = red.sqrn(r0, 1);\n    const r2 = red.sqrnmul(r1, 1, x1);\n\n    return r2;\n  }\n\n  pp1d4(x1) {\n    // Exponent: (p + 1) / 4\n    // Bits: 128x1 62x0\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const x4 = red.sqrnmul(x2, 2, x2);\n    const x8 = red.sqrnmul(x4, 4, x4);\n    const x16 = red.sqrnmul(x8, 8, x8);\n    const x32 = red.sqrnmul(x16, 16, x16);\n    const x64 = red.sqrnmul(x32, 32, x32);\n    const x128 = red.sqrnmul(x64, 64, x64);\n    const r0 = red.sqrn(x128, 62);\n\n    return r0;\n  }\n}\n\n/**\n * P224\n */\n\nclass P224 extends Prime116 {\n  constructor() {\n    // 2^224 - 2^96 + 1 (1 mod 16)\n    super('p224', 'ffffffff ffffffff ffffffff ffffffff'\n                + '00000000 00000000 00000001',\n                  '6a0fec67 8598a792 0c55b2d4 0b2d6ffb'\n                + 'bea3d8ce f3fb3632 dc691b74');\n  }\n\n  imulK(num) {\n    // K = 0xffffffffffffffffffffffff\n    // K = 2^96 - 1\n    const one = this.one.inject(num);\n    return num.iushln(96)._isub(num, one);\n  }\n\n  powS(x1) {\n    // Exponent: 2^128 - 1\n    // Bits: 128x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const x4 = red.sqrnmul(x2, 2, x2);\n    const x8 = red.sqrnmul(x4, 4, x4);\n    const x16 = red.sqrnmul(x8, 8, x8);\n    const x32 = red.sqrnmul(x16, 16, x16);\n    const x64 = red.sqrnmul(x32, 32, x32);\n    const x128 = red.sqrnmul(x64, 64, x64);\n\n    return x128;\n  }\n\n  powE(x1) {\n    // Exponent: 2^127\n    // Bits: 1x1 127x0\n    const {red} = x1;\n    const r0 = red.sqrn(x1, 127);\n\n    return r0;\n  }\n\n  pm2(x1) {\n    // Exponent: p - 2\n    // Bits: 127x1 1x0 96x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const x3 = red.sqrnmul(x2, 1, x1);\n    const x6 = red.sqrnmul(x3, 3, x3);\n    const x12 = red.sqrnmul(x6, 6, x6);\n    const x24 = red.sqrnmul(x12, 12, x12);\n    const x48 = red.sqrnmul(x24, 24, x24);\n    const x96 = red.sqrnmul(x48, 48, x48);\n    const x120 = red.sqrnmul(x96, 24, x24);\n    const x126 = red.sqrnmul(x120, 6, x6);\n    const x127 = red.sqrnmul(x126, 1, x1);\n    const r0 = red.sqrn(x127, 1);\n    const r1 = red.sqrnmul(r0, 96, x96);\n\n    return r1;\n  }\n}\n\n/**\n * P521\n */\n\nclass P521 extends Prime34 {\n  constructor() {\n    // 2^521 - 1 (= 3 mod 4)\n    super('p521', '000001ff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff');\n  }\n\n  imulK(num) {\n    // K = 0x01\n    return num;\n  }\n\n  core(x1) {\n    // Exponent: 2^519 - 1\n    // Bits: 519x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const x3 = red.sqrnmul(x2, 1, x1);\n    const x6 = red.sqrnmul(x3, 3, x3);\n    const x7 = red.sqrnmul(x6, 1, x1);\n    const x8 = red.sqrnmul(x7, 1, x1);\n    const x16 = red.sqrnmul(x8, 8, x8);\n    const x32 = red.sqrnmul(x16, 16, x16);\n    const x64 = red.sqrnmul(x32, 32, x32);\n    const x128 = red.sqrnmul(x64, 64, x64);\n    const x256 = red.sqrnmul(x128, 128, x128);\n    const x512 = red.sqrnmul(x256, 256, x256);\n    const x519 = red.sqrnmul(x512, 7, x7);\n\n    return x519;\n  }\n\n  pm3d4(x1) {\n    // Exponent: 2^519 - 1\n    // Bits: 519x1\n    return this.core(x1);\n  }\n\n  pm2(x1) {\n    // Exponent: p - 2\n    // Bits: 519x1 1x0 1x1\n    const {red} = x1;\n    const r0 = this.core(x1);\n    const r1 = red.sqrn(r0, 1);\n    const r2 = red.sqrnmul(r1, 1, x1);\n\n    return r2;\n  }\n\n  pp1d4(x1) {\n    // Exponent: (p + 1) / 4\n    // Bits: 1x1 519x0\n    const {red} = x1;\n    const r0 = red.sqrn(x1, 519);\n\n    return r0;\n  }\n}\n\n/**\n * K256\n */\n\nclass K256 extends Prime34 {\n  constructor() {\n    // 2^256 - 2^32 - 977 (= 3 mod 4)\n    super('k256', 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  split(input, output) {\n    // 256 = 9 * 26 + 22\n    const mask = 0x3fffff;\n    const len = Math.min(input.length, 9);\n\n    output._alloc(len + 1);\n\n    for (let i = 0; i < len; i++)\n      output.words[i] = input.words[i];\n\n    output.length = len;\n\n    if (input.length <= 9) {\n      output._strip();\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs.\n    let prev = input.words[9];\n    let i = 10;\n\n    output.words[output.length++] = prev & mask;\n    output._strip();\n\n    for (; i < input.length; i++) {\n      const next = input.words[i] | 0;\n\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n\n      prev = next;\n    }\n\n    prev >>>= 22;\n\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10)\n      input.length -= 10;\n    else\n      input.length -= 9;\n\n    input._strip(); // Unsure if we need this.\n  }\n\n  imulK(num) {\n    // K = 0x1000003d1 = [0x40, 0x3d1]\n    // K = 2^32 + 977\n    num._expand(num.length + 2);\n\n    // Bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    let lo = 0;\n\n    for (let i = 0; i < num.length; i++) {\n      const w = num.words[i];\n\n      lo += w * 0x3d1;\n\n      num.words[i] = lo & 0x3ffffff;\n\n      lo = w * 0x40 + Math.floor(lo / 0x4000000);\n    }\n\n    // Fast length reduction.\n    if (num.words[num.length - 1] === 0) {\n      num.length -= 1;\n      if (num.words[num.length - 1] === 0)\n        num.length -= 1;\n    }\n\n    // Note: we shouldn't need to strip here.\n    return num;\n  }\n\n  core(x1, x2) {\n    // Exponent: (p - 47) / 64\n    // Bits: 223x1 1x0 22x1 4x0\n    const {red} = x1;\n    const x3 = red.sqrnmul(x2, 1, x1);\n    const x6 = red.sqrnmul(x3, 3, x3);\n    const x9 = red.sqrnmul(x6, 3, x3);\n    const x11 = red.sqrnmul(x9, 2, x2);\n    const x22 = red.sqrnmul(x11, 11, x11);\n    const x44 = red.sqrnmul(x22, 22, x22);\n    const x88 = red.sqrnmul(x44, 44, x44);\n    const x176 = red.sqrnmul(x88, 88, x88);\n    const x220 = red.sqrnmul(x176, 44, x44);\n    const x223 = red.sqrnmul(x220, 3, x3);\n    const r0 = red.sqrn(x223, 1);\n    const r1 = red.sqrnmul(r0, 22, x22);\n    const r2 = red.sqrn(r1, 4);\n\n    return r2;\n  }\n\n  pm3d4(x1) {\n    // Exponent: (p - 3) / 4\n    // Bits: 223x1 1x0 22x1 4x0 1x1 1x0 2x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const r2 = this.core(x1, x2);\n    const r3 = red.sqrnmul(r2, 1, x1);\n    const r4 = red.sqrn(r3, 1);\n    const r5 = red.sqrnmul(r4, 2, x2);\n\n    return r5;\n  }\n\n  pm2(x1) {\n    // Exponent: p - 2\n    // Bits: 223x1 1x0 22x1 4x0 1x1 1x0 2x1 1x0 1x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const r2 = this.core(x1, x2);\n    const r3 = red.sqrnmul(r2, 1, x1);\n    const r4 = red.sqrn(r3, 1);\n    const r5 = red.sqrnmul(r4, 2, x2);\n    const r6 = red.sqrn(r5, 1);\n    const r7 = red.sqrnmul(r6, 1, x1);\n\n    return r7;\n  }\n\n  pp1d4(x1) {\n    // Exponent: (p + 1) / 4\n    // Bits: 223x1 1x0 22x1 4x0 2x1 2x0\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const r2 = this.core(x1, x2);\n    const r3 = red.sqrnmul(r2, 2, x2);\n    const r4 = red.sqrn(r3, 2);\n\n    return r4;\n  }\n}\n\n/**\n * P251\n */\n\nclass P251 extends Prime34 {\n  constructor() {\n    // 2^251 - 9\n    super('p251', '07ffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff ffffffff fffffff7');\n  }\n\n  imulK(num) {\n    // K = 0x09\n    if (num.isZero())\n      return num;\n\n    let carry = 0;\n\n    for (let i = 0; i < num.length; i++) {\n      const w = num.words[i] * 0x09 + carry;\n\n      carry = w >>> 26;\n\n      num.words[i] = w & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      num._alloc(num.length + 1);\n      num.words[num.length++] = carry;\n    }\n\n    // Note: we shouldn't need to strip here.\n    return num;\n  }\n\n  core(x1) {\n    // Exponent: 2^247 - 1\n    // Bits: 247x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const x3 = red.sqrnmul(x2, 1, x1);\n    const x6 = red.sqrnmul(x3, 3, x3);\n    const x12 = red.sqrnmul(x6, 6, x6);\n    const x24 = red.sqrnmul(x12, 12, x12);\n    const x48 = red.sqrnmul(x24, 24, x24);\n    const x96 = red.sqrnmul(x48, 48, x48);\n    const x192 = red.sqrnmul(x96, 96, x96);\n    const x240 = red.sqrnmul(x192, 48, x48);\n    const x246 = red.sqrnmul(x240, 6, x6);\n    const x247 = red.sqrnmul(x246, 1, x1);\n\n    return x247;\n  }\n\n  pm3d4(x1) {\n    // Exponent: (p - 3) / 4\n    // Bits: 247x1 1x0 1x1\n    const {red} = x1;\n    const r0 = this.core(x1);\n    const r1 = red.sqrn(r0, 1);\n    const r2 = red.sqrnmul(r1, 1, x1);\n\n    return r2;\n  }\n\n  pm2(x1) {\n    // Exponent: p - 2\n    // Bits: 247x1 1x0 1x1 1x0 1x1\n    const {red} = x1;\n    const r0 = this.core(x1);\n    const r1 = red.sqrn(r0, 1);\n    const r2 = red.sqrnmul(r1, 1, x1);\n    const r3 = red.sqrn(r2, 1);\n    const r4 = red.sqrnmul(r3, 1, x1);\n\n    return r4;\n  }\n\n  pp1d4(x1) {\n    // Exponent: (p + 1) / 4\n    // Bits: 248x1 1x0\n    const {red} = x1;\n    const r0 = this.core(x1);\n    const r1 = red.sqrnmul(r0, 1, x1);\n    const r2 = red.sqrn(r1, 1);\n\n    return r2;\n  }\n}\n\n/**\n * P25519\n */\n\nclass P25519 extends Prime58 {\n  constructor() {\n    // 2^255 - 19 (= 5 mod 8)\n    super('p25519', '7fffffff ffffffff ffffffff ffffffff'\n                  + 'ffffffff ffffffff ffffffff ffffffed',\n                    '2b832480 4fc1df0b 2b4d0099 3dfbd7a7'\n                  + '2f431806 ad2fe478 c4ee1b27 4a0ea0b0');\n  }\n\n  imulK(num) {\n    // K = 0x13\n    let carry = 0;\n\n    for (let i = 0; i < num.length; i++) {\n      const w = num.words[i] * 0x13 + carry;\n\n      carry = w >>> 26;\n\n      num.words[i] = w & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      num._alloc(num.length + 1);\n      num.words[num.length++] = carry;\n    }\n\n    // Note: we shouldn't need to strip here.\n    return num;\n  }\n\n  core(x1, x2) {\n    // Exponent: 2^250 - 1\n    // Bits: 250x1\n    const {red} = x1;\n    const x4 = red.sqrnmul(x2, 2, x2);\n    const x5 = red.sqrnmul(x4, 1, x1);\n    const x10 = red.sqrnmul(x5, 5, x5);\n    const x20 = red.sqrnmul(x10, 10, x10);\n    const x40 = red.sqrnmul(x20, 20, x20);\n    const x50 = red.sqrnmul(x40, 10, x10);\n    const x100 = red.sqrnmul(x50, 50, x50);\n    const x200 = red.sqrnmul(x100, 100, x100);\n    const x250 = red.sqrnmul(x200, 50, x50);\n\n    return x250;\n  }\n\n  pm5d8(x1) {\n    // Exponent: (p - 5) / 8\n    // Bits: 250x1 1x0 1x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const r0 = this.core(x1, x2);\n    const r1 = red.sqrn(r0, 1);\n    const r2 = red.sqrnmul(r1, 1, x1);\n\n    return r2;\n  }\n\n  pm2(x1) {\n    // Exponent: p - 2\n    // Bits: 250x1 1x0 1x1 1x0 2x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const r0 = this.core(x1, x2);\n    const r1 = red.sqrn(r0, 1);\n    const r2 = red.sqrnmul(r1, 1, x1);\n    const r3 = red.sqrn(r2, 1);\n    const r4 = red.sqrnmul(r3, 2, x2);\n\n    return r4;\n  }\n\n  pp3d8(x1) {\n    // Exponent: (p + 3) / 8\n    // Bits: 251x1 1x0\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const r0 = this.core(x1, x2);\n    const r1 = red.sqrnmul(r0, 1, x1);\n    const r2 = red.sqrn(r1, 1);\n\n    return r2;\n  }\n}\n\n/**\n * P448\n */\n\nclass P448 extends Prime34 {\n  constructor() {\n    // 2^448 - 2^224 - 1 (= 3 mod 4)\n    super('p448', 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff fffffffe ffffffff'\n                + 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff');\n  }\n\n  imulK(num) {\n    // K = 0x100000000000000000000000000000000000000000000000000000001\n    // K = 2^224 + 1\n    const one = this.one.inject(num);\n    return num.iushln(224)._iadd(num, one);\n  }\n\n  core(x1, x2) {\n    // Exponent: 2^222 - 1\n    // Bits: 222x1\n    const {red} = x1;\n    const x3 = red.sqrnmul(x2, 1, x1);\n    const x6 = red.sqrnmul(x3, 3, x3);\n    const x9 = red.sqrnmul(x6, 3, x3);\n    const x11 = red.sqrnmul(x9, 2, x2);\n    const x22 = red.sqrnmul(x11, 11, x11);\n    const x44 = red.sqrnmul(x22, 22, x22);\n    const x88 = red.sqrnmul(x44, 44, x44);\n    const x176 = red.sqrnmul(x88, 88, x88);\n    const x220 = red.sqrnmul(x176, 44, x44);\n    const x222 = red.sqrnmul(x220, 2, x2);\n\n    return x222;\n  }\n\n  pm3d4(x1) {\n    // Exponent: (p - 3) / 4\n    // Bits: 223x1 1x0 222x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const x222 = this.core(x1, x2);\n    const r0 = red.sqrnmul(x222, 1, x1);\n    const r1 = red.sqrn(r0, 1);\n    const r2 = red.sqrnmul(r1, 222, x222);\n\n    return r2;\n  }\n\n  pm2(x1) {\n    // Exponent: p - 2\n    // Bits: 223x1 1x0 222x1 1x0 1x1\n    const {red} = x1;\n    const r0 = this.pm3d4(x1);\n    const r1 = red.sqrn(r0, 1);\n    const r2 = red.sqrnmul(r1, 1, x1);\n\n    return r2;\n  }\n\n  pp1d4(x1) {\n    // Exponent: (p + 1) / 4\n    // Bits: 224x1 222x0\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const r0 = this.core(x1, x2);\n    const r1 = red.sqrnmul(r0, 2, x2);\n    const r2 = red.sqrn(r1, 222);\n\n    return r2;\n  }\n}\n\n/**\n * Reduction Engine\n */\n\nclass Red {\n  constructor(m) {\n    let prime = null;\n\n    if (typeof m === 'string') {\n      prime = BN._prime(m);\n      m = prime.p;\n    }\n\n    enforce(BN.isBN(m), 'm', 'bignum');\n    nonred(!m.red, 'reduction');\n    range(m.sign() > 0, 'reduction');\n\n    this.m = m;\n    this.prime = prime;\n    this.mb = null;\n    this.sm1 = null;\n  }\n\n  _verify1(a) {\n    range(a.negative === 0, 'red');\n    red(a.red != null, 'red');\n  }\n\n  _verify2(a, b) {\n    range((a.negative | b.negative) === 0, 'red');\n    red(a.red != null && a.red === b.red, 'red');\n  }\n\n  get mont() {\n    return false;\n  }\n\n  precompute() {\n    // Precompute `sqrt(-1)` for primes congruent to 5 mod 8.\n    if (this.sm1 === null && this.m.andln(7) === 5) {\n      if (this.prime) {\n        this.sm1 = this.prime.sm1.clone()._forceRed(this);\n      } else {\n        const x = new BN(2).toRed(this);\n        const e = this.m.subn(1).iushrn(2);\n\n        // sqrt(-1) = 2^((p - 1) / 4) mod p\n        this.sm1 = this.pow(x, e);\n      }\n    }\n\n    return this;\n  }\n\n  convertTo(num) {\n    const res = num.mod(this.m);\n    res.red = this;\n    return res;\n  }\n\n  convertFrom(num) {\n    const res = num.clone();\n    res.red = null;\n    return res;\n  }\n\n  intTo(a) {\n    return a;\n  }\n\n  intFrom(a) {\n    return a;\n  }\n\n  imod(a) {\n    if (this.prime)\n      return this.prime.ireduce(a)._forceRed(this);\n\n    return a.imod(this.m)._forceRed(this);\n  }\n\n  iadd(a, b) {\n    this._verify2(a, b);\n\n    a._iadd(a, b);\n\n    if (a.ucmp(this.m) >= 0)\n      a._isub(a, this.m);\n\n    return a;\n  }\n\n  add(a, b) {\n    if (a.length < b.length)\n      return this.iadd(b.clone(), a);\n\n    return this.iadd(a.clone(), b);\n  }\n\n  iaddn(a, num) {\n    this._verify1(a);\n\n    if (num < 0)\n      return this.isubn(a, -num);\n\n    if (this.m.length === 1)\n      num %= this.m.words[0];\n\n    a._iaddn(num);\n\n    if (a.ucmp(this.m) >= 0)\n      a._isub(a, this.m);\n\n    return a;\n  }\n\n  addn(a, num) {\n    return this.iaddn(a.clone(), num);\n  }\n\n  isub(a, b) {\n    this._verify2(a, b);\n\n    //  0: a - a mod m == 0\n    // -1: a - b mod m == m - (b - a)\n    // +1: a - b mod m == a - b\n    const cmp = a.ucmp(b);\n\n    if (cmp === 0) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    if (cmp < 0) {\n      a._isub(b, a);\n      a._isub(this.m, a);\n    } else {\n      a._isub(a, b);\n    }\n\n    return a;\n  }\n\n  sub(a, b) {\n    return this.isub(a.clone(), b);\n  }\n\n  isubn(a, num) {\n    this._verify1(a);\n\n    if (num < 0)\n      return this.iaddn(a, -num);\n\n    if (this.m.length === 1)\n      num %= this.m.words[0];\n\n    //  <: a - b mod m == m - (b - a)\n    // >=: a - b mod m == a - b\n    if (a.length === 1 && a.words[0] < num) {\n      a.words[0] = num - a.words[0];\n      a._isub(this.m, a);\n    } else {\n      a._isubn(num);\n    }\n\n    return a;\n  }\n\n  subn(a, num) {\n    return this.isubn(a.clone(), num);\n  }\n\n  imul(a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  }\n\n  mul(a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  }\n\n  imuln(a, num) {\n    this._verify1(a);\n\n    if (a.isZero())\n      return a;\n\n    if (num === 0) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    const neg = num < 0;\n\n    if (neg)\n      num = -num;\n\n    if (this.m.length === 1)\n      num %= this.m.words[0];\n\n    a.imuln(num);\n\n    if (num <= 16) {\n      // Quick reduction.\n      while (a.ucmp(this.m) >= 0)\n        a._isub(a, this.m);\n    } else {\n      this.imod(a);\n    }\n\n    if (neg)\n      this.ineg(a);\n\n    return a;\n  }\n\n  muln(a, num) {\n    return this.imuln(a.clone(), num);\n  }\n\n  idiv(a, b) {\n    return this.div(a, b)._move(a);\n  }\n\n  div(a, b) {\n    return this.mul(a, this.invert(b));\n  }\n\n  idivn(a, num) {\n    return this.divn(a, num)._move(a);\n  }\n\n  divn(a, num) {\n    return this.div(a, this.convertTo(new BN(num)));\n  }\n\n  ipow(a, num) {\n    return this.pow(a, num)._move(a);\n  }\n\n  pow(a, num) {\n    this._verify1(a);\n\n    if (num.isNeg())\n      a = this.invert(a);\n\n    // Small exponent.\n    if (num.length === 1)\n      return this.pown(a, num.words[0]);\n\n    // Call out to BigInt.\n    if (HAS_BIGINT && !this.prime)\n      return this.powInt(a, num);\n\n    // Otherwise, a BN implementation.\n    return this.powNum(a, num);\n  }\n\n  powNum(a, num) {\n    // Sliding window (odd multiples only).\n    const one = new BN(1).toRed(this);\n    const wnd = new Array(WND_SIZE);\n    const a2 = this.sqr(a);\n\n    wnd[0] = a;\n\n    for (let i = 1; i < WND_SIZE; i++)\n      wnd[i] = this.mul(wnd[i - 1], a2);\n\n    let i = num.bitLength();\n    let r = one;\n\n    while (i >= WND_WIDTH) {\n      let width = WND_WIDTH;\n      let bits = num.bits(i - width, width);\n\n      if (bits < WND_SIZE) {\n        r = this.sqr(r);\n        i -= 1;\n        continue;\n      }\n\n      while ((bits & 1) === 0) {\n        width -= 1;\n        bits >>= 1;\n      }\n\n      if (r === one) {\n        r = wnd[bits >> 1].clone();\n      } else {\n        r = this.sqrn(r, width);\n        r = this.mul(r, wnd[bits >> 1]);\n      }\n\n      i -= width;\n    }\n\n    if (i > 0) {\n      const bits = num.bits(0, i);\n\n      while (i--) {\n        r = this.sqr(r);\n\n        if ((bits >> i) & 1)\n          r = this.mul(r, a);\n      }\n    }\n\n    return r;\n  }\n\n  powInt(a, num) {\n    if (this.mb === null)\n      this.mb = this.m.toBigInt();\n\n    const x = this.intFrom(a.toBigInt());\n    const y = powInt(x, num, this.mb);\n    const z = this.intTo(y);\n\n    return BN.fromBigInt(z)._forceRed(this);\n  }\n\n  sqrn(a, n) {\n    while (n--)\n      a = this.sqr(a);\n\n    return a;\n  }\n\n  sqrnmul(a, n, b) {\n    return this.mul(this.sqrn(a, n), b);\n  }\n\n  ipown(a, num) {\n    return this.pown(a, num)._move(a);\n  }\n\n  pown(a, num) {\n    this._verify1(a);\n\n    if (num < 0) {\n      a = this.invert(a);\n      num = -num;\n    }\n\n    if (num === 0)\n      return new BN(1).toRed(this);\n\n    if (num === 1)\n      return a.clone();\n\n    const bits = countBits(num);\n\n    let r = a;\n\n    for (let i = bits - 2; i >= 0; i--) {\n      r = this.sqr(r);\n\n      if ((num >> i) & 1)\n        r = this.mul(r, a);\n    }\n\n    return r;\n  }\n\n  isqr(a) {\n    return this.imul(a, a);\n  }\n\n  sqr(a) {\n    return this.mul(a, a);\n  }\n\n  isqrt(x) {\n    return this.sqrt(x)._move(x);\n  }\n\n  sqrt(x) {\n    this._verify1(x);\n\n    // Optimized square root chain.\n    if (this.prime)\n      return this.prime.sqrt(x);\n\n    // Fast case (p = 3 mod 4).\n    if (this.m.andln(3) === 3)\n      return this.sqrt3mod4(x);\n\n    // Fast case (p = 5 mod 8).\n    if (this.m.andln(7) === 5) {\n      if (this.sm1 != null)\n        return this.sqrt5mod8sm1(x);\n      return this.sqrt5mod8(x);\n    }\n\n    // Slow case (Tonelli-Shanks).\n    return this.sqrt0(x);\n  }\n\n  sqrt3mod4(x) {\n    const e = this.m.addn(1).iushrn(2); // (p + 1) / 4\n    const b = this.pow(x, e);\n\n    if (!this.sqr(b).eq(x))\n      throw new SquareRootError(b);\n\n    return b;\n  }\n\n  sqrt5mod8(x) {\n    // Atkin's Algorithm.\n    const one = new BN(1).toRed(this);\n    const e = this.m.ushrn(3); // (p - 5) / 8\n    const x2 = this.add(x, x);\n    const alpha = this.pow(x2, e);\n    const beta = this.mul(x2, this.sqr(alpha));\n    const b = this.mul(this.mul(alpha, x), this.isub(beta, one));\n\n    if (!this.sqr(b).eq(x))\n      throw new SquareRootError(b);\n\n    return b;\n  }\n\n  sqrt5mod8sm1(x) {\n    const e = this.m.addn(3).iushrn(3); // (p + 3) / 8\n    const b = this.pow(x, e);\n\n    if (this.sqr(b).eq(x))\n      return b;\n\n    const c = this.mul(b, this.sm1);\n\n    if (this.sqr(c).eq(x))\n      return c;\n\n    throw new SquareRootError(b);\n  }\n\n  sqrt0(x) {\n    if (this.m.cmpn(1) === 0 || !this.m.isOdd())\n      throw new Error('Invalid prime.');\n\n    switch (this.jacobi(x)) {\n      case -1:\n        throw new SquareRootError(x);\n      case 0:\n        return x.clone();\n      case 1:\n        break;\n    }\n\n    const one = new BN(1).toRed(this);\n    const s = this.m.subn(1);\n    const e = s._makeOdd();\n    const n = new BN(2).toRed(this);\n\n    while (this.jacobi(n) !== -1)\n      this.iadd(n, one);\n\n    let g = this.pow(n, s);\n    let b = this.pow(x, s);\n    let y = this.pow(x, s.iaddn(1).iushrn(1));\n    let k = e;\n\n    for (;;) {\n      let t = b;\n      let m = 0;\n\n      while (!t.eq(one) && m < k) {\n        t = this.sqr(t);\n        m += 1;\n      }\n\n      if (m === 0)\n        break;\n\n      assert(m < k);\n\n      t = this.sqrn(g, k - m - 1);\n      g = this.sqr(t);\n      y = this.mul(y, t);\n      b = this.mul(b, g);\n      k = m;\n    }\n\n    return y;\n  }\n\n  idivsqrt(u, v) {\n    return this.divsqrt(u, v)._move(u);\n  }\n\n  divsqrt(u, v) {\n    this._verify2(u, v);\n\n    // u = 0, v = 0\n    if (u.isZero() && v.isZero())\n      throw new SquareRootError(v);\n\n    // Optimized inverse square root chain.\n    if (this.prime)\n      return this.prime.divsqrt(u, v);\n\n    // p = 3 mod 4\n    if (this.m.andln(3) === 3)\n      return this.divsqrt3mod4(u, v);\n\n    // p = 5 mod 8\n    if (this.sm1 != null && this.m.andln(7) === 5)\n      return this.divsqrt5mod8(u, v);\n\n    // v = 0\n    if (v.isZero())\n      throw new SquareRootError(v);\n\n    return this.sqrt(this.div(u, v));\n  }\n\n  divsqrt3mod4(u, v) {\n    // x = u^3 * v * (u^5 * v^3)^((p - 3) / 4) mod p\n    const e = this.m.subn(3).iushrn(2);\n    const u2 = this.sqr(u);\n    const u3 = this.mul(u2, u);\n    const u5 = this.mul(u3, u2);\n    const v3 = this.mul(this.sqr(v), v);\n    const p = this.pow(this.mul(u5, v3), e);\n    const x = this.mul(this.mul(u3, v), p);\n    const c = this.mul(v, this.sqr(x));\n\n    if (c.eq(u))\n      return x;\n\n    throw new SquareRootError(x);\n  }\n\n  divsqrt5mod8(u, v) {\n    // x = u * v^3 * (u * v^7)^((p - 5) / 8) mod p\n    const e = this.m.subn(5).iushrn(3);\n    const v3 = this.mul(this.sqr(v), v);\n    const v7 = this.mul(this.sqr(v3), v);\n    const p = this.pow(this.mul(u, v7), e);\n    const x = this.mul(this.mul(u, v3), p);\n    const c = this.mul(v, this.sqr(x));\n\n    if (c.eq(u))\n      return x;\n\n    const mc = this.ineg(c);\n\n    if (mc.eq(u))\n      return this.mul(x, this.sm1);\n\n    if (mc.eq(this.mul(u, this.sm1)))\n      throw new SquareRootError(this.mul(x, this.sm1));\n\n    throw new SquareRootError(x);\n  }\n\n  isSquare(a) {\n    if (this.m.isOdd())\n      return this.jacobi(a) >= 0;\n\n    return this.kronecker(a) >= 0;\n  }\n\n  ishl(a, num) {\n    this._verify1(a);\n    return this.imod(a.iushl(num));\n  }\n\n  shl(a, num) {\n    return this.ishl(a.clone(), num);\n  }\n\n  ishln(a, num) {\n    this._verify1(a);\n\n    a.iushln(num);\n\n    if (num <= 4) {\n      // Quick reduction.\n      while (a.ucmp(this.m) >= 0)\n        a._isub(a, this.m);\n    } else {\n      this.imod(a);\n    }\n\n    return a;\n  }\n\n  shln(a, num) {\n    return this.ishln(a.clone(), num);\n  }\n\n  ineg(a) {\n    this._verify1(a);\n\n    if (!a.isZero())\n      a._isub(this.m, a);\n\n    return a;\n  }\n\n  neg(a) {\n    return this.ineg(a.clone());\n  }\n\n  eq(a, b) {\n    this._verify2(a, b);\n    return a.ucmp(b) === 0;\n  }\n\n  eqn(a, num) {\n    this._verify1(a);\n\n    if (this.m.length === 1) {\n      num %= this.m.words[0];\n\n      if (num < 0)\n        num += this.m.words[0];\n\n      return a.ucmpn(num) === 0;\n    }\n\n    if (num < 0) {\n      this.m._isubn(-num);\n\n      const cmp = a.ucmp(this.m);\n\n      this.m._iaddn(-num);\n\n      return cmp === 0;\n    }\n\n    return a.ucmpn(num) === 0;\n  }\n\n  isHigh(a) {\n    return !this.isLow(a);\n  }\n\n  isLow(a) {\n    this._verify1(a);\n    return a.ucmp(this.m.ushrn(1)) <= 0;\n  }\n\n  isOdd(a) {\n    this._verify1(a);\n    return a.isOdd();\n  }\n\n  isEven(a) {\n    this._verify1(a);\n    return a.isEven();\n  }\n\n  legendre(num) {\n    this._verify1(num);\n\n    if (this.m.isEven())\n      throw new Error('legendre: `num` must be odd.');\n\n    // Euler's criterion.\n    const e = this.m.subn(1).iushrn(1); // (p - 1) / 2\n    const symbol = this.pow(num, e);\n\n    if (symbol.isZero())\n      return 0;\n\n    const one = new BN(1).toRed(this);\n\n    if (symbol.eq(one))\n      return 1;\n\n    if (symbol.eq(this.ineg(one)))\n      return -1;\n\n    throw new Error('Invalid prime.');\n  }\n\n  jacobi(a) {\n    this._verify1(a);\n    return a.jacobi(this.m);\n  }\n\n  kronecker(a) {\n    this._verify1(a);\n    return a.kronecker(this.m);\n  }\n\n  iinvert(a) {\n    return this.invert(a)._move(a);\n  }\n\n  invert(a) {\n    this._verify1(a);\n    return a.invert(this.m)._forceRed(this);\n  }\n\n  ifermat(a) {\n    return this.fermat(a)._move(a);\n  }\n\n  fermat(a) {\n    this._verify1(a);\n\n    if (a.isZero() || this.m.cmpn(1) === 0)\n      throw new RangeError('Not invertible.');\n\n    // Optimized inversion chain.\n    if (this.prime)\n      return this.prime.fermat(a);\n\n    // Invert using fermat's little theorem.\n    return this.pow(a, this.m.subn(2));\n  }\n\n  invertAll(elems) {\n    // Montgomery's trick.\n    enforce(Array.isArray(elems), 'elems', 'array');\n\n    for (const elem of elems) {\n      enforce(BN.isBN(elem), 'elem', 'bignum');\n\n      this._verify1(elem);\n    }\n\n    if (this.m.cmpn(1) === 0 || this.m.isEven())\n      throw new RangeError('Not invertible.');\n\n    const len = elems.length;\n    const invs = new Array(len);\n\n    if (len === 0)\n      return invs;\n\n    let acc = new BN(1).toRed(this);\n\n    for (let i = 0; i < len; i++) {\n      if (elems[i].isZero()) {\n        invs[i] = elems[i].clone();\n        continue;\n      }\n\n      invs[i] = acc;\n      acc = this.mul(acc, elems[i]);\n    }\n\n    acc = this.invert(acc);\n\n    for (let i = len - 1; i >= 0; i--) {\n      if (elems[i].isZero())\n        continue;\n\n      invs[i] = this.mul(acc, invs[i]);\n      acc = this.mul(acc, elems[i]);\n    }\n\n    return invs;\n  }\n\n  [custom]() {\n    if (this.prime)\n      return `<Red: ${this.prime.name}>`;\n\n    return `<Red: ${this.m.toString(10)}>`;\n  }\n}\n\n/**\n * Barrett Engine\n */\n\nclass Barrett extends Red {\n  constructor(m) {\n    super(m);\n\n    this.prime = null;\n    this.n = this.m.bitLength();\n\n    if ((this.n % 26) !== 0)\n      this.n += 26 - (this.n % 26);\n\n    this.k = this.n * 2;\n    this.w = this.k / 26;\n    this.b = BN.shift(1, this.k).div(this.m);\n  }\n\n  convertTo(num) {\n    if (num.length > this.w)\n      return super.convertTo(num);\n\n    return this.imod(num.clone());\n  }\n\n  _shift(q) {\n    let i = 0;\n    let j = this.w;\n\n    while (j < q.length)\n      q.words[i++] = q.words[j++];\n\n    if (i === 0)\n      q.words[i++] = 0;\n\n    q.length = i;\n  }\n\n  imod(a) {\n    const neg = a.negative;\n\n    assert(a.length <= this.w);\n\n    a.negative = 0;\n\n    const q = a.mul(this.b);\n\n    // Shift right by `k` bits.\n    this._shift(q);\n\n    a._isub(a, q.mul(this.m));\n\n    if (a.ucmp(this.m) >= 0)\n      a._isub(a, this.m);\n\n    if (neg && !a.isZero())\n      a._isub(this.m, a);\n\n    a.red = this;\n\n    return a;\n  }\n}\n\n/**\n * Montgomery Engine\n */\n\nclass Mont extends Red {\n  constructor(m) {\n    super(m);\n\n    // Note that:\n    //\n    //   mi = (-m^-1 mod (2^(n * 2))) mod r\n    //\n    // and:\n    //\n    //   mi = (((2^n)^-1 mod m) * r^-1 - 1) / m\n    //\n    // are equivalent.\n    this.prime = null;\n    this.n = this.m.length * 26;\n    this.r = BN.shift(1, this.n);\n    this.r2 = BN.shift(1, this.n * 2).imod(this.m);\n    this.ri = this.r.invert(this.m);\n    this.mi = this.r.mul(this.ri).isubn(1).div(this.m);\n    this.rib = null;\n  }\n\n  get mont() {\n    return true;\n  }\n\n  convertTo(num) {\n    if (num.isNeg() || num.ucmp(this.m) >= 0)\n      return this.imod(num.ushln(this.n));\n\n    // Equivalent to: (num * 2^n) mod m\n    return this.mul(num, this.r2);\n  }\n\n  convertFrom(num) {\n    // Equivalent to: num * r^-1 mod m\n    const r = this.mul(num, new BN(1));\n    r.red = null;\n    return r;\n  }\n\n  intTo(a) {\n    return (a << BigInt(this.n)) % this.mb;\n  }\n\n  intFrom(a) {\n    if (this.rib === null)\n      this.rib = this.ri.toBigInt();\n\n    return (a * this.rib) % this.mb;\n  }\n\n  iaddn(a, num) {\n    return this.iadd(a, this.convertTo(new BN(num)));\n  }\n\n  isubn(a, num) {\n    return this.isub(a, this.convertTo(new BN(num)));\n  }\n\n  imul(a, b) {\n    return this.mul(a, b)._move(a);\n  }\n\n  mul(a, b) {\n    if (a.isZero() || b.isZero())\n      return new BN(0)._forceRed(this);\n\n    const t = a.mul(b);\n    const c = t.umaskn(this.n).mul(this.mi).iumaskn(this.n);\n    const u = t.iadd(c.mul(this.m)).iushrn(this.n);\n\n    if (u.ucmp(this.m) >= 0)\n      u._isub(u, this.m);\n\n    return u._forceRed(this);\n  }\n\n  imuln(a, num) {\n    this._verify1(a);\n\n    if (a.isZero())\n      return a;\n\n    if (num === 0) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    const neg = num < 0;\n\n    if (neg)\n      num = -num;\n\n    if (this.m.length === 1)\n      num %= this.m.words[0];\n\n    const bits = countBits(num);\n\n    // Potentially compute with additions.\n    // This avoids an expensive division.\n    if (bits > 5) {\n      // Slow case (num > 31).\n      this.imul(a, this.convertTo(new BN(num)));\n    } else if ((num & (num - 1)) === 0) {\n      // Optimize for powers of two.\n      for (let i = 0; i < bits - 1; i++)\n        this.iadd(a, a);\n    } else {\n      // Multiply left to right.\n      const c = a.clone();\n\n      for (let i = bits - 2; i >= 0; i--) {\n        this.iadd(a, a);\n\n        if ((num >> i) & 1)\n          this.iadd(a, c);\n      }\n    }\n\n    if (neg)\n      this.ineg(a);\n\n    return a;\n  }\n\n  eqn(a, num) {\n    this._verify1(a);\n\n    if (num === 0)\n      return a.isZero();\n\n    return a.ucmp(this.convertTo(new BN(num))) === 0;\n  }\n\n  isLow(a) {\n    this._verify1(a);\n    return this.convertFrom(a).ucmp(this.m.ushrn(1)) <= 0;\n  }\n\n  isOdd(a) {\n    this._verify1(a);\n    return this.convertFrom(a).isOdd();\n  }\n\n  isEven(a) {\n    this._verify1(a);\n    return this.convertFrom(a).isEven();\n  }\n\n  invert(a) {\n    this._verify1(a);\n\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    return this.imod(a.invert(this.m).mul(this.r2));\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction makeError(Error, msg, start) {\n  const err = new Error(msg);\n\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(err, start);\n\n  return err;\n}\n\nfunction assert(value, message) {\n  if (!value) {\n    const msg = message || 'Assertion failed.';\n    throw makeError(Error, msg, assert);\n  }\n}\n\nfunction enforce(value, name, type) {\n  if (!value) {\n    const msg = `\"${name}\" must be a(n) ${type}.`;\n    throw makeError(TypeError, msg, enforce);\n  }\n}\n\nfunction range(value, name) {\n  if (!value) {\n    const msg = `\"${name}\" only works with positive numbers.`;\n    throw makeError(RangeError, msg, range);\n  }\n}\n\nfunction red(value, name) {\n  if (!value) {\n    const msg = `\"${name}\" only works with red numbers.`;\n    throw makeError(TypeError, msg, red);\n  }\n}\n\nfunction nonred(value, name) {\n  if (!value) {\n    const msg = `\"${name}\" only works with normal numbers.`;\n    throw makeError(TypeError, msg, nonred);\n  }\n}\n\nfunction nonzero(value) {\n  if (!value) {\n    const msg = 'Cannot divide by zero.';\n    throw makeError(RangeError, msg, nonzero);\n  }\n}\n\nclass SquareRootError extends Error {\n  constructor(result) {\n    super();\n\n    this.name = 'SquareRootError';\n    this.message = 'X is not a square mod P.';\n    this.result = result.fromRed();\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(this, SquareRootError);\n  }\n}\n\nfunction isInteger(num) {\n  return Number.isSafeInteger(num);\n}\n\nfunction isSMI(num) {\n  return isInteger(num)\n      && num >= -0x3ffffff\n      && num <= 0x3ffffff;\n}\n\nfunction allocate(ArrayType, size) {\n  if (ArrayType.allocUnsafeSlow)\n    return ArrayType.allocUnsafeSlow(size);\n\n  return new ArrayType(size);\n}\n\nfunction getBase(base) {\n  if (base == null)\n    return 10;\n\n  if (typeof base === 'number')\n    return base;\n\n  switch (base) {\n    case 'bin':\n      return 2;\n    case 'oct':\n      return 8;\n    case 'dec':\n      return 10;\n    case 'hex':\n      return 16;\n  }\n\n  return 0;\n}\n\n/*\n * Internal\n */\n\nfunction countBits(w) {\n  if (Math.clz32)\n    return 32 - Math.clz32(w);\n\n  let t = w;\n  let r = 0;\n\n  if (t >= 0x1000) {\n    r += 13;\n    t >>>= 13;\n  }\n\n  if (t >= 0x40) {\n    r += 7;\n    t >>>= 7;\n  }\n\n  if (t >= 0x8) {\n    r += 4;\n    t >>>= 4;\n  }\n\n  if (t >= 0x02) {\n    r += 2;\n    t >>>= 2;\n  }\n\n  return r + t;\n}\n\nfunction zeroBits(w) {\n  // Shortcut.\n  if (w === 0)\n    return 26;\n\n  let t = w;\n  let r = 0;\n\n  if ((t & 0x1fff) === 0) {\n    r += 13;\n    t >>>= 13;\n  }\n\n  if ((t & 0x7f) === 0) {\n    r += 7;\n    t >>>= 7;\n  }\n\n  if ((t & 0xf) === 0) {\n    r += 4;\n    t >>>= 4;\n  }\n\n  if ((t & 0x3) === 0) {\n    r += 2;\n    t >>>= 2;\n  }\n\n  if ((t & 0x1) === 0)\n    r += 1;\n\n  return r;\n}\n\nfunction parseHex(str, start, end) {\n  const len = Math.min(str.length, end);\n\n  let r = 0;\n  let z = 0;\n\n  for (let i = start; i < len; i++) {\n    const c = str.charCodeAt(i) - 48;\n\n    r <<= 4;\n\n    let b;\n\n    if (c >= 49 && c <= 54) {\n      // 'a' - 'f'\n      b = c - 49 + 0xa;\n    } else if (c >= 17 && c <= 22) {\n      // 'A' - 'F'\n      b = c - 17 + 0xa;\n    } else {\n      // '0' - '9'\n      b = c;\n    }\n\n    r |= b;\n    z |= b;\n  }\n\n  if (z & ~15)\n    throw new Error('Invalid string.');\n\n  return r;\n}\n\nfunction parseBase(str, start, end, mul) {\n  const len = Math.min(str.length, end);\n\n  let r = 0;\n\n  for (let i = start; i < len; i++) {\n    const c = str.charCodeAt(i) - 48;\n\n    r *= mul;\n\n    let b;\n\n    if (c >= 49) {\n      // 'a'\n      b = c - 49 + 0xa;\n    } else if (c >= 17) {\n      // 'A'\n      b = c - 17 + 0xa;\n    } else {\n      // '0' - '9'\n      b = c;\n    }\n\n    if (c < 0 || c > 207 || b >= mul)\n      throw new Error('Invalid string.');\n\n    r += b;\n  }\n\n  return r;\n}\n\n/*\n * Exponentiation (bigint)\n */\n\nfunction powInt(x, e, m) {\n  // Sliding window (odd multiples only).\n  const one = BigInt(1);\n  const wnd = new Array(WND_SIZE);\n  const x2 = (x * x) % m;\n\n  wnd[0] = x;\n\n  for (let i = 1; i < WND_SIZE; i++)\n    wnd[i] = (wnd[i - 1] * x2) % m;\n\n  let i = e.bitLength();\n  let r = one;\n\n  while (i >= WND_WIDTH) {\n    let width = WND_WIDTH;\n    let bits = e.bits(i - width, width);\n\n    if (bits < WND_SIZE) {\n      r = (r * r) % m;\n      i -= 1;\n      continue;\n    }\n\n    while ((bits & 1) === 0) {\n      width -= 1;\n      bits >>= 1;\n    }\n\n    if (r === one) {\n      r = wnd[bits >> 1];\n    } else {\n      r = sqrn(r, width, m);\n      r = (r * wnd[bits >> 1]) % m;\n    }\n\n    i -= width;\n  }\n\n  if (i > 0) {\n    const bits = e.bits(0, i);\n\n    while (i--) {\n      r = (r * r) % m;\n\n      if ((bits >> i) & 1)\n        r = (r * x) % m;\n    }\n  }\n\n  return r;\n}\n\nfunction sqrn(x, n, m) {\n  for (let i = 0; i < n; i++)\n    x = (x * x) % m;\n  return x;\n}\n\n/*\n * Multiplication\n */\n\nfunction smallMulTo(self, num, out) {\n  const len = self.length + num.length;\n\n  out.negative = self.negative ^ num.negative;\n  out._alloc(len);\n  out.length = len;\n\n  // Peel one iteration (compiler can't\n  // do it, because of code complexity).\n  const a = self.words[0];\n  const b = num.words[0];\n  const r = a * b;\n  const lo = r & 0x3ffffff;\n\n  let carry = (r / 0x4000000) | 0;\n  let k = 1;\n\n  out.words[0] = lo;\n\n  for (; k < out.length - 1; k++) {\n    // Sum all words with the same\n    // `i + j = k` and accumulate\n    // `ncarry`, note that ncarry\n    // could be >= 0x3ffffff.\n    let ncarry = carry >>> 26;\n    let rword = carry & 0x3ffffff;\n\n    const min = Math.max(0, k - self.length + 1);\n    const max = Math.min(k, num.length - 1);\n\n    for (let j = min; j <= max; j++) {\n      const i = k - j;\n      const a = self.words[i];\n      const b = num.words[j];\n      const r = a * b + rword;\n\n      ncarry += (r / 0x4000000) | 0;\n      rword = r & 0x3ffffff;\n    }\n\n    out.words[k] = rword | 0;\n    carry = ncarry | 0;\n  }\n\n  if (carry !== 0)\n    out.words[k] = carry | 0;\n  else\n    out.length -= 1;\n\n  return out._strip();\n}\n\nfunction bigMulTo(self, num, out) {\n  const len = self.length + num.length;\n\n  out.negative = self.negative ^ num.negative;\n  out._alloc(len);\n  out.length = len;\n\n  let carry = 0;\n  let hncarry = 0;\n  let k = 0;\n\n  for (; k < out.length - 1; k++) {\n    // Sum all words with the same\n    // `i + j = k` and accumulate\n    // `ncarry`, note that ncarry\n    // could be >= 0x3ffffff.\n    let ncarry = hncarry;\n\n    hncarry = 0;\n\n    let rword = carry & 0x3ffffff;\n\n    const min = Math.max(0, k - self.length + 1);\n    const max = Math.min(k, num.length - 1);\n\n    for (let j = min; j <= max; j++) {\n      const i = k - j;\n      const a = self.words[i];\n      const b = num.words[j];\n      const r = a * b;\n\n      let lo = r & 0x3ffffff;\n\n      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n      lo = (lo + rword) | 0;\n      rword = lo & 0x3ffffff;\n      ncarry = (ncarry + (lo >>> 26)) | 0;\n\n      hncarry += ncarry >>> 26;\n      ncarry &= 0x3ffffff;\n    }\n\n    out.words[k] = rword;\n    carry = ncarry;\n    ncarry = hncarry;\n  }\n\n  if (carry !== 0)\n    out.words[k] = carry;\n  else\n    out.length -= 1;\n\n  return out._strip();\n}\n\nfunction jumboMulTo(x, y, out) {\n  // v8 has a 2147483519 bit max (~256mb).\n  if (!HAS_BIGINT || x.length + y.length > 82595519)\n    return bigMulTo(x, y, out);\n\n  const zero = BigInt(0);\n  const mask = BigInt(0x3ffffff);\n  const shift = BigInt(26);\n\n  let z = x.toBigInt() * y.toBigInt();\n\n  const neg = (z < zero) | 0;\n\n  if (neg)\n    z = -z;\n\n  let i = 0;\n\n  while (z > zero) {\n    out.words[i++] = Number(z & mask);\n    z >>= shift;\n  }\n\n  if (i === 0)\n    out.words[i++] = 0;\n\n  out.length = i;\n  out.negative = neg;\n\n  return out;\n}\n\nfunction comb10MulTo(self, num, out) {\n  const a = self.words;\n  const b = num.words;\n  const o = out.words;\n  const a0 = a[0] | 0;\n  const al0 = a0 & 0x1fff;\n  const ah0 = a0 >>> 13;\n  const a1 = a[1] | 0;\n  const al1 = a1 & 0x1fff;\n  const ah1 = a1 >>> 13;\n  const a2 = a[2] | 0;\n  const al2 = a2 & 0x1fff;\n  const ah2 = a2 >>> 13;\n  const a3 = a[3] | 0;\n  const al3 = a3 & 0x1fff;\n  const ah3 = a3 >>> 13;\n  const a4 = a[4] | 0;\n  const al4 = a4 & 0x1fff;\n  const ah4 = a4 >>> 13;\n  const a5 = a[5] | 0;\n  const al5 = a5 & 0x1fff;\n  const ah5 = a5 >>> 13;\n  const a6 = a[6] | 0;\n  const al6 = a6 & 0x1fff;\n  const ah6 = a6 >>> 13;\n  const a7 = a[7] | 0;\n  const al7 = a7 & 0x1fff;\n  const ah7 = a7 >>> 13;\n  const a8 = a[8] | 0;\n  const al8 = a8 & 0x1fff;\n  const ah8 = a8 >>> 13;\n  const a9 = a[9] | 0;\n  const al9 = a9 & 0x1fff;\n  const ah9 = a9 >>> 13;\n  const b0 = b[0] | 0;\n  const bl0 = b0 & 0x1fff;\n  const bh0 = b0 >>> 13;\n  const b1 = b[1] | 0;\n  const bl1 = b1 & 0x1fff;\n  const bh1 = b1 >>> 13;\n  const b2 = b[2] | 0;\n  const bl2 = b2 & 0x1fff;\n  const bh2 = b2 >>> 13;\n  const b3 = b[3] | 0;\n  const bl3 = b3 & 0x1fff;\n  const bh3 = b3 >>> 13;\n  const b4 = b[4] | 0;\n  const bl4 = b4 & 0x1fff;\n  const bh4 = b4 >>> 13;\n  const b5 = b[5] | 0;\n  const bl5 = b5 & 0x1fff;\n  const bh5 = b5 >>> 13;\n  const b6 = b[6] | 0;\n  const bl6 = b6 & 0x1fff;\n  const bh6 = b6 >>> 13;\n  const b7 = b[7] | 0;\n  const bl7 = b7 & 0x1fff;\n  const bh7 = b7 >>> 13;\n  const b8 = b[8] | 0;\n  const bl8 = b8 & 0x1fff;\n  const bh8 = b8 >>> 13;\n  const b9 = b[9] | 0;\n  const bl9 = b9 & 0x1fff;\n  const bh9 = b9 >>> 13;\n\n  let c = 0;\n  let lo, mid, hi;\n\n  out.negative = self.negative ^ num.negative;\n  out._alloc(20);\n  out.length = 19;\n\n  /* k = 0 */\n  lo = Math.imul(al0, bl0);\n  mid = Math.imul(al0, bh0);\n  mid = (mid + Math.imul(ah0, bl0)) | 0;\n  hi = Math.imul(ah0, bh0);\n\n  let w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n  w0 &= 0x3ffffff;\n\n  /* k = 1 */\n  lo = Math.imul(al1, bl0);\n  mid = Math.imul(al1, bh0);\n  mid = (mid + Math.imul(ah1, bl0)) | 0;\n  hi = Math.imul(ah1, bh0);\n  lo = (lo + Math.imul(al0, bl1)) | 0;\n  mid = (mid + Math.imul(al0, bh1)) | 0;\n  mid = (mid + Math.imul(ah0, bl1)) | 0;\n  hi = (hi + Math.imul(ah0, bh1)) | 0;\n\n  let w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n  w1 &= 0x3ffffff;\n\n  /* k = 2 */\n  lo = Math.imul(al2, bl0);\n  mid = Math.imul(al2, bh0);\n  mid = (mid + Math.imul(ah2, bl0)) | 0;\n  hi = Math.imul(ah2, bh0);\n  lo = (lo + Math.imul(al1, bl1)) | 0;\n  mid = (mid + Math.imul(al1, bh1)) | 0;\n  mid = (mid + Math.imul(ah1, bl1)) | 0;\n  hi = (hi + Math.imul(ah1, bh1)) | 0;\n  lo = (lo + Math.imul(al0, bl2)) | 0;\n  mid = (mid + Math.imul(al0, bh2)) | 0;\n  mid = (mid + Math.imul(ah0, bl2)) | 0;\n  hi = (hi + Math.imul(ah0, bh2)) | 0;\n\n  let w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n  w2 &= 0x3ffffff;\n\n  /* k = 3 */\n  lo = Math.imul(al3, bl0);\n  mid = Math.imul(al3, bh0);\n  mid = (mid + Math.imul(ah3, bl0)) | 0;\n  hi = Math.imul(ah3, bh0);\n  lo = (lo + Math.imul(al2, bl1)) | 0;\n  mid = (mid + Math.imul(al2, bh1)) | 0;\n  mid = (mid + Math.imul(ah2, bl1)) | 0;\n  hi = (hi + Math.imul(ah2, bh1)) | 0;\n  lo = (lo + Math.imul(al1, bl2)) | 0;\n  mid = (mid + Math.imul(al1, bh2)) | 0;\n  mid = (mid + Math.imul(ah1, bl2)) | 0;\n  hi = (hi + Math.imul(ah1, bh2)) | 0;\n  lo = (lo + Math.imul(al0, bl3)) | 0;\n  mid = (mid + Math.imul(al0, bh3)) | 0;\n  mid = (mid + Math.imul(ah0, bl3)) | 0;\n  hi = (hi + Math.imul(ah0, bh3)) | 0;\n\n  let w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n  w3 &= 0x3ffffff;\n\n  /* k = 4 */\n  lo = Math.imul(al4, bl0);\n  mid = Math.imul(al4, bh0);\n  mid = (mid + Math.imul(ah4, bl0)) | 0;\n  hi = Math.imul(ah4, bh0);\n  lo = (lo + Math.imul(al3, bl1)) | 0;\n  mid = (mid + Math.imul(al3, bh1)) | 0;\n  mid = (mid + Math.imul(ah3, bl1)) | 0;\n  hi = (hi + Math.imul(ah3, bh1)) | 0;\n  lo = (lo + Math.imul(al2, bl2)) | 0;\n  mid = (mid + Math.imul(al2, bh2)) | 0;\n  mid = (mid + Math.imul(ah2, bl2)) | 0;\n  hi = (hi + Math.imul(ah2, bh2)) | 0;\n  lo = (lo + Math.imul(al1, bl3)) | 0;\n  mid = (mid + Math.imul(al1, bh3)) | 0;\n  mid = (mid + Math.imul(ah1, bl3)) | 0;\n  hi = (hi + Math.imul(ah1, bh3)) | 0;\n  lo = (lo + Math.imul(al0, bl4)) | 0;\n  mid = (mid + Math.imul(al0, bh4)) | 0;\n  mid = (mid + Math.imul(ah0, bl4)) | 0;\n  hi = (hi + Math.imul(ah0, bh4)) | 0;\n\n  let w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n  w4 &= 0x3ffffff;\n\n  /* k = 5 */\n  lo = Math.imul(al5, bl0);\n  mid = Math.imul(al5, bh0);\n  mid = (mid + Math.imul(ah5, bl0)) | 0;\n  hi = Math.imul(ah5, bh0);\n  lo = (lo + Math.imul(al4, bl1)) | 0;\n  mid = (mid + Math.imul(al4, bh1)) | 0;\n  mid = (mid + Math.imul(ah4, bl1)) | 0;\n  hi = (hi + Math.imul(ah4, bh1)) | 0;\n  lo = (lo + Math.imul(al3, bl2)) | 0;\n  mid = (mid + Math.imul(al3, bh2)) | 0;\n  mid = (mid + Math.imul(ah3, bl2)) | 0;\n  hi = (hi + Math.imul(ah3, bh2)) | 0;\n  lo = (lo + Math.imul(al2, bl3)) | 0;\n  mid = (mid + Math.imul(al2, bh3)) | 0;\n  mid = (mid + Math.imul(ah2, bl3)) | 0;\n  hi = (hi + Math.imul(ah2, bh3)) | 0;\n  lo = (lo + Math.imul(al1, bl4)) | 0;\n  mid = (mid + Math.imul(al1, bh4)) | 0;\n  mid = (mid + Math.imul(ah1, bl4)) | 0;\n  hi = (hi + Math.imul(ah1, bh4)) | 0;\n  lo = (lo + Math.imul(al0, bl5)) | 0;\n  mid = (mid + Math.imul(al0, bh5)) | 0;\n  mid = (mid + Math.imul(ah0, bl5)) | 0;\n  hi = (hi + Math.imul(ah0, bh5)) | 0;\n\n  let w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n  w5 &= 0x3ffffff;\n\n  /* k = 6 */\n  lo = Math.imul(al6, bl0);\n  mid = Math.imul(al6, bh0);\n  mid = (mid + Math.imul(ah6, bl0)) | 0;\n  hi = Math.imul(ah6, bh0);\n  lo = (lo + Math.imul(al5, bl1)) | 0;\n  mid = (mid + Math.imul(al5, bh1)) | 0;\n  mid = (mid + Math.imul(ah5, bl1)) | 0;\n  hi = (hi + Math.imul(ah5, bh1)) | 0;\n  lo = (lo + Math.imul(al4, bl2)) | 0;\n  mid = (mid + Math.imul(al4, bh2)) | 0;\n  mid = (mid + Math.imul(ah4, bl2)) | 0;\n  hi = (hi + Math.imul(ah4, bh2)) | 0;\n  lo = (lo + Math.imul(al3, bl3)) | 0;\n  mid = (mid + Math.imul(al3, bh3)) | 0;\n  mid = (mid + Math.imul(ah3, bl3)) | 0;\n  hi = (hi + Math.imul(ah3, bh3)) | 0;\n  lo = (lo + Math.imul(al2, bl4)) | 0;\n  mid = (mid + Math.imul(al2, bh4)) | 0;\n  mid = (mid + Math.imul(ah2, bl4)) | 0;\n  hi = (hi + Math.imul(ah2, bh4)) | 0;\n  lo = (lo + Math.imul(al1, bl5)) | 0;\n  mid = (mid + Math.imul(al1, bh5)) | 0;\n  mid = (mid + Math.imul(ah1, bl5)) | 0;\n  hi = (hi + Math.imul(ah1, bh5)) | 0;\n  lo = (lo + Math.imul(al0, bl6)) | 0;\n  mid = (mid + Math.imul(al0, bh6)) | 0;\n  mid = (mid + Math.imul(ah0, bl6)) | 0;\n  hi = (hi + Math.imul(ah0, bh6)) | 0;\n\n  let w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n  w6 &= 0x3ffffff;\n\n  /* k = 7 */\n  lo = Math.imul(al7, bl0);\n  mid = Math.imul(al7, bh0);\n  mid = (mid + Math.imul(ah7, bl0)) | 0;\n  hi = Math.imul(ah7, bh0);\n  lo = (lo + Math.imul(al6, bl1)) | 0;\n  mid = (mid + Math.imul(al6, bh1)) | 0;\n  mid = (mid + Math.imul(ah6, bl1)) | 0;\n  hi = (hi + Math.imul(ah6, bh1)) | 0;\n  lo = (lo + Math.imul(al5, bl2)) | 0;\n  mid = (mid + Math.imul(al5, bh2)) | 0;\n  mid = (mid + Math.imul(ah5, bl2)) | 0;\n  hi = (hi + Math.imul(ah5, bh2)) | 0;\n  lo = (lo + Math.imul(al4, bl3)) | 0;\n  mid = (mid + Math.imul(al4, bh3)) | 0;\n  mid = (mid + Math.imul(ah4, bl3)) | 0;\n  hi = (hi + Math.imul(ah4, bh3)) | 0;\n  lo = (lo + Math.imul(al3, bl4)) | 0;\n  mid = (mid + Math.imul(al3, bh4)) | 0;\n  mid = (mid + Math.imul(ah3, bl4)) | 0;\n  hi = (hi + Math.imul(ah3, bh4)) | 0;\n  lo = (lo + Math.imul(al2, bl5)) | 0;\n  mid = (mid + Math.imul(al2, bh5)) | 0;\n  mid = (mid + Math.imul(ah2, bl5)) | 0;\n  hi = (hi + Math.imul(ah2, bh5)) | 0;\n  lo = (lo + Math.imul(al1, bl6)) | 0;\n  mid = (mid + Math.imul(al1, bh6)) | 0;\n  mid = (mid + Math.imul(ah1, bl6)) | 0;\n  hi = (hi + Math.imul(ah1, bh6)) | 0;\n  lo = (lo + Math.imul(al0, bl7)) | 0;\n  mid = (mid + Math.imul(al0, bh7)) | 0;\n  mid = (mid + Math.imul(ah0, bl7)) | 0;\n  hi = (hi + Math.imul(ah0, bh7)) | 0;\n\n  let w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n  w7 &= 0x3ffffff;\n\n  /* k = 8 */\n  lo = Math.imul(al8, bl0);\n  mid = Math.imul(al8, bh0);\n  mid = (mid + Math.imul(ah8, bl0)) | 0;\n  hi = Math.imul(ah8, bh0);\n  lo = (lo + Math.imul(al7, bl1)) | 0;\n  mid = (mid + Math.imul(al7, bh1)) | 0;\n  mid = (mid + Math.imul(ah7, bl1)) | 0;\n  hi = (hi + Math.imul(ah7, bh1)) | 0;\n  lo = (lo + Math.imul(al6, bl2)) | 0;\n  mid = (mid + Math.imul(al6, bh2)) | 0;\n  mid = (mid + Math.imul(ah6, bl2)) | 0;\n  hi = (hi + Math.imul(ah6, bh2)) | 0;\n  lo = (lo + Math.imul(al5, bl3)) | 0;\n  mid = (mid + Math.imul(al5, bh3)) | 0;\n  mid = (mid + Math.imul(ah5, bl3)) | 0;\n  hi = (hi + Math.imul(ah5, bh3)) | 0;\n  lo = (lo + Math.imul(al4, bl4)) | 0;\n  mid = (mid + Math.imul(al4, bh4)) | 0;\n  mid = (mid + Math.imul(ah4, bl4)) | 0;\n  hi = (hi + Math.imul(ah4, bh4)) | 0;\n  lo = (lo + Math.imul(al3, bl5)) | 0;\n  mid = (mid + Math.imul(al3, bh5)) | 0;\n  mid = (mid + Math.imul(ah3, bl5)) | 0;\n  hi = (hi + Math.imul(ah3, bh5)) | 0;\n  lo = (lo + Math.imul(al2, bl6)) | 0;\n  mid = (mid + Math.imul(al2, bh6)) | 0;\n  mid = (mid + Math.imul(ah2, bl6)) | 0;\n  hi = (hi + Math.imul(ah2, bh6)) | 0;\n  lo = (lo + Math.imul(al1, bl7)) | 0;\n  mid = (mid + Math.imul(al1, bh7)) | 0;\n  mid = (mid + Math.imul(ah1, bl7)) | 0;\n  hi = (hi + Math.imul(ah1, bh7)) | 0;\n  lo = (lo + Math.imul(al0, bl8)) | 0;\n  mid = (mid + Math.imul(al0, bh8)) | 0;\n  mid = (mid + Math.imul(ah0, bl8)) | 0;\n  hi = (hi + Math.imul(ah0, bh8)) | 0;\n\n  let w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n  w8 &= 0x3ffffff;\n\n  /* k = 9 */\n  lo = Math.imul(al9, bl0);\n  mid = Math.imul(al9, bh0);\n  mid = (mid + Math.imul(ah9, bl0)) | 0;\n  hi = Math.imul(ah9, bh0);\n  lo = (lo + Math.imul(al8, bl1)) | 0;\n  mid = (mid + Math.imul(al8, bh1)) | 0;\n  mid = (mid + Math.imul(ah8, bl1)) | 0;\n  hi = (hi + Math.imul(ah8, bh1)) | 0;\n  lo = (lo + Math.imul(al7, bl2)) | 0;\n  mid = (mid + Math.imul(al7, bh2)) | 0;\n  mid = (mid + Math.imul(ah7, bl2)) | 0;\n  hi = (hi + Math.imul(ah7, bh2)) | 0;\n  lo = (lo + Math.imul(al6, bl3)) | 0;\n  mid = (mid + Math.imul(al6, bh3)) | 0;\n  mid = (mid + Math.imul(ah6, bl3)) | 0;\n  hi = (hi + Math.imul(ah6, bh3)) | 0;\n  lo = (lo + Math.imul(al5, bl4)) | 0;\n  mid = (mid + Math.imul(al5, bh4)) | 0;\n  mid = (mid + Math.imul(ah5, bl4)) | 0;\n  hi = (hi + Math.imul(ah5, bh4)) | 0;\n  lo = (lo + Math.imul(al4, bl5)) | 0;\n  mid = (mid + Math.imul(al4, bh5)) | 0;\n  mid = (mid + Math.imul(ah4, bl5)) | 0;\n  hi = (hi + Math.imul(ah4, bh5)) | 0;\n  lo = (lo + Math.imul(al3, bl6)) | 0;\n  mid = (mid + Math.imul(al3, bh6)) | 0;\n  mid = (mid + Math.imul(ah3, bl6)) | 0;\n  hi = (hi + Math.imul(ah3, bh6)) | 0;\n  lo = (lo + Math.imul(al2, bl7)) | 0;\n  mid = (mid + Math.imul(al2, bh7)) | 0;\n  mid = (mid + Math.imul(ah2, bl7)) | 0;\n  hi = (hi + Math.imul(ah2, bh7)) | 0;\n  lo = (lo + Math.imul(al1, bl8)) | 0;\n  mid = (mid + Math.imul(al1, bh8)) | 0;\n  mid = (mid + Math.imul(ah1, bl8)) | 0;\n  hi = (hi + Math.imul(ah1, bh8)) | 0;\n  lo = (lo + Math.imul(al0, bl9)) | 0;\n  mid = (mid + Math.imul(al0, bh9)) | 0;\n  mid = (mid + Math.imul(ah0, bl9)) | 0;\n  hi = (hi + Math.imul(ah0, bh9)) | 0;\n\n  let w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n  w9 &= 0x3ffffff;\n\n  /* k = 10 */\n  lo = Math.imul(al9, bl1);\n  mid = Math.imul(al9, bh1);\n  mid = (mid + Math.imul(ah9, bl1)) | 0;\n  hi = Math.imul(ah9, bh1);\n  lo = (lo + Math.imul(al8, bl2)) | 0;\n  mid = (mid + Math.imul(al8, bh2)) | 0;\n  mid = (mid + Math.imul(ah8, bl2)) | 0;\n  hi = (hi + Math.imul(ah8, bh2)) | 0;\n  lo = (lo + Math.imul(al7, bl3)) | 0;\n  mid = (mid + Math.imul(al7, bh3)) | 0;\n  mid = (mid + Math.imul(ah7, bl3)) | 0;\n  hi = (hi + Math.imul(ah7, bh3)) | 0;\n  lo = (lo + Math.imul(al6, bl4)) | 0;\n  mid = (mid + Math.imul(al6, bh4)) | 0;\n  mid = (mid + Math.imul(ah6, bl4)) | 0;\n  hi = (hi + Math.imul(ah6, bh4)) | 0;\n  lo = (lo + Math.imul(al5, bl5)) | 0;\n  mid = (mid + Math.imul(al5, bh5)) | 0;\n  mid = (mid + Math.imul(ah5, bl5)) | 0;\n  hi = (hi + Math.imul(ah5, bh5)) | 0;\n  lo = (lo + Math.imul(al4, bl6)) | 0;\n  mid = (mid + Math.imul(al4, bh6)) | 0;\n  mid = (mid + Math.imul(ah4, bl6)) | 0;\n  hi = (hi + Math.imul(ah4, bh6)) | 0;\n  lo = (lo + Math.imul(al3, bl7)) | 0;\n  mid = (mid + Math.imul(al3, bh7)) | 0;\n  mid = (mid + Math.imul(ah3, bl7)) | 0;\n  hi = (hi + Math.imul(ah3, bh7)) | 0;\n  lo = (lo + Math.imul(al2, bl8)) | 0;\n  mid = (mid + Math.imul(al2, bh8)) | 0;\n  mid = (mid + Math.imul(ah2, bl8)) | 0;\n  hi = (hi + Math.imul(ah2, bh8)) | 0;\n  lo = (lo + Math.imul(al1, bl9)) | 0;\n  mid = (mid + Math.imul(al1, bh9)) | 0;\n  mid = (mid + Math.imul(ah1, bl9)) | 0;\n  hi = (hi + Math.imul(ah1, bh9)) | 0;\n\n  let w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n  w10 &= 0x3ffffff;\n\n  /* k = 11 */\n  lo = Math.imul(al9, bl2);\n  mid = Math.imul(al9, bh2);\n  mid = (mid + Math.imul(ah9, bl2)) | 0;\n  hi = Math.imul(ah9, bh2);\n  lo = (lo + Math.imul(al8, bl3)) | 0;\n  mid = (mid + Math.imul(al8, bh3)) | 0;\n  mid = (mid + Math.imul(ah8, bl3)) | 0;\n  hi = (hi + Math.imul(ah8, bh3)) | 0;\n  lo = (lo + Math.imul(al7, bl4)) | 0;\n  mid = (mid + Math.imul(al7, bh4)) | 0;\n  mid = (mid + Math.imul(ah7, bl4)) | 0;\n  hi = (hi + Math.imul(ah7, bh4)) | 0;\n  lo = (lo + Math.imul(al6, bl5)) | 0;\n  mid = (mid + Math.imul(al6, bh5)) | 0;\n  mid = (mid + Math.imul(ah6, bl5)) | 0;\n  hi = (hi + Math.imul(ah6, bh5)) | 0;\n  lo = (lo + Math.imul(al5, bl6)) | 0;\n  mid = (mid + Math.imul(al5, bh6)) | 0;\n  mid = (mid + Math.imul(ah5, bl6)) | 0;\n  hi = (hi + Math.imul(ah5, bh6)) | 0;\n  lo = (lo + Math.imul(al4, bl7)) | 0;\n  mid = (mid + Math.imul(al4, bh7)) | 0;\n  mid = (mid + Math.imul(ah4, bl7)) | 0;\n  hi = (hi + Math.imul(ah4, bh7)) | 0;\n  lo = (lo + Math.imul(al3, bl8)) | 0;\n  mid = (mid + Math.imul(al3, bh8)) | 0;\n  mid = (mid + Math.imul(ah3, bl8)) | 0;\n  hi = (hi + Math.imul(ah3, bh8)) | 0;\n  lo = (lo + Math.imul(al2, bl9)) | 0;\n  mid = (mid + Math.imul(al2, bh9)) | 0;\n  mid = (mid + Math.imul(ah2, bl9)) | 0;\n  hi = (hi + Math.imul(ah2, bh9)) | 0;\n\n  let w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n  w11 &= 0x3ffffff;\n\n  /* k = 12 */\n  lo = Math.imul(al9, bl3);\n  mid = Math.imul(al9, bh3);\n  mid = (mid + Math.imul(ah9, bl3)) | 0;\n  hi = Math.imul(ah9, bh3);\n  lo = (lo + Math.imul(al8, bl4)) | 0;\n  mid = (mid + Math.imul(al8, bh4)) | 0;\n  mid = (mid + Math.imul(ah8, bl4)) | 0;\n  hi = (hi + Math.imul(ah8, bh4)) | 0;\n  lo = (lo + Math.imul(al7, bl5)) | 0;\n  mid = (mid + Math.imul(al7, bh5)) | 0;\n  mid = (mid + Math.imul(ah7, bl5)) | 0;\n  hi = (hi + Math.imul(ah7, bh5)) | 0;\n  lo = (lo + Math.imul(al6, bl6)) | 0;\n  mid = (mid + Math.imul(al6, bh6)) | 0;\n  mid = (mid + Math.imul(ah6, bl6)) | 0;\n  hi = (hi + Math.imul(ah6, bh6)) | 0;\n  lo = (lo + Math.imul(al5, bl7)) | 0;\n  mid = (mid + Math.imul(al5, bh7)) | 0;\n  mid = (mid + Math.imul(ah5, bl7)) | 0;\n  hi = (hi + Math.imul(ah5, bh7)) | 0;\n  lo = (lo + Math.imul(al4, bl8)) | 0;\n  mid = (mid + Math.imul(al4, bh8)) | 0;\n  mid = (mid + Math.imul(ah4, bl8)) | 0;\n  hi = (hi + Math.imul(ah4, bh8)) | 0;\n  lo = (lo + Math.imul(al3, bl9)) | 0;\n  mid = (mid + Math.imul(al3, bh9)) | 0;\n  mid = (mid + Math.imul(ah3, bl9)) | 0;\n  hi = (hi + Math.imul(ah3, bh9)) | 0;\n\n  let w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n  w12 &= 0x3ffffff;\n\n  /* k = 13 */\n  lo = Math.imul(al9, bl4);\n  mid = Math.imul(al9, bh4);\n  mid = (mid + Math.imul(ah9, bl4)) | 0;\n  hi = Math.imul(ah9, bh4);\n  lo = (lo + Math.imul(al8, bl5)) | 0;\n  mid = (mid + Math.imul(al8, bh5)) | 0;\n  mid = (mid + Math.imul(ah8, bl5)) | 0;\n  hi = (hi + Math.imul(ah8, bh5)) | 0;\n  lo = (lo + Math.imul(al7, bl6)) | 0;\n  mid = (mid + Math.imul(al7, bh6)) | 0;\n  mid = (mid + Math.imul(ah7, bl6)) | 0;\n  hi = (hi + Math.imul(ah7, bh6)) | 0;\n  lo = (lo + Math.imul(al6, bl7)) | 0;\n  mid = (mid + Math.imul(al6, bh7)) | 0;\n  mid = (mid + Math.imul(ah6, bl7)) | 0;\n  hi = (hi + Math.imul(ah6, bh7)) | 0;\n  lo = (lo + Math.imul(al5, bl8)) | 0;\n  mid = (mid + Math.imul(al5, bh8)) | 0;\n  mid = (mid + Math.imul(ah5, bl8)) | 0;\n  hi = (hi + Math.imul(ah5, bh8)) | 0;\n  lo = (lo + Math.imul(al4, bl9)) | 0;\n  mid = (mid + Math.imul(al4, bh9)) | 0;\n  mid = (mid + Math.imul(ah4, bl9)) | 0;\n  hi = (hi + Math.imul(ah4, bh9)) | 0;\n\n  let w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n  w13 &= 0x3ffffff;\n\n  /* k = 14 */\n  lo = Math.imul(al9, bl5);\n  mid = Math.imul(al9, bh5);\n  mid = (mid + Math.imul(ah9, bl5)) | 0;\n  hi = Math.imul(ah9, bh5);\n  lo = (lo + Math.imul(al8, bl6)) | 0;\n  mid = (mid + Math.imul(al8, bh6)) | 0;\n  mid = (mid + Math.imul(ah8, bl6)) | 0;\n  hi = (hi + Math.imul(ah8, bh6)) | 0;\n  lo = (lo + Math.imul(al7, bl7)) | 0;\n  mid = (mid + Math.imul(al7, bh7)) | 0;\n  mid = (mid + Math.imul(ah7, bl7)) | 0;\n  hi = (hi + Math.imul(ah7, bh7)) | 0;\n  lo = (lo + Math.imul(al6, bl8)) | 0;\n  mid = (mid + Math.imul(al6, bh8)) | 0;\n  mid = (mid + Math.imul(ah6, bl8)) | 0;\n  hi = (hi + Math.imul(ah6, bh8)) | 0;\n  lo = (lo + Math.imul(al5, bl9)) | 0;\n  mid = (mid + Math.imul(al5, bh9)) | 0;\n  mid = (mid + Math.imul(ah5, bl9)) | 0;\n  hi = (hi + Math.imul(ah5, bh9)) | 0;\n\n  let w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n  w14 &= 0x3ffffff;\n\n  /* k = 15 */\n  lo = Math.imul(al9, bl6);\n  mid = Math.imul(al9, bh6);\n  mid = (mid + Math.imul(ah9, bl6)) | 0;\n  hi = Math.imul(ah9, bh6);\n  lo = (lo + Math.imul(al8, bl7)) | 0;\n  mid = (mid + Math.imul(al8, bh7)) | 0;\n  mid = (mid + Math.imul(ah8, bl7)) | 0;\n  hi = (hi + Math.imul(ah8, bh7)) | 0;\n  lo = (lo + Math.imul(al7, bl8)) | 0;\n  mid = (mid + Math.imul(al7, bh8)) | 0;\n  mid = (mid + Math.imul(ah7, bl8)) | 0;\n  hi = (hi + Math.imul(ah7, bh8)) | 0;\n  lo = (lo + Math.imul(al6, bl9)) | 0;\n  mid = (mid + Math.imul(al6, bh9)) | 0;\n  mid = (mid + Math.imul(ah6, bl9)) | 0;\n  hi = (hi + Math.imul(ah6, bh9)) | 0;\n\n  let w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n  w15 &= 0x3ffffff;\n\n  /* k = 16 */\n  lo = Math.imul(al9, bl7);\n  mid = Math.imul(al9, bh7);\n  mid = (mid + Math.imul(ah9, bl7)) | 0;\n  hi = Math.imul(ah9, bh7);\n  lo = (lo + Math.imul(al8, bl8)) | 0;\n  mid = (mid + Math.imul(al8, bh8)) | 0;\n  mid = (mid + Math.imul(ah8, bl8)) | 0;\n  hi = (hi + Math.imul(ah8, bh8)) | 0;\n  lo = (lo + Math.imul(al7, bl9)) | 0;\n  mid = (mid + Math.imul(al7, bh9)) | 0;\n  mid = (mid + Math.imul(ah7, bl9)) | 0;\n  hi = (hi + Math.imul(ah7, bh9)) | 0;\n\n  let w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n  w16 &= 0x3ffffff;\n\n  /* k = 17 */\n  lo = Math.imul(al9, bl8);\n  mid = Math.imul(al9, bh8);\n  mid = (mid + Math.imul(ah9, bl8)) | 0;\n  hi = Math.imul(ah9, bh8);\n  lo = (lo + Math.imul(al8, bl9)) | 0;\n  mid = (mid + Math.imul(al8, bh9)) | 0;\n  mid = (mid + Math.imul(ah8, bl9)) | 0;\n  hi = (hi + Math.imul(ah8, bh9)) | 0;\n\n  let w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n  w17 &= 0x3ffffff;\n\n  /* k = 18 */\n  lo = Math.imul(al9, bl9);\n  mid = Math.imul(al9, bh9);\n  mid = (mid + Math.imul(ah9, bl9)) | 0;\n  hi = Math.imul(ah9, bh9);\n\n  let w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n  w18 &= 0x3ffffff;\n\n  o[0] = w0;\n  o[1] = w1;\n  o[2] = w2;\n  o[3] = w3;\n  o[4] = w4;\n  o[5] = w5;\n  o[6] = w6;\n  o[7] = w7;\n  o[8] = w8;\n  o[9] = w9;\n  o[10] = w10;\n  o[11] = w11;\n  o[12] = w12;\n  o[13] = w13;\n  o[14] = w14;\n  o[15] = w15;\n  o[16] = w16;\n  o[17] = w17;\n  o[18] = w18;\n\n  if (c !== 0) {\n    o[19] = c;\n    out.length += 1;\n  }\n\n  // Note: we shouldn't need to strip here.\n  return out;\n}\n\n// Polyfill comb.\nif (!Math.imul)\n  comb10MulTo = smallMulTo;\n\n/*\n * Expose\n */\n\nBN.Red = Red;\n\nmodule.exports = BN;\n","/*!\n * box.js - nacl secretbox for bcrypto (crypto_secretbox_xsalsa20poly1305)\n * Copyright (c) 2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009 The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Resources:\n *   https://nacl.cr.yp.to/secretbox.html\n *   https://github.com/golang/crypto/blob/master/nacl/box/box.go\n *   https://github.com/golang/crypto/blob/master/nacl/box/box_test.go\n *   https://github.com/golang/crypto/blob/master/nacl/box/example_test.go\n */\n\n'use strict';\n\nconst assert = require('assert');\nconst box = require('./secretbox');\nconst random = require('./random');\nconst x25519 = require('./x25519');\n\n/*\n * Box\n */\n\n// In the future, could be implemented as:\n//\n// function seal(msg, pub, priv = null) {\n//   return ecies.encrypt(x25519, null, msg, pub, priv);\n// }\n//\n// function open(msg, priv) {\n//   return ecies.decrypt(x25519, null, msg, priv);\n// }\n\nfunction seal(msg, pub, priv = null) {\n  if (priv == null)\n    priv = x25519.privateKeyGenerate();\n\n  const ourPub = x25519.publicKeyCreate(priv);\n  const secret = x25519.derive(pub, priv);\n  const key = box.derive(secret);\n  const nonce = random.randomBytes(24);\n  const sealed = box.seal(msg, key, nonce);\n\n  return Buffer.concat([ourPub, nonce, sealed]);\n}\n\nfunction open(msg, priv) {\n  assert(Buffer.isBuffer(msg));\n\n  if (msg.length < 32 + 24)\n    throw new Error('Invalid secret box size.');\n\n  const theirPub = msg.slice(0, 32);\n  const nonce = msg.slice(32, 32 + 24);\n  const sealed = msg.slice(32 + 24);\n  const secret = x25519.derive(theirPub, priv);\n  const key = box.derive(secret);\n\n  return box.open(sealed, key, nonce);\n}\n\n/*\n * Expose\n */\n\nexports.native = box.native;\nexports.seal = seal;\nexports.open = open;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/*!\n * secretbox.js - nacl secretbox for bcrypto\n * Copyright (c) 2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009 The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Resources:\n *   https://nacl.cr.yp.to/secretbox.html\n *   https://github.com/golang/crypto/tree/master/nacl\n *   https://github.com/golang/crypto/blob/master/nacl/secretbox/secretbox.go\n *   https://github.com/golang/crypto/blob/master/nacl/secretbox/secretbox_test.go\n *   https://github.com/golang/crypto/blob/master/nacl/secretbox/example_test.go\n *   https://github.com/golang/crypto/blob/master/nacl/box/box.go\n *   https://github.com/golang/crypto/blob/master/nacl/box/box_test.go\n *   https://github.com/golang/crypto/blob/master/nacl/box/example_test.go\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst Salsa20 = require('../salsa20');\nconst Poly1305 = require('../poly1305');\n\n/*\n * Constants\n */\n\nconst ZERO16 = Buffer.alloc(16, 0x00);\n\n/*\n * Secret Box\n */\n\nfunction seal(msg, key, nonce) {\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(key));\n  assert(Buffer.isBuffer(nonce));\n  assert(key.length === 32);\n  assert(nonce.length === 24);\n\n  const polyKey = Buffer.alloc(32, 0x00);\n  const box = Buffer.alloc(16 + msg.length);\n  const ciphertext = box.slice(16);\n  const salsa = new Salsa20();\n  const poly = new Poly1305();\n\n  msg.copy(box, 16);\n\n  salsa.init(key, nonce);\n  salsa.encrypt(polyKey);\n  salsa.encrypt(ciphertext);\n\n  poly.init(polyKey);\n  poly.update(ciphertext);\n  poly.final().copy(box, 0);\n\n  return box;\n}\n\nfunction open(sealed, key, nonce) {\n  assert(Buffer.isBuffer(sealed));\n  assert(Buffer.isBuffer(key));\n  assert(Buffer.isBuffer(nonce));\n  assert(key.length === 32);\n  assert(nonce.length === 24);\n\n  if (sealed.length < 16)\n    throw new Error('Invalid secret box size.');\n\n  const polyKey = Buffer.alloc(32, 0x00);\n  const input = Buffer.from(sealed);\n  const tag = input.slice(0, 16);\n  const msg = input.slice(16);\n  const salsa = new Salsa20();\n  const poly = new Poly1305();\n\n  salsa.init(key, nonce);\n  salsa.encrypt(polyKey);\n\n  poly.init(polyKey);\n  poly.update(msg);\n\n  if (!poly.verify(tag))\n    throw new Error('Invalid secret box tag.');\n\n  salsa.encrypt(msg);\n\n  return msg;\n}\n\nfunction derive(secret, kdf) {\n  const key = deriveSecret(secret, kdf);\n  return Salsa20.derive(key, ZERO16);\n}\n\n/*\n * Helpers\n */\n\nfunction deriveSecret(secret, kdf) {\n  assert(Buffer.isBuffer(secret));\n\n  if (kdf == null) {\n    if (secret.length !== 32)\n      throw new RangeError('Invalid secret size for secret box.');\n\n    return secret;\n  }\n\n  let key;\n\n  if (typeof kdf.digest === 'function')\n    key = kdf.digest(secret);\n  else if (typeof kdf === 'function')\n    key = kdf(secret);\n  else\n    throw new Error('Invalid key derivation function.');\n\n  assert(Buffer.isBuffer(key));\n\n  if (key.length < 32)\n    throw new RangeError('Key is too small for secret box.');\n\n  return key.slice(0, 32);\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.seal = seal;\nexports.open = open;\nexports.derive = derive;\n","/*!\n * salsa20.js - salsa20 for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources\n *   https://en.wikipedia.org/wiki/Salsa20\n *   https://cr.yp.to/snuffle.html\n *   https://cr.yp.to/snuffle/spec.pdf\n *   https://cr.yp.to/snuffle/812.pdf\n *   http://www.ecrypt.eu.org/stream/salsa20pf.html\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * Constants\n */\n\nconst BIG_ENDIAN = new Int8Array(new Int16Array([1]).buffer)[0] === 0;\n\n/**\n * Salsa20\n */\n\nclass Salsa20 {\n  /**\n   * Create a Salsa20 context.\n   * @constructor\n   */\n\n  constructor() {\n    this.state = new Uint32Array(16);\n    this.stream = new Uint32Array(16);\n    this.bytes = new Uint8Array(this.stream.buffer);\n    this.pos = -1;\n\n    if (BIG_ENDIAN)\n      this.bytes = Buffer.alloc(64);\n  }\n\n  /**\n   * Initialize salsa20 with a key, nonce, and counter.\n   * @param {Buffer} key\n   * @param {Buffer} nonce\n   * @param {Number} counter\n   */\n\n  init(key, nonce, counter) {\n    if (counter == null)\n      counter = 0;\n\n    assert(Buffer.isBuffer(key));\n    assert(Buffer.isBuffer(nonce));\n    assert(Number.isSafeInteger(counter));\n\n    if (key.length !== 16 && key.length !== 32)\n      throw new RangeError('Invalid key size.');\n\n    if (nonce.length >= 24) {\n      key = Salsa20.derive(key, nonce.slice(0, 16));\n      nonce = nonce.slice(16);\n    }\n\n    this.state[0] = 0x61707865;\n    this.state[1] = readU32(key, 0);\n    this.state[2] = readU32(key, 4);\n    this.state[3] = readU32(key, 8);\n    this.state[4] = readU32(key, 12);\n    this.state[5] = key.length < 32 ? 0x3120646e : 0x3320646e;\n\n    if (nonce.length === 8) {\n      this.state[6] = readU32(nonce, 0);\n      this.state[7] = readU32(nonce, 4);\n      this.state[8] = counter >>> 0;\n      this.state[9] = (counter / 0x100000000) >>> 0;\n    } else if (nonce.length === 12) {\n      this.state[6] = readU32(nonce, 0);\n      this.state[7] = readU32(nonce, 4);\n      this.state[8] = readU32(nonce, 8);\n      this.state[9] = counter >>> 0;\n    } else if (nonce.length === 16) {\n      this.state[6] = readU32(nonce, 0);\n      this.state[7] = readU32(nonce, 4);\n      this.state[8] = readU32(nonce, 8);\n      this.state[9] = readU32(nonce, 12);\n    } else {\n      throw new RangeError('Invalid nonce size.');\n    }\n\n    this.state[10] = key.length < 32 ? 0x79622d36 : 0x79622d32;\n    this.state[11] = readU32(key, 16 % key.length);\n    this.state[12] = readU32(key, 20 % key.length);\n    this.state[13] = readU32(key, 24 % key.length);\n    this.state[14] = readU32(key, 28 % key.length);\n    this.state[15] = 0x6b206574;\n\n    this.pos = 0;\n\n    return this;\n  }\n\n  /**\n   * Encrypt/decrypt data.\n   * @param {Buffer} data - Will be mutated.\n   * @returns {Buffer}\n   */\n\n  encrypt(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (this.pos === -1)\n      throw new Error('Context is not initialized.');\n\n    for (let i = 0; i < data.length; i++) {\n      if ((this.pos & 63) === 0) {\n        this._block();\n        this.pos = 0;\n      }\n\n      data[i] ^= this.bytes[this.pos++];\n    }\n\n    return data;\n  }\n\n  /**\n   * Stir the stream.\n   */\n\n  _block() {\n    for (let i = 0; i < 16; i++)\n      this.stream[i] = this.state[i];\n\n    for (let i = 0; i < 10; i++) {\n      qround(this.stream, 0, 4, 8, 12);\n      qround(this.stream, 5, 9, 13, 1);\n      qround(this.stream, 10, 14, 2, 6);\n      qround(this.stream, 15, 3, 7, 11);\n      qround(this.stream, 0, 1, 2, 3);\n      qround(this.stream, 5, 6, 7, 4);\n      qround(this.stream, 10, 11, 8, 9);\n      qround(this.stream, 15, 12, 13, 14);\n    }\n\n    for (let i = 0; i < 16; i++)\n      this.stream[i] += this.state[i];\n\n    if (BIG_ENDIAN) {\n      for (let i = 0; i < 16; i++)\n        writeU32(this.bytes, this.stream[i], i * 4);\n    }\n\n    this.state[8] += 1;\n\n    if (this.state[8] === 0)\n      this.state[9] += 1;\n  }\n\n  /**\n   * Destroy context.\n   */\n\n  destroy() {\n    for (let i = 0; i < 16; i++) {\n      this.state[i] = 0;\n      this.stream[i] = 0;\n    }\n\n    if (BIG_ENDIAN) {\n      for (let i = 0; i < 64; i++)\n        this.bytes[i] = 0;\n    }\n\n    this.pos = -1;\n\n    return this;\n  }\n\n  /**\n   * Derive key with XSalsa20.\n   * @param {Buffer} key\n   * @param {Buffer} nonce\n   * @returns {Buffer}\n   */\n\n  static derive(key, nonce) {\n    assert(Buffer.isBuffer(key));\n    assert(Buffer.isBuffer(nonce));\n\n    if (key.length !== 16 && key.length !== 32)\n      throw new RangeError('Invalid key size.');\n\n    if (nonce.length !== 16)\n      throw new RangeError('Invalid nonce size.');\n\n    const state = new Uint32Array(16);\n\n    state[0] = 0x61707865;\n    state[1] = readU32(key, 0);\n    state[2] = readU32(key, 4);\n    state[3] = readU32(key, 8);\n    state[4] = readU32(key, 12);\n    state[5] = key.length < 32 ? 0x3120646e : 0x3320646e;\n    state[6] = readU32(nonce, 0);\n    state[7] = readU32(nonce, 4);\n    state[8] = readU32(nonce, 8);\n    state[9] = readU32(nonce, 12);\n    state[10] = key.length < 32 ? 0x79622d36 : 0x79622d32;\n    state[11] = readU32(key, 16 % key.length);\n    state[12] = readU32(key, 20 % key.length);\n    state[13] = readU32(key, 24 % key.length);\n    state[14] = readU32(key, 28 % key.length);\n    state[15] = 0x6b206574;\n\n    for (let j = 0; j < 10; j++) {\n      qround(state, 0, 4, 8, 12);\n      qround(state, 5, 9, 13, 1);\n      qround(state, 10, 14, 2, 6);\n      qround(state, 15, 3, 7, 11);\n      qround(state, 0, 1, 2, 3);\n      qround(state, 5, 6, 7, 4);\n      qround(state, 10, 11, 8, 9);\n      qround(state, 15, 12, 13, 14);\n    }\n\n    const out = Buffer.alloc(32);\n\n    writeU32(out, state[0], 0);\n    writeU32(out, state[5], 4);\n    writeU32(out, state[10], 8);\n    writeU32(out, state[15], 12);\n    writeU32(out, state[6], 16);\n    writeU32(out, state[7], 20);\n    writeU32(out, state[8], 24);\n    writeU32(out, state[9], 28);\n\n    return out;\n  }\n}\n\n/*\n * Static\n */\n\nSalsa20.native = 0;\n\n/*\n * Helpers\n */\n\nfunction qround(x, a, b, c, d) {\n  x[b] ^= rotl32(x[a] + x[d], 7);\n  x[c] ^= rotl32(x[b] + x[a], 9);\n  x[d] ^= rotl32(x[c] + x[b], 13);\n  x[a] ^= rotl32(x[d] + x[c], 18);\n}\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Salsa20;\n","/*!\n * random.js - random number generator for bcrypto\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://wiki.openssl.org/index.php/Random_Numbers\n *   https://csrc.nist.gov/projects/random-bit-generation/\n *   http://www.pcg-random.org/posts/bounded-rands.html\n *   https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * Constants\n */\n\nconst crypto = global.crypto || global.msCrypto;\nconst HAS_CRYPTO = crypto && typeof crypto.getRandomValues === 'function';\nconst randomValues = HAS_CRYPTO ? crypto.getRandomValues.bind(crypto) : null;\nconst pool = new Uint32Array(16);\nconst MAX_BYTES = 65536;\n\nlet poolPos = 0;\n\n/**\n * Generate pseudo-random bytes.\n * @param {Number} size\n * @returns {Buffer}\n */\n\nfunction randomBytes(size) {\n  assert((size >>> 0) === size);\n\n  const data = Buffer.alloc(size);\n\n  randomFillSync(data, 0, size);\n\n  return data;\n}\n\n/**\n * Generate pseudo-random bytes.\n * @param {Buffer} data\n * @param {Number} [off=0]\n * @param {Number} [size=data.length-off]\n * @returns {Buffer}\n */\n\nfunction randomFill(data, off, size) {\n  assert(Buffer.isBuffer(data));\n\n  if (off == null)\n    off = 0;\n\n  assert((off >>> 0) === off);\n\n  if (size == null)\n    size = data.length - off;\n\n  assert((size >>> 0) === size);\n  assert(off + size <= data.length);\n\n  randomFillSync(data, off, size);\n\n  return data;\n}\n\n/**\n * Generate a random uint32.\n * @returns {Number}\n */\n\nfunction randomInt() {\n  if ((poolPos & 15) === 0) {\n    getRandomValues(pool);\n    poolPos = 0;\n  }\n\n  return pool[poolPos++];\n}\n\n/**\n * Generate a random uint32 within a range.\n * @param {Number} min - Inclusive.\n * @param {Number} max - Exclusive.\n * @returns {Number}\n */\n\nfunction randomRange(min, max) {\n  assert((min >>> 0) === min);\n  assert((max >>> 0) === max);\n  assert(max >= min);\n\n  const space = max - min;\n\n  if (space === 0)\n    return min;\n\n  const top = -space >>> 0;\n\n  let x, r;\n\n  do {\n    x = randomInt();\n    r = x % space;\n  } while (x - r > top);\n\n  return r + min;\n}\n\n/*\n * Helpers\n */\n\nfunction getRandomValues(array) {\n  if (!HAS_CRYPTO)\n    throw new Error('Entropy source not available.');\n\n  return randomValues(array);\n}\n\nfunction randomFillSync(data, off, size) {\n  assert(Buffer.isBuffer(data));\n  assert(data.buffer instanceof ArrayBuffer);\n  assert((data.byteOffset >>> 0) === data.byteOffset);\n  assert((data.byteLength >>> 0) === data.byteLength);\n  assert((off >>> 0) === off);\n  assert((size >>> 0) === size);\n  assert(off + size <= data.byteLength);\n\n  if (size > 2 ** 31 - 1)\n    throw new RangeError('The value \"size\" is out of range.');\n\n  const offset = data.byteOffset + off;\n  const array = new Uint8Array(data.buffer, offset, size);\n\n  if (array.length > MAX_BYTES) {\n    for (let i = 0; i < array.length; i += MAX_BYTES) {\n      let j = i + MAX_BYTES;\n\n      if (j > array.length)\n        j = array.length;\n\n      getRandomValues(array.subarray(i, j));\n    }\n  } else {\n    if (array.length > 0)\n      getRandomValues(array);\n  }\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.randomBytes = randomBytes;\nexports.randomFill = randomFill;\nexports.randomInt = randomInt;\nexports.randomRange = randomRange;\n","/*!\n * x25519.js - x25519 for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Curve25519\n *   https://cr.yp.to/ecdh/curve25519-20060209.pdf\n *   https://tools.ietf.org/html/rfc7748#section-5\n */\n\n'use strict';\n\nconst ECDH = require('./ecdh');\nconst pre = require('./precomputed/ed25519.json');\n\n/*\n * Expose\n */\n\nmodule.exports = new ECDH('X25519', 'ED25519', pre);\n","/*!\n * cipher.js - ciphers for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst modes = require('./ciphers/modes');\nconst AES = require('./ciphers/aes');\nconst ARC2 = require('./ciphers/arc2');\nconst Blowfish = require('./ciphers/blowfish');\nconst Camellia = require('./ciphers/camellia');\nconst CAST5 = require('./ciphers/cast5');\nconst {DES, EDE, EDE3} = require('./ciphers/des');\nconst IDEA = require('./ciphers/idea');\nconst Serpent = require('./ciphers/serpent');\nconst Twofish = require('./ciphers/twofish');\n\n/**\n * CipherBase\n */\n\nclass CipherBase {\n  constructor(name, encrypt) {\n    assert(typeof name === 'string');\n    assert(typeof encrypt === 'boolean');\n\n    this.encrypt = encrypt;\n    this.ctx = null;\n    this._init(name);\n  }\n\n  _init(name) {\n    const [algo, mode] = parseName(name);\n    const Mode = modes.get(mode, this.encrypt);\n\n    switch (algo) {\n      case 'AES-128':\n      case 'AES-192':\n      case 'AES-256': {\n        const bits = algo.slice(-3) | 0;\n        this.ctx = new Mode(new AES(bits));\n        break;\n      }\n\n      case 'ARC2': {\n        this.ctx = new Mode(new ARC2());\n        break;\n      }\n\n      case 'ARC2-GUTMANN': {\n        this.ctx = new Mode(new ARC2(-1, 0));\n        break;\n      }\n\n      case 'ARC2-40': {\n        this.ctx = new Mode(new ARC2(40));\n        break;\n      }\n\n      case 'ARC2-64': {\n        this.ctx = new Mode(new ARC2(64));\n        break;\n      }\n\n      case 'ARC2-128': {\n        this.ctx = new Mode(new ARC2(128));\n        break;\n      }\n\n      case 'ARC2-128-GUTMANN': {\n        this.ctx = new Mode(new ARC2(128, 1024));\n        break;\n      }\n\n      case 'BF':\n      case 'BLOWFISH': {\n        this.ctx = new Mode(new Blowfish());\n        break;\n      }\n\n      case 'CAMELLIA-128':\n      case 'CAMELLIA-192':\n      case 'CAMELLIA-256': {\n        const bits = algo.slice(-3) | 0;\n        this.ctx = new Mode(new Camellia(bits));\n        break;\n      }\n\n      case 'CAST5': {\n        this.ctx = new Mode(new CAST5());\n        break;\n      }\n\n      case 'DES': {\n        this.ctx = new Mode(new DES());\n        break;\n      }\n\n      case 'DES-EDE': {\n        this.ctx = new Mode(new EDE());\n        break;\n      }\n\n      case 'DES-EDE3': {\n        this.ctx = new Mode(new EDE3());\n        break;\n      }\n\n      case 'IDEA': {\n        this.ctx = new Mode(new IDEA());\n        break;\n      }\n\n      case 'SERPENT-128':\n      case 'SERPENT-192':\n      case 'SERPENT-256': {\n        const bits = algo.slice(-3) | 0;\n        this.ctx = new Mode(new Serpent(bits));\n        break;\n      }\n\n      case 'TWOFISH-128':\n      case 'TWOFISH-192':\n      case 'TWOFISH-256': {\n        const bits = algo.slice(-3) | 0;\n        this.ctx = new Mode(new Twofish(bits));\n        break;\n      }\n\n      default: {\n        throw new Error(`Unsupported cipher: ${name}.`);\n      }\n    }\n  }\n\n  init(key, iv) {\n    this.ctx.init(key, iv);\n    return this;\n  }\n\n  update(data) {\n    return this.ctx.update(data);\n  }\n\n  crypt(output, input) {\n    return this.ctx.crypt(output, input);\n  }\n\n  final() {\n    return this.ctx.final();\n  }\n\n  destroy() {\n    this.ctx.destroy();\n    return this;\n  }\n\n  setAutoPadding(padding) {\n    this.ctx.setAutoPadding(padding);\n    return this;\n  }\n\n  setAAD(data) {\n    this.ctx.setAAD(data);\n    return this;\n  }\n\n  setCCM(msgLen, tagLen, aad) {\n    this.ctx.setCCM(msgLen, tagLen, aad);\n    return this;\n  }\n\n  getAuthTag() {\n    return this.ctx.getAuthTag();\n  }\n\n  setAuthTag(tag) {\n    this.ctx.setAuthTag(tag);\n    return this;\n  }\n}\n\n/**\n * Cipher\n * @extends CipherBase\n */\n\nclass Cipher extends CipherBase {\n  constructor(name) {\n    super(name, true);\n  }\n}\n\n/**\n * Decipher\n * @extends CipherBase\n */\n\nclass Decipher extends CipherBase {\n  constructor(name) {\n    super(name, false);\n  }\n}\n\n/*\n * API\n */\n\nfunction encrypt(name, key, iv, data) {\n  const ctx = new Cipher(name);\n\n  ctx.init(key, iv);\n\n  return Buffer.concat([\n    ctx.update(data),\n    ctx.final()\n  ]);\n}\n\nfunction decrypt(name, key, iv, data) {\n  const ctx = new Decipher(name);\n\n  ctx.init(key, iv);\n\n  return Buffer.concat([\n    ctx.update(data),\n    ctx.final()\n  ]);\n}\n\n/*\n * Helpers\n */\n\nconst modeNames = {\n  __proto__: null,\n  ECB: true,\n  CBC: true,\n  CTS: true,\n  XTS: true,\n  CTR: true,\n  CFB: true,\n  OFB: true,\n  GCM: true,\n  CCM: true,\n  EAX: true\n};\n\nfunction parseName(name) {\n  assert(typeof name === 'string');\n\n  if (name.substring(0, 3) === 'RC2')\n    name = 'A' + name;\n\n  if (name.length < 5)\n    return [name, 'RAW'];\n\n  const mode = name.substring(name.length - 3);\n\n  if (name[name.length - 4] !== '-' || !modeNames[mode])\n    return [name, 'RAW'];\n\n  const algo = name.substring(0, name.length - 4);\n\n  return [algo, mode];\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.Cipher = Cipher;\nexports.Decipher = Decipher;\nexports.encrypt = encrypt;\nexports.decrypt = decrypt;\n","/*!\n * arc2.js - ARC2 for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009, The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/RC2\n *   https://github.com/golang/crypto/blob/master/pkcs12/internal/rc2/rc2.go\n *   https://en.wikipedia.org/wiki/RC2\n *   https://www.ietf.org/rfc/rfc2268.txt\n *   http://people.csail.mit.edu/rivest/pubs/KRRR98.pdf\n */\n\n'use strict';\n\nconst assert = require('../../internal/assert');\n\n/*\n * Constants\n */\n\nconst PI = new Uint8Array([\n  0xd9, 0x78, 0xf9, 0xc4, 0x19, 0xdd, 0xb5, 0xed,\n  0x28, 0xe9, 0xfd, 0x79, 0x4a, 0xa0, 0xd8, 0x9d,\n  0xc6, 0x7e, 0x37, 0x83, 0x2b, 0x76, 0x53, 0x8e,\n  0x62, 0x4c, 0x64, 0x88, 0x44, 0x8b, 0xfb, 0xa2,\n  0x17, 0x9a, 0x59, 0xf5, 0x87, 0xb3, 0x4f, 0x13,\n  0x61, 0x45, 0x6d, 0x8d, 0x09, 0x81, 0x7d, 0x32,\n  0xbd, 0x8f, 0x40, 0xeb, 0x86, 0xb7, 0x7b, 0x0b,\n  0xf0, 0x95, 0x21, 0x22, 0x5c, 0x6b, 0x4e, 0x82,\n  0x54, 0xd6, 0x65, 0x93, 0xce, 0x60, 0xb2, 0x1c,\n  0x73, 0x56, 0xc0, 0x14, 0xa7, 0x8c, 0xf1, 0xdc,\n  0x12, 0x75, 0xca, 0x1f, 0x3b, 0xbe, 0xe4, 0xd1,\n  0x42, 0x3d, 0xd4, 0x30, 0xa3, 0x3c, 0xb6, 0x26,\n  0x6f, 0xbf, 0x0e, 0xda, 0x46, 0x69, 0x07, 0x57,\n  0x27, 0xf2, 0x1d, 0x9b, 0xbc, 0x94, 0x43, 0x03,\n  0xf8, 0x11, 0xc7, 0xf6, 0x90, 0xef, 0x3e, 0xe7,\n  0x06, 0xc3, 0xd5, 0x2f, 0xc8, 0x66, 0x1e, 0xd7,\n  0x08, 0xe8, 0xea, 0xde, 0x80, 0x52, 0xee, 0xf7,\n  0x84, 0xaa, 0x72, 0xac, 0x35, 0x4d, 0x6a, 0x2a,\n  0x96, 0x1a, 0xd2, 0x71, 0x5a, 0x15, 0x49, 0x74,\n  0x4b, 0x9f, 0xd0, 0x5e, 0x04, 0x18, 0xa4, 0xec,\n  0xc2, 0xe0, 0x41, 0x6e, 0x0f, 0x51, 0xcb, 0xcc,\n  0x24, 0x91, 0xaf, 0x50, 0xa1, 0xf4, 0x70, 0x39,\n  0x99, 0x7c, 0x3a, 0x85, 0x23, 0xb8, 0xb4, 0x7a,\n  0xfc, 0x02, 0x36, 0x5b, 0x25, 0x55, 0x97, 0x31,\n  0x2d, 0x5d, 0xfa, 0x98, 0xe3, 0x8a, 0x92, 0xae,\n  0x05, 0xdf, 0x29, 0x10, 0x67, 0x6c, 0xba, 0xc9,\n  0xd3, 0x00, 0xe6, 0xcf, 0xe1, 0x9e, 0xa8, 0x2c,\n  0x63, 0x16, 0x01, 0x3f, 0x58, 0xe2, 0x89, 0xa9,\n  0x0d, 0x38, 0x34, 0x1b, 0xab, 0x33, 0xff, 0xb0,\n  0xbb, 0x48, 0x0c, 0x5f, 0xb9, 0xb1, 0xcd, 0x2e,\n  0xc5, 0xf3, 0xdb, 0x47, 0xe5, 0xa5, 0x9c, 0x77,\n  0x0a, 0xa6, 0x20, 0x68, 0xfe, 0x7f, 0xc1, 0xad\n]);\n\n/**\n * ARC2\n */\n\nclass ARC2 {\n  constructor(bits = -1, ekb = -1) {\n    assert(bits === -1 || (bits >>> 0) === bits);\n    assert(ekb === -1 || (ekb >>> 0) === ekb);\n    assert(bits === -1 || bits === 40 || bits === 64 || bits === 128);\n    assert(ekb === -1 || ekb <= 1024);\n\n    this.bits = bits;\n    this.ekb = ekb;\n    this.k = new Uint16Array(64);\n    this.r = new Uint16Array(4);\n  }\n\n  get blockSize() {\n    return 8;\n  }\n\n  init(key) {\n    // Initialization logic borrowed from nettle.\n    assert(Buffer.isBuffer(key));\n\n    if (this.bits === -1)\n      assert(key.length >= 1 && key.length <= 128);\n    else\n      assert(key.length * 8 === this.bits);\n\n    let ekb = this.ekb;\n\n    if (ekb === -1)\n      ekb = key.length * 8;\n\n    const L = Buffer.alloc(128, 0x00);\n\n    for (let i = 0; i < key.length; i++)\n      L[i] = key[i];\n\n    for (let i = key.length; i < 128; i++)\n      L[i] = PI[(L[i - key.length] + L[i - 1]) & 0xff];\n\n    L[0] = PI[L[0]];\n\n    if (ekb > 0 && ekb < 1024) {\n      const len = (ekb + 7) >>> 3;\n\n      let i = 128 - len;\n      let x = PI[L[i] & (255 >> (7 & -ekb))];\n\n      L[i] = x;\n\n      while (i--) {\n        x = PI[x ^ L[i + len]];\n        L[i] = x;\n      }\n    }\n\n    for (let i = 0; i < 64; i++)\n      this.k[i] = readU16(L, i * 2);\n\n    return this;\n  }\n\n  encrypt(output, opos, input, ipos) {\n    const r = this.r;\n\n    r[0] = readU16(input, ipos + 0);\n    r[1] = readU16(input, ipos + 2);\n    r[2] = readU16(input, ipos + 4);\n    r[3] = readU16(input, ipos + 6);\n\n    let j = 0;\n\n    while (j <= 16) {\n      // mix r[0]\n      r[0] += this.k[j];\n      r[0] += r[3] & r[2];\n      r[0] += ~r[3] & r[1];\n      r[0] = rotl16(r[0], 1);\n      j += 1;\n\n      // mix r[1]\n      r[1] += this.k[j];\n      r[1] += r[0] & r[3];\n      r[1] += ~r[0] & r[2];\n      r[1] = rotl16(r[1], 2);\n      j += 1;\n\n      // mix r[2]\n      r[2] += this.k[j];\n      r[2] += r[1] & r[0];\n      r[2] += ~r[1] & r[3];\n      r[2] = rotl16(r[2], 3);\n      j += 1;\n\n      // mix r[3]\n      r[3] += this.k[j];\n      r[3] += r[2] & r[1];\n      r[3] += ~r[2] & r[0];\n      r[3] = rotl16(r[3], 5);\n      j += 1;\n    }\n\n    r[0] += this.k[r[3] & 63];\n    r[1] += this.k[r[0] & 63];\n    r[2] += this.k[r[1] & 63];\n    r[3] += this.k[r[2] & 63];\n\n    while (j <= 40) {\n      // mix r[0]\n      r[0] += this.k[j];\n      r[0] += r[3] & r[2];\n      r[0] += ~r[3] & r[1];\n      r[0] = rotl16(r[0], 1);\n      j += 1;\n\n      // mix r[1]\n      r[1] += this.k[j];\n      r[1] += r[0] & r[3];\n      r[1] += ~r[0] & r[2];\n      r[1] = rotl16(r[1], 2);\n      j += 1;\n\n      // mix r[2]\n      r[2] += this.k[j];\n      r[2] += r[1] & r[0];\n      r[2] += ~r[1] & r[3];\n      r[2] = rotl16(r[2], 3);\n      j += 1;\n\n      // mix r[3]\n      r[3] += this.k[j];\n      r[3] += r[2] & r[1];\n      r[3] += ~r[2] & r[0];\n      r[3] = rotl16(r[3], 5);\n      j += 1;\n    }\n\n    r[0] += this.k[r[3] & 63];\n    r[1] += this.k[r[0] & 63];\n    r[2] += this.k[r[1] & 63];\n    r[3] += this.k[r[2] & 63];\n\n    while (j <= 60) {\n      // mix r[0]\n      r[0] += this.k[j];\n      r[0] += r[3] & r[2];\n      r[0] += ~r[3] & r[1];\n      r[0] = rotl16(r[0], 1);\n      j += 1;\n\n      // mix r[1]\n      r[1] += this.k[j];\n      r[1] += r[0] & r[3];\n      r[1] += ~r[0] & r[2];\n      r[1] = rotl16(r[1], 2);\n      j += 1;\n\n      // mix r[2]\n      r[2] += this.k[j];\n      r[2] += r[1] & r[0];\n      r[2] += ~r[1] & r[3];\n      r[2] = rotl16(r[2], 3);\n      j += 1;\n\n      // mix r[3]\n      r[3] += this.k[j];\n      r[3] += r[2] & r[1];\n      r[3] += ~r[2] & r[0];\n      r[3] = rotl16(r[3], 5);\n      j += 1;\n    }\n\n    writeU16(output, r[0], opos + 0);\n    writeU16(output, r[1], opos + 2);\n    writeU16(output, r[2], opos + 4);\n    writeU16(output, r[3], opos + 6);\n  }\n\n  decrypt(output, opos, input, ipos) {\n    const r = this.r;\n\n    r[0] = readU16(input, ipos + 0);\n    r[1] = readU16(input, ipos + 2);\n    r[2] = readU16(input, ipos + 4);\n    r[3] = readU16(input, ipos + 6);\n\n    let j = 63;\n\n    while (j >= 44) {\n      // unmix r[3]\n      r[3] = rotl16(r[3], 16 - 5);\n      r[3] -= this.k[j];\n      r[3] -= r[2] & r[1];\n      r[3] -= ~r[2] & r[0];\n      j -= 1;\n\n      // unmix r[2]\n      r[2] = rotl16(r[2], 16 - 3);\n      r[2] -= this.k[j];\n      r[2] -= r[1] & r[0];\n      r[2] -= ~r[1] & r[3];\n      j -= 1;\n\n      // unmix r[1]\n      r[1] = rotl16(r[1], 16 - 2);\n      r[1] -= this.k[j];\n      r[1] -= r[0] & r[3];\n      r[1] -= ~r[0] & r[2];\n      j -= 1;\n\n      // unmix r[0]\n      r[0] = rotl16(r[0], 16 - 1);\n      r[0] -= this.k[j];\n      r[0] -= r[3] & r[2];\n      r[0] -= ~r[3] & r[1];\n      j -= 1;\n    }\n\n    r[3] -= this.k[r[2] & 63];\n    r[2] -= this.k[r[1] & 63];\n    r[1] -= this.k[r[0] & 63];\n    r[0] -= this.k[r[3] & 63];\n\n    while (j >= 20) {\n      // unmix r[3]\n      r[3] = rotl16(r[3], 16 - 5);\n      r[3] -= this.k[j];\n      r[3] -= r[2] & r[1];\n      r[3] -= ~r[2] & r[0];\n      j -= 1;\n\n      // unmix r[2]\n      r[2] = rotl16(r[2], 16 - 3);\n      r[2] -= this.k[j];\n      r[2] -= r[1] & r[0];\n      r[2] -= ~r[1] & r[3];\n      j -= 1;\n\n      // unmix r[1]\n      r[1] = rotl16(r[1], 16 - 2);\n      r[1] -= this.k[j];\n      r[1] -= r[0] & r[3];\n      r[1] -= ~r[0] & r[2];\n      j -= 1;\n\n      // unmix r[0]\n      r[0] = rotl16(r[0], 16 - 1);\n      r[0] -= this.k[j];\n      r[0] -= r[3] & r[2];\n      r[0] -= ~r[3] & r[1];\n      j -= 1;\n    }\n\n    r[3] -= this.k[r[2] & 63];\n    r[2] -= this.k[r[1] & 63];\n    r[1] -= this.k[r[0] & 63];\n    r[0] -= this.k[r[3] & 63];\n\n    while (j >= 0) {\n      // unmix r[3]\n      r[3] = rotl16(r[3], 16 - 5);\n      r[3] -= this.k[j];\n      r[3] -= r[2] & r[1];\n      r[3] -= ~r[2] & r[0];\n      j -= 1;\n\n      // unmix r[2]\n      r[2] = rotl16(r[2], 16 - 3);\n      r[2] -= this.k[j];\n      r[2] -= r[1] & r[0];\n      r[2] -= ~r[1] & r[3];\n      j -= 1;\n\n      // unmix r[1]\n      r[1] = rotl16(r[1], 16 - 2);\n      r[1] -= this.k[j];\n      r[1] -= r[0] & r[3];\n      r[1] -= ~r[0] & r[2];\n      j -= 1;\n\n      // unmix r[0]\n      r[0] = rotl16(r[0], 16 - 1);\n      r[0] -= this.k[j];\n      r[0] -= r[3] & r[2];\n      r[0] -= ~r[3] & r[1];\n      j -= 1;\n    }\n\n    writeU16(output, r[0], opos + 0);\n    writeU16(output, r[1], opos + 2);\n    writeU16(output, r[2], opos + 4);\n    writeU16(output, r[3], opos + 6);\n  }\n\n  destroy() {\n    for (let i = 0; i < 64; i++)\n      this.k[i] = 0;\n\n    for (let i = 0; i < 4; i++)\n      this.r[i] = 0;\n\n    return this;\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction rotl16(x, b) {\n  return (x >>> (16 - b)) | (x << b);\n}\n\nfunction readU16(data, pos) {\n  return data[pos++] + data[pos] * 0x100;\n}\n\nfunction writeU16(data, value, pos) {\n  data[pos++] = value;\n  data[pos++] = value >>> 8;\n  return pos;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = ARC2;\n","/*!\n * camellia.js - camellia128/192/256 for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on aead/camellia:\n *   Copyright (c) 2016, Andreas Auernhammer (MIT License).\n *   https://github.com/aead/camellia\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Camellia_(cipher)\n *   https://tools.ietf.org/html/rfc3713\n *   https://github.com/aead/camellia/blob/master/camellia.go\n */\n\n'use strict';\n\nconst assert = require('../../internal/assert');\n\n/*\n * Constants\n */\n\nconst SIGMA = new Uint32Array([\n  0xa09e667f, 0x3bcc908b, 0xb67ae858, 0x4caa73b2,\n  0xc6ef372f, 0xe94f82be, 0x54ff53a5, 0xf1d36f1c,\n  0x10e527fa, 0xde682d1d, 0xb05688c2, 0xb3e6c1fd\n]);\n\nconst S1 = new Uint32Array([\n  0x70707000, 0x82828200, 0x2c2c2c00, 0xececec00,\n  0xb3b3b300, 0x27272700, 0xc0c0c000, 0xe5e5e500,\n  0xe4e4e400, 0x85858500, 0x57575700, 0x35353500,\n  0xeaeaea00, 0x0c0c0c00, 0xaeaeae00, 0x41414100,\n  0x23232300, 0xefefef00, 0x6b6b6b00, 0x93939300,\n  0x45454500, 0x19191900, 0xa5a5a500, 0x21212100,\n  0xededed00, 0x0e0e0e00, 0x4f4f4f00, 0x4e4e4e00,\n  0x1d1d1d00, 0x65656500, 0x92929200, 0xbdbdbd00,\n  0x86868600, 0xb8b8b800, 0xafafaf00, 0x8f8f8f00,\n  0x7c7c7c00, 0xebebeb00, 0x1f1f1f00, 0xcecece00,\n  0x3e3e3e00, 0x30303000, 0xdcdcdc00, 0x5f5f5f00,\n  0x5e5e5e00, 0xc5c5c500, 0x0b0b0b00, 0x1a1a1a00,\n  0xa6a6a600, 0xe1e1e100, 0x39393900, 0xcacaca00,\n  0xd5d5d500, 0x47474700, 0x5d5d5d00, 0x3d3d3d00,\n  0xd9d9d900, 0x01010100, 0x5a5a5a00, 0xd6d6d600,\n  0x51515100, 0x56565600, 0x6c6c6c00, 0x4d4d4d00,\n  0x8b8b8b00, 0x0d0d0d00, 0x9a9a9a00, 0x66666600,\n  0xfbfbfb00, 0xcccccc00, 0xb0b0b000, 0x2d2d2d00,\n  0x74747400, 0x12121200, 0x2b2b2b00, 0x20202000,\n  0xf0f0f000, 0xb1b1b100, 0x84848400, 0x99999900,\n  0xdfdfdf00, 0x4c4c4c00, 0xcbcbcb00, 0xc2c2c200,\n  0x34343400, 0x7e7e7e00, 0x76767600, 0x05050500,\n  0x6d6d6d00, 0xb7b7b700, 0xa9a9a900, 0x31313100,\n  0xd1d1d100, 0x17171700, 0x04040400, 0xd7d7d700,\n  0x14141400, 0x58585800, 0x3a3a3a00, 0x61616100,\n  0xdedede00, 0x1b1b1b00, 0x11111100, 0x1c1c1c00,\n  0x32323200, 0x0f0f0f00, 0x9c9c9c00, 0x16161600,\n  0x53535300, 0x18181800, 0xf2f2f200, 0x22222200,\n  0xfefefe00, 0x44444400, 0xcfcfcf00, 0xb2b2b200,\n  0xc3c3c300, 0xb5b5b500, 0x7a7a7a00, 0x91919100,\n  0x24242400, 0x08080800, 0xe8e8e800, 0xa8a8a800,\n  0x60606000, 0xfcfcfc00, 0x69696900, 0x50505000,\n  0xaaaaaa00, 0xd0d0d000, 0xa0a0a000, 0x7d7d7d00,\n  0xa1a1a100, 0x89898900, 0x62626200, 0x97979700,\n  0x54545400, 0x5b5b5b00, 0x1e1e1e00, 0x95959500,\n  0xe0e0e000, 0xffffff00, 0x64646400, 0xd2d2d200,\n  0x10101000, 0xc4c4c400, 0x00000000, 0x48484800,\n  0xa3a3a300, 0xf7f7f700, 0x75757500, 0xdbdbdb00,\n  0x8a8a8a00, 0x03030300, 0xe6e6e600, 0xdadada00,\n  0x09090900, 0x3f3f3f00, 0xdddddd00, 0x94949400,\n  0x87878700, 0x5c5c5c00, 0x83838300, 0x02020200,\n  0xcdcdcd00, 0x4a4a4a00, 0x90909000, 0x33333300,\n  0x73737300, 0x67676700, 0xf6f6f600, 0xf3f3f300,\n  0x9d9d9d00, 0x7f7f7f00, 0xbfbfbf00, 0xe2e2e200,\n  0x52525200, 0x9b9b9b00, 0xd8d8d800, 0x26262600,\n  0xc8c8c800, 0x37373700, 0xc6c6c600, 0x3b3b3b00,\n  0x81818100, 0x96969600, 0x6f6f6f00, 0x4b4b4b00,\n  0x13131300, 0xbebebe00, 0x63636300, 0x2e2e2e00,\n  0xe9e9e900, 0x79797900, 0xa7a7a700, 0x8c8c8c00,\n  0x9f9f9f00, 0x6e6e6e00, 0xbcbcbc00, 0x8e8e8e00,\n  0x29292900, 0xf5f5f500, 0xf9f9f900, 0xb6b6b600,\n  0x2f2f2f00, 0xfdfdfd00, 0xb4b4b400, 0x59595900,\n  0x78787800, 0x98989800, 0x06060600, 0x6a6a6a00,\n  0xe7e7e700, 0x46464600, 0x71717100, 0xbababa00,\n  0xd4d4d400, 0x25252500, 0xababab00, 0x42424200,\n  0x88888800, 0xa2a2a200, 0x8d8d8d00, 0xfafafa00,\n  0x72727200, 0x07070700, 0xb9b9b900, 0x55555500,\n  0xf8f8f800, 0xeeeeee00, 0xacacac00, 0x0a0a0a00,\n  0x36363600, 0x49494900, 0x2a2a2a00, 0x68686800,\n  0x3c3c3c00, 0x38383800, 0xf1f1f100, 0xa4a4a400,\n  0x40404000, 0x28282800, 0xd3d3d300, 0x7b7b7b00,\n  0xbbbbbb00, 0xc9c9c900, 0x43434300, 0xc1c1c100,\n  0x15151500, 0xe3e3e300, 0xadadad00, 0xf4f4f400,\n  0x77777700, 0xc7c7c700, 0x80808000, 0x9e9e9e00\n]);\n\nconst S2 = new Uint32Array([\n  0x00e0e0e0, 0x00050505, 0x00585858, 0x00d9d9d9,\n  0x00676767, 0x004e4e4e, 0x00818181, 0x00cbcbcb,\n  0x00c9c9c9, 0x000b0b0b, 0x00aeaeae, 0x006a6a6a,\n  0x00d5d5d5, 0x00181818, 0x005d5d5d, 0x00828282,\n  0x00464646, 0x00dfdfdf, 0x00d6d6d6, 0x00272727,\n  0x008a8a8a, 0x00323232, 0x004b4b4b, 0x00424242,\n  0x00dbdbdb, 0x001c1c1c, 0x009e9e9e, 0x009c9c9c,\n  0x003a3a3a, 0x00cacaca, 0x00252525, 0x007b7b7b,\n  0x000d0d0d, 0x00717171, 0x005f5f5f, 0x001f1f1f,\n  0x00f8f8f8, 0x00d7d7d7, 0x003e3e3e, 0x009d9d9d,\n  0x007c7c7c, 0x00606060, 0x00b9b9b9, 0x00bebebe,\n  0x00bcbcbc, 0x008b8b8b, 0x00161616, 0x00343434,\n  0x004d4d4d, 0x00c3c3c3, 0x00727272, 0x00959595,\n  0x00ababab, 0x008e8e8e, 0x00bababa, 0x007a7a7a,\n  0x00b3b3b3, 0x00020202, 0x00b4b4b4, 0x00adadad,\n  0x00a2a2a2, 0x00acacac, 0x00d8d8d8, 0x009a9a9a,\n  0x00171717, 0x001a1a1a, 0x00353535, 0x00cccccc,\n  0x00f7f7f7, 0x00999999, 0x00616161, 0x005a5a5a,\n  0x00e8e8e8, 0x00242424, 0x00565656, 0x00404040,\n  0x00e1e1e1, 0x00636363, 0x00090909, 0x00333333,\n  0x00bfbfbf, 0x00989898, 0x00979797, 0x00858585,\n  0x00686868, 0x00fcfcfc, 0x00ececec, 0x000a0a0a,\n  0x00dadada, 0x006f6f6f, 0x00535353, 0x00626262,\n  0x00a3a3a3, 0x002e2e2e, 0x00080808, 0x00afafaf,\n  0x00282828, 0x00b0b0b0, 0x00747474, 0x00c2c2c2,\n  0x00bdbdbd, 0x00363636, 0x00222222, 0x00383838,\n  0x00646464, 0x001e1e1e, 0x00393939, 0x002c2c2c,\n  0x00a6a6a6, 0x00303030, 0x00e5e5e5, 0x00444444,\n  0x00fdfdfd, 0x00888888, 0x009f9f9f, 0x00656565,\n  0x00878787, 0x006b6b6b, 0x00f4f4f4, 0x00232323,\n  0x00484848, 0x00101010, 0x00d1d1d1, 0x00515151,\n  0x00c0c0c0, 0x00f9f9f9, 0x00d2d2d2, 0x00a0a0a0,\n  0x00555555, 0x00a1a1a1, 0x00414141, 0x00fafafa,\n  0x00434343, 0x00131313, 0x00c4c4c4, 0x002f2f2f,\n  0x00a8a8a8, 0x00b6b6b6, 0x003c3c3c, 0x002b2b2b,\n  0x00c1c1c1, 0x00ffffff, 0x00c8c8c8, 0x00a5a5a5,\n  0x00202020, 0x00898989, 0x00000000, 0x00909090,\n  0x00474747, 0x00efefef, 0x00eaeaea, 0x00b7b7b7,\n  0x00151515, 0x00060606, 0x00cdcdcd, 0x00b5b5b5,\n  0x00121212, 0x007e7e7e, 0x00bbbbbb, 0x00292929,\n  0x000f0f0f, 0x00b8b8b8, 0x00070707, 0x00040404,\n  0x009b9b9b, 0x00949494, 0x00212121, 0x00666666,\n  0x00e6e6e6, 0x00cecece, 0x00ededed, 0x00e7e7e7,\n  0x003b3b3b, 0x00fefefe, 0x007f7f7f, 0x00c5c5c5,\n  0x00a4a4a4, 0x00373737, 0x00b1b1b1, 0x004c4c4c,\n  0x00919191, 0x006e6e6e, 0x008d8d8d, 0x00767676,\n  0x00030303, 0x002d2d2d, 0x00dedede, 0x00969696,\n  0x00262626, 0x007d7d7d, 0x00c6c6c6, 0x005c5c5c,\n  0x00d3d3d3, 0x00f2f2f2, 0x004f4f4f, 0x00191919,\n  0x003f3f3f, 0x00dcdcdc, 0x00797979, 0x001d1d1d,\n  0x00525252, 0x00ebebeb, 0x00f3f3f3, 0x006d6d6d,\n  0x005e5e5e, 0x00fbfbfb, 0x00696969, 0x00b2b2b2,\n  0x00f0f0f0, 0x00313131, 0x000c0c0c, 0x00d4d4d4,\n  0x00cfcfcf, 0x008c8c8c, 0x00e2e2e2, 0x00757575,\n  0x00a9a9a9, 0x004a4a4a, 0x00575757, 0x00848484,\n  0x00111111, 0x00454545, 0x001b1b1b, 0x00f5f5f5,\n  0x00e4e4e4, 0x000e0e0e, 0x00737373, 0x00aaaaaa,\n  0x00f1f1f1, 0x00dddddd, 0x00595959, 0x00141414,\n  0x006c6c6c, 0x00929292, 0x00545454, 0x00d0d0d0,\n  0x00787878, 0x00707070, 0x00e3e3e3, 0x00494949,\n  0x00808080, 0x00505050, 0x00a7a7a7, 0x00f6f6f6,\n  0x00777777, 0x00939393, 0x00868686, 0x00838383,\n  0x002a2a2a, 0x00c7c7c7, 0x005b5b5b, 0x00e9e9e9,\n  0x00eeeeee, 0x008f8f8f, 0x00010101, 0x003d3d3d\n]);\n\nconst S3 = new Uint32Array([\n  0x38003838, 0x41004141, 0x16001616, 0x76007676,\n  0xd900d9d9, 0x93009393, 0x60006060, 0xf200f2f2,\n  0x72007272, 0xc200c2c2, 0xab00abab, 0x9a009a9a,\n  0x75007575, 0x06000606, 0x57005757, 0xa000a0a0,\n  0x91009191, 0xf700f7f7, 0xb500b5b5, 0xc900c9c9,\n  0xa200a2a2, 0x8c008c8c, 0xd200d2d2, 0x90009090,\n  0xf600f6f6, 0x07000707, 0xa700a7a7, 0x27002727,\n  0x8e008e8e, 0xb200b2b2, 0x49004949, 0xde00dede,\n  0x43004343, 0x5c005c5c, 0xd700d7d7, 0xc700c7c7,\n  0x3e003e3e, 0xf500f5f5, 0x8f008f8f, 0x67006767,\n  0x1f001f1f, 0x18001818, 0x6e006e6e, 0xaf00afaf,\n  0x2f002f2f, 0xe200e2e2, 0x85008585, 0x0d000d0d,\n  0x53005353, 0xf000f0f0, 0x9c009c9c, 0x65006565,\n  0xea00eaea, 0xa300a3a3, 0xae00aeae, 0x9e009e9e,\n  0xec00ecec, 0x80008080, 0x2d002d2d, 0x6b006b6b,\n  0xa800a8a8, 0x2b002b2b, 0x36003636, 0xa600a6a6,\n  0xc500c5c5, 0x86008686, 0x4d004d4d, 0x33003333,\n  0xfd00fdfd, 0x66006666, 0x58005858, 0x96009696,\n  0x3a003a3a, 0x09000909, 0x95009595, 0x10001010,\n  0x78007878, 0xd800d8d8, 0x42004242, 0xcc00cccc,\n  0xef00efef, 0x26002626, 0xe500e5e5, 0x61006161,\n  0x1a001a1a, 0x3f003f3f, 0x3b003b3b, 0x82008282,\n  0xb600b6b6, 0xdb00dbdb, 0xd400d4d4, 0x98009898,\n  0xe800e8e8, 0x8b008b8b, 0x02000202, 0xeb00ebeb,\n  0x0a000a0a, 0x2c002c2c, 0x1d001d1d, 0xb000b0b0,\n  0x6f006f6f, 0x8d008d8d, 0x88008888, 0x0e000e0e,\n  0x19001919, 0x87008787, 0x4e004e4e, 0x0b000b0b,\n  0xa900a9a9, 0x0c000c0c, 0x79007979, 0x11001111,\n  0x7f007f7f, 0x22002222, 0xe700e7e7, 0x59005959,\n  0xe100e1e1, 0xda00dada, 0x3d003d3d, 0xc800c8c8,\n  0x12001212, 0x04000404, 0x74007474, 0x54005454,\n  0x30003030, 0x7e007e7e, 0xb400b4b4, 0x28002828,\n  0x55005555, 0x68006868, 0x50005050, 0xbe00bebe,\n  0xd000d0d0, 0xc400c4c4, 0x31003131, 0xcb00cbcb,\n  0x2a002a2a, 0xad00adad, 0x0f000f0f, 0xca00caca,\n  0x70007070, 0xff00ffff, 0x32003232, 0x69006969,\n  0x08000808, 0x62006262, 0x00000000, 0x24002424,\n  0xd100d1d1, 0xfb00fbfb, 0xba00baba, 0xed00eded,\n  0x45004545, 0x81008181, 0x73007373, 0x6d006d6d,\n  0x84008484, 0x9f009f9f, 0xee00eeee, 0x4a004a4a,\n  0xc300c3c3, 0x2e002e2e, 0xc100c1c1, 0x01000101,\n  0xe600e6e6, 0x25002525, 0x48004848, 0x99009999,\n  0xb900b9b9, 0xb300b3b3, 0x7b007b7b, 0xf900f9f9,\n  0xce00cece, 0xbf00bfbf, 0xdf00dfdf, 0x71007171,\n  0x29002929, 0xcd00cdcd, 0x6c006c6c, 0x13001313,\n  0x64006464, 0x9b009b9b, 0x63006363, 0x9d009d9d,\n  0xc000c0c0, 0x4b004b4b, 0xb700b7b7, 0xa500a5a5,\n  0x89008989, 0x5f005f5f, 0xb100b1b1, 0x17001717,\n  0xf400f4f4, 0xbc00bcbc, 0xd300d3d3, 0x46004646,\n  0xcf00cfcf, 0x37003737, 0x5e005e5e, 0x47004747,\n  0x94009494, 0xfa00fafa, 0xfc00fcfc, 0x5b005b5b,\n  0x97009797, 0xfe00fefe, 0x5a005a5a, 0xac00acac,\n  0x3c003c3c, 0x4c004c4c, 0x03000303, 0x35003535,\n  0xf300f3f3, 0x23002323, 0xb800b8b8, 0x5d005d5d,\n  0x6a006a6a, 0x92009292, 0xd500d5d5, 0x21002121,\n  0x44004444, 0x51005151, 0xc600c6c6, 0x7d007d7d,\n  0x39003939, 0x83008383, 0xdc00dcdc, 0xaa00aaaa,\n  0x7c007c7c, 0x77007777, 0x56005656, 0x05000505,\n  0x1b001b1b, 0xa400a4a4, 0x15001515, 0x34003434,\n  0x1e001e1e, 0x1c001c1c, 0xf800f8f8, 0x52005252,\n  0x20002020, 0x14001414, 0xe900e9e9, 0xbd00bdbd,\n  0xdd00dddd, 0xe400e4e4, 0xa100a1a1, 0xe000e0e0,\n  0x8a008a8a, 0xf100f1f1, 0xd600d6d6, 0x7a007a7a,\n  0xbb00bbbb, 0xe300e3e3, 0x40004040, 0x4f004f4f\n]);\n\nconst S4 = new Uint32Array([\n  0x70700070, 0x2c2c002c, 0xb3b300b3, 0xc0c000c0,\n  0xe4e400e4, 0x57570057, 0xeaea00ea, 0xaeae00ae,\n  0x23230023, 0x6b6b006b, 0x45450045, 0xa5a500a5,\n  0xeded00ed, 0x4f4f004f, 0x1d1d001d, 0x92920092,\n  0x86860086, 0xafaf00af, 0x7c7c007c, 0x1f1f001f,\n  0x3e3e003e, 0xdcdc00dc, 0x5e5e005e, 0x0b0b000b,\n  0xa6a600a6, 0x39390039, 0xd5d500d5, 0x5d5d005d,\n  0xd9d900d9, 0x5a5a005a, 0x51510051, 0x6c6c006c,\n  0x8b8b008b, 0x9a9a009a, 0xfbfb00fb, 0xb0b000b0,\n  0x74740074, 0x2b2b002b, 0xf0f000f0, 0x84840084,\n  0xdfdf00df, 0xcbcb00cb, 0x34340034, 0x76760076,\n  0x6d6d006d, 0xa9a900a9, 0xd1d100d1, 0x04040004,\n  0x14140014, 0x3a3a003a, 0xdede00de, 0x11110011,\n  0x32320032, 0x9c9c009c, 0x53530053, 0xf2f200f2,\n  0xfefe00fe, 0xcfcf00cf, 0xc3c300c3, 0x7a7a007a,\n  0x24240024, 0xe8e800e8, 0x60600060, 0x69690069,\n  0xaaaa00aa, 0xa0a000a0, 0xa1a100a1, 0x62620062,\n  0x54540054, 0x1e1e001e, 0xe0e000e0, 0x64640064,\n  0x10100010, 0x00000000, 0xa3a300a3, 0x75750075,\n  0x8a8a008a, 0xe6e600e6, 0x09090009, 0xdddd00dd,\n  0x87870087, 0x83830083, 0xcdcd00cd, 0x90900090,\n  0x73730073, 0xf6f600f6, 0x9d9d009d, 0xbfbf00bf,\n  0x52520052, 0xd8d800d8, 0xc8c800c8, 0xc6c600c6,\n  0x81810081, 0x6f6f006f, 0x13130013, 0x63630063,\n  0xe9e900e9, 0xa7a700a7, 0x9f9f009f, 0xbcbc00bc,\n  0x29290029, 0xf9f900f9, 0x2f2f002f, 0xb4b400b4,\n  0x78780078, 0x06060006, 0xe7e700e7, 0x71710071,\n  0xd4d400d4, 0xabab00ab, 0x88880088, 0x8d8d008d,\n  0x72720072, 0xb9b900b9, 0xf8f800f8, 0xacac00ac,\n  0x36360036, 0x2a2a002a, 0x3c3c003c, 0xf1f100f1,\n  0x40400040, 0xd3d300d3, 0xbbbb00bb, 0x43430043,\n  0x15150015, 0xadad00ad, 0x77770077, 0x80800080,\n  0x82820082, 0xecec00ec, 0x27270027, 0xe5e500e5,\n  0x85850085, 0x35350035, 0x0c0c000c, 0x41410041,\n  0xefef00ef, 0x93930093, 0x19190019, 0x21210021,\n  0x0e0e000e, 0x4e4e004e, 0x65650065, 0xbdbd00bd,\n  0xb8b800b8, 0x8f8f008f, 0xebeb00eb, 0xcece00ce,\n  0x30300030, 0x5f5f005f, 0xc5c500c5, 0x1a1a001a,\n  0xe1e100e1, 0xcaca00ca, 0x47470047, 0x3d3d003d,\n  0x01010001, 0xd6d600d6, 0x56560056, 0x4d4d004d,\n  0x0d0d000d, 0x66660066, 0xcccc00cc, 0x2d2d002d,\n  0x12120012, 0x20200020, 0xb1b100b1, 0x99990099,\n  0x4c4c004c, 0xc2c200c2, 0x7e7e007e, 0x05050005,\n  0xb7b700b7, 0x31310031, 0x17170017, 0xd7d700d7,\n  0x58580058, 0x61610061, 0x1b1b001b, 0x1c1c001c,\n  0x0f0f000f, 0x16160016, 0x18180018, 0x22220022,\n  0x44440044, 0xb2b200b2, 0xb5b500b5, 0x91910091,\n  0x08080008, 0xa8a800a8, 0xfcfc00fc, 0x50500050,\n  0xd0d000d0, 0x7d7d007d, 0x89890089, 0x97970097,\n  0x5b5b005b, 0x95950095, 0xffff00ff, 0xd2d200d2,\n  0xc4c400c4, 0x48480048, 0xf7f700f7, 0xdbdb00db,\n  0x03030003, 0xdada00da, 0x3f3f003f, 0x94940094,\n  0x5c5c005c, 0x02020002, 0x4a4a004a, 0x33330033,\n  0x67670067, 0xf3f300f3, 0x7f7f007f, 0xe2e200e2,\n  0x9b9b009b, 0x26260026, 0x37370037, 0x3b3b003b,\n  0x96960096, 0x4b4b004b, 0xbebe00be, 0x2e2e002e,\n  0x79790079, 0x8c8c008c, 0x6e6e006e, 0x8e8e008e,\n  0xf5f500f5, 0xb6b600b6, 0xfdfd00fd, 0x59590059,\n  0x98980098, 0x6a6a006a, 0x46460046, 0xbaba00ba,\n  0x25250025, 0x42420042, 0xa2a200a2, 0xfafa00fa,\n  0x07070007, 0x55550055, 0xeeee00ee, 0x0a0a000a,\n  0x49490049, 0x68680068, 0x38380038, 0xa4a400a4,\n  0x28280028, 0x7b7b007b, 0xc9c900c9, 0xc1c100c1,\n  0xe3e300e3, 0xf4f400f4, 0xc7c700c7, 0x9e9e009e\n]);\n\n/**\n * Camellia128\n */\n\nclass Camellia128 {\n  constructor() {\n    this.key = new Uint32Array(52);\n    this.block = new Uint32Array(4);\n  }\n\n  get blockSize() {\n    return 16;\n  }\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n    assert(key.length === 16);\n    this.keySchedule(key);\n    return this;\n  }\n\n  keySchedule(key) {\n    const s = this.block;\n    const k = this.key;\n\n    s[0] = readU32(key, 0);\n    s[1] = readU32(key, 4);\n    s[2] = readU32(key, 8);\n    s[3] = readU32(key, 12);\n\n    set4(k, 0, 1, 2, 3, s, 0, 1, 2, 3);\n\n    feis(s, 0, 1, 2, 3, SIGMA[0], SIGMA[1]);\n    feis(s, 2, 3, 0, 1, SIGMA[2], SIGMA[3]);\n\n    xor4(s, 0, 1, 2, 3, k, 0, 1, 2, 3);\n\n    feis(s, 0, 1, 2, 3, SIGMA[4], SIGMA[5]);\n    feis(s, 2, 3, 0, 1, SIGMA[6], SIGMA[7]);\n    set4(k, 4, 5, 6, 7, s, 0, 1, 2, 3);\n\n    rotl(s, 0, 1, 2, 3, 15); // KA << 15\n    set4(k, 12, 13, 14, 15, s, 0, 1, 2, 3);\n\n    rotl(s, 0, 1, 2, 3, 15); // KA << 30\n    set4(k, 16, 17, 18, 19, s, 0, 1, 2, 3);\n\n    rotl(s, 0, 1, 2, 3, 15); // KA << 45\n    set2(k, 24, 25, s, 0, 1);\n\n    rotl(s, 0, 1, 2, 3, 15); // KA << 60\n    set4(k, 28, 29, 30, 31, s, 0, 1, 2, 3);\n\n    rotl(s, 1, 2, 3, 0, 2); // KA << 94\n    set4(k, 40, 41, 42, 43, s, 1, 2, 3, 0);\n\n    rotl(s, 1, 2, 3, 0, 17); // KA << 111\n    set4(k, 48, 49, 50, 51, s, 1, 2, 3, 0);\n    set4(s, 0, 1, 2, 3, k, 0, 1, 2, 3);\n\n    rotl(s, 0, 1, 2, 3, 15); // KL << 15\n    set4(k, 8, 9, 10, 11, s, 0, 1, 2, 3);\n\n    rotl(s, 0, 1, 2, 3, 30); // KL << 45\n    set4(k, 20, 21, 22, 23, s, 0, 1, 2, 3);\n\n    rotl(s, 0, 1, 2, 3, 15); // KL << 60\n    set2(k, 26, 27, s, 2, 3);\n\n    rotl(s, 0, 1, 2, 3, 17); // KL << 77\n    set4(k, 32, 33, 34, 35, s, 0, 1, 2, 3);\n\n    rotl(s, 0, 1, 2, 3, 17); // KL << 94\n    set4(k, 36, 37, 38, 39, s, 0, 1, 2, 3);\n\n    rotl(s, 0, 1, 2, 3, 17); // KL << 111\n    set4(k, 44, 45, 46, 47, s, 0, 1, 2, 3);\n\n    return this;\n  }\n\n  encrypt(output, opos, input, ipos) {\n    const r = this.block;\n    const k = this.key;\n\n    r[0] = readU32(input, ipos + 0);\n    r[1] = readU32(input, ipos + 4);\n    r[2] = readU32(input, ipos + 8);\n    r[3] = readU32(input, ipos + 12);\n\n    xor4(r, 0, 1, 2, 3, k, 0, 1, 2, 3);\n\n    feis(r, 0, 1, 2, 3, k[4], k[5]);\n    feis(r, 2, 3, 0, 1, k[6], k[7]);\n    feis(r, 0, 1, 2, 3, k[8], k[9]);\n    feis(r, 2, 3, 0, 1, k[10], k[11]);\n    feis(r, 0, 1, 2, 3, k[12], k[13]);\n    feis(r, 2, 3, 0, 1, k[14], k[15]);\n\n    let t = r[0] & k[16];\n    r[1] ^= (t << 1) | (t >>> (32 - 1));\n    r[2] ^= r[3] | k[19];\n    r[0] ^= r[1] | k[17];\n    t = r[2] & k[18];\n    r[3] ^= (t << 1) | (t >>> (32 - 1));\n\n    feis(r, 0, 1, 2, 3, k[20], k[21]);\n    feis(r, 2, 3, 0, 1, k[22], k[23]);\n    feis(r, 0, 1, 2, 3, k[24], k[25]);\n    feis(r, 2, 3, 0, 1, k[26], k[27]);\n    feis(r, 0, 1, 2, 3, k[28], k[29]);\n    feis(r, 2, 3, 0, 1, k[30], k[31]);\n\n    t = r[0] & k[32];\n    r[1] ^= (t << 1) | (t >>> (32 - 1));\n    r[2] ^= r[3] | k[35];\n    r[0] ^= r[1] | k[33];\n    t = r[2] & k[34];\n    r[3] ^= (t << 1) | (t >>> (32 - 1));\n\n    feis(r, 0, 1, 2, 3, k[36], k[37]);\n    feis(r, 2, 3, 0, 1, k[38], k[39]);\n    feis(r, 0, 1, 2, 3, k[40], k[41]);\n    feis(r, 2, 3, 0, 1, k[42], k[43]);\n    feis(r, 0, 1, 2, 3, k[44], k[45]);\n    feis(r, 2, 3, 0, 1, k[46], k[47]);\n\n    xor4(r, 2, 3, 0, 1, k, 48, 49, 50, 51);\n\n    writeU32(output, r[2], opos + 0);\n    writeU32(output, r[3], opos + 4);\n    writeU32(output, r[0], opos + 8);\n    writeU32(output, r[1], opos + 12);\n  }\n\n  decrypt(output, opos, input, ipos) {\n    const r = this.block;\n    const k = this.key;\n\n    r[0] = readU32(input, ipos + 0);\n    r[1] = readU32(input, ipos + 4);\n    r[2] = readU32(input, ipos + 8);\n    r[3] = readU32(input, ipos + 12);\n\n    xor4(r, 3, 2, 1, 0, k, 51, 50, 49, 48);\n\n    feis(r, 0, 1, 2, 3, k[46], k[47]);\n    feis(r, 2, 3, 0, 1, k[44], k[45]);\n    feis(r, 0, 1, 2, 3, k[42], k[43]);\n    feis(r, 2, 3, 0, 1, k[40], k[41]);\n    feis(r, 0, 1, 2, 3, k[38], k[39]);\n    feis(r, 2, 3, 0, 1, k[36], k[37]);\n\n    let t = r[0] & k[34];\n    r[1] ^= (t << 1) | (t >>> (32 - 1));\n    r[2] ^= r[3] | k[33];\n    r[0] ^= r[1] | k[35];\n    t = r[2] & k[32];\n    r[3] ^= (t << 1) | (t >>> (32 - 1));\n\n    feis(r, 0, 1, 2, 3, k[30], k[31]);\n    feis(r, 2, 3, 0, 1, k[28], k[29]);\n    feis(r, 0, 1, 2, 3, k[26], k[27]);\n    feis(r, 2, 3, 0, 1, k[24], k[25]);\n    feis(r, 0, 1, 2, 3, k[22], k[23]);\n    feis(r, 2, 3, 0, 1, k[20], k[21]);\n\n    t = r[0] & k[18];\n    r[1] ^= (t << 1) | (t >>> (32 - 1));\n    r[2] ^= r[3] | k[17];\n    r[0] ^= r[1] | k[19];\n    t = r[2] & k[16];\n    r[3] ^= (t << 1) | (t >>> (32 - 1));\n\n    feis(r, 0, 1, 2, 3, k[14], k[15]);\n    feis(r, 2, 3, 0, 1, k[12], k[13]);\n    feis(r, 0, 1, 2, 3, k[10], k[11]);\n    feis(r, 2, 3, 0, 1, k[8], k[9]);\n    feis(r, 0, 1, 2, 3, k[6], k[7]);\n    feis(r, 2, 3, 0, 1, k[4], k[5]);\n\n    xor4(r, 1, 0, 3, 2, k, 3, 2, 1, 0);\n\n    writeU32(output, r[2], opos + 0);\n    writeU32(output, r[3], opos + 4);\n    writeU32(output, r[0], opos + 8);\n    writeU32(output, r[1], opos + 12);\n\n    return this;\n  }\n\n  destroy() {\n    for (let i = 0; i < 52; i++)\n      this.key[i] = 0;\n\n    for (let i = 0; i < 4; i++)\n      this.block[i] = 0;\n\n    return this;\n  }\n}\n\n/**\n * Camellia256\n */\n\nclass Camellia256 {\n  constructor() {\n    this.key = new Uint32Array(68);\n    this.block = new Uint32Array(4);\n  }\n\n  get blockSize() {\n    return 16;\n  }\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n    assert(key.length === 24 || key.length === 32);\n    this.keySchedule(key);\n    return this;\n  }\n\n  keySchedule(key) {\n    const s = this.block;\n    const k = this.key;\n\n    k[0] = readU32(key, 0);\n    k[1] = readU32(key, 4);\n    k[2] = readU32(key, 8);\n    k[3] = readU32(key, 12);\n\n    k[8] = readU32(key, 16);\n    k[9] = readU32(key, 20);\n\n    if (key.length === 24) {\n      k[10] = ~k[8];\n      k[11] = ~k[9];\n    } else {\n      k[10] = readU32(key, 24);\n      k[11] = readU32(key, 28);\n    }\n\n    s[0] = k[8] ^ k[0];\n    s[1] = k[9] ^ k[1];\n    s[2] = k[10] ^ k[2];\n    s[3] = k[11] ^ k[3];\n\n    feis(s, 0, 1, 2, 3, SIGMA[0], SIGMA[1]);\n    feis(s, 2, 3, 0, 1, SIGMA[2], SIGMA[3]);\n\n    xor4(s, 0, 1, 2, 3, k, 0, 1, 2, 3);\n    feis(s, 0, 1, 2, 3, SIGMA[4], SIGMA[5]);\n    feis(s, 2, 3, 0, 1, SIGMA[6], SIGMA[7]);\n\n    set4(k, 12, 13, 14, 15, s, 0, 1, 2, 3);\n\n    xor4(s, 0, 1, 2, 3, k, 8, 9, 10, 11);\n    feis(s, 0, 1, 2, 3, SIGMA[8], SIGMA[9]);\n    feis(s, 2, 3, 0, 1, SIGMA[10], SIGMA[11]);\n\n    set4(k, 4, 5, 6, 7, s, 0, 1, 2, 3);\n    rotl(s, 0, 1, 2, 3, 30); // KB << 30\n    set4(k, 20, 21, 22, 23, s, 0, 1, 2, 3);\n    rotl(s, 0, 1, 2, 3, 30); // KB << 60\n    set4(k, 40, 41, 42, 43, s, 0, 1, 2, 3);\n    rotl(s, 1, 2, 3, 0, 19); // KB << 111\n    set4(k, 64, 65, 66, 67, s, 1, 2, 3, 0);\n\n    set4(s, 0, 1, 2, 3, k, 8, 9, 10, 11);\n    rotl(s, 0, 1, 2, 3, 15); // KR << 15\n    set4(k, 8, 9, 10, 11, s, 0, 1, 2, 3);\n    rotl(s, 0, 1, 2, 3, 15); // KR << 30\n    set4(k, 16, 17, 18, 19, s, 0, 1, 2, 3);\n    rotl(s, 0, 1, 2, 3, 30); // KR << 60\n    set4(k, 36, 37, 38, 39, s, 0, 1, 2, 3);\n    rotl(s, 1, 2, 3, 0, 2); // KR << 94\n    set4(k, 52, 53, 54, 55, s, 1, 2, 3, 0);\n\n    set4(s, 0, 1, 2, 3, k, 12, 13, 14, 15);\n    rotl(s, 0, 1, 2, 3, 15); // KA << 15\n    set4(k, 12, 13, 14, 15, s, 0, 1, 2, 3);\n    rotl(s, 0, 1, 2, 3, 30); // KA << 45\n    set4(k, 28, 29, 30, 31, s, 0, 1, 2, 3);\n    // KA << 77\n    set4(k, 48, 49, 50, 51, s, 1, 2, 3, 0);\n    rotl(s, 1, 2, 3, 0, 17); // KA << 94\n    set4(k, 56, 57, 58, 59, s, 1, 2, 3, 0);\n\n    set4(s, 0, 1, 2, 3, k, 0, 1, 2, 3);\n    rotl(s, 1, 2, 3, 0, 13); // KL << 45\n    set4(k, 24, 25, 26, 27, s, 1, 2, 3, 0);\n    rotl(s, 1, 2, 3, 0, 15); // KL << 60\n    set4(k, 32, 33, 34, 35, s, 1, 2, 3, 0);\n    rotl(s, 1, 2, 3, 0, 17); // KL << 77\n    set4(k, 44, 45, 46, 47, s, 1, 2, 3, 0);\n    rotl(s, 2, 3, 0, 1, 2); // KL << 111\n    set4(k, 60, 61, 62, 63, s, 2, 3, 0, 1);\n\n    return this;\n  }\n\n  encrypt(output, opos, input, ipos) {\n    const r = this.block;\n    const k = this.key;\n\n    r[0] = readU32(input, ipos + 0);\n    r[1] = readU32(input, ipos + 4);\n    r[2] = readU32(input, ipos + 8);\n    r[3] = readU32(input, ipos + 12);\n\n    xor4(r, 0, 1, 2, 3, k, 0, 1, 2, 3);\n\n    feis(r, 0, 1, 2, 3, k[4], k[5]);\n    feis(r, 2, 3, 0, 1, k[6], k[7]);\n    feis(r, 0, 1, 2, 3, k[8], k[9]);\n    feis(r, 2, 3, 0, 1, k[10], k[11]);\n    feis(r, 0, 1, 2, 3, k[12], k[13]);\n    feis(r, 2, 3, 0, 1, k[14], k[15]);\n\n    let t = r[0] & k[16];\n    r[1] ^= (t << 1) | (t >>> (32 - 1));\n    r[2] ^= r[3] | k[19];\n    r[0] ^= r[1] | k[17];\n    t = r[2] & k[18];\n    r[3] ^= (t << 1) | (t >>> (32 - 1));\n\n    feis(r, 0, 1, 2, 3, k[20], k[21]);\n    feis(r, 2, 3, 0, 1, k[22], k[23]);\n    feis(r, 0, 1, 2, 3, k[24], k[25]);\n    feis(r, 2, 3, 0, 1, k[26], k[27]);\n    feis(r, 0, 1, 2, 3, k[28], k[29]);\n    feis(r, 2, 3, 0, 1, k[30], k[31]);\n\n    t = r[0] & k[32];\n    r[1] ^= (t << 1) | (t >>> (32 - 1));\n    r[2] ^= r[3] | k[35];\n    r[0] ^= r[1] | k[33];\n    t = r[2] & k[34];\n    r[3] ^= (t << 1) | (t >>> (32 - 1));\n\n    feis(r, 0, 1, 2, 3, k[36], k[37]);\n    feis(r, 2, 3, 0, 1, k[38], k[39]);\n    feis(r, 0, 1, 2, 3, k[40], k[41]);\n    feis(r, 2, 3, 0, 1, k[42], k[43]);\n    feis(r, 0, 1, 2, 3, k[44], k[45]);\n    feis(r, 2, 3, 0, 1, k[46], k[47]);\n\n    t = r[0] & k[48];\n    r[1] ^= (t << 1) | (t >>> (32 - 1));\n    r[2] ^= r[3] | k[51];\n    r[0] ^= r[1] | k[49];\n    t = r[2] & k[50];\n    r[3] ^= (t << 1) | (t >>> (32 - 1));\n\n    feis(r, 0, 1, 2, 3, k[52], k[53]);\n    feis(r, 2, 3, 0, 1, k[54], k[55]);\n    feis(r, 0, 1, 2, 3, k[56], k[57]);\n    feis(r, 2, 3, 0, 1, k[58], k[59]);\n    feis(r, 0, 1, 2, 3, k[60], k[61]);\n    feis(r, 2, 3, 0, 1, k[62], k[63]);\n\n    xor4(r, 2, 3, 0, 1, k, 64, 65, 66, 67);\n\n    writeU32(output, r[2], opos + 0);\n    writeU32(output, r[3], opos + 4);\n    writeU32(output, r[0], opos + 8);\n    writeU32(output, r[1], opos + 12);\n\n    return this;\n  }\n\n  decrypt(output, opos, input, ipos) {\n    const r = this.block;\n    const k = this.key;\n\n    r[0] = readU32(input, ipos + 0);\n    r[1] = readU32(input, ipos + 4);\n    r[2] = readU32(input, ipos + 8);\n    r[3] = readU32(input, ipos + 12);\n\n    xor4(r, 3, 2, 1, 0, k, 67, 66, 65, 64);\n\n    feis(r, 0, 1, 2, 3, k[62], k[63]);\n    feis(r, 2, 3, 0, 1, k[60], k[61]);\n    feis(r, 0, 1, 2, 3, k[58], k[59]);\n    feis(r, 2, 3, 0, 1, k[56], k[57]);\n    feis(r, 0, 1, 2, 3, k[54], k[55]);\n    feis(r, 2, 3, 0, 1, k[52], k[53]);\n\n    let t = r[0] & k[50];\n    r[1] ^= (t << 1) | (t >>> (32 - 1));\n    r[2] ^= r[3] | k[49];\n    r[0] ^= r[1] | k[51];\n    t = r[2] & k[48];\n    r[3] ^= (t << 1) | (t >>> (32 - 1));\n\n    feis(r, 0, 1, 2, 3, k[46], k[47]);\n    feis(r, 2, 3, 0, 1, k[44], k[45]);\n    feis(r, 0, 1, 2, 3, k[42], k[43]);\n    feis(r, 2, 3, 0, 1, k[40], k[41]);\n    feis(r, 0, 1, 2, 3, k[38], k[39]);\n    feis(r, 2, 3, 0, 1, k[36], k[37]);\n\n    t = r[0] & k[34];\n    r[1] ^= (t << 1) | (t >>> (32 - 1));\n    r[2] ^= r[3] | k[33];\n    r[0] ^= r[1] | k[35];\n    t = r[2] & k[32];\n    r[3] ^= (t << 1) | (t >>> (32 - 1));\n\n    feis(r, 0, 1, 2, 3, k[30], k[31]);\n    feis(r, 2, 3, 0, 1, k[28], k[29]);\n    feis(r, 0, 1, 2, 3, k[26], k[27]);\n    feis(r, 2, 3, 0, 1, k[24], k[25]);\n    feis(r, 0, 1, 2, 3, k[22], k[23]);\n    feis(r, 2, 3, 0, 1, k[20], k[21]);\n\n    t = r[0] & k[18];\n    r[1] ^= (t << 1) | (t >>> (32 - 1));\n    r[2] ^= r[3] | k[17];\n    r[0] ^= r[1] | k[19];\n    t = r[2] & k[16];\n    r[3] ^= (t << 1) | (t >>> (32 - 1));\n\n    feis(r, 0, 1, 2, 3, k[14], k[15]);\n    feis(r, 2, 3, 0, 1, k[12], k[13]);\n    feis(r, 0, 1, 2, 3, k[10], k[11]);\n    feis(r, 2, 3, 0, 1, k[8], k[9]);\n    feis(r, 0, 1, 2, 3, k[6], k[7]);\n    feis(r, 2, 3, 0, 1, k[4], k[5]);\n\n    xor4(r, 1, 0, 3, 2, k, 3, 2, 1, 0);\n\n    writeU32(output, r[2], opos + 0);\n    writeU32(output, r[3], opos + 4);\n    writeU32(output, r[0], opos + 8);\n    writeU32(output, r[1], opos + 12);\n\n    return this;\n  }\n\n  destroy() {\n    for (let i = 0; i < 68; i++)\n      this.key[i] = 0;\n\n    for (let i = 0; i < 4; i++)\n      this.block[i] = 0;\n\n    return this;\n  }\n}\n\n/**\n * Camellia\n */\n\nclass Camellia {\n  constructor(bits) {\n    assert((bits >>> 0) === bits);\n\n    this.bits = bits;\n    this.ctx = null;\n\n    switch (bits) {\n      case 128:\n        this.ctx = new Camellia128();\n        break;\n      case 192:\n      case 256:\n        this.ctx = new Camellia256();\n        break;\n      default:\n        throw new Error('Invalid key size.');\n    }\n  }\n\n  get blockSize() {\n    return this.ctx.blockSize;\n  }\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n    assert(key.length === (this.bits >>> 3));\n    this.ctx.init(key);\n    return this;\n  }\n\n  encrypt(output, opos, input, ipos) {\n    this.ctx.encrypt(output, opos, input, ipos);\n    return this;\n  }\n\n  decrypt(output, opos, input, ipos) {\n    this.ctx.decrypt(output, opos, input, ipos);\n    return this;\n  }\n\n  destroy() {\n    this.ctx.destroy();\n    return this;\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction feis(r, i0, i1, i2, i3, k0, k1) {\n  let t;\n\n  k0 ^= r[i0];\n  k1 ^= r[i1];\n\n  t = S4[(k0 >>>  0) & 0xff]\n    ^ S3[(k0 >>>  8) & 0xff]\n    ^ S2[(k0 >>> 16) & 0xff]\n    ^ S1[(k0 >>> 24) & 0xff];\n\n  r[i3] ^= (t >>> 8) | (t << (32 - 8));\n\n  t ^= S1[(k1 >>>  0) & 0xff]\n     ^ S4[(k1 >>>  8) & 0xff]\n     ^ S3[(k1 >>> 16) & 0xff]\n     ^ S2[(k1 >>> 24) & 0xff];\n\n  r[i2] ^= t;\n  r[i3] ^= t;\n}\n\nfunction rotl(r, i0, i1, i2, i3, n) {\n  const t = r[i0] >>> (32 - n);\n\n  r[i0] = (r[i0] << n) | (r[i1] >>> (32 - n));\n  r[i1] = (r[i1] << n) | (r[i2] >>> (32 - n));\n  r[i2] = (r[i2] << n) | (r[i3] >>> (32 - n));\n  r[i3] = (r[i3] << n) | t;\n}\n\nfunction set2(x, x0, x1, y, y0, y1) {\n  x[x0] = y[y0];\n  x[x1] = y[y1];\n}\n\nfunction set4(x, x0, x1, x2, x3, y, y0, y1, y2, y3) {\n  x[x0] = y[y0];\n  x[x1] = y[y1];\n  x[x2] = y[y2];\n  x[x3] = y[y3];\n}\n\nfunction xor4(x, x0, x1, x2, x3, y, y0, y1, y2, y3) {\n  x[x0] ^= y[y0];\n  x[x1] ^= y[y1];\n  x[x2] ^= y[y2];\n  x[x3] ^= y[y3];\n}\n\nfunction readU32(data, pos) {\n  return (data[pos++] * 0x1000000\n        + data[pos++] * 0x10000\n        + data[pos++] * 0x100\n        + data[pos]);\n}\n\nfunction writeU32(data, value, pos) {\n  data[pos++] = value >>> 24;\n  data[pos++] = value >>> 16;\n  data[pos++] = value >>> 8;\n  data[pos++] = value >>> 0;\n  return pos;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Camellia;\n","/*!\n * cast5.js - CAST5 for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009, The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/CAST-128\n *   https://tools.ietf.org/html/rfc2144\n *   https://github.com/golang/crypto/blob/master/cast5/cast5.go\n */\n\n'use strict';\n\nconst assert = require('../../internal/assert');\n\n/*\n * Constants\n */\n\nconst S = [\n  new Uint32Array([\n    0x30fb40d4, 0x9fa0ff0b, 0x6beccd2f, 0x3f258c7a,\n    0x1e213f2f, 0x9c004dd3, 0x6003e540, 0xcf9fc949,\n    0xbfd4af27, 0x88bbbdb5, 0xe2034090, 0x98d09675,\n    0x6e63a0e0, 0x15c361d2, 0xc2e7661d, 0x22d4ff8e,\n    0x28683b6f, 0xc07fd059, 0xff2379c8, 0x775f50e2,\n    0x43c340d3, 0xdf2f8656, 0x887ca41a, 0xa2d2bd2d,\n    0xa1c9e0d6, 0x346c4819, 0x61b76d87, 0x22540f2f,\n    0x2abe32e1, 0xaa54166b, 0x22568e3a, 0xa2d341d0,\n    0x66db40c8, 0xa784392f, 0x004dff2f, 0x2db9d2de,\n    0x97943fac, 0x4a97c1d8, 0x527644b7, 0xb5f437a7,\n    0xb82cbaef, 0xd751d159, 0x6ff7f0ed, 0x5a097a1f,\n    0x827b68d0, 0x90ecf52e, 0x22b0c054, 0xbc8e5935,\n    0x4b6d2f7f, 0x50bb64a2, 0xd2664910, 0xbee5812d,\n    0xb7332290, 0xe93b159f, 0xb48ee411, 0x4bff345d,\n    0xfd45c240, 0xad31973f, 0xc4f6d02e, 0x55fc8165,\n    0xd5b1caad, 0xa1ac2dae, 0xa2d4b76d, 0xc19b0c50,\n    0x882240f2, 0x0c6e4f38, 0xa4e4bfd7, 0x4f5ba272,\n    0x564c1d2f, 0xc59c5319, 0xb949e354, 0xb04669fe,\n    0xb1b6ab8a, 0xc71358dd, 0x6385c545, 0x110f935d,\n    0x57538ad5, 0x6a390493, 0xe63d37e0, 0x2a54f6b3,\n    0x3a787d5f, 0x6276a0b5, 0x19a6fcdf, 0x7a42206a,\n    0x29f9d4d5, 0xf61b1891, 0xbb72275e, 0xaa508167,\n    0x38901091, 0xc6b505eb, 0x84c7cb8c, 0x2ad75a0f,\n    0x874a1427, 0xa2d1936b, 0x2ad286af, 0xaa56d291,\n    0xd7894360, 0x425c750d, 0x93b39e26, 0x187184c9,\n    0x6c00b32d, 0x73e2bb14, 0xa0bebc3c, 0x54623779,\n    0x64459eab, 0x3f328b82, 0x7718cf82, 0x59a2cea6,\n    0x04ee002e, 0x89fe78e6, 0x3fab0950, 0x325ff6c2,\n    0x81383f05, 0x6963c5c8, 0x76cb5ad6, 0xd49974c9,\n    0xca180dcf, 0x380782d5, 0xc7fa5cf6, 0x8ac31511,\n    0x35e79e13, 0x47da91d0, 0xf40f9086, 0xa7e2419e,\n    0x31366241, 0x051ef495, 0xaa573b04, 0x4a805d8d,\n    0x548300d0, 0x00322a3c, 0xbf64cddf, 0xba57a68e,\n    0x75c6372b, 0x50afd341, 0xa7c13275, 0x915a0bf5,\n    0x6b54bfab, 0x2b0b1426, 0xab4cc9d7, 0x449ccd82,\n    0xf7fbf265, 0xab85c5f3, 0x1b55db94, 0xaad4e324,\n    0xcfa4bd3f, 0x2deaa3e2, 0x9e204d02, 0xc8bd25ac,\n    0xeadf55b3, 0xd5bd9e98, 0xe31231b2, 0x2ad5ad6c,\n    0x954329de, 0xadbe4528, 0xd8710f69, 0xaa51c90f,\n    0xaa786bf6, 0x22513f1e, 0xaa51a79b, 0x2ad344cc,\n    0x7b5a41f0, 0xd37cfbad, 0x1b069505, 0x41ece491,\n    0xb4c332e6, 0x032268d4, 0xc9600acc, 0xce387e6d,\n    0xbf6bb16c, 0x6a70fb78, 0x0d03d9c9, 0xd4df39de,\n    0xe01063da, 0x4736f464, 0x5ad328d8, 0xb347cc96,\n    0x75bb0fc3, 0x98511bfb, 0x4ffbcc35, 0xb58bcf6a,\n    0xe11f0abc, 0xbfc5fe4a, 0xa70aec10, 0xac39570a,\n    0x3f04442f, 0x6188b153, 0xe0397a2e, 0x5727cb79,\n    0x9ceb418f, 0x1cacd68d, 0x2ad37c96, 0x0175cb9d,\n    0xc69dff09, 0xc75b65f0, 0xd9db40d8, 0xec0e7779,\n    0x4744ead4, 0xb11c3274, 0xdd24cb9e, 0x7e1c54bd,\n    0xf01144f9, 0xd2240eb1, 0x9675b3fd, 0xa3ac3755,\n    0xd47c27af, 0x51c85f4d, 0x56907596, 0xa5bb15e6,\n    0x580304f0, 0xca042cf1, 0x011a37ea, 0x8dbfaadb,\n    0x35ba3e4a, 0x3526ffa0, 0xc37b4d09, 0xbc306ed9,\n    0x98a52666, 0x5648f725, 0xff5e569d, 0x0ced63d0,\n    0x7c63b2cf, 0x700b45e1, 0xd5ea50f1, 0x85a92872,\n    0xaf1fbda7, 0xd4234870, 0xa7870bf3, 0x2d3b4d79,\n    0x42e04198, 0x0cd0ede7, 0x26470db8, 0xf881814c,\n    0x474d6ad7, 0x7c0c5e5c, 0xd1231959, 0x381b7298,\n    0xf5d2f4db, 0xab838653, 0x6e2f1e23, 0x83719c9e,\n    0xbd91e046, 0x9a56456e, 0xdc39200c, 0x20c8c571,\n    0x962bda1c, 0xe1e696ff, 0xb141ab08, 0x7cca89b9,\n    0x1a69e783, 0x02cc4843, 0xa2f7c579, 0x429ef47d,\n    0x427b169c, 0x5ac9f049, 0xdd8f0f00, 0x5c8165bf\n  ]),\n  new Uint32Array([\n    0x1f201094, 0xef0ba75b, 0x69e3cf7e, 0x393f4380,\n    0xfe61cf7a, 0xeec5207a, 0x55889c94, 0x72fc0651,\n    0xada7ef79, 0x4e1d7235, 0xd55a63ce, 0xde0436ba,\n    0x99c430ef, 0x5f0c0794, 0x18dcdb7d, 0xa1d6eff3,\n    0xa0b52f7b, 0x59e83605, 0xee15b094, 0xe9ffd909,\n    0xdc440086, 0xef944459, 0xba83ccb3, 0xe0c3cdfb,\n    0xd1da4181, 0x3b092ab1, 0xf997f1c1, 0xa5e6cf7b,\n    0x01420ddb, 0xe4e7ef5b, 0x25a1ff41, 0xe180f806,\n    0x1fc41080, 0x179bee7a, 0xd37ac6a9, 0xfe5830a4,\n    0x98de8b7f, 0x77e83f4e, 0x79929269, 0x24fa9f7b,\n    0xe113c85b, 0xacc40083, 0xd7503525, 0xf7ea615f,\n    0x62143154, 0x0d554b63, 0x5d681121, 0xc866c359,\n    0x3d63cf73, 0xcee234c0, 0xd4d87e87, 0x5c672b21,\n    0x071f6181, 0x39f7627f, 0x361e3084, 0xe4eb573b,\n    0x602f64a4, 0xd63acd9c, 0x1bbc4635, 0x9e81032d,\n    0x2701f50c, 0x99847ab4, 0xa0e3df79, 0xba6cf38c,\n    0x10843094, 0x2537a95e, 0xf46f6ffe, 0xa1ff3b1f,\n    0x208cfb6a, 0x8f458c74, 0xd9e0a227, 0x4ec73a34,\n    0xfc884f69, 0x3e4de8df, 0xef0e0088, 0x3559648d,\n    0x8a45388c, 0x1d804366, 0x721d9bfd, 0xa58684bb,\n    0xe8256333, 0x844e8212, 0x128d8098, 0xfed33fb4,\n    0xce280ae1, 0x27e19ba5, 0xd5a6c252, 0xe49754bd,\n    0xc5d655dd, 0xeb667064, 0x77840b4d, 0xa1b6a801,\n    0x84db26a9, 0xe0b56714, 0x21f043b7, 0xe5d05860,\n    0x54f03084, 0x066ff472, 0xa31aa153, 0xdadc4755,\n    0xb5625dbf, 0x68561be6, 0x83ca6b94, 0x2d6ed23b,\n    0xeccf01db, 0xa6d3d0ba, 0xb6803d5c, 0xaf77a709,\n    0x33b4a34c, 0x397bc8d6, 0x5ee22b95, 0x5f0e5304,\n    0x81ed6f61, 0x20e74364, 0xb45e1378, 0xde18639b,\n    0x881ca122, 0xb96726d1, 0x8049a7e8, 0x22b7da7b,\n    0x5e552d25, 0x5272d237, 0x79d2951c, 0xc60d894c,\n    0x488cb402, 0x1ba4fe5b, 0xa4b09f6b, 0x1ca815cf,\n    0xa20c3005, 0x8871df63, 0xb9de2fcb, 0x0cc6c9e9,\n    0x0beeff53, 0xe3214517, 0xb4542835, 0x9f63293c,\n    0xee41e729, 0x6e1d2d7c, 0x50045286, 0x1e6685f3,\n    0xf33401c6, 0x30a22c95, 0x31a70850, 0x60930f13,\n    0x73f98417, 0xa1269859, 0xec645c44, 0x52c877a9,\n    0xcdff33a6, 0xa02b1741, 0x7cbad9a2, 0x2180036f,\n    0x50d99c08, 0xcb3f4861, 0xc26bd765, 0x64a3f6ab,\n    0x80342676, 0x25a75e7b, 0xe4e6d1fc, 0x20c710e6,\n    0xcdf0b680, 0x17844d3b, 0x31eef84d, 0x7e0824e4,\n    0x2ccb49eb, 0x846a3bae, 0x8ff77888, 0xee5d60f6,\n    0x7af75673, 0x2fdd5cdb, 0xa11631c1, 0x30f66f43,\n    0xb3faec54, 0x157fd7fa, 0xef8579cc, 0xd152de58,\n    0xdb2ffd5e, 0x8f32ce19, 0x306af97a, 0x02f03ef8,\n    0x99319ad5, 0xc242fa0f, 0xa7e3ebb0, 0xc68e4906,\n    0xb8da230c, 0x80823028, 0xdcdef3c8, 0xd35fb171,\n    0x088a1bc8, 0xbec0c560, 0x61a3c9e8, 0xbca8f54d,\n    0xc72feffa, 0x22822e99, 0x82c570b4, 0xd8d94e89,\n    0x8b1c34bc, 0x301e16e6, 0x273be979, 0xb0ffeaa6,\n    0x61d9b8c6, 0x00b24869, 0xb7ffce3f, 0x08dc283b,\n    0x43daf65a, 0xf7e19798, 0x7619b72f, 0x8f1c9ba4,\n    0xdc8637a0, 0x16a7d3b1, 0x9fc393b7, 0xa7136eeb,\n    0xc6bcc63e, 0x1a513742, 0xef6828bc, 0x520365d6,\n    0x2d6a77ab, 0x3527ed4b, 0x821fd216, 0x095c6e2e,\n    0xdb92f2fb, 0x5eea29cb, 0x145892f5, 0x91584f7f,\n    0x5483697b, 0x2667a8cc, 0x85196048, 0x8c4bacea,\n    0x833860d4, 0x0d23e0f9, 0x6c387e8a, 0x0ae6d249,\n    0xb284600c, 0xd835731d, 0xdcb1c647, 0xac4c56ea,\n    0x3ebd81b3, 0x230eabb0, 0x6438bc87, 0xf0b5b1fa,\n    0x8f5ea2b3, 0xfc184642, 0x0a036b7a, 0x4fb089bd,\n    0x649da589, 0xa345415e, 0x5c038323, 0x3e5d3bb9,\n    0x43d79572, 0x7e6dd07c, 0x06dfdf1e, 0x6c6cc4ef,\n    0x7160a539, 0x73bfbe70, 0x83877605, 0x4523ecf1\n  ]),\n  new Uint32Array([\n    0x8defc240, 0x25fa5d9f, 0xeb903dbf, 0xe810c907,\n    0x47607fff, 0x369fe44b, 0x8c1fc644, 0xaececa90,\n    0xbeb1f9bf, 0xeefbcaea, 0xe8cf1950, 0x51df07ae,\n    0x920e8806, 0xf0ad0548, 0xe13c8d83, 0x927010d5,\n    0x11107d9f, 0x07647db9, 0xb2e3e4d4, 0x3d4f285e,\n    0xb9afa820, 0xfade82e0, 0xa067268b, 0x8272792e,\n    0x553fb2c0, 0x489ae22b, 0xd4ef9794, 0x125e3fbc,\n    0x21fffcee, 0x825b1bfd, 0x9255c5ed, 0x1257a240,\n    0x4e1a8302, 0xbae07fff, 0x528246e7, 0x8e57140e,\n    0x3373f7bf, 0x8c9f8188, 0xa6fc4ee8, 0xc982b5a5,\n    0xa8c01db7, 0x579fc264, 0x67094f31, 0xf2bd3f5f,\n    0x40fff7c1, 0x1fb78dfc, 0x8e6bd2c1, 0x437be59b,\n    0x99b03dbf, 0xb5dbc64b, 0x638dc0e6, 0x55819d99,\n    0xa197c81c, 0x4a012d6e, 0xc5884a28, 0xccc36f71,\n    0xb843c213, 0x6c0743f1, 0x8309893c, 0x0feddd5f,\n    0x2f7fe850, 0xd7c07f7e, 0x02507fbf, 0x5afb9a04,\n    0xa747d2d0, 0x1651192e, 0xaf70bf3e, 0x58c31380,\n    0x5f98302e, 0x727cc3c4, 0x0a0fb402, 0x0f7fef82,\n    0x8c96fdad, 0x5d2c2aae, 0x8ee99a49, 0x50da88b8,\n    0x8427f4a0, 0x1eac5790, 0x796fb449, 0x8252dc15,\n    0xefbd7d9b, 0xa672597d, 0xada840d8, 0x45f54504,\n    0xfa5d7403, 0xe83ec305, 0x4f91751a, 0x925669c2,\n    0x23efe941, 0xa903f12e, 0x60270df2, 0x0276e4b6,\n    0x94fd6574, 0x927985b2, 0x8276dbcb, 0x02778176,\n    0xf8af918d, 0x4e48f79e, 0x8f616ddf, 0xe29d840e,\n    0x842f7d83, 0x340ce5c8, 0x96bbb682, 0x93b4b148,\n    0xef303cab, 0x984faf28, 0x779faf9b, 0x92dc560d,\n    0x224d1e20, 0x8437aa88, 0x7d29dc96, 0x2756d3dc,\n    0x8b907cee, 0xb51fd240, 0xe7c07ce3, 0xe566b4a1,\n    0xc3e9615e, 0x3cf8209d, 0x6094d1e3, 0xcd9ca341,\n    0x5c76460e, 0x00ea983b, 0xd4d67881, 0xfd47572c,\n    0xf76cedd9, 0xbda8229c, 0x127dadaa, 0x438a074e,\n    0x1f97c090, 0x081bdb8a, 0x93a07ebe, 0xb938ca15,\n    0x97b03cff, 0x3dc2c0f8, 0x8d1ab2ec, 0x64380e51,\n    0x68cc7bfb, 0xd90f2788, 0x12490181, 0x5de5ffd4,\n    0xdd7ef86a, 0x76a2e214, 0xb9a40368, 0x925d958f,\n    0x4b39fffa, 0xba39aee9, 0xa4ffd30b, 0xfaf7933b,\n    0x6d498623, 0x193cbcfa, 0x27627545, 0x825cf47a,\n    0x61bd8ba0, 0xd11e42d1, 0xcead04f4, 0x127ea392,\n    0x10428db7, 0x8272a972, 0x9270c4a8, 0x127de50b,\n    0x285ba1c8, 0x3c62f44f, 0x35c0eaa5, 0xe805d231,\n    0x428929fb, 0xb4fcdf82, 0x4fb66a53, 0x0e7dc15b,\n    0x1f081fab, 0x108618ae, 0xfcfd086d, 0xf9ff2889,\n    0x694bcc11, 0x236a5cae, 0x12deca4d, 0x2c3f8cc5,\n    0xd2d02dfe, 0xf8ef5896, 0xe4cf52da, 0x95155b67,\n    0x494a488c, 0xb9b6a80c, 0x5c8f82bc, 0x89d36b45,\n    0x3a609437, 0xec00c9a9, 0x44715253, 0x0a874b49,\n    0xd773bc40, 0x7c34671c, 0x02717ef6, 0x4feb5536,\n    0xa2d02fff, 0xd2bf60c4, 0xd43f03c0, 0x50b4ef6d,\n    0x07478cd1, 0x006e1888, 0xa2e53f55, 0xb9e6d4bc,\n    0xa2048016, 0x97573833, 0xd7207d67, 0xde0f8f3d,\n    0x72f87b33, 0xabcc4f33, 0x7688c55d, 0x7b00a6b0,\n    0x947b0001, 0x570075d2, 0xf9bb88f8, 0x8942019e,\n    0x4264a5ff, 0x856302e0, 0x72dbd92b, 0xee971b69,\n    0x6ea22fde, 0x5f08ae2b, 0xaf7a616d, 0xe5c98767,\n    0xcf1febd2, 0x61efc8c2, 0xf1ac2571, 0xcc8239c2,\n    0x67214cb8, 0xb1e583d1, 0xb7dc3e62, 0x7f10bdce,\n    0xf90a5c38, 0x0ff0443d, 0x606e6dc6, 0x60543a49,\n    0x5727c148, 0x2be98a1d, 0x8ab41738, 0x20e1be24,\n    0xaf96da0f, 0x68458425, 0x99833be5, 0x600d457d,\n    0x282f9350, 0x8334b362, 0xd91d1120, 0x2b6d8da0,\n    0x642b1e31, 0x9c305a00, 0x52bce688, 0x1b03588a,\n    0xf7baefd5, 0x4142ed9c, 0xa4315c11, 0x83323ec5,\n    0xdfef4636, 0xa133c501, 0xe9d3531c, 0xee353783\n  ]),\n  new Uint32Array([\n    0x9db30420, 0x1fb6e9de, 0xa7be7bef, 0xd273a298,\n    0x4a4f7bdb, 0x64ad8c57, 0x85510443, 0xfa020ed1,\n    0x7e287aff, 0xe60fb663, 0x095f35a1, 0x79ebf120,\n    0xfd059d43, 0x6497b7b1, 0xf3641f63, 0x241e4adf,\n    0x28147f5f, 0x4fa2b8cd, 0xc9430040, 0x0cc32220,\n    0xfdd30b30, 0xc0a5374f, 0x1d2d00d9, 0x24147b15,\n    0xee4d111a, 0x0fca5167, 0x71ff904c, 0x2d195ffe,\n    0x1a05645f, 0x0c13fefe, 0x081b08ca, 0x05170121,\n    0x80530100, 0xe83e5efe, 0xac9af4f8, 0x7fe72701,\n    0xd2b8ee5f, 0x06df4261, 0xbb9e9b8a, 0x7293ea25,\n    0xce84ffdf, 0xf5718801, 0x3dd64b04, 0xa26f263b,\n    0x7ed48400, 0x547eebe6, 0x446d4ca0, 0x6cf3d6f5,\n    0x2649abdf, 0xaea0c7f5, 0x36338cc1, 0x503f7e93,\n    0xd3772061, 0x11b638e1, 0x72500e03, 0xf80eb2bb,\n    0xabe0502e, 0xec8d77de, 0x57971e81, 0xe14f6746,\n    0xc9335400, 0x6920318f, 0x081dbb99, 0xffc304a5,\n    0x4d351805, 0x7f3d5ce3, 0xa6c866c6, 0x5d5bcca9,\n    0xdaec6fea, 0x9f926f91, 0x9f46222f, 0x3991467d,\n    0xa5bf6d8e, 0x1143c44f, 0x43958302, 0xd0214eeb,\n    0x022083b8, 0x3fb6180c, 0x18f8931e, 0x281658e6,\n    0x26486e3e, 0x8bd78a70, 0x7477e4c1, 0xb506e07c,\n    0xf32d0a25, 0x79098b02, 0xe4eabb81, 0x28123b23,\n    0x69dead38, 0x1574ca16, 0xdf871b62, 0x211c40b7,\n    0xa51a9ef9, 0x0014377b, 0x041e8ac8, 0x09114003,\n    0xbd59e4d2, 0xe3d156d5, 0x4fe876d5, 0x2f91a340,\n    0x557be8de, 0x00eae4a7, 0x0ce5c2ec, 0x4db4bba6,\n    0xe756bdff, 0xdd3369ac, 0xec17b035, 0x06572327,\n    0x99afc8b0, 0x56c8c391, 0x6b65811c, 0x5e146119,\n    0x6e85cb75, 0xbe07c002, 0xc2325577, 0x893ff4ec,\n    0x5bbfc92d, 0xd0ec3b25, 0xb7801ab7, 0x8d6d3b24,\n    0x20c763ef, 0xc366a5fc, 0x9c382880, 0x0ace3205,\n    0xaac9548a, 0xeca1d7c7, 0x041afa32, 0x1d16625a,\n    0x6701902c, 0x9b757a54, 0x31d477f7, 0x9126b031,\n    0x36cc6fdb, 0xc70b8b46, 0xd9e66a48, 0x56e55a79,\n    0x026a4ceb, 0x52437eff, 0x2f8f76b4, 0x0df980a5,\n    0x8674cde3, 0xedda04eb, 0x17a9be04, 0x2c18f4df,\n    0xb7747f9d, 0xab2af7b4, 0xefc34d20, 0x2e096b7c,\n    0x1741a254, 0xe5b6a035, 0x213d42f6, 0x2c1c7c26,\n    0x61c2f50f, 0x6552daf9, 0xd2c231f8, 0x25130f69,\n    0xd8167fa2, 0x0418f2c8, 0x001a96a6, 0x0d1526ab,\n    0x63315c21, 0x5e0a72ec, 0x49bafefd, 0x187908d9,\n    0x8d0dbd86, 0x311170a7, 0x3e9b640c, 0xcc3e10d7,\n    0xd5cad3b6, 0x0caec388, 0xf73001e1, 0x6c728aff,\n    0x71eae2a1, 0x1f9af36e, 0xcfcbd12f, 0xc1de8417,\n    0xac07be6b, 0xcb44a1d8, 0x8b9b0f56, 0x013988c3,\n    0xb1c52fca, 0xb4be31cd, 0xd8782806, 0x12a3a4e2,\n    0x6f7de532, 0x58fd7eb6, 0xd01ee900, 0x24adffc2,\n    0xf4990fc5, 0x9711aac5, 0x001d7b95, 0x82e5e7d2,\n    0x109873f6, 0x00613096, 0xc32d9521, 0xada121ff,\n    0x29908415, 0x7fbb977f, 0xaf9eb3db, 0x29c9ed2a,\n    0x5ce2a465, 0xa730f32c, 0xd0aa3fe8, 0x8a5cc091,\n    0xd49e2ce7, 0x0ce454a9, 0xd60acd86, 0x015f1919,\n    0x77079103, 0xdea03af6, 0x78a8565e, 0xdee356df,\n    0x21f05cbe, 0x8b75e387, 0xb3c50651, 0xb8a5c3ef,\n    0xd8eeb6d2, 0xe523be77, 0xc2154529, 0x2f69efdf,\n    0xafe67afb, 0xf470c4b2, 0xf3e0eb5b, 0xd6cc9876,\n    0x39e4460c, 0x1fda8538, 0x1987832f, 0xca007367,\n    0xa99144f8, 0x296b299e, 0x492fc295, 0x9266beab,\n    0xb5676e69, 0x9bd3ddda, 0xdf7e052f, 0xdb25701c,\n    0x1b5e51ee, 0xf65324e6, 0x6afce36c, 0x0316cc04,\n    0x8644213e, 0xb7dc59d0, 0x7965291f, 0xccd6fd43,\n    0x41823979, 0x932bcdf6, 0xb657c34d, 0x4edfd282,\n    0x7ae5290c, 0x3cb9536b, 0x851e20fe, 0x9833557e,\n    0x13ecf0b0, 0xd3ffb372, 0x3f85c5c1, 0x0aef7ed2\n  ]),\n  new Uint32Array([\n    0x7ec90c04, 0x2c6e74b9, 0x9b0e66df, 0xa6337911,\n    0xb86a7fff, 0x1dd358f5, 0x44dd9d44, 0x1731167f,\n    0x08fbf1fa, 0xe7f511cc, 0xd2051b00, 0x735aba00,\n    0x2ab722d8, 0x386381cb, 0xacf6243a, 0x69befd7a,\n    0xe6a2e77f, 0xf0c720cd, 0xc4494816, 0xccf5c180,\n    0x38851640, 0x15b0a848, 0xe68b18cb, 0x4caadeff,\n    0x5f480a01, 0x0412b2aa, 0x259814fc, 0x41d0efe2,\n    0x4e40b48d, 0x248eb6fb, 0x8dba1cfe, 0x41a99b02,\n    0x1a550a04, 0xba8f65cb, 0x7251f4e7, 0x95a51725,\n    0xc106ecd7, 0x97a5980a, 0xc539b9aa, 0x4d79fe6a,\n    0xf2f3f763, 0x68af8040, 0xed0c9e56, 0x11b4958b,\n    0xe1eb5a88, 0x8709e6b0, 0xd7e07156, 0x4e29fea7,\n    0x6366e52d, 0x02d1c000, 0xc4ac8e05, 0x9377f571,\n    0x0c05372a, 0x578535f2, 0x2261be02, 0xd642a0c9,\n    0xdf13a280, 0x74b55bd2, 0x682199c0, 0xd421e5ec,\n    0x53fb3ce8, 0xc8adedb3, 0x28a87fc9, 0x3d959981,\n    0x5c1ff900, 0xfe38d399, 0x0c4eff0b, 0x062407ea,\n    0xaa2f4fb1, 0x4fb96976, 0x90c79505, 0xb0a8a774,\n    0xef55a1ff, 0xe59ca2c2, 0xa6b62d27, 0xe66a4263,\n    0xdf65001f, 0x0ec50966, 0xdfdd55bc, 0x29de0655,\n    0x911e739a, 0x17af8975, 0x32c7911c, 0x89f89468,\n    0x0d01e980, 0x524755f4, 0x03b63cc9, 0x0cc844b2,\n    0xbcf3f0aa, 0x87ac36e9, 0xe53a7426, 0x01b3d82b,\n    0x1a9e7449, 0x64ee2d7e, 0xcddbb1da, 0x01c94910,\n    0xb868bf80, 0x0d26f3fd, 0x9342ede7, 0x04a5c284,\n    0x636737b6, 0x50f5b616, 0xf24766e3, 0x8eca36c1,\n    0x136e05db, 0xfef18391, 0xfb887a37, 0xd6e7f7d4,\n    0xc7fb7dc9, 0x3063fcdf, 0xb6f589de, 0xec2941da,\n    0x26e46695, 0xb7566419, 0xf654efc5, 0xd08d58b7,\n    0x48925401, 0xc1bacb7f, 0xe5ff550f, 0xb6083049,\n    0x5bb5d0e8, 0x87d72e5a, 0xab6a6ee1, 0x223a66ce,\n    0xc62bf3cd, 0x9e0885f9, 0x68cb3e47, 0x086c010f,\n    0xa21de820, 0xd18b69de, 0xf3f65777, 0xfa02c3f6,\n    0x407edac3, 0xcbb3d550, 0x1793084d, 0xb0d70eba,\n    0x0ab378d5, 0xd951fb0c, 0xded7da56, 0x4124bbe4,\n    0x94ca0b56, 0x0f5755d1, 0xe0e1e56e, 0x6184b5be,\n    0x580a249f, 0x94f74bc0, 0xe327888e, 0x9f7b5561,\n    0xc3dc0280, 0x05687715, 0x646c6bd7, 0x44904db3,\n    0x66b4f0a3, 0xc0f1648a, 0x697ed5af, 0x49e92ff6,\n    0x309e374f, 0x2cb6356a, 0x85808573, 0x4991f840,\n    0x76f0ae02, 0x083be84d, 0x28421c9a, 0x44489406,\n    0x736e4cb8, 0xc1092910, 0x8bc95fc6, 0x7d869cf4,\n    0x134f616f, 0x2e77118d, 0xb31b2be1, 0xaa90b472,\n    0x3ca5d717, 0x7d161bba, 0x9cad9010, 0xaf462ba2,\n    0x9fe459d2, 0x45d34559, 0xd9f2da13, 0xdbc65487,\n    0xf3e4f94e, 0x176d486f, 0x097c13ea, 0x631da5c7,\n    0x445f7382, 0x175683f4, 0xcdc66a97, 0x70be0288,\n    0xb3cdcf72, 0x6e5dd2f3, 0x20936079, 0x459b80a5,\n    0xbe60e2db, 0xa9c23101, 0xeba5315c, 0x224e42f2,\n    0x1c5c1572, 0xf6721b2c, 0x1ad2fff3, 0x8c25404e,\n    0x324ed72f, 0x4067b7fd, 0x0523138e, 0x5ca3bc78,\n    0xdc0fd66e, 0x75922283, 0x784d6b17, 0x58ebb16e,\n    0x44094f85, 0x3f481d87, 0xfcfeae7b, 0x77b5ff76,\n    0x8c2302bf, 0xaaf47556, 0x5f46b02a, 0x2b092801,\n    0x3d38f5f7, 0x0ca81f36, 0x52af4a8a, 0x66d5e7c0,\n    0xdf3b0874, 0x95055110, 0x1b5ad7a8, 0xf61ed5ad,\n    0x6cf6e479, 0x20758184, 0xd0cefa65, 0x88f7be58,\n    0x4a046826, 0x0ff6f8f3, 0xa09c7f70, 0x5346aba0,\n    0x5ce96c28, 0xe176eda3, 0x6bac307f, 0x376829d2,\n    0x85360fa9, 0x17e3fe2a, 0x24b79767, 0xf5a96b20,\n    0xd6cd2595, 0x68ff1ebf, 0x7555442c, 0xf19f06be,\n    0xf9e0659a, 0xeeb9491d, 0x34010718, 0xbb30cab8,\n    0xe822fe15, 0x88570983, 0x750e6249, 0xda627e55,\n    0x5e76ffa8, 0xb1534546, 0x6d47de08, 0xefe9e7d4\n  ]),\n  new Uint32Array([\n    0xf6fa8f9d, 0x2cac6ce1, 0x4ca34867, 0xe2337f7c,\n    0x95db08e7, 0x016843b4, 0xeced5cbc, 0x325553ac,\n    0xbf9f0960, 0xdfa1e2ed, 0x83f0579d, 0x63ed86b9,\n    0x1ab6a6b8, 0xde5ebe39, 0xf38ff732, 0x8989b138,\n    0x33f14961, 0xc01937bd, 0xf506c6da, 0xe4625e7e,\n    0xa308ea99, 0x4e23e33c, 0x79cbd7cc, 0x48a14367,\n    0xa3149619, 0xfec94bd5, 0xa114174a, 0xeaa01866,\n    0xa084db2d, 0x09a8486f, 0xa888614a, 0x2900af98,\n    0x01665991, 0xe1992863, 0xc8f30c60, 0x2e78ef3c,\n    0xd0d51932, 0xcf0fec14, 0xf7ca07d2, 0xd0a82072,\n    0xfd41197e, 0x9305a6b0, 0xe86be3da, 0x74bed3cd,\n    0x372da53c, 0x4c7f4448, 0xdab5d440, 0x6dba0ec3,\n    0x083919a7, 0x9fbaeed9, 0x49dbcfb0, 0x4e670c53,\n    0x5c3d9c01, 0x64bdb941, 0x2c0e636a, 0xba7dd9cd,\n    0xea6f7388, 0xe70bc762, 0x35f29adb, 0x5c4cdd8d,\n    0xf0d48d8c, 0xb88153e2, 0x08a19866, 0x1ae2eac8,\n    0x284caf89, 0xaa928223, 0x9334be53, 0x3b3a21bf,\n    0x16434be3, 0x9aea3906, 0xefe8c36e, 0xf890cdd9,\n    0x80226dae, 0xc340a4a3, 0xdf7e9c09, 0xa694a807,\n    0x5b7c5ecc, 0x221db3a6, 0x9a69a02f, 0x68818a54,\n    0xceb2296f, 0x53c0843a, 0xfe893655, 0x25bfe68a,\n    0xb4628abc, 0xcf222ebf, 0x25ac6f48, 0xa9a99387,\n    0x53bddb65, 0xe76ffbe7, 0xe967fd78, 0x0ba93563,\n    0x8e342bc1, 0xe8a11be9, 0x4980740d, 0xc8087dfc,\n    0x8de4bf99, 0xa11101a0, 0x7fd37975, 0xda5a26c0,\n    0xe81f994f, 0x9528cd89, 0xfd339fed, 0xb87834bf,\n    0x5f04456d, 0x22258698, 0xc9c4c83b, 0x2dc156be,\n    0x4f628daa, 0x57f55ec5, 0xe2220abe, 0xd2916ebf,\n    0x4ec75b95, 0x24f2c3c0, 0x42d15d99, 0xcd0d7fa0,\n    0x7b6e27ff, 0xa8dc8af0, 0x7345c106, 0xf41e232f,\n    0x35162386, 0xe6ea8926, 0x3333b094, 0x157ec6f2,\n    0x372b74af, 0x692573e4, 0xe9a9d848, 0xf3160289,\n    0x3a62ef1d, 0xa787e238, 0xf3a5f676, 0x74364853,\n    0x20951063, 0x4576698d, 0xb6fad407, 0x592af950,\n    0x36f73523, 0x4cfb6e87, 0x7da4cec0, 0x6c152daa,\n    0xcb0396a8, 0xc50dfe5d, 0xfcd707ab, 0x0921c42f,\n    0x89dff0bb, 0x5fe2be78, 0x448f4f33, 0x754613c9,\n    0x2b05d08d, 0x48b9d585, 0xdc049441, 0xc8098f9b,\n    0x7dede786, 0xc39a3373, 0x42410005, 0x6a091751,\n    0x0ef3c8a6, 0x890072d6, 0x28207682, 0xa9a9f7be,\n    0xbf32679d, 0xd45b5b75, 0xb353fd00, 0xcbb0e358,\n    0x830f220a, 0x1f8fb214, 0xd372cf08, 0xcc3c4a13,\n    0x8cf63166, 0x061c87be, 0x88c98f88, 0x6062e397,\n    0x47cf8e7a, 0xb6c85283, 0x3cc2acfb, 0x3fc06976,\n    0x4e8f0252, 0x64d8314d, 0xda3870e3, 0x1e665459,\n    0xc10908f0, 0x513021a5, 0x6c5b68b7, 0x822f8aa0,\n    0x3007cd3e, 0x74719eef, 0xdc872681, 0x073340d4,\n    0x7e432fd9, 0x0c5ec241, 0x8809286c, 0xf592d891,\n    0x08a930f6, 0x957ef305, 0xb7fbffbd, 0xc266e96f,\n    0x6fe4ac98, 0xb173ecc0, 0xbc60b42a, 0x953498da,\n    0xfba1ae12, 0x2d4bd736, 0x0f25faab, 0xa4f3fceb,\n    0xe2969123, 0x257f0c3d, 0x9348af49, 0x361400bc,\n    0xe8816f4a, 0x3814f200, 0xa3f94043, 0x9c7a54c2,\n    0xbc704f57, 0xda41e7f9, 0xc25ad33a, 0x54f4a084,\n    0xb17f5505, 0x59357cbe, 0xedbd15c8, 0x7f97c5ab,\n    0xba5ac7b5, 0xb6f6deaf, 0x3a479c3a, 0x5302da25,\n    0x653d7e6a, 0x54268d49, 0x51a477ea, 0x5017d55b,\n    0xd7d25d88, 0x44136c76, 0x0404a8c8, 0xb8e5a121,\n    0xb81a928a, 0x60ed5869, 0x97c55b96, 0xeaec991b,\n    0x29935913, 0x01fdb7f1, 0x088e8dfa, 0x9ab6f6f5,\n    0x3b4cbf9f, 0x4a5de3ab, 0xe6051d35, 0xa0e1d855,\n    0xd36b4cf1, 0xf544edeb, 0xb0e93524, 0xbebb8fbd,\n    0xa2d762cf, 0x49c92f54, 0x38b5f331, 0x7128a454,\n    0x48392905, 0xa65b1db8, 0x851c97bd, 0xd675cf2f\n  ]),\n  new Uint32Array([\n    0x85e04019, 0x332bf567, 0x662dbfff, 0xcfc65693,\n    0x2a8d7f6f, 0xab9bc912, 0xde6008a1, 0x2028da1f,\n    0x0227bce7, 0x4d642916, 0x18fac300, 0x50f18b82,\n    0x2cb2cb11, 0xb232e75c, 0x4b3695f2, 0xb28707de,\n    0xa05fbcf6, 0xcd4181e9, 0xe150210c, 0xe24ef1bd,\n    0xb168c381, 0xfde4e789, 0x5c79b0d8, 0x1e8bfd43,\n    0x4d495001, 0x38be4341, 0x913cee1d, 0x92a79c3f,\n    0x089766be, 0xbaeeadf4, 0x1286becf, 0xb6eacb19,\n    0x2660c200, 0x7565bde4, 0x64241f7a, 0x8248dca9,\n    0xc3b3ad66, 0x28136086, 0x0bd8dfa8, 0x356d1cf2,\n    0x107789be, 0xb3b2e9ce, 0x0502aa8f, 0x0bc0351e,\n    0x166bf52a, 0xeb12ff82, 0xe3486911, 0xd34d7516,\n    0x4e7b3aff, 0x5f43671b, 0x9cf6e037, 0x4981ac83,\n    0x334266ce, 0x8c9341b7, 0xd0d854c0, 0xcb3a6c88,\n    0x47bc2829, 0x4725ba37, 0xa66ad22b, 0x7ad61f1e,\n    0x0c5cbafa, 0x4437f107, 0xb6e79962, 0x42d2d816,\n    0x0a961288, 0xe1a5c06e, 0x13749e67, 0x72fc081a,\n    0xb1d139f7, 0xf9583745, 0xcf19df58, 0xbec3f756,\n    0xc06eba30, 0x07211b24, 0x45c28829, 0xc95e317f,\n    0xbc8ec511, 0x38bc46e9, 0xc6e6fa14, 0xbae8584a,\n    0xad4ebc46, 0x468f508b, 0x7829435f, 0xf124183b,\n    0x821dba9f, 0xaff60ff4, 0xea2c4e6d, 0x16e39264,\n    0x92544a8b, 0x009b4fc3, 0xaba68ced, 0x9ac96f78,\n    0x06a5b79a, 0xb2856e6e, 0x1aec3ca9, 0xbe838688,\n    0x0e0804e9, 0x55f1be56, 0xe7e5363b, 0xb3a1f25d,\n    0xf7debb85, 0x61fe033c, 0x16746233, 0x3c034c28,\n    0xda6d0c74, 0x79aac56c, 0x3ce4e1ad, 0x51f0c802,\n    0x98f8f35a, 0x1626a49f, 0xeed82b29, 0x1d382fe3,\n    0x0c4fb99a, 0xbb325778, 0x3ec6d97b, 0x6e77a6a9,\n    0xcb658b5c, 0xd45230c7, 0x2bd1408b, 0x60c03eb7,\n    0xb9068d78, 0xa33754f4, 0xf430c87d, 0xc8a71302,\n    0xb96d8c32, 0xebd4e7be, 0xbe8b9d2d, 0x7979fb06,\n    0xe7225308, 0x8b75cf77, 0x11ef8da4, 0xe083c858,\n    0x8d6b786f, 0x5a6317a6, 0xfa5cf7a0, 0x5dda0033,\n    0xf28ebfb0, 0xf5b9c310, 0xa0eac280, 0x08b9767a,\n    0xa3d9d2b0, 0x79d34217, 0x021a718d, 0x9ac6336a,\n    0x2711fd60, 0x438050e3, 0x069908a8, 0x3d7fedc4,\n    0x826d2bef, 0x4eeb8476, 0x488dcf25, 0x36c9d566,\n    0x28e74e41, 0xc2610aca, 0x3d49a9cf, 0xbae3b9df,\n    0xb65f8de6, 0x92aeaf64, 0x3ac7d5e6, 0x9ea80509,\n    0xf22b017d, 0xa4173f70, 0xdd1e16c3, 0x15e0d7f9,\n    0x50b1b887, 0x2b9f4fd5, 0x625aba82, 0x6a017962,\n    0x2ec01b9c, 0x15488aa9, 0xd716e740, 0x40055a2c,\n    0x93d29a22, 0xe32dbf9a, 0x058745b9, 0x3453dc1e,\n    0xd699296e, 0x496cff6f, 0x1c9f4986, 0xdfe2ed07,\n    0xb87242d1, 0x19de7eae, 0x053e561a, 0x15ad6f8c,\n    0x66626c1c, 0x7154c24c, 0xea082b2a, 0x93eb2939,\n    0x17dcb0f0, 0x58d4f2ae, 0x9ea294fb, 0x52cf564c,\n    0x9883fe66, 0x2ec40581, 0x763953c3, 0x01d6692e,\n    0xd3a0c108, 0xa1e7160e, 0xe4f2dfa6, 0x693ed285,\n    0x74904698, 0x4c2b0edd, 0x4f757656, 0x5d393378,\n    0xa132234f, 0x3d321c5d, 0xc3f5e194, 0x4b269301,\n    0xc79f022f, 0x3c997e7e, 0x5e4f9504, 0x3ffafbbd,\n    0x76f7ad0e, 0x296693f4, 0x3d1fce6f, 0xc61e45be,\n    0xd3b5ab34, 0xf72bf9b7, 0x1b0434c0, 0x4e72b567,\n    0x5592a33d, 0xb5229301, 0xcfd2a87f, 0x60aeb767,\n    0x1814386b, 0x30bcc33d, 0x38a0c07d, 0xfd1606f2,\n    0xc363519b, 0x589dd390, 0x5479f8e6, 0x1cb8d647,\n    0x97fd61a9, 0xea7759f4, 0x2d57539d, 0x569a58cf,\n    0xe84e63ad, 0x462e1b78, 0x6580f87e, 0xf3817914,\n    0x91da55f4, 0x40a230f3, 0xd1988f35, 0xb6e318d2,\n    0x3ffa50bc, 0x3d40f021, 0xc3c0bdae, 0x4958c24c,\n    0x518f36b2, 0x84b1d370, 0x0fedce83, 0x878ddada,\n    0xf2a279c7, 0x94e01be8, 0x90716f4b, 0x954b8aa3\n  ]),\n  new Uint32Array([\n    0xe216300d, 0xbbddfffc, 0xa7ebdabd, 0x35648095,\n    0x7789f8b7, 0xe6c1121b, 0x0e241600, 0x052ce8b5,\n    0x11a9cfb0, 0xe5952f11, 0xece7990a, 0x9386d174,\n    0x2a42931c, 0x76e38111, 0xb12def3a, 0x37ddddfc,\n    0xde9adeb1, 0x0a0cc32c, 0xbe197029, 0x84a00940,\n    0xbb243a0f, 0xb4d137cf, 0xb44e79f0, 0x049eedfd,\n    0x0b15a15d, 0x480d3168, 0x8bbbde5a, 0x669ded42,\n    0xc7ece831, 0x3f8f95e7, 0x72df191b, 0x7580330d,\n    0x94074251, 0x5c7dcdfa, 0xabbe6d63, 0xaa402164,\n    0xb301d40a, 0x02e7d1ca, 0x53571dae, 0x7a3182a2,\n    0x12a8ddec, 0xfdaa335d, 0x176f43e8, 0x71fb46d4,\n    0x38129022, 0xce949ad4, 0xb84769ad, 0x965bd862,\n    0x82f3d055, 0x66fb9767, 0x15b80b4e, 0x1d5b47a0,\n    0x4cfde06f, 0xc28ec4b8, 0x57e8726e, 0x647a78fc,\n    0x99865d44, 0x608bd593, 0x6c200e03, 0x39dc5ff6,\n    0x5d0b00a3, 0xae63aff2, 0x7e8bd632, 0x70108c0c,\n    0xbbd35049, 0x2998df04, 0x980cf42a, 0x9b6df491,\n    0x9e7edd53, 0x06918548, 0x58cb7e07, 0x3b74ef2e,\n    0x522fffb1, 0xd24708cc, 0x1c7e27cd, 0xa4eb215b,\n    0x3cf1d2e2, 0x19b47a38, 0x424f7618, 0x35856039,\n    0x9d17dee7, 0x27eb35e6, 0xc9aff67b, 0x36baf5b8,\n    0x09c467cd, 0xc18910b1, 0xe11dbf7b, 0x06cd1af8,\n    0x7170c608, 0x2d5e3354, 0xd4de495a, 0x64c6d006,\n    0xbcc0c62c, 0x3dd00db3, 0x708f8f34, 0x77d51b42,\n    0x264f620f, 0x24b8d2bf, 0x15c1b79e, 0x46a52564,\n    0xf8d7e54e, 0x3e378160, 0x7895cda5, 0x859c15a5,\n    0xe6459788, 0xc37bc75f, 0xdb07ba0c, 0x0676a3ab,\n    0x7f229b1e, 0x31842e7b, 0x24259fd7, 0xf8bef472,\n    0x835ffcb8, 0x6df4c1f2, 0x96f5b195, 0xfd0af0fc,\n    0xb0fe134c, 0xe2506d3d, 0x4f9b12ea, 0xf215f225,\n    0xa223736f, 0x9fb4c428, 0x25d04979, 0x34c713f8,\n    0xc4618187, 0xea7a6e98, 0x7cd16efc, 0x1436876c,\n    0xf1544107, 0xbedeee14, 0x56e9af27, 0xa04aa441,\n    0x3cf7c899, 0x92ecbae6, 0xdd67016d, 0x151682eb,\n    0xa842eedf, 0xfdba60b4, 0xf1907b75, 0x20e3030f,\n    0x24d8c29e, 0xe139673b, 0xefa63fb8, 0x71873054,\n    0xb6f2cf3b, 0x9f326442, 0xcb15a4cc, 0xb01a4504,\n    0xf1e47d8d, 0x844a1be5, 0xbae7dfdc, 0x42cbda70,\n    0xcd7dae0a, 0x57e85b7a, 0xd53f5af6, 0x20cf4d8c,\n    0xcea4d428, 0x79d130a4, 0x3486ebfb, 0x33d3cddc,\n    0x77853b53, 0x37effcb5, 0xc5068778, 0xe580b3e6,\n    0x4e68b8f4, 0xc5c8b37e, 0x0d809ea2, 0x398feb7c,\n    0x132a4f94, 0x43b7950e, 0x2fee7d1c, 0x223613bd,\n    0xdd06caa2, 0x37df932b, 0xc4248289, 0xacf3ebc3,\n    0x5715f6b7, 0xef3478dd, 0xf267616f, 0xc148cbe4,\n    0x9052815e, 0x5e410fab, 0xb48a2465, 0x2eda7fa4,\n    0xe87b40e4, 0xe98ea084, 0x5889e9e1, 0xefd390fc,\n    0xdd07d35b, 0xdb485694, 0x38d7e5b2, 0x57720101,\n    0x730edebc, 0x5b643113, 0x94917e4f, 0x503c2fba,\n    0x646f1282, 0x7523d24a, 0xe0779695, 0xf9c17a8f,\n    0x7a5b2121, 0xd187b896, 0x29263a4d, 0xba510cdf,\n    0x81f47c9f, 0xad1163ed, 0xea7b5965, 0x1a00726e,\n    0x11403092, 0x00da6d77, 0x4a0cdd61, 0xad1f4603,\n    0x605bdfb0, 0x9eedc364, 0x22ebe6a8, 0xcee7d28a,\n    0xa0e736a0, 0x5564a6b9, 0x10853209, 0xc7eb8f37,\n    0x2de705ca, 0x8951570f, 0xdf09822b, 0xbd691a6c,\n    0xaa12e4f2, 0x87451c0f, 0xe0f6a27a, 0x3ada4819,\n    0x4cf1764f, 0x0d771c2b, 0x67cdb156, 0x350d8384,\n    0x5938fa0f, 0x42399ef3, 0x36997b07, 0x0e84093d,\n    0x4aa93e61, 0x8360d87b, 0x1fa98b0c, 0x1149382c,\n    0xe97625a5, 0x0614d1b7, 0x0e25244b, 0x0c768347,\n    0x589e8d82, 0x0d2059d1, 0xa466bb1e, 0xf8da0a82,\n    0x04f19130, 0xba6e4ec0, 0x99265164, 0x1ee7230d,\n    0x50b2ad80, 0xeaee6801, 0x8db2a283, 0xea8bf59e\n  ])\n];\n\nconst schedule = [\n  {\n    a: [\n      new Uint8Array([4, 0, 0xd, 0xf, 0xc, 0xe, 0x8]),\n      new Uint8Array([5, 2, 16 + 0, 16 + 2, 16 + 1, 16 + 3, 0xa]),\n      new Uint8Array([6, 3, 16 + 7, 16 + 6, 16 + 5, 16 + 4, 9]),\n      new Uint8Array([7, 1, 16 + 0xa, 16 + 9, 16 + 0xb, 16 + 8, 0xb])\n    ],\n    b: [\n      new Uint8Array([16 + 8, 16 + 9, 16 + 7, 16 + 6, 16 + 2]),\n      new Uint8Array([16 + 0xa, 16 + 0xb, 16 + 5, 16 + 4, 16 + 6]),\n      new Uint8Array([16 + 0xc, 16 + 0xd, 16 + 3, 16 + 2, 16 + 9]),\n      new Uint8Array([16 + 0xe, 16 + 0xf, 16 + 1, 16 + 0, 16 + 0xc])\n    ]\n  },\n  {\n    a: [\n      new Uint8Array([0, 6, 16 + 5, 16 + 7, 16 + 4, 16 + 6, 16 + 0]),\n      new Uint8Array([1, 4, 0, 2, 1, 3, 16 + 2]),\n      new Uint8Array([2, 5, 7, 6, 5, 4, 16 + 1]),\n      new Uint8Array([3, 7, 0xa, 9, 0xb, 8, 16 + 3])\n    ],\n    b: [\n      new Uint8Array([3, 2, 0xc, 0xd, 8]),\n      new Uint8Array([1, 0, 0xe, 0xf, 0xd]),\n      new Uint8Array([7, 6, 8, 9, 3]),\n      new Uint8Array([5, 4, 0xa, 0xb, 7])\n    ]\n  },\n  {\n    a: [\n      new Uint8Array([4, 0, 0xd, 0xf, 0xc, 0xe, 8]),\n      new Uint8Array([5, 2, 16 + 0, 16 + 2, 16 + 1, 16 + 3, 0xa]),\n      new Uint8Array([6, 3, 16 + 7, 16 + 6, 16 + 5, 16 + 4, 9]),\n      new Uint8Array([7, 1, 16 + 0xa, 16 + 9, 16 + 0xb, 16 + 8, 0xb])\n    ],\n    b: [\n      new Uint8Array([16 + 3, 16 + 2, 16 + 0xc, 16 + 0xd, 16 + 9]),\n      new Uint8Array([16 + 1, 16 + 0, 16 + 0xe, 16 + 0xf, 16 + 0xc]),\n      new Uint8Array([16 + 7, 16 + 6, 16 + 8, 16 + 9, 16 + 2]),\n      new Uint8Array([16 + 5, 16 + 4, 16 + 0xa, 16 + 0xb, 16 + 6])\n    ]\n  },\n  {\n    a: [\n      new Uint8Array([0, 6, 16 + 5, 16 + 7, 16 + 4, 16 + 6, 16 + 0]),\n      new Uint8Array([1, 4, 0, 2, 1, 3, 16 + 2]),\n      new Uint8Array([2, 5, 7, 6, 5, 4, 16 + 1]),\n      new Uint8Array([3, 7, 0xa, 9, 0xb, 8, 16 + 3])\n    ],\n    b: [\n      new Uint8Array([8, 9, 7, 6, 3]),\n      new Uint8Array([0xa, 0xb, 5, 4, 7]),\n      new Uint8Array([0xc, 0xd, 3, 2, 8]),\n      new Uint8Array([0xe, 0xf, 1, 0, 0xd])\n    ]\n  }\n];\n\nconst X = new Uint8Array([6, 7, 4, 5]);\n\n/**\n * CAST5\n */\n\nclass CAST5 {\n  constructor() {\n    this.masking = new Uint32Array(16);\n    this.rotate = new Uint8Array(16);\n  }\n\n  get blockSize() {\n    return 8;\n  }\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n    assert(key.length === 16);\n    this.keySchedule(key);\n    return this;\n  }\n\n  destroy() {\n    for (let i = 0; i < 16; i++)\n      this.masking[i] = 0;\n\n    for (let i = 0; i < 16; i++)\n      this.rotate[i] = 0;\n\n    return this;\n  }\n\n  keySchedule(input) {\n    const t = new Uint32Array(8);\n    const k = new Uint32Array(32);\n\n    for (let i = 0; i < 4; i++)\n      t[i] = readU32(input, i * 4);\n\n    let ki = 0;\n    let w;\n\n    for (let half = 0; half < 2; half++) {\n      for (const round of schedule) {\n        for (let j = 0; j < 4; j++) {\n          const a = round.a[j];\n\n          w = t[a[1]]\n            ^ S[4][(t[a[2] >>> 2] >>> (24 - 8 * (a[2] & 3))) & 0xff]\n            ^ S[5][(t[a[3] >>> 2] >>> (24 - 8 * (a[3] & 3))) & 0xff]\n            ^ S[6][(t[a[4] >>> 2] >>> (24 - 8 * (a[4] & 3))) & 0xff]\n            ^ S[7][(t[a[5] >>> 2] >>> (24 - 8 * (a[5] & 3))) & 0xff];\n\n          w ^= S[X[j]][(t[a[6] >>> 2] >>> (24 - 8 * (a[6] & 3))) & 0xff];\n\n          t[a[0]] = w;\n        }\n\n        for (let j = 0; j < 4; j++) {\n          const b = round.b[j];\n\n          w = S[4][(t[b[0] >>> 2] >>> (24 - 8 * (b[0] & 3))) & 0xff]\n            ^ S[5][(t[b[1] >>> 2] >>> (24 - 8 * (b[1] & 3))) & 0xff]\n            ^ S[6][(t[b[2] >>> 2] >>> (24 - 8 * (b[2] & 3))) & 0xff]\n            ^ S[7][(t[b[3] >>> 2] >>> (24 - 8 * (b[3] & 3))) & 0xff];\n\n          w ^= S[4 + j][(t[b[4] >>> 2] >>> (24 - 8 * (b[4] & 3))) & 0xff];\n\n          k[ki] = w;\n          ki += 1;\n        }\n      }\n    }\n\n    for (let i = 0; i < 16; i++) {\n      this.masking[i] = k[i];\n      this.rotate[i] = k[16 + i] & 0x1f;\n    }\n\n    return this;\n  }\n\n  encrypt(output, opos, input, ipos) {\n    let l = readU32(input, ipos);\n    let r = readU32(input, ipos + 4);\n\n    [l, r] = [r, l ^ f1(r, this.masking[0], this.rotate[0])];\n    [l, r] = [r, l ^ f2(r, this.masking[1], this.rotate[1])];\n    [l, r] = [r, l ^ f3(r, this.masking[2], this.rotate[2])];\n    [l, r] = [r, l ^ f1(r, this.masking[3], this.rotate[3])];\n\n    [l, r] = [r, l ^ f2(r, this.masking[4], this.rotate[4])];\n    [l, r] = [r, l ^ f3(r, this.masking[5], this.rotate[5])];\n    [l, r] = [r, l ^ f1(r, this.masking[6], this.rotate[6])];\n    [l, r] = [r, l ^ f2(r, this.masking[7], this.rotate[7])];\n\n    [l, r] = [r, l ^ f3(r, this.masking[8], this.rotate[8])];\n    [l, r] = [r, l ^ f1(r, this.masking[9], this.rotate[9])];\n    [l, r] = [r, l ^ f2(r, this.masking[10], this.rotate[10])];\n    [l, r] = [r, l ^ f3(r, this.masking[11], this.rotate[11])];\n\n    [l, r] = [r, l ^ f1(r, this.masking[12], this.rotate[12])];\n    [l, r] = [r, l ^ f2(r, this.masking[13], this.rotate[13])];\n    [l, r] = [r, l ^ f3(r, this.masking[14], this.rotate[14])];\n    [l, r] = [r, l ^ f1(r, this.masking[15], this.rotate[15])];\n\n    writeU32(output, r, opos);\n    writeU32(output, l, opos + 4);\n\n    return this;\n  }\n\n  decrypt(output, opos, input, ipos) {\n    let l = readU32(input, ipos);\n    let r = readU32(input, ipos + 4);\n\n    [l, r] = [r, l ^ f1(r, this.masking[15], this.rotate[15])];\n    [l, r] = [r, l ^ f3(r, this.masking[14], this.rotate[14])];\n    [l, r] = [r, l ^ f2(r, this.masking[13], this.rotate[13])];\n    [l, r] = [r, l ^ f1(r, this.masking[12], this.rotate[12])];\n\n    [l, r] = [r, l ^ f3(r, this.masking[11], this.rotate[11])];\n    [l, r] = [r, l ^ f2(r, this.masking[10], this.rotate[10])];\n    [l, r] = [r, l ^ f1(r, this.masking[9], this.rotate[9])];\n    [l, r] = [r, l ^ f3(r, this.masking[8], this.rotate[8])];\n\n    [l, r] = [r, l ^ f2(r, this.masking[7], this.rotate[7])];\n    [l, r] = [r, l ^ f1(r, this.masking[6], this.rotate[6])];\n    [l, r] = [r, l ^ f3(r, this.masking[5], this.rotate[5])];\n    [l, r] = [r, l ^ f2(r, this.masking[4], this.rotate[4])];\n\n    [l, r] = [r, l ^ f1(r, this.masking[3], this.rotate[3])];\n    [l, r] = [r, l ^ f3(r, this.masking[2], this.rotate[2])];\n    [l, r] = [r, l ^ f2(r, this.masking[1], this.rotate[1])];\n    [l, r] = [r, l ^ f1(r, this.masking[0], this.rotate[0])];\n\n    writeU32(output, r, opos);\n    writeU32(output, l, opos + 4);\n\n    return this;\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction f1(d, m, r) {\n  const t = m + d;\n  const I = (t << r) | (t >>> (32 - r));;\n\n  return (((S[0][(I >>> 24) & 0xff]\n          ^ S[1][(I >>> 16) & 0xff])\n          - S[2][(I >>>  8) & 0xff])\n          + S[3][(I >>>  0) & 0xff]);\n}\n\nfunction f2(d, m, r) {\n  const t = m ^ d;\n  const I = (t << r) | (t >>> (32 - r));\n\n  return (((S[0][(I >>> 24) & 0xff]\n          - S[1][(I >>> 16) & 0xff])\n          + S[2][(I >>>  8) & 0xff])\n          ^ S[3][(I >>>  0) & 0xff]);\n}\n\nfunction f3(d, m, r) {\n  const t = m - d;\n  const I = (t << r) | (t >>> (32 - r));\n\n  return (((S[0][(I >>> 24) & 0xff]\n          + S[1][(I >>> 16) & 0xff])\n          ^ S[2][(I >>>  8) & 0xff])\n          - S[3][(I >>>  0) & 0xff]);\n}\n\nfunction readU32(data, off) {\n  return (data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num >>> 24;\n  dst[off++] = num >>> 16;\n  dst[off++] = num >>> 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = CAST5;\n","/*!\n * des.js - DES for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/des.js:\n *   Copyright (c) 2015, Fedor Indutny (MIT License).\n *   https://github.com/indutny/des.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Data_Encryption_Standard\n *   https://github.com/indutny/des.js/tree/master/lib/des\n */\n\n'use strict';\n\nconst assert = require('../../internal/assert');\n\n/*\n * Constants\n */\n\nconst PC2 = new Uint8Array([\n  // inL => outL\n  0x0e, 0x0b, 0x11, 0x04, 0x1b, 0x17, 0x19, 0x00,\n  0x0d, 0x16, 0x07, 0x12, 0x05, 0x09, 0x10, 0x18,\n  0x02, 0x14, 0x0c, 0x15, 0x01, 0x08, 0x0f, 0x1a,\n\n  // inR => outR\n  0x0f, 0x04, 0x19, 0x13, 0x09, 0x01, 0x1a, 0x10,\n  0x05, 0x0b, 0x17, 0x08, 0x0c, 0x07, 0x11, 0x00,\n  0x16, 0x03, 0x0a, 0x0e, 0x06, 0x14, 0x1b, 0x18\n]);\n\nconst S = new Uint8Array([\n  0x0e, 0x00, 0x04, 0x0f, 0x0d, 0x07, 0x01, 0x04,\n  0x02, 0x0e, 0x0f, 0x02, 0x0b, 0x0d, 0x08, 0x01,\n  0x03, 0x0a, 0x0a, 0x06, 0x06, 0x0c, 0x0c, 0x0b,\n  0x05, 0x09, 0x09, 0x05, 0x00, 0x03, 0x07, 0x08,\n  0x04, 0x0f, 0x01, 0x0c, 0x0e, 0x08, 0x08, 0x02,\n  0x0d, 0x04, 0x06, 0x09, 0x02, 0x01, 0x0b, 0x07,\n  0x0f, 0x05, 0x0c, 0x0b, 0x09, 0x03, 0x07, 0x0e,\n  0x03, 0x0a, 0x0a, 0x00, 0x05, 0x06, 0x00, 0x0d,\n\n  0x0f, 0x03, 0x01, 0x0d, 0x08, 0x04, 0x0e, 0x07,\n  0x06, 0x0f, 0x0b, 0x02, 0x03, 0x08, 0x04, 0x0e,\n  0x09, 0x0c, 0x07, 0x00, 0x02, 0x01, 0x0d, 0x0a,\n  0x0c, 0x06, 0x00, 0x09, 0x05, 0x0b, 0x0a, 0x05,\n  0x00, 0x0d, 0x0e, 0x08, 0x07, 0x0a, 0x0b, 0x01,\n  0x0a, 0x03, 0x04, 0x0f, 0x0d, 0x04, 0x01, 0x02,\n  0x05, 0x0b, 0x08, 0x06, 0x0c, 0x07, 0x06, 0x0c,\n  0x09, 0x00, 0x03, 0x05, 0x02, 0x0e, 0x0f, 0x09,\n\n  0x0a, 0x0d, 0x00, 0x07, 0x09, 0x00, 0x0e, 0x09,\n  0x06, 0x03, 0x03, 0x04, 0x0f, 0x06, 0x05, 0x0a,\n  0x01, 0x02, 0x0d, 0x08, 0x0c, 0x05, 0x07, 0x0e,\n  0x0b, 0x0c, 0x04, 0x0b, 0x02, 0x0f, 0x08, 0x01,\n  0x0d, 0x01, 0x06, 0x0a, 0x04, 0x0d, 0x09, 0x00,\n  0x08, 0x06, 0x0f, 0x09, 0x03, 0x08, 0x00, 0x07,\n  0x0b, 0x04, 0x01, 0x0f, 0x02, 0x0e, 0x0c, 0x03,\n  0x05, 0x0b, 0x0a, 0x05, 0x0e, 0x02, 0x07, 0x0c,\n\n  0x07, 0x0d, 0x0d, 0x08, 0x0e, 0x0b, 0x03, 0x05,\n  0x00, 0x06, 0x06, 0x0f, 0x09, 0x00, 0x0a, 0x03,\n  0x01, 0x04, 0x02, 0x07, 0x08, 0x02, 0x05, 0x0c,\n  0x0b, 0x01, 0x0c, 0x0a, 0x04, 0x0e, 0x0f, 0x09,\n  0x0a, 0x03, 0x06, 0x0f, 0x09, 0x00, 0x00, 0x06,\n  0x0c, 0x0a, 0x0b, 0x01, 0x07, 0x0d, 0x0d, 0x08,\n  0x0f, 0x09, 0x01, 0x04, 0x03, 0x05, 0x0e, 0x0b,\n  0x05, 0x0c, 0x02, 0x07, 0x08, 0x02, 0x04, 0x0e,\n\n  0x02, 0x0e, 0x0c, 0x0b, 0x04, 0x02, 0x01, 0x0c,\n  0x07, 0x04, 0x0a, 0x07, 0x0b, 0x0d, 0x06, 0x01,\n  0x08, 0x05, 0x05, 0x00, 0x03, 0x0f, 0x0f, 0x0a,\n  0x0d, 0x03, 0x00, 0x09, 0x0e, 0x08, 0x09, 0x06,\n  0x04, 0x0b, 0x02, 0x08, 0x01, 0x0c, 0x0b, 0x07,\n  0x0a, 0x01, 0x0d, 0x0e, 0x07, 0x02, 0x08, 0x0d,\n  0x0f, 0x06, 0x09, 0x0f, 0x0c, 0x00, 0x05, 0x09,\n  0x06, 0x0a, 0x03, 0x04, 0x00, 0x05, 0x0e, 0x03,\n\n  0x0c, 0x0a, 0x01, 0x0f, 0x0a, 0x04, 0x0f, 0x02,\n  0x09, 0x07, 0x02, 0x0c, 0x06, 0x09, 0x08, 0x05,\n  0x00, 0x06, 0x0d, 0x01, 0x03, 0x0d, 0x04, 0x0e,\n  0x0e, 0x00, 0x07, 0x0b, 0x05, 0x03, 0x0b, 0x08,\n  0x09, 0x04, 0x0e, 0x03, 0x0f, 0x02, 0x05, 0x0c,\n  0x02, 0x09, 0x08, 0x05, 0x0c, 0x0f, 0x03, 0x0a,\n  0x07, 0x0b, 0x00, 0x0e, 0x04, 0x01, 0x0a, 0x07,\n  0x01, 0x06, 0x0d, 0x00, 0x0b, 0x08, 0x06, 0x0d,\n\n  0x04, 0x0d, 0x0b, 0x00, 0x02, 0x0b, 0x0e, 0x07,\n  0x0f, 0x04, 0x00, 0x09, 0x08, 0x01, 0x0d, 0x0a,\n  0x03, 0x0e, 0x0c, 0x03, 0x09, 0x05, 0x07, 0x0c,\n  0x05, 0x02, 0x0a, 0x0f, 0x06, 0x08, 0x01, 0x06,\n  0x01, 0x06, 0x04, 0x0b, 0x0b, 0x0d, 0x0d, 0x08,\n  0x0c, 0x01, 0x03, 0x04, 0x07, 0x0a, 0x0e, 0x07,\n  0x0a, 0x09, 0x0f, 0x05, 0x06, 0x00, 0x08, 0x0f,\n  0x00, 0x0e, 0x05, 0x02, 0x09, 0x03, 0x02, 0x0c,\n\n  0x0d, 0x01, 0x02, 0x0f, 0x08, 0x0d, 0x04, 0x08,\n  0x06, 0x0a, 0x0f, 0x03, 0x0b, 0x07, 0x01, 0x04,\n  0x0a, 0x0c, 0x09, 0x05, 0x03, 0x06, 0x0e, 0x0b,\n  0x05, 0x00, 0x00, 0x0e, 0x0c, 0x09, 0x07, 0x02,\n  0x07, 0x02, 0x0b, 0x01, 0x04, 0x0e, 0x01, 0x07,\n  0x09, 0x04, 0x0c, 0x0a, 0x0e, 0x08, 0x02, 0x0d,\n  0x00, 0x0f, 0x06, 0x0c, 0x0a, 0x09, 0x0d, 0x00,\n  0x0f, 0x03, 0x03, 0x05, 0x05, 0x06, 0x08, 0x0b\n]);\n\nconst PERMUTE = new Uint8Array([\n  0x10, 0x19, 0x0c, 0x0b, 0x03, 0x14, 0x04, 0x0f,\n  0x1f, 0x11, 0x09, 0x06, 0x1b, 0x0e, 0x01, 0x16,\n  0x1e, 0x18, 0x08, 0x12, 0x00, 0x05, 0x1d, 0x17,\n  0x0d, 0x13, 0x02, 0x1a, 0x0a, 0x15, 0x1c, 0x07\n]);\n\nconst SHIFT = new Uint8Array([\n  0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,\n  0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01\n]);\n\n/**\n * DES\n */\n\nclass DES {\n  constructor() {\n    this.block = new Uint32Array(2);\n    this.keys = new Uint32Array(32);\n  }\n\n  get blockSize() {\n    return 8;\n  }\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n    assert(key.length === 8);\n    return this.derive(key);\n  }\n\n  encrypt(output, opos, input, ipos) {\n    return this.crypt(output, opos, input, ipos, true);\n  }\n\n  decrypt(output, opos, input, ipos) {\n    return this.crypt(output, opos, input, ipos, false);\n  }\n\n  destroy() {\n    for (let i = 0; i < 2; i++)\n      this.block[i] = 0;\n\n    for (let i = 0; i < 32; i++)\n      this.keys[i] = 0;\n\n    return this;\n  }\n\n  derive(key) {\n    let kL = readU32(key, 0);\n    let kR = readU32(key, 4);\n\n    pc1(kL, kR, this.block, 0);\n    kL = this.block[0];\n    kR = this.block[1];\n\n    for (let i = 0; i < 32; i += 2) {\n      const shift = SHIFT[i >>> 1];\n\n      kL = r28shl(kL, shift);\n      kR = r28shl(kR, shift);\n\n      pc2(kL, kR, this.keys, i);\n    }\n\n    return this;\n  }\n\n  crypt(output, opos, input, ipos, encrypt) {\n    let l = readU32(input, ipos);\n    let r = readU32(input, ipos + 4);\n\n    // Initial Permutation\n    ip(l, r, this.block, 0);\n\n    l = this.block[0];\n    r = this.block[1];\n\n    if (encrypt)\n      this.encipher(l, r, this.block, 0);\n    else\n      this.decipher(l, r, this.block, 0);\n\n    l = this.block[0];\n    r = this.block[1];\n\n    writeU32(output, l, opos);\n    writeU32(output, r, opos + 4);\n\n    return this;\n  }\n\n  encipher(lStart, rStart, out, off) {\n    let l = lStart;\n    let r = rStart;\n\n    // Apply f() x16 times\n    for (let i = 0; i < 32; i += 2) {\n      let keyL = this.keys[i];\n      let keyR = this.keys[i + 1];\n\n      // f(r, k)\n      expand(r, this.block, 0);\n\n      keyL ^= this.block[0];\n      keyR ^= this.block[1];\n\n      const s = substitute(keyL, keyR);\n      const f = permute(s);\n      const t = r;\n\n      r = (l ^ f) >>> 0;\n      l = t;\n    }\n\n    // Reverse Initial Permutation\n    rip(r, l, out, off);\n\n    return this;\n  }\n\n  decipher(lStart, rStart, out, off) {\n    let l = rStart;\n    let r = lStart;\n\n    // Apply f() x16 times\n    for (let i = 32 - 2; i >= 0; i -= 2) {\n      let keyL = this.keys[i];\n      let keyR = this.keys[i + 1];\n\n      // f(r, k)\n      expand(l, this.block, 0);\n\n      keyL ^= this.block[0];\n      keyR ^= this.block[1];\n\n      const s = substitute(keyL, keyR);\n      const f = permute(s);\n      const t = l;\n\n      l = (r ^ f) >>> 0;\n      r = t;\n    }\n\n    // Reverse Initial Permutation\n    rip(l, r, out, off);\n\n    return this;\n  }\n}\n\n/**\n * EDE\n */\n\nclass EDE {\n  constructor() {\n    this.x = new DES();\n    this.y = new DES();\n  }\n\n  get blockSize() {\n    return 8;\n  }\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n    assert(key.length === 16);\n\n    const k1 = key.slice(0, 8);\n    const k2 = key.slice(8, 16);\n\n    this.x.init(k1);\n    this.y.init(k2);\n\n    return this;\n  }\n\n  encrypt(output, opos, input, ipos) {\n    this.x.encrypt(output, opos, input, ipos);\n    this.y.decrypt(output, opos, output, opos);\n    this.x.encrypt(output, opos, output, opos);\n    return this;\n  }\n\n  decrypt(output, opos, input, ipos) {\n    this.x.decrypt(output, opos, input, ipos);\n    this.y.encrypt(output, opos, output, opos);\n    this.x.decrypt(output, opos, output, opos);\n    return this;\n  }\n\n  destroy() {\n    this.x.destroy();\n    this.y.destroy();\n    return this;\n  }\n}\n\n/**\n * EDE3\n */\n\nclass EDE3 {\n  constructor() {\n    this.x = new DES();\n    this.y = new DES();\n    this.z = new DES();\n  }\n\n  get blockSize() {\n    return 8;\n  }\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n    assert(key.length === 24);\n\n    const k1 = key.slice(0, 8);\n    const k2 = key.slice(8, 16);\n    const k3 = key.slice(16, 24);\n\n    this.x.init(k1);\n    this.y.init(k2);\n    this.z.init(k3);\n\n    return this;\n  }\n\n  encrypt(output, opos, input, ipos) {\n    this.x.encrypt(output, opos, input, ipos);\n    this.y.decrypt(output, opos, output, opos);\n    this.z.encrypt(output, opos, output, opos);\n    return this;\n  }\n\n  decrypt(output, opos, input, ipos) {\n    this.z.decrypt(output, opos, input, ipos);\n    this.y.encrypt(output, opos, output, opos);\n    this.x.decrypt(output, opos, output, opos);\n    return this;\n  }\n\n  destroy() {\n    this.x.destroy();\n    this.y.destroy();\n    this.z.destroy();\n    return this;\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction ip(inL, inR, out, off) {\n  let outL = 0;\n  let outR = 0;\n\n  for (let i = 6; i >= 0; i -= 2) {\n    for (let j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n    }\n\n    for (let j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  for (let i = 6; i >= 0; i -= 2) {\n    for (let j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n    }\n\n    for (let j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n}\n\nfunction rip(inL, inR, out, off) {\n  let outL = 0;\n  let outR = 0;\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 24; j >= 0; j -= 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  for (let i = 4; i < 8; i++) {\n    for (let j = 24; j >= 0; j -= 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n}\n\nfunction pc1(inL, inR, out, off) {\n  let outL = 0;\n  let outR = 0;\n\n  // 7, 15, 23, 31, 39, 47, 55, 63\n  // 6, 14, 22, 30, 39, 47, 55, 63\n  // 5, 13, 21, 29, 39, 47, 55, 63\n  // 4, 12, 20, 28\n  for (let i = 7; i >= 5; i--) {\n    for (let j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >> (j + i)) & 1;\n    }\n\n    for (let j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >> (j + i)) & 1;\n    }\n  }\n\n  for (let j = 0; j <= 24; j += 8) {\n    outL <<= 1;\n    outL |= (inR >> (j + 4)) & 1;\n  }\n\n  // 1, 9, 17, 25, 33, 41, 49, 57\n  // 2, 10, 18, 26, 34, 42, 50, 58\n  // 3, 11, 19, 27, 35, 43, 51, 59\n  // 36, 44, 52, 60\n  for (let i = 1; i <= 3; i++) {\n    for (let j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inR >> (j + i)) & 1;\n    }\n\n    for (let j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inL >> (j + i)) & 1;\n    }\n  }\n\n  for (let j = 0; j <= 24; j += 8) {\n    outR <<= 1;\n    outR |= (inL >> (j + 4)) & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n}\n\nfunction r28shl(x, b) {\n  return ((x << b) & 0xfffffff) | (x >>> (28 - b));\n}\n\nfunction pc2(inL, inR, out, off) {\n  let outL = 0;\n  let outR = 0;\n  let i = 0;\n\n  for (; i < 24; i++) {\n    outL <<= 1;\n    outL |= (inL >>> PC2[i]) & 1;\n  }\n\n  for (; i < 48; i++) {\n    outR <<= 1;\n    outR |= (inR >>> PC2[i]) & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n}\n\nfunction expand(r, out, off) {\n  let outL = 0;\n  let outR = 0;\n\n  outL = ((r & 1) << 5) | (r >>> 27);\n\n  for (let i = 23; i >= 15; i -= 4) {\n    outL <<= 6;\n    outL |= (r >>> i) & 0x3f;\n  }\n\n  for (let i = 11; i >= 3; i -= 4) {\n    outR |= (r >>> i) & 0x3f;\n    outR <<= 6;\n  }\n\n  outR |= ((r & 0x1f) << 1) | (r >>> 31);\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n}\n\nfunction substitute(inL, inR) {\n  let s = 0;\n\n  for (let i = 0; i < 4; i++) {\n    const b = (inL >>> (18 - i * 6)) & 0x3f;\n\n    s = (s << 4) | S[i * 0x40 + b];\n  }\n\n  for (let i = 0; i < 4; i++) {\n    const b = (inR >>> (18 - i * 6)) & 0x3f;\n\n    s = (s << 4) | S[4 * 0x40 + i * 0x40 + b];\n  }\n\n  return s >>> 0;\n}\n\nfunction permute(s) {\n  let f = 0;\n\n  for (let i = 0; i < 32; i++) {\n    f <<= 1;\n    f |= (s >>> PERMUTE[i]) & 1;\n  }\n\n  return f >>> 0;\n}\n\nfunction readU32(data, off) {\n  return (data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num >>> 24;\n  dst[off++] = num >>> 16;\n  dst[off++] = num >>> 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nexports.DES = DES;\nexports.EDE = EDE;\nexports.EDE3 = EDE3;\n","/*!\n * idea.js - IDEA for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on dgryski/go-idea:\n *   Copyright (c) 2013-2017, Damian Gryski. All rights reserved.\n *   https://github.com/dgryski/go-idea\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/International_Data_Encryption_Algorithm\n *   https://github.com/dgryski/go-idea/blob/master/idea.go\n */\n\n'use strict';\n\nconst assert = require('../../internal/assert');\n\n/*\n * Constants\n */\n\nconst ZERO16 = Buffer.alloc(16, 0x00);\n\n/**\n * IDEA\n */\n\nclass IDEA {\n  constructor() {\n    this.key = ZERO16;\n    this.encryptKey = null;\n    this.decryptKey = null;\n  }\n\n  get blockSize() {\n    return 8;\n  }\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n    assert(key.length === 16);\n\n    this.destroy();\n    this.key = Buffer.from(key);\n\n    return this;\n  }\n\n  getEncryptKey() {\n    if (!this.encryptKey)\n      this.encryptKey = this.expandKey(this.key);\n\n    return this.encryptKey;\n  }\n\n  getDecryptKey() {\n    if (!this.decryptKey)\n      this.decryptKey = this.invertKey(this.getEncryptKey());\n\n    return this.decryptKey;\n  }\n\n  encrypt(output, opos, input, ipos) {\n    const key = this.getEncryptKey();\n    return this.crypt(output, opos, input, ipos, key);\n  }\n\n  decrypt(output, opos, input, ipos) {\n    const key = this.getDecryptKey();\n    return this.crypt(output, opos, input, ipos, key);\n  }\n\n  destroy() {\n    for (let i = 0; i < 16; i++)\n      this.key[i] = 0;\n\n    if (this.encryptKey) {\n      for (let i = 0; i < 52; i++)\n        this.encryptKey[i] = 0;\n    }\n\n    if (this.decryptKey) {\n      for (let i = 0; i < 52; i++)\n        this.decryptKey[i] = 0;\n    }\n\n    this.key = ZERO16;\n    this.encryptKey = null;\n    this.decryptKey = null;\n\n    return this;\n  }\n\n  expandKey(key) {\n    const K = new Uint16Array(52);\n\n    let p = 0;\n    let j = 0;\n    let i = 0;\n\n    for (; j < 8; j++)\n      K[j] = readU16(key, j * 2);\n\n    for (; j < 52; j++) {\n      i += 1;\n\n      K[p + (i + 7)] = (K[p + ((i + 0) & 7)] << 9)\n                     | (K[p + ((i + 1) & 7)] >>> 7);\n\n      p += i & 8;\n      i &= 7;\n    }\n\n    return K;\n  }\n\n  invertKey(K) {\n    const D = new Uint16Array(52);\n\n    let t1, t2, t3;\n    let di = 52 - 1;\n    let ki = 0;\n\n    t1 = invm(K[ki++]);\n    t2 = -K[ki++];\n    t3 = -K[ki++];\n\n    D[di--] = invm(K[ki++]);\n    D[di--] = t3;\n    D[di--] = t2;\n    D[di--] = t1;\n\n    for (let i = 0; i < 8 - 1; i++) {\n      t1 = K[ki++];\n\n      D[di--] = K[ki++];\n      D[di--] = t1;\n\n      t1 = invm(K[ki++]);\n      t2 = -K[ki++];\n      t3 = -K[ki++];\n\n      D[di--] = invm(K[ki++]);\n      D[di--] = t2;\n      D[di--] = t3;\n      D[di--] = t1;\n    }\n\n    t1 = K[ki++];\n\n    D[di--] = K[ki++];\n    D[di--] = t1;\n\n    t1 = invm(K[ki++]);\n    t2 = -K[ki++];\n    t3 = -K[ki++];\n\n    D[di--] = invm(K[ki++]);\n    D[di--] = t3;\n    D[di--] = t2;\n    D[di--] = t1;\n\n    return D;\n  }\n\n  crypt(output, opos, input, ipos, key) {\n    let x1 = readU16(input, ipos + 0);\n    let x2 = readU16(input, ipos + 2);\n    let x3 = readU16(input, ipos + 4);\n    let x4 = readU16(input, ipos + 6);\n    let s2 = 0;\n    let s3 = 0;\n    let p = 0;\n\n    for (let i = 8 - 1; i >= 0; i--) {\n      x1 = mul(x1, key[p++]);\n      x2 += key[p++];\n      x3 += key[p++];\n      x4 = mul(x4, key[p++]);\n\n      s3 = x3;\n      x3 ^= x1;\n      x3 = mul(x3, key[p++]);\n      s2 = x2;\n\n      x2 ^= x4;\n      x2 += x3;\n      x2 = mul(x2, key[p++]);\n      x3 += x2;\n\n      x1 ^= x2;\n      x4 ^= x3;\n      x2 ^= s3;\n      x3 ^= s2;\n    }\n\n    x1 = mul(x1, key[p++]);\n    x3 += key[p++];\n    x2 += key[p++];\n    x4 = mul(x4, key[p++]);\n\n    writeU16(output, x1, opos + 0);\n    writeU16(output, x3, opos + 2);\n    writeU16(output, x2, opos + 4);\n    writeU16(output, x4, opos + 6);\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction invm(x) {\n  x &= 0xffff;\n\n  if (x <= 1)\n    return x;\n\n  let t1 = (0x10001 / x) & 0xffff;\n  let y = 0x10001 % x;\n\n  if (y === 1)\n    return (1 - t1) & 0xffff;\n\n  let t0 = 1;\n  let q = 0;\n\n  while (y !== 1) {\n    q = (x / y) & 0xffff;\n    x %= y;\n\n    t0 += q * t1;\n    t0 &= 0xffff;\n\n    if (x === 1)\n      return t0;\n\n    q = (y / x) & 0xffff;\n    y %= x;\n    t1 += q * t0;\n    t1 &= 0xffff;\n  }\n\n  return (1 - t1) & 0xffff;\n}\n\nfunction mul(x, y) {\n  x &= 0xffff;\n  y &= 0xffff;\n\n  if (y === 0)\n    return (1 - x) & 0xffff;\n\n  if (x === 0)\n    return (1 - y) & 0xffff;\n\n  const t32 = (x * y) >>> 0;\n\n  x = t32 & 0xffff;\n  y = t32 >>> 16;\n\n  if (x < y)\n    return (x - y + 1) & 0xffff;\n\n  return (x - y) & 0xffff;\n}\n\nfunction readU16(data, pos) {\n  return data[pos++] * 0x100 + data[pos];\n}\n\nfunction writeU16(data, value, pos) {\n  data[pos++] = value >>> 8;\n  data[pos++] = value;\n  return pos;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = IDEA;\n","/*!\n * serpent.js - serpent128/192/256 for bcrypto\n * Copyright (c) 2020, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on aead/serpent:\n *   Copyright (c) 2016, Andreas Auernhammer (MIT License).\n *   https://github.com/aead/serpent\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Serpent_(cipher)\n *   https://www.cl.cam.ac.uk/~rja14/serpent.html\n *   https://github.com/aead/serpent\n */\n\n'use strict';\n\nconst assert = require('../../internal/assert');\n\n/*\n * Constants\n */\n\nconst PHI = 0x9e3779b9;\n\n/**\n * Serpent\n */\n\nclass Serpent {\n  constructor(bits) {\n    assert((bits >>> 0) === bits);\n    assert(bits === 128 || bits === 192 || bits === 256);\n\n    this.bits = bits;\n    this.subkeys = new Uint32Array(132);\n    this.block = new Uint32Array(4);\n  }\n\n  get blockSize() {\n    return 16;\n  }\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n    assert(key.length * 8 === this.bits);\n\n    this.keySchedule(key);\n\n    return this;\n  }\n\n  keySchedule(key) {\n    const s = this.subkeys;\n    const k = new Uint32Array(16);\n\n    let j = 0;\n\n    for (let i = 0; i < key.length; i += 4)\n      k[j++] = readU32(key, i);\n\n    if (j < 8)\n      k[j++] = 1;\n\n    while (j < 16)\n      k[j++] = 0;\n\n    for (let i = 8; i < 16; i++) {\n      const x = k[i - 8] ^ k[i - 5] ^ k[i - 3] ^ k[i - 1] ^ PHI ^ (i - 8);\n      k[i] = (x << 11) | (x >>> 21);\n      s[i - 8] = k[i];\n    }\n\n    for (let i = 8; i < 132; i++) {\n      const x = s[i - 8] ^ s[i - 5] ^ s[i - 3] ^ s[i - 1] ^ PHI ^ i;\n      s[i] = (x << 11) | (x >>> 21);\n    }\n\n    sb3(s, 0, 1, 2, 3);\n    sb2(s, 4, 5, 6, 7);\n    sb1(s, 8, 9, 10, 11);\n    sb0(s, 12, 13, 14, 15);\n    sb7(s, 16, 17, 18, 19);\n    sb6(s, 20, 21, 22, 23);\n    sb5(s, 24, 25, 26, 27);\n    sb4(s, 28, 29, 30, 31);\n\n    sb3(s, 32, 33, 34, 35);\n    sb2(s, 36, 37, 38, 39);\n    sb1(s, 40, 41, 42, 43);\n    sb0(s, 44, 45, 46, 47);\n    sb7(s, 48, 49, 50, 51);\n    sb6(s, 52, 53, 54, 55);\n    sb5(s, 56, 57, 58, 59);\n    sb4(s, 60, 61, 62, 63);\n\n    sb3(s, 64, 65, 66, 67);\n    sb2(s, 68, 69, 70, 71);\n    sb1(s, 72, 73, 74, 75);\n    sb0(s, 76, 77, 78, 79);\n    sb7(s, 80, 81, 82, 83);\n    sb6(s, 84, 85, 86, 87);\n    sb5(s, 88, 89, 90, 91);\n    sb4(s, 92, 93, 94, 95);\n\n    sb3(s, 96, 97, 98, 99);\n    sb2(s, 100, 101, 102, 103);\n    sb1(s, 104, 105, 106, 107);\n    sb0(s, 108, 109, 110, 111);\n    sb7(s, 112, 113, 114, 115);\n    sb6(s, 116, 117, 118, 119);\n    sb5(s, 120, 121, 122, 123);\n    sb4(s, 124, 125, 126, 127);\n\n    sb3(s, 128, 129, 130, 131);\n\n    return this;\n  }\n\n  encrypt(output, opos, input, ipos) {\n    const sk = this.subkeys;\n    const r = this.block;\n\n    r[0] = readU32(input, ipos + 0);\n    r[1] = readU32(input, ipos + 4);\n    r[2] = readU32(input, ipos + 8);\n    r[3] = readU32(input, ipos + 12);\n\n    xor4(r, sk, 0, 1, 2, 3);\n    sb0(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 4, 5, 6, 7);\n    sb1(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 8, 9, 10, 11);\n    sb2(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 12, 13, 14, 15);\n    sb3(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 16, 17, 18, 19);\n    sb4(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 20, 21, 22, 23);\n    sb5(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 24, 25, 26, 27);\n    sb6(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 28, 29, 30, 31);\n    sb7(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n\n    xor4(r, sk, 32, 33, 34, 35);\n    sb0(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 36, 37, 38, 39);\n    sb1(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 40, 41, 42, 43);\n    sb2(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 44, 45, 46, 47);\n    sb3(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 48, 49, 50, 51);\n    sb4(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 52, 53, 54, 55);\n    sb5(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 56, 57, 58, 59);\n    sb6(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 60, 61, 62, 63);\n    sb7(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n\n    xor4(r, sk, 64, 65, 66, 67);\n    sb0(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 68, 69, 70, 71);\n    sb1(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 72, 73, 74, 75);\n    sb2(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 76, 77, 78, 79);\n    sb3(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 80, 81, 82, 83);\n    sb4(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 84, 85, 86, 87);\n    sb5(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 88, 89, 90, 91);\n    sb6(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 92, 93, 94, 95);\n    sb7(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n\n    xor4(r, sk, 96, 97, 98, 99);\n    sb0(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 100, 101, 102, 103);\n    sb1(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 104, 105, 106, 107);\n    sb2(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 108, 109, 110, 111);\n    sb3(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 112, 113, 114, 115);\n    sb4(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 116, 117, 118, 119);\n    sb5(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 120, 121, 122, 123);\n    sb6(r, 0, 1, 2, 3);\n    linear(r, 0, 1, 2, 3);\n    xor4(r, sk, 124, 125, 126, 127);\n    sb7(r, 0, 1, 2, 3);\n\n    r[0] ^= sk[128];\n    r[1] ^= sk[129];\n    r[2] ^= sk[130];\n    r[3] ^= sk[131];\n\n    writeU32(output, r[0], opos + 0);\n    writeU32(output, r[1], opos + 4);\n    writeU32(output, r[2], opos + 8);\n    writeU32(output, r[3], opos + 12);\n\n    return this;\n  }\n\n  decrypt(output, opos, input, ipos) {\n    const sk = this.subkeys;\n    const r = this.block;\n\n    r[0] = readU32(input, ipos + 0);\n    r[1] = readU32(input, ipos + 4);\n    r[2] = readU32(input, ipos + 8);\n    r[3] = readU32(input, ipos + 12);\n\n    r[0] ^= sk[128];\n    r[1] ^= sk[129];\n    r[2] ^= sk[130];\n    r[3] ^= sk[131];\n\n    sb7inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 124, 125, 126, 127);\n    linearinv(r, 0, 1, 2, 3);\n    sb6inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 120, 121, 122, 123);\n    linearinv(r, 0, 1, 2, 3);\n    sb5inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 116, 117, 118, 119);\n    linearinv(r, 0, 1, 2, 3);\n    sb4inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 112, 113, 114, 115);\n    linearinv(r, 0, 1, 2, 3);\n    sb3inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 108, 109, 110, 111);\n    linearinv(r, 0, 1, 2, 3);\n    sb2inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 104, 105, 106, 107);\n    linearinv(r, 0, 1, 2, 3);\n    sb1inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 100, 101, 102, 103);\n    linearinv(r, 0, 1, 2, 3);\n    sb0inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 96, 97, 98, 99);\n    linearinv(r, 0, 1, 2, 3);\n\n    sb7inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 92, 93, 94, 95);\n    linearinv(r, 0, 1, 2, 3);\n    sb6inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 88, 89, 90, 91);\n    linearinv(r, 0, 1, 2, 3);\n    sb5inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 84, 85, 86, 87);\n    linearinv(r, 0, 1, 2, 3);\n    sb4inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 80, 81, 82, 83);\n    linearinv(r, 0, 1, 2, 3);\n    sb3inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 76, 77, 78, 79);\n    linearinv(r, 0, 1, 2, 3);\n    sb2inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 72, 73, 74, 75);\n    linearinv(r, 0, 1, 2, 3);\n    sb1inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 68, 69, 70, 71);\n    linearinv(r, 0, 1, 2, 3);\n    sb0inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 64, 65, 66, 67);\n    linearinv(r, 0, 1, 2, 3);\n\n    sb7inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 60, 61, 62, 63);\n    linearinv(r, 0, 1, 2, 3);\n    sb6inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 56, 57, 58, 59);\n    linearinv(r, 0, 1, 2, 3);\n    sb5inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 52, 53, 54, 55);\n    linearinv(r, 0, 1, 2, 3);\n    sb4inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 48, 49, 50, 51);\n    linearinv(r, 0, 1, 2, 3);\n    sb3inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 44, 45, 46, 47);\n    linearinv(r, 0, 1, 2, 3);\n    sb2inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 40, 41, 42, 43);\n    linearinv(r, 0, 1, 2, 3);\n    sb1inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 36, 37, 38, 39);\n    linearinv(r, 0, 1, 2, 3);\n    sb0inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 32, 33, 34, 35);\n    linearinv(r, 0, 1, 2, 3);\n\n    sb7inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 28, 29, 30, 31);\n    linearinv(r, 0, 1, 2, 3);\n    sb6inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 24, 25, 26, 27);\n    linearinv(r, 0, 1, 2, 3);\n    sb5inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 20, 21, 22, 23);\n    linearinv(r, 0, 1, 2, 3);\n    sb4inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 16, 17, 18, 19);\n    linearinv(r, 0, 1, 2, 3);\n    sb3inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 12, 13, 14, 15);\n    linearinv(r, 0, 1, 2, 3);\n    sb2inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 8, 9, 10, 11);\n    linearinv(r, 0, 1, 2, 3);\n    sb1inv(r, 0, 1, 2, 3);\n    xor4(r, sk, 4, 5, 6, 7);\n    linearinv(r, 0, 1, 2, 3);\n    sb0inv(r, 0, 1, 2, 3);\n\n    r[0] ^= sk[0];\n    r[1] ^= sk[1];\n    r[2] ^= sk[2];\n    r[3] ^= sk[3];\n\n    writeU32(output, r[0], opos + 0);\n    writeU32(output, r[1], opos + 4);\n    writeU32(output, r[2], opos + 8);\n    writeU32(output, r[3], opos + 12);\n\n    return this;\n  }\n\n  destroy() {\n    for (let i = 0; i < 132; i++)\n      this.subkeys[i] = 0;\n\n    for (let i = 0; i < 4; i++)\n      this.block[i] = 0;\n\n    return this;\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction xor4(r, s, s1, s2, s3, s4) {\n  r[0] ^= s[s1];\n  r[1] ^= s[s2];\n  r[2] ^= s[s3];\n  r[3] ^= s[s4];\n}\n\nfunction linear(v, v0, v1, v2, v3) {\n  let t0 = ((v[v0] << 13) | (v[v0] >>> (32 - 13)));\n  let t2 = ((v[v2] << 3) | (v[v2] >>> (32 - 3)));\n\n  const t1 = v[v1] ^ t0 ^ t2;\n  const t3 = v[v3] ^ t2 ^ (t0 << 3);\n\n  v[v1] = (t1 << 1) | (t1 >>> (32 - 1));\n  v[v3] = (t3 << 7) | (t3 >>> (32 - 7));\n\n  t0 ^= v[v1] ^ v[v3];\n  t2 ^= v[v3] ^ (v[v1] << 7);\n\n  v[v0] = (t0 << 5) | (t0 >>> (32 - 5));\n  v[v2] = (t2 << 22) | (t2 >>> (32 - 22));\n}\n\nfunction linearinv(v, v0, v1, v2, v3) {\n  let t2 = (v[v2] >>> 22) | (v[v2] << (32 - 22));\n  let t0 = (v[v0] >>> 5) | (v[v0] << (32 - 5));\n\n  t2 ^= v[v3] ^ (v[v1] << 7);\n  t0 ^= v[v1] ^ v[v3];\n\n  const t3 = (v[v3] >>> 7) | (v[v3] << (32 - 7));\n  const t1 = (v[v1] >>> 1) | (v[v1] << (32 - 1));\n\n  v[v3] = t3 ^ t2 ^ (t0 << 3);\n  v[v1] = t1 ^ t0 ^ t2;\n  v[v2] = (t2 >>> 3) | (t2 << (32 - 3));\n  v[v0] = (t0 >>> 13) | (t0 << (32 - 13));\n}\n\nfunction sb0(r, r0, r1, r2, r3) {\n  const t0 = r[r0] ^ r[r3];\n  const t1 = r[r2] ^ t0;\n  const t2 = r[r1] ^ t1;\n\n  r[r3] = (r[r0] & r[r3]) ^ t2;\n\n  const t3 = r[r0] ^ (r[r1] & t0);\n\n  r[r2] = t2 ^ (r[r2] | t3);\n\n  const t4 = r[r3] & (t1 ^ t3);\n\n  r[r1] = (~t1) ^ t4;\n  r[r0] = t4 ^ (~t3);\n}\n\nfunction sb0inv(r, r0, r1, r2, r3) {\n  const t0 = ~(r[r0]);\n  const t1 = r[r0] ^ r[r1];\n  const t2 = r[r3] ^ (t0 | t1);\n  const t3 = r[r2] ^ t2;\n\n  r[r2] = t1 ^ t3;\n\n  const t4 = t0 ^ (r[r3] & t1);\n\n  r[r1] = t2 ^ (r[r2] & t4);\n  r[r3] = (r[r0] & t2) ^ (t3 | r[r1]);\n  r[r0] = r[r3] ^ (t3 ^ t4);\n}\n\nfunction sb1(r, r0, r1, r2, r3) {\n  const t0 = r[r1] ^ (~(r[r0]));\n  const t1 = r[r2] ^ (r[r0] | t0);\n\n  r[r2] = r[r3] ^ t1;\n\n  const t2 = r[r1] ^ (r[r3] | t0);\n  const t3 = t0 ^ r[r2];\n\n  r[r3] = t3 ^ (t1 & t2);\n\n  const t4 = t1 ^ t2;\n\n  r[r1] = r[r3] ^ t4;\n  r[r0] = t1 ^ (t3 & t4);\n}\n\nfunction sb1inv(r, r0, r1, r2, r3) {\n  const t0 = r[r1] ^ r[r3];\n  const t1 = r[r0] ^ (r[r1] & t0);\n  const t2 = t0 ^ t1;\n\n  r[r3] = r[r2] ^ t2;\n\n  const t3 = r[r1] ^ (t0 & t1);\n  const t4 = r[r3] | t3;\n\n  r[r1] = t1 ^ t4;\n\n  const t5 = ~(r[r1]);\n  const t6 = r[r3] ^ t3;\n\n  r[r0] = t5 ^ t6;\n  r[r2] = t2 ^ (t5 | t6);\n}\n\nfunction sb2(r, r0, r1, r2, r3) {\n  const v0 = r[r0];\n  const v3 = r[r3];\n  const t0 = ~v0;\n  const t1 = r[r1] ^ v3;\n  const t2 = r[r2] & t0;\n\n  r[r0] = t1 ^ t2;\n\n  const t3 = r[r2] ^ t0;\n  const t4 = r[r2] ^ r[r0];\n  const t5 = r[r1] & t4;\n\n  r[r3] = t3 ^ t5;\n  r[r2] = v0 ^ ((v3 | t5) & (r[r0] | t3));\n  r[r1] = (t1 ^ r[r3]) ^ (r[r2] ^ (v3 | t0));\n}\n\nfunction sb2inv(r, r0, r1, r2, r3) {\n  const v0 = r[r0];\n  const v3 = r[r3];\n  const t0 = r[r1] ^ v3;\n  const t1 = ~t0;\n  const t2 = v0 ^ r[r2];\n  const t3 = r[r2] ^ t0;\n  const t4 = r[r1] & t3;\n\n  r[r0] = t2 ^ t4;\n\n  const t5 = v0 | t1;\n  const t6 = v3 ^ t5;\n  const t7 = t2 | t6;\n\n  r[r3] = t0 ^ t7;\n\n  const t8 = ~t3;\n  const t9 = r[r0] | r[r3];\n\n  r[r1] = t8 ^ t9;\n  r[r2] = (v3 & t8) ^ (t2 ^ t9);\n}\n\nfunction sb3(r, r0, r1, r2, r3) {\n  const v1 = r[r1];\n  const v3 = r[r3];\n  const t0 = r[r0] ^ r[r1];\n  const t1 = r[r0] & r[r2];\n  const t2 = r[r0] | r[r3];\n  const t3 = r[r2] ^ r[r3];\n  const t4 = t0 & t2;\n  const t5 = t1 | t4;\n\n  r[r2] = t3 ^ t5;\n\n  const t6 = r[r1] ^ t2;\n  const t7 = t5 ^ t6;\n  const t8 = t3 & t7;\n\n  r[r0] = t0 ^ t8;\n\n  const t9 = r[r2] & r[r0];\n\n  r[r1] = t7 ^ t9;\n  r[r3] = (v1 | v3) ^ (t3 ^ t9);\n}\n\nfunction sb3inv(r, r0, r1, r2, r3) {\n  const t0 = r[r0] | r[r1];\n  const t1 = r[r1] ^ r[r2];\n  const t2 = r[r1] & t1;\n  const t3 = r[r0] ^ t2;\n  const t4 = r[r2] ^ t3;\n  const t5 = r[r3] | t3;\n\n  r[r0] = t1 ^ t5;\n\n  const t6 = t1 | t5;\n  const t7 = r[r3] ^ t6;\n\n  r[r2] = t4 ^ t7;\n\n  const t8 = t0 ^ t7;\n  const t9 = r[r0] & t8;\n\n  r[r3] = t3 ^ t9;\n  r[r1] = r[r3] ^ (r[r0] ^ t8);\n}\n\nfunction sb4(r, r0, r1, r2, r3) {\n  const v0 = r[r0];\n  const t0 = v0 ^ r[r3];\n  const t1 = r[r3] & t0;\n  const t2 = r[r2] ^ t1;\n  const t3 = r[r1] | t2;\n\n  r[r3] = t0 ^ t3;\n\n  const t4 = ~(r[r1]);\n  const t5 = t0 | t4;\n\n  r[r0] = t2 ^ t5;\n\n  const t6 = v0 & r[r0];\n  const t7 = t0 ^ t4;\n  const t8 = t3 & t7;\n\n  r[r2] = t6 ^ t8;\n  r[r1] = (v0 ^ t2) ^ (t7 & r[r2]);\n}\n\nfunction sb4inv(r, r0, r1, r2, r3) {\n  const v3 = r[r3];\n  const t0 = r[r2] | v3;\n  const t1 = r[r0] & t0;\n  const t2 = r[r1] ^ t1;\n  const t3 = r[r0] & t2;\n  const t4 = r[r2] ^ t3;\n\n  r[r1] = v3 ^ t4;\n\n  const t5 = ~(r[r0]);\n  const t6 = t4 & r[r1];\n\n  r[r3] = t2 ^ t6;\n\n  const t7 = r[r1] | t5;\n  const t8 = v3 ^ t7;\n\n  r[r0] = r[r3] ^ t8;\n  r[r2] = (t2 & t8) ^ (r[r1] ^ t5);\n}\n\nfunction sb5(r, r0, r1, r2, r3) {\n  const v1 = r[r1];\n  const t0 = ~(r[r0]);\n  const t1 = r[r0] ^ v1;\n  const t2 = r[r0] ^ r[r3];\n  const t3 = r[r2] ^ t0;\n  const t4 = t1 | t2;\n\n  r[r0] = t3 ^ t4;\n\n  const t5 = r[r3] & r[r0];\n  const t6 = t1 ^ r[r0];\n\n  r[r1] = t5 ^ t6;\n\n  const t7 = t0 | r[r0];\n  const t8 = t1 | t5;\n  const t9 = t2 ^ t7;\n\n  r[r2] = t8 ^ t9;\n  r[r3] = (v1 ^ t5) ^ (r[r1] & t9);\n}\n\nfunction sb5inv(r, r0, r1, r2, r3) {\n  const v0 = r[r0];\n  const v1 = r[r1];\n  const v3 = r[r3];\n  const t0 = ~(r[r2]);\n  const t1 = v1 & t0;\n  const t2 = v3 ^ t1;\n  const t3 = v0 & t2;\n  const t4 = v1 ^ t0;\n\n  r[r3] = t3 ^ t4;\n\n  const t5 = v1 | r[r3];\n  const t6 = v0 & t5;\n\n  r[r1] = t2 ^ t6;\n\n  const t7 = v0 | v3;\n  const t8 = t0 ^ t5;\n\n  r[r0] = t7 ^ t8;\n  r[r2] = (v1 & t7) ^ (t3 | (v0 ^ r[r2]));\n}\n\nfunction sb6(r, r0, r1, r2, r3) {\n  const t0 = ~(r[r0]);\n  const t1 = r[r0] ^ r[r3];\n  const t2 = r[r1] ^ t1;\n  const t3 = t0 | t1;\n  const t4 = r[r2] ^ t3;\n\n  r[r1] = r[r1] ^ t4;\n\n  const t5 = t1 | r[r1];\n  const t6 = r[r3] ^ t5;\n  const t7 = t4 & t6;\n\n  r[r2] = t2 ^ t7;\n\n  const t8 = t4 ^ t6;\n\n  r[r0] = r[r2] ^ t8;\n  r[r3] = (~t4) ^ (t2 & t8);\n}\n\nfunction sb6inv(r, r0, r1, r2, r3) {\n  const v1 = r[r1];\n  const v3 = r[r3];\n  const t0 = ~(r[r0]);\n  const t1 = r[r0] ^ v1;\n  const t2 = r[r2] ^ t1;\n  const t3 = r[r2] | t0;\n  const t4 = v3 ^ t3;\n\n  r[r1] = t2 ^ t4;\n\n  const t5 = t2 & t4;\n  const t6 = t1 ^ t5;\n  const t7 = v1 | t6;\n\n  r[r3] = t4 ^ t7;\n\n  const t8 = v1 | r[r3];\n\n  r[r0] = t6 ^ t8;\n  r[r2] = (v3 & t0) ^ (t2 ^ t8);\n}\n\nfunction sb7(r, r0, r1, r2, r3) {\n  const t0 = r[r1] ^ r[r2];\n  const t1 = r[r2] & t0;\n  const t2 = r[r3] ^ t1;\n  const t3 = r[r0] ^ t2;\n  const t4 = r[r3] | t0;\n  const t5 = t3 & t4;\n\n  r[r1] = r[r1] ^ t5;\n\n  const t6 = t2 | r[r1];\n  const t7 = r[r0] & t3;\n\n  r[r3] = t0 ^ t7;\n\n  const t8 = t3 ^ t6;\n  const t9 = r[r3] & t8;\n\n  r[r2] = t2 ^ t9;\n  r[r0] = (~t8) ^ (r[r3] & r[r2]);\n}\n\nfunction sb7inv(r, r0, r1, r2, r3) {\n  const v0 = r[r0];\n  const v3 = r[r3];\n  const t0 = r[r2] | (v0 & r[r1]);\n  const t1 = v3 & (v0 | r[r1]);\n\n  r[r3] = t0 ^ t1;\n\n  const t2 = ~v3;\n  const t3 = r[r1] ^ t1;\n  const t4 = t3 | (r[r3] ^ t2);\n\n  r[r1] = v0 ^ t4;\n  r[r0] = (r[r2] ^ t3) ^ (v3 | r[r1]);\n  r[r2] = (t0 ^ r[r1]) ^ (r[r0] ^ (v0 & r[r3]));\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off++] * 0x1000000);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Serpent;\n","/*!\n * twofish.js - twofish for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009, The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Twofish\n *   https://www.schneier.com/academic/twofish/\n *   https://github.com/golang/crypto/blob/master/twofish/twofish.go\n */\n\n'use strict';\n\nconst assert = require('../../internal/assert');\n\n/*\n * Constants\n */\n\nconst BLOCK_SIZE = 16;\nconst MDS_POLY = 0x169; // x^8 + x^6 + x^5 + x^3 + 1\nconst RS_POLY = 0x14d; // x^8 + x^6 + x^3 + x^2 + 1\n\nconst RS = [\n  new Uint8Array([0x01, 0xa4, 0x55, 0x87, 0x5a, 0x58, 0xdb, 0x9e]),\n  new Uint8Array([0xa4, 0x56, 0x82, 0xf3, 0x1e, 0xc6, 0x68, 0xe5]),\n  new Uint8Array([0x02, 0xa1, 0xfc, 0xc1, 0x47, 0xae, 0x3d, 0x19]),\n  new Uint8Array([0xa4, 0x55, 0x87, 0x5a, 0x58, 0xdb, 0x9e, 0x03])\n];\n\nconst S0 = new Uint8Array([\n  0xa9, 0x67, 0xb3, 0xe8, 0x04, 0xfd, 0xa3, 0x76,\n  0x9a, 0x92, 0x80, 0x78, 0xe4, 0xdd, 0xd1, 0x38,\n  0x0d, 0xc6, 0x35, 0x98, 0x18, 0xf7, 0xec, 0x6c,\n  0x43, 0x75, 0x37, 0x26, 0xfa, 0x13, 0x94, 0x48,\n  0xf2, 0xd0, 0x8b, 0x30, 0x84, 0x54, 0xdf, 0x23,\n  0x19, 0x5b, 0x3d, 0x59, 0xf3, 0xae, 0xa2, 0x82,\n  0x63, 0x01, 0x83, 0x2e, 0xd9, 0x51, 0x9b, 0x7c,\n  0xa6, 0xeb, 0xa5, 0xbe, 0x16, 0x0c, 0xe3, 0x61,\n  0xc0, 0x8c, 0x3a, 0xf5, 0x73, 0x2c, 0x25, 0x0b,\n  0xbb, 0x4e, 0x89, 0x6b, 0x53, 0x6a, 0xb4, 0xf1,\n  0xe1, 0xe6, 0xbd, 0x45, 0xe2, 0xf4, 0xb6, 0x66,\n  0xcc, 0x95, 0x03, 0x56, 0xd4, 0x1c, 0x1e, 0xd7,\n  0xfb, 0xc3, 0x8e, 0xb5, 0xe9, 0xcf, 0xbf, 0xba,\n  0xea, 0x77, 0x39, 0xaf, 0x33, 0xc9, 0x62, 0x71,\n  0x81, 0x79, 0x09, 0xad, 0x24, 0xcd, 0xf9, 0xd8,\n  0xe5, 0xc5, 0xb9, 0x4d, 0x44, 0x08, 0x86, 0xe7,\n  0xa1, 0x1d, 0xaa, 0xed, 0x06, 0x70, 0xb2, 0xd2,\n  0x41, 0x7b, 0xa0, 0x11, 0x31, 0xc2, 0x27, 0x90,\n  0x20, 0xf6, 0x60, 0xff, 0x96, 0x5c, 0xb1, 0xab,\n  0x9e, 0x9c, 0x52, 0x1b, 0x5f, 0x93, 0x0a, 0xef,\n  0x91, 0x85, 0x49, 0xee, 0x2d, 0x4f, 0x8f, 0x3b,\n  0x47, 0x87, 0x6d, 0x46, 0xd6, 0x3e, 0x69, 0x64,\n  0x2a, 0xce, 0xcb, 0x2f, 0xfc, 0x97, 0x05, 0x7a,\n  0xac, 0x7f, 0xd5, 0x1a, 0x4b, 0x0e, 0xa7, 0x5a,\n  0x28, 0x14, 0x3f, 0x29, 0x88, 0x3c, 0x4c, 0x02,\n  0xb8, 0xda, 0xb0, 0x17, 0x55, 0x1f, 0x8a, 0x7d,\n  0x57, 0xc7, 0x8d, 0x74, 0xb7, 0xc4, 0x9f, 0x72,\n  0x7e, 0x15, 0x22, 0x12, 0x58, 0x07, 0x99, 0x34,\n  0x6e, 0x50, 0xde, 0x68, 0x65, 0xbc, 0xdb, 0xf8,\n  0xc8, 0xa8, 0x2b, 0x40, 0xdc, 0xfe, 0x32, 0xa4,\n  0xca, 0x10, 0x21, 0xf0, 0xd3, 0x5d, 0x0f, 0x00,\n  0x6f, 0x9d, 0x36, 0x42, 0x4a, 0x5e, 0xc1, 0xe0\n]);\n\nconst S1 = new Uint8Array([\n  0x75, 0xf3, 0xc6, 0xf4, 0xdb, 0x7b, 0xfb, 0xc8,\n  0x4a, 0xd3, 0xe6, 0x6b, 0x45, 0x7d, 0xe8, 0x4b,\n  0xd6, 0x32, 0xd8, 0xfd, 0x37, 0x71, 0xf1, 0xe1,\n  0x30, 0x0f, 0xf8, 0x1b, 0x87, 0xfa, 0x06, 0x3f,\n  0x5e, 0xba, 0xae, 0x5b, 0x8a, 0x00, 0xbc, 0x9d,\n  0x6d, 0xc1, 0xb1, 0x0e, 0x80, 0x5d, 0xd2, 0xd5,\n  0xa0, 0x84, 0x07, 0x14, 0xb5, 0x90, 0x2c, 0xa3,\n  0xb2, 0x73, 0x4c, 0x54, 0x92, 0x74, 0x36, 0x51,\n  0x38, 0xb0, 0xbd, 0x5a, 0xfc, 0x60, 0x62, 0x96,\n  0x6c, 0x42, 0xf7, 0x10, 0x7c, 0x28, 0x27, 0x8c,\n  0x13, 0x95, 0x9c, 0xc7, 0x24, 0x46, 0x3b, 0x70,\n  0xca, 0xe3, 0x85, 0xcb, 0x11, 0xd0, 0x93, 0xb8,\n  0xa6, 0x83, 0x20, 0xff, 0x9f, 0x77, 0xc3, 0xcc,\n  0x03, 0x6f, 0x08, 0xbf, 0x40, 0xe7, 0x2b, 0xe2,\n  0x79, 0x0c, 0xaa, 0x82, 0x41, 0x3a, 0xea, 0xb9,\n  0xe4, 0x9a, 0xa4, 0x97, 0x7e, 0xda, 0x7a, 0x17,\n  0x66, 0x94, 0xa1, 0x1d, 0x3d, 0xf0, 0xde, 0xb3,\n  0x0b, 0x72, 0xa7, 0x1c, 0xef, 0xd1, 0x53, 0x3e,\n  0x8f, 0x33, 0x26, 0x5f, 0xec, 0x76, 0x2a, 0x49,\n  0x81, 0x88, 0xee, 0x21, 0xc4, 0x1a, 0xeb, 0xd9,\n  0xc5, 0x39, 0x99, 0xcd, 0xad, 0x31, 0x8b, 0x01,\n  0x18, 0x23, 0xdd, 0x1f, 0x4e, 0x2d, 0xf9, 0x48,\n  0x4f, 0xf2, 0x65, 0x8e, 0x78, 0x5c, 0x58, 0x19,\n  0x8d, 0xe5, 0x98, 0x57, 0x67, 0x7f, 0x05, 0x64,\n  0xaf, 0x63, 0xb6, 0xfe, 0xf5, 0xb7, 0x3c, 0xa5,\n  0xce, 0xe9, 0x68, 0x44, 0xe0, 0x4d, 0x43, 0x69,\n  0x29, 0x2e, 0xac, 0x15, 0x59, 0xa8, 0x0a, 0x9e,\n  0x6e, 0x47, 0xdf, 0x34, 0x35, 0x6a, 0xcf, 0xdc,\n  0x22, 0xc9, 0xc0, 0x9b, 0x89, 0xd4, 0xed, 0xab,\n  0x12, 0xa2, 0x0d, 0x52, 0xbb, 0x02, 0x2f, 0xa9,\n  0xd7, 0x61, 0x1e, 0xb4, 0x50, 0x04, 0xf6, 0xc2,\n  0x16, 0x25, 0x86, 0x56, 0x55, 0x09, 0xbe, 0x91\n]);\n\n/**\n * Twofish\n */\n\nclass Twofish {\n  constructor(bits = 256) {\n    assert((bits >>> 0) === bits);\n    assert(bits === 128 || bits === 192 || bits === 256);\n\n    this.bits = bits;\n\n    this.S = [\n      new Uint32Array(256),\n      new Uint32Array(256),\n      new Uint32Array(256),\n      new Uint32Array(256)\n    ];\n\n    this.k = new Uint32Array(40);\n  }\n\n  get blockSize() {\n    return BLOCK_SIZE;\n  }\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n\n    const keylen = key.length;\n\n    if (keylen !== 16 && keylen !== 24 && keylen !== 32)\n      throw new Error('Invalid key size.');\n\n    if (keylen !== (this.bits >>> 3))\n      throw new Error('Invalid key size.');\n\n    // k is the number of 64 bit words in key.\n    const k = keylen >>> 3;\n\n    // Create the S[..] words.\n    const W = new Uint8Array(4 * 4);\n\n    for (let i = 0; i < k; i++) {\n      for (let j = 0; j < 4; j++) {\n        for (let k = 0; k < 8; k++)\n          W[4 * i + j] ^= gfMul(key[8 * i + k], RS[j][k], RS_POLY);\n      }\n    }\n\n    // Calculate subkeys.\n    const tmp = new Uint8Array(4);\n\n    for (let i = 0; i < 20; i++) {\n      for (let j = 0; j < 4; j++)\n        tmp[j] = 2 * i;\n\n      const A = h(tmp, key, 0);\n\n      for (let j = 0; j < 4; j++)\n        tmp[j] = 2 * i + 1;\n\n      const B = rol32(h(tmp, key, 1), 8);\n\n      this.k[2 * i + 0] = A + B;\n      this.k[2 * i + 1] = rol32(2 * B + A, 9);\n    }\n\n    // Calculate sboxes.\n    switch (k) {\n      case 2:\n        for (let i = 0; i < 256; i++) {\n          this.S[0][i] = mdsMul(S1[S0[S0[i] ^ W[0]] ^ W[4]], 0);\n          this.S[1][i] = mdsMul(S0[S0[S1[i] ^ W[1]] ^ W[5]], 1);\n          this.S[2][i] = mdsMul(S1[S1[S0[i] ^ W[2]] ^ W[6]], 2);\n          this.S[3][i] = mdsMul(S0[S1[S1[i] ^ W[3]] ^ W[7]], 3);\n        }\n        break;\n      case 3:\n        for (let i = 0; i < 256; i++) {\n          this.S[0][i] = mdsMul(S1[S0[S0[S1[i] ^ W[0]] ^ W[4]] ^ W[8]], 0);\n          this.S[1][i] = mdsMul(S0[S0[S1[S1[i] ^ W[1]] ^ W[5]] ^ W[9]], 1);\n          this.S[2][i] = mdsMul(S1[S1[S0[S0[i] ^ W[2]] ^ W[6]] ^ W[10]], 2);\n          this.S[3][i] = mdsMul(S0[S1[S1[S0[i] ^ W[3]] ^ W[7]] ^ W[11]], 3);\n        }\n        break;\n      case 4:\n        for (let i = 0; i < 256; i++) {\n          this.S[0][i] =\n            mdsMul(S1[S0[S0[S1[S1[i] ^ W[0]] ^ W[4]] ^ W[8]] ^ W[12]], 0);\n          this.S[1][i] =\n            mdsMul(S0[S0[S1[S1[S0[i] ^ W[1]] ^ W[5]] ^ W[9]] ^ W[13]], 1);\n          this.S[2][i] =\n            mdsMul(S1[S1[S0[S0[S0[i] ^ W[2]] ^ W[6]] ^ W[10]] ^ W[14]], 2);\n          this.S[3][i] =\n            mdsMul(S0[S1[S1[S0[S1[i] ^ W[3]] ^ W[7]] ^ W[11]] ^ W[15]], 3);\n        }\n        break;\n      default:\n        throw new Error('unreachable');\n    }\n\n    return this;\n  }\n\n  encrypt(output, opos, input, ipos) {\n    const k = this.k;\n    const S0 = this.S[0];\n    const S1 = this.S[1];\n    const S2 = this.S[2];\n    const S3 = this.S[3];\n\n    // Load input.\n    let ia = readU32(input, ipos + 0);\n    let ib = readU32(input, ipos + 4);\n    let ic = readU32(input, ipos + 8);\n    let id = readU32(input, ipos + 12);\n    let t1, t2;\n\n    // Pre-whitening.\n    ia ^= this.k[0];\n    ib ^= this.k[1];\n    ic ^= this.k[2];\n    id ^= this.k[3];\n\n    for (let i = 0; i < 8; i++) {\n      const p = 8 + i * 4;\n\n      t2 = S1[(ib >>>  0) & 0xff]\n         ^ S2[(ib >>>  8) & 0xff]\n         ^ S3[(ib >>> 16) & 0xff]\n         ^ S0[(ib >>> 24) & 0xff];\n\n      t1 = S0[(ia >>>  0) & 0xff]\n         ^ S1[(ia >>>  8) & 0xff]\n         ^ S2[(ia >>> 16) & 0xff]\n         ^ S3[(ia >>> 24) & 0xff];\n\n      t1 += t2;\n\n      ic = ror32(ic ^ (t1 + k[p + 0]), 1);\n      id = rol32(id, 1) ^ (t2 + t1 + k[p + 1]);\n\n      t2 = S1[(id >>>  0) & 0xff]\n         ^ S2[(id >>>  8) & 0xff]\n         ^ S3[(id >>> 16) & 0xff]\n         ^ S0[(id >>> 24) & 0xff];\n\n      t1 = S0[(ic >>>  0) & 0xff]\n         ^ S1[(ic >>>  8) & 0xff]\n         ^ S2[(ic >>> 16) & 0xff]\n         ^ S3[(ic >>> 24) & 0xff];\n\n      t1 += t2;\n\n      ia = ror32(ia ^ (t1 + k[p + 2]), 1);\n      ib = rol32(ib, 1) ^ (t2 + t1 + k[p + 3]);\n    }\n\n    // Output with \"undo last swap\".\n    const ta = ic ^ this.k[4];\n    const tb = id ^ this.k[5];\n    const tc = ia ^ this.k[6];\n    const td = ib ^ this.k[7];\n\n    writeU32(output, ta, opos + 0);\n    writeU32(output, tb, opos + 4);\n    writeU32(output, tc, opos + 8);\n    writeU32(output, td, opos + 12);\n\n    return this;\n  }\n\n  decrypt(output, opos, input, ipos) {\n    const k = this.k;\n    const S0 = this.S[0];\n    const S1 = this.S[1];\n    const S2 = this.S[2];\n    const S3 = this.S[3];\n\n    // Load input.\n    const ta = readU32(input, ipos + 0);\n    const tb = readU32(input, ipos + 4);\n    const tc = readU32(input, ipos + 8);\n    const td = readU32(input, ipos + 12);\n\n    // Undo undo final swap.\n    let ia = tc ^ this.k[6];\n    let ib = td ^ this.k[7];\n    let ic = ta ^ this.k[4];\n    let id = tb ^ this.k[5];\n    let t1, t2;\n\n    for (let i = 8; i > 0; i--) {\n      const p = 4 + i * 4;\n\n      t2 = S1[(id >>>  0) & 0xff]\n         ^ S2[(id >>>  8) & 0xff]\n         ^ S3[(id >>> 16) & 0xff]\n         ^ S0[(id >>> 24) & 0xff];\n\n      t1 = S0[(ic >>>  0) & 0xff]\n         ^ S1[(ic >>>  8) & 0xff]\n         ^ S2[(ic >>> 16) & 0xff]\n         ^ S3[(ic >>> 24) & 0xff];\n\n      t1 += t2;\n\n      ia = rol32(ia, 1) ^ (t1 + k[p + 2]);\n      ib = ror32(ib ^ (t2 + t1 + k[p + 3]), 1);\n\n      t2 = S1[(ib >>>  0) & 0xff]\n         ^ S2[(ib >>>  8) & 0xff]\n         ^ S3[(ib >>> 16) & 0xff]\n         ^ S0[(ib >>> 24) & 0xff];\n\n      t1 = S0[(ia >>>  0) & 0xff]\n         ^ S1[(ia >>>  8) & 0xff]\n         ^ S2[(ia >>> 16) & 0xff]\n         ^ S3[(ia >>> 24) & 0xff];\n\n      t1 += t2;\n\n      ic = rol32(ic, 1) ^ (t1 + k[p + 0]);\n      id = ror32(id ^ (t2 + t1 + k[p + 1]), 1);\n    }\n\n    // Undo pre-whitening.\n    ia ^= this.k[0];\n    ib ^= this.k[1];\n    ic ^= this.k[2];\n    id ^= this.k[3];\n\n    writeU32(output, ia, opos + 0);\n    writeU32(output, ib, opos + 4);\n    writeU32(output, ic, opos + 8);\n    writeU32(output, id, opos + 12);\n\n    return this;\n  }\n\n  destroy() {\n    cleanse(this.S[0]);\n    cleanse(this.S[1]);\n    cleanse(this.S[2]);\n    cleanse(this.S[3]);\n    cleanse(this.k);\n    return this;\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction gfMul(a, b, p) {\n  const B = new Uint32Array([0, b & 0xff]);\n  const P = new Uint32Array([0, p >>> 0]);\n\n  let res = 0;\n\n  for (let i = 0; i < 7; i++) {\n    res ^= B[a & 1];\n    a >>>= 1;\n    B[1] = P[B[1] >>> 7] ^ (B[1] << 1);\n  }\n\n  res ^= B[a & 1];\n\n  return res & 0xff;\n}\n\nfunction mdsMul(v, col) {\n  const x = v & 0xff;\n  const y = gfMul(v, 0x5b, MDS_POLY);\n  const z = gfMul(v, 0xef, MDS_POLY);\n\n  switch (col) {\n    case 0:\n      return x | (y << 8) | (z << 16) | (z << 24);\n    case 1:\n      return z | (z << 8) | (y << 16) | (x << 24);\n    case 2:\n      return y | (z << 8) | (x << 16) | (z << 24);\n    case 3:\n      return y | (x << 8) | (z << 16) | (y << 24);\n  }\n\n  throw new Error('unreachable');\n}\n\nfunction h(v, key, off) {\n  const y = new Uint8Array(4);\n\n  for (let i = 0; i < 4; i++)\n    y[i] = v[i];\n\n  const k = key.length >>> 3;\n\n  switch (k) {\n    case 4:\n      y[0] = S1[y[0]] ^ key[4 * (6 + off) + 0];\n      y[1] = S0[y[1]] ^ key[4 * (6 + off) + 1];\n      y[2] = S0[y[2]] ^ key[4 * (6 + off) + 2];\n      y[3] = S1[y[3]] ^ key[4 * (6 + off) + 3];\n      // fallthrough\n    case 3:\n      y[0] = S1[y[0]] ^ key[4 * (4 + off) + 0];\n      y[1] = S1[y[1]] ^ key[4 * (4 + off) + 1];\n      y[2] = S0[y[2]] ^ key[4 * (4 + off) + 2];\n      y[3] = S0[y[3]] ^ key[4 * (4 + off) + 3];\n      // fallthrough\n    case 2:\n      y[0] = S1[S0[S0[y[0]]\n           ^ key[4 * (2 + off) + 0]]\n           ^ key[4 * (0 + off) + 0]];\n      y[1] = S0[S0[S1[y[1]]\n           ^ key[4 * (2 + off) + 1]]\n           ^ key[4 * (0 + off) + 1]];\n      y[2] = S1[S1[S0[y[2]]\n           ^ key[4 * (2 + off) + 2]]\n           ^ key[4 * (0 + off) + 2]];\n      y[3] = S0[S1[S1[y[3]]\n           ^ key[4 * (2 + off) + 3]]\n           ^ key[4 * (0 + off) + 3]];\n      break;\n    default:\n      throw new Error('Invalid key size.');\n  }\n\n  let mult = 0;\n\n  for (let i = 0; i < 4; i++)\n    mult ^= mdsMul(y[i], i);\n\n  return mult >>> 0;\n}\n\nfunction rol32(x, y) {\n  return (x << (y & 31)) | (x >>> (32 - (y & 31)));\n}\n\nfunction ror32(x, y) {\n  return (x >>> (y & 31)) | (x << (32 - (y & 31)));\n}\n\nfunction cleanse(arr) {\n  for (let i = 0; i < arr.length; i++)\n    arr[i] = 0;\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off++] * 0x1000000);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Twofish;\n","/*!\n * cleanse.js - cleanse for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/cleanse');\n","/*!\n * cleanse.js - memzero for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst random = require('../random');\n\n/**\n * A maybe-secure memzero.\n * @param {Buffer} data\n */\n\nfunction cleanse(data) {\n  assert(Buffer.isBuffer(data));\n  random.randomFill(data, 0, data.length);\n}\n\n/*\n * Static\n */\n\ncleanse.native = 0;\n\n/*\n * Expose\n */\n\nmodule.exports = cleanse;\n","/*!\n * cshake128.js - CSHAKE128 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst CSHAKE = require('./cshake');\n\n/**\n * CSHAKE128\n */\n\nclass CSHAKE128 extends CSHAKE {\n  constructor() {\n    super();\n  }\n\n  init(name, pers) {\n    return super.init(128, name, pers);\n  }\n\n  static hash() {\n    return new CSHAKE128();\n  }\n\n  static hmac(name, pers, len) {\n    return super.hmac(128, name, pers, len);\n  }\n\n  static digest(data, name, pers, len) {\n    return super.digest(data, 128, name, pers, len);\n  }\n\n  static root(left, right, name, pers, len) {\n    return super.root(left, right, 128, name, pers, len);\n  }\n\n  static multi(x, y, z, name, pers, len) {\n    return super.multi(x, y, z, 128, name, pers, len);\n  }\n\n  static mac(data, key, name, pers, len) {\n    return super.mac(data, key, 128, name, pers, len);\n  }\n}\n\n/*\n * Static\n */\n\nCSHAKE128.native = CSHAKE.native;\nCSHAKE128.id = 'CSHAKE128';\nCSHAKE128.size = 16;\nCSHAKE128.bits = 128;\nCSHAKE128.blockSize = 168;\nCSHAKE128.zero = Buffer.alloc(16, 0x00);\nCSHAKE128.ctx = new CSHAKE128();\n\n/*\n * Expose\n */\n\nmodule.exports = CSHAKE128;\n","/*!\n * cshake256.js - CSHAKE256 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst CSHAKE = require('./cshake');\n\n/**\n * CSHAKE256\n */\n\nclass CSHAKE256 extends CSHAKE {\n  constructor() {\n    super();\n  }\n\n  init(name, pers) {\n    return super.init(256, name, pers);\n  }\n\n  static hash() {\n    return new CSHAKE256();\n  }\n\n  static hmac(name, pers, len) {\n    return super.hmac(256, name, pers, len);\n  }\n\n  static digest(data, name, pers, len) {\n    return super.digest(data, 256, name, pers, len);\n  }\n\n  static root(left, right, name, pers, len) {\n    return super.root(left, right, 256, name, pers, len);\n  }\n\n  static multi(x, y, z, name, pers, len) {\n    return super.multi(x, y, z, 256, name, pers, len);\n  }\n\n  static mac(data, key, name, pers, len) {\n    return super.mac(data, key, 256, name, pers, len);\n  }\n}\n\n/*\n * Static\n */\n\nCSHAKE256.native = CSHAKE.native;\nCSHAKE256.id = 'CSHAKE256';\nCSHAKE256.size = 32;\nCSHAKE256.bits = 256;\nCSHAKE256.blockSize = 136;\nCSHAKE256.zero = Buffer.alloc(32, 0x00);\nCSHAKE256.ctx = new CSHAKE256();\n\n/*\n * Expose\n */\n\nmodule.exports = CSHAKE256;\n","/*!\n * ctr-drbg.js - ctr-drbg for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/ctr-drbg');\n","/*!\n * ctr-drbg.js - ctr-drbg implementation for bcrypto\n * Copyright (c) 2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on google/boringssl:\n *   https://github.com/google/boringssl\n *\n * Resources:\n *   https://csrc.nist.gov/publications/detail/sp/800-90a/archive/2012-01-23\n *   https://github.com/google/boringssl/blob/master/crypto/fipsmodule/rand/ctrdrbg.c\n *   https://github.com/google/boringssl/blob/master/crypto/fipsmodule/rand/internal.h\n *   https://github.com/openssl/openssl/blob/master/crypto/rand/drbg_lib.c\n *   https://github.com/cryptocoinjs/drbg.js/blob/master/ctr.js\n *   https://github.com/netroby/jdk9-dev/blob/master/jdk/src/java.base/share/classes/sun/security/provider/CtrDrbg.java\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst AES = require('./ciphers/aes');\n\n/*\n * Constants\n */\n\nconst MAX_GENERATE_LENGTH = 65536;\nconst RESEED_INTERVAL = 0x1000000000000;\n\n/**\n * CtrDRBG\n */\n\nclass CtrDRBG {\n  constructor(bits, derivation, entropy, nonce, pers) {\n    assert((bits >>> 0) === bits);\n    assert(typeof derivation === 'boolean');\n\n    this.bits = bits;\n    this.ctr = new CTR(bits);\n    this.keySize = bits >>> 3;\n    this.blkSize = 16;\n    this.entSize = this.keySize + this.blkSize;\n    this.slab = Buffer.alloc(this.entSize);\n    this.K = this.slab.slice(0, this.keySize);\n    this.V = this.slab.slice(this.keySize);\n    this.derivation = derivation;\n    this.rounds = 0;\n\n    if (entropy)\n      this.init(entropy, nonce, pers);\n  }\n\n  init(entropy, nonce, pers) {\n    if (nonce == null)\n      nonce = Buffer.alloc(0);\n\n    if (pers == null)\n      pers = Buffer.alloc(0);\n\n    assert(Buffer.isBuffer(entropy));\n    assert(Buffer.isBuffer(nonce));\n    assert(Buffer.isBuffer(pers));\n\n    let seed;\n\n    if (this.derivation) {\n      seed = this.derive(entropy, nonce, pers);\n    } else {\n      if (entropy.length + nonce.length > this.entSize)\n        throw new Error('Entropy is too long.');\n\n      if (pers.length > this.entSize)\n        throw new Error('Personalization string is too long.');\n\n      seed = Buffer.alloc(this.entSize, 0x00);\n\n      entropy.copy(seed, 0);\n      nonce.copy(seed, entropy.length);\n\n      for (let i = 0; i < pers.length; i++)\n        seed[i] ^= pers[i];\n    }\n\n    this.slab.fill(0);\n    this.ctr.init(this.K, this.V);\n    this.update(seed);\n    this.rounds = 1;\n\n    return this;\n  }\n\n  reseed(entropy, add) {\n    if (add == null)\n      add = Buffer.alloc(0);\n\n    assert(Buffer.isBuffer(entropy));\n    assert(Buffer.isBuffer(add));\n\n    if (this.rounds === 0)\n      throw new Error('DRBG not initialized.');\n\n    let seed;\n\n    if (this.derivation) {\n      seed = this.derive(entropy, add);\n    } else {\n      if (add.length > this.entSize)\n        throw new Error('Additional data is too long.');\n\n      seed = Buffer.alloc(this.entSize, 0x00);\n\n      entropy.copy(seed, 0);\n\n      for (let i = 0; i < add.length; i++)\n        seed[i] ^= add[i];\n    }\n\n    this.update(seed);\n    this.rounds = 1;\n\n    return this;\n  }\n\n  generate(len, add) {\n    assert((len >>> 0) === len);\n    assert(add == null || Buffer.isBuffer(add));\n\n    if (this.rounds === 0)\n      throw new Error('DRBG not initialized.');\n\n    if (this.rounds > RESEED_INTERVAL)\n      throw new Error('Reseed is required.');\n\n    if (len > MAX_GENERATE_LENGTH)\n      throw new Error('Requested length is too long.');\n\n    if (add && add.length > 0) {\n      if (this.derivation)\n        add = this.derive(add);\n\n      this.update(add);\n    }\n\n    const blocks = Math.ceil(len / this.blkSize);\n    const out = Buffer.alloc(blocks * this.blkSize);\n\n    for (let i = 0; i < blocks; i++)\n      this.ctr.encrypt(out, i * this.blkSize);\n\n    this.update(add);\n    this.rounds += 1;\n\n    return out.slice(0, len);\n  }\n\n  randomBytes(size) {\n    return this.generate(size);\n  }\n\n  /*\n   * Helpers\n   */\n\n  update(seed) {\n    if (seed == null)\n      seed = Buffer.alloc(0);\n\n    assert(Buffer.isBuffer(seed));\n\n    if (seed.length > this.entSize)\n      throw new Error('Seed is too long.');\n\n    this.slab.fill(0);\n\n    for (let i = 0; i < this.entSize; i += this.blkSize)\n      this.ctr.encrypt(this.slab, i);\n\n    for (let i = 0; i < seed.length; i++)\n      this.slab[i] ^= seed[i];\n\n    this.ctr.init(this.K, this.V);\n\n    return this;\n  }\n\n  serialize(...input) {\n    const N = this.entSize;\n\n    let L = 0;\n\n    for (const item of input)\n      L += item.length;\n\n    let size = this.blkSize + 4 + 4 + L + 1;\n\n    if (size % this.blkSize)\n      size += this.blkSize - (size % this.blkSize);\n\n    assert((size % this.blkSize) === 0);\n\n    // S = IV || (L || N || input || 0x80 || 0x00...)\n    const S = Buffer.alloc(size, 0x00);\n\n    let pos = this.blkSize;\n\n    pos = writeU32(S, L, pos);\n    pos = writeU32(S, N, pos);\n\n    for (const item of input)\n      pos += item.copy(S, pos);\n\n    S[pos++] = 0x80;\n\n    assert(pos === this.blkSize + 4 + 4 + L + 1);\n\n    return S;\n  }\n\n  derive(...input) {\n    const S = this.serialize(...input);\n    const N = S.length / this.blkSize;\n    const K = Buffer.alloc(this.keySize);\n    const blocks = Math.ceil(this.entSize / this.blkSize);\n    const slab = Buffer.alloc(blocks * this.blkSize);\n    const out = Buffer.alloc(blocks * this.blkSize);\n    const chain = Buffer.alloc(this.blkSize);\n\n    for (let i = 0; i < K.length; i++)\n      K[i] = i;\n\n    const ctx = new AES(this.bits).init(K);\n\n    for (let i = 0; i < blocks; i++) {\n      chain.fill(0);\n\n      writeU32(S, i, 0);\n\n      // chain = BCC(K, IV || S)\n      for (let j = 0; j < N; j++) {\n        for (let k = 0; k < chain.length; k++)\n          chain[k] ^= S[j * this.blkSize + k];\n\n        ctx.encrypt(chain, 0, chain, 0);\n      }\n\n      chain.copy(slab, i * this.blkSize);\n    }\n\n    const k = slab.slice(0, this.keySize);\n    const x = slab.slice(this.keySize, this.entSize);\n\n    ctx.init(k);\n\n    for (let i = 0; i < blocks; i++) {\n      ctx.encrypt(x, 0, x, 0);\n      x.copy(out, i * this.blkSize);\n    }\n\n    return out.slice(0, this.entSize);\n  }\n}\n\n/*\n * Static\n */\n\nCtrDRBG.native = 0;\n\n/*\n * CTR\n */\n\nclass CTR {\n  constructor(bits) {\n    this.ctx = new AES(bits);\n    this.ctr = Buffer.alloc(16);\n  }\n\n  init(key, iv) {\n    this.ctx.init(key);\n    iv.copy(this.ctr, 0);\n    return this;\n  }\n\n  increment() {\n    for (let i = this.ctr.length - 1; i >= 0; i--) {\n      this.ctr[i] += 1;\n\n      if (this.ctr[i] !== 0x00)\n        break;\n    }\n  }\n\n  encrypt(output, opos) {\n    this.increment();\n    this.ctx.encrypt(output, opos, this.ctr, 0);\n    return this;\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num >>> 24;\n  dst[off++] = num >>> 16;\n  dst[off++] = num >>> 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = CtrDRBG;\n","/*!\n * dsa.js - DSA for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009, The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * References:\n *\n *   [FIPS186] Federal Information Processing Standards Publication\n *     National Institute of Standards and Technology\n *     http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf\n *\n *   [DSA] Digital Signature Algorithm (wikipedia)\n *     https://en.wikipedia.org/wiki/Digital_Signature_Algorithm\n *\n *   [RFC6979] Deterministic Usage of the Digital Signature\n *             Algorithm (DSA) and Elliptic Curve Digital\n *             Signature Algorithm (ECDSA)\n *     T. Pornin\n *     https://tools.ietf.org/html/rfc6979\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst BN = require('../bn');\nconst rng = require('../random');\nconst HmacDRBG = require('../hmac-drbg');\nconst SHA256 = require('../sha256');\nconst {isProbablePrime} = require('../internal/primes');\nconst asn1 = require('../internal/asn1');\n\n/*\n * Constants\n */\n\nconst DEFAULT_BITS = 2048;\nconst MIN_BITS = 512;\nconst MAX_BITS = 10000;\n\n/**\n * DSAParams\n */\n\nclass DSAParams {\n  constructor() {\n    this.p = new BN(0);\n    this.q = new BN(0);\n    this.g = new BN(0);\n  }\n\n  bits() {\n    return this.p.bitLength();\n  }\n\n  size() {\n    return this.q.byteLength();\n  }\n\n  isSane() {\n    if (this.p.sign() < 0 || this.q.sign() < 0)\n      return false;\n\n    const pbits = this.p.bitLength();\n    const qbits = this.q.bitLength();\n\n    if (pbits < MIN_BITS || pbits > MAX_BITS)\n      return false;\n\n    if (qbits !== 160 && qbits !== 224 && qbits !== 256)\n      return false;\n\n    if (this.g.cmpn(2) < 0 || this.g.cmp(this.p.subn(1)) >= 0)\n      return false;\n\n    if (!this.p.isOdd())\n      return false;\n\n    if (!this.q.isOdd())\n      return false;\n\n    return true;\n  }\n\n  verify() {\n    return this.g.powm(this.q, this.p).cmpn(1) === 0;\n  }\n\n  generate(L, N) {\n    // [FIPS186] Page 31, Appendix A.1.\n    //           Page 41, Appendix A.2.\n    // [DSA] \"Parameter generation\".\n    assert((L >>> 0) === L);\n    assert((N >>> 0) === N);\n\n    if (!(L === 1024 && N === 160)\n        && !(L === 2048 && N === 224)\n        && !(L === 2048 && N === 256)\n        && !(L === 3072 && N === 256)) {\n      throw new Error('Invalid parameter sizes.');\n    }\n\n    if (L < MIN_BITS || L > MAX_BITS || (N & 7) !== 0)\n      throw new Error('Invalid parameter sizes.');\n\n    let q = null;\n    let p = null;\n\nouter:\n    for (;;) {\n      q = BN.randomBits(rng, N);\n      q.setn(N - 1, 1);\n      q.setn(0, 1);\n\n      if (!isProbablePrime(q, 64))\n        continue;\n\n      for (let i = 0; i < 4 * L; i++) {\n        p = BN.randomBits(rng, L);\n        p.setn(L - 1, 1);\n        p.setn(0, 1);\n\n        p.isub(p.mod(q).isubn(1));\n\n        const bits = p.bitLength();\n\n        if (bits < L || bits > MAX_BITS)\n          continue;\n\n        if (!isProbablePrime(p, 64))\n          continue;\n\n        break outer;\n      }\n    }\n\n    const h = new BN(2);\n    const pm1 = p.subn(1);\n    const e = pm1.div(q);\n\n    for (;;) {\n      const g = h.powm(e, p);\n\n      if (g.cmpn(1) === 0) {\n        h.iaddn(1);\n        continue;\n      }\n\n      this.p = p;\n      this.q = q;\n      this.g = g;\n\n      return this;\n    }\n  }\n\n  toParams() {\n    const group = new DSAParams();\n\n    group.p = this.p;\n    group.q = this.q;\n    group.g = this.g;\n\n    return group;\n  }\n\n  encode() {\n    let size = 0;\n\n    size += asn1.sizeInt(this.p);\n    size += asn1.sizeInt(this.q);\n    size += asn1.sizeInt(this.g);\n\n    const out = Buffer.alloc(asn1.sizeSeq(size));\n\n    let pos = 0;\n\n    pos = asn1.writeSeq(out, pos, size);\n    pos = asn1.writeInt(out, pos, this.p);\n    pos = asn1.writeInt(out, pos, this.q);\n    pos = asn1.writeInt(out, pos, this.g);\n\n    assert(pos === out.length);\n\n    return out;\n  }\n\n  decode(data) {\n    assert(Buffer.isBuffer(data));\n\n    let pos = 0;\n\n    pos = asn1.readSeq(data, pos);\n\n    [this.p, pos] = asn1.readInt(data, pos);\n    [this.q, pos] = asn1.readInt(data, pos);\n    [this.g, pos] = asn1.readInt(data, pos);\n\n    if (pos !== data.length)\n      throw new Error('Trailing bytes.');\n\n    return this;\n  }\n\n  static generate(L, N) {\n    return new DSAParams().generate(L, N);\n  }\n\n  static decode(data) {\n    return new DSAParams().decode(data);\n  }\n}\n\n/**\n * DSAPublicKey\n */\n\nclass DSAPublicKey extends DSAParams {\n  constructor() {\n    super();\n    this.y = new BN(0);\n  }\n\n  isSane() {\n    if (!super.isSane())\n      return false;\n\n    if (this.y.cmpn(2) < 0 || this.y.cmp(this.p.subn(1)) >= 0)\n      return false;\n\n    return true;\n  }\n\n  verify() {\n    if (!super.verify())\n      return false;\n\n    return this.y.powm(this.q, this.p).cmpn(1) === 0;\n  }\n\n  encode() {\n    let size = 0;\n\n    size += asn1.sizeInt(this.y);\n    size += asn1.sizeInt(this.p);\n    size += asn1.sizeInt(this.q);\n    size += asn1.sizeInt(this.g);\n\n    const out = Buffer.alloc(asn1.sizeSeq(size));\n\n    let pos = 0;\n\n    pos = asn1.writeSeq(out, pos, size);\n    pos = asn1.writeInt(out, pos, this.y);\n    pos = asn1.writeInt(out, pos, this.p);\n    pos = asn1.writeInt(out, pos, this.q);\n    pos = asn1.writeInt(out, pos, this.g);\n\n    assert(pos === out.length);\n\n    return out;\n  }\n\n  decode(data) {\n    assert(Buffer.isBuffer(data));\n\n    let pos = 0;\n\n    pos = asn1.readSeq(data, pos);\n\n    [this.y, pos] = asn1.readInt(data, pos);\n    [this.p, pos] = asn1.readInt(data, pos);\n    [this.q, pos] = asn1.readInt(data, pos);\n    [this.g, pos] = asn1.readInt(data, pos);\n\n    if (pos !== data.length)\n      throw new Error('Trailing bytes.');\n\n    return this;\n  }\n\n  static decode(data) {\n    return new DSAPublicKey().decode(data);\n  }\n}\n\n/**\n * DSAPrivateKey\n */\n\nclass DSAPrivateKey extends DSAPublicKey {\n  constructor() {\n    super();\n    this.x = new BN(0);\n  }\n\n  isSane() {\n    if (!super.isSane())\n      return false;\n\n    if (this.x.sign() <= 0 || this.x.cmp(this.q) >= 0)\n      return false;\n\n    return true;\n  }\n\n  isSaneCompute() {\n    const group = new DSAParams();\n\n    group.p = this.p;\n    group.q = this.q;\n    group.g = this.g;\n\n    if (!group.isSane())\n      return false;\n\n    if (this.x.sign() <= 0 || this.x.cmp(this.q) >= 0)\n      return false;\n\n    return true;\n  }\n\n  verify() {\n    if (!super.verify())\n      return false;\n\n    const y = this.g.powm(this.x, this.p);\n\n    return this.y.eq(y);\n  }\n\n  toPublic() {\n    const pub = new DSAPublicKey();\n\n    pub.p = this.p;\n    pub.q = this.q;\n    pub.g = this.g;\n    pub.y = this.y;\n\n    return pub;\n  }\n\n  encode() {\n    let size = 0;\n\n    size += asn1.sizeVersion(0);\n    size += asn1.sizeInt(this.p);\n    size += asn1.sizeInt(this.q);\n    size += asn1.sizeInt(this.g);\n    size += asn1.sizeInt(this.y);\n    size += asn1.sizeInt(this.x);\n\n    const out = Buffer.alloc(asn1.sizeSeq(size));\n\n    let pos = 0;\n\n    pos = asn1.writeSeq(out, pos, size);\n    pos = asn1.writeVersion(out, pos, 0);\n    pos = asn1.writeInt(out, pos, this.p);\n    pos = asn1.writeInt(out, pos, this.q);\n    pos = asn1.writeInt(out, pos, this.g);\n    pos = asn1.writeInt(out, pos, this.y);\n    pos = asn1.writeInt(out, pos, this.x);\n\n    assert(pos === out.length);\n\n    return out;\n  }\n\n  decode(data) {\n    assert(Buffer.isBuffer(data));\n\n    let pos = 0;\n\n    pos = asn1.readSeq(data, pos);\n    pos = asn1.readVersion(data, pos, 0);\n\n    [this.p, pos] = asn1.readInt(data, pos);\n    [this.q, pos] = asn1.readInt(data, pos);\n    [this.g, pos] = asn1.readInt(data, pos);\n    [this.y, pos] = asn1.readInt(data, pos);\n    [this.x, pos] = asn1.readInt(data, pos);\n\n    if (pos !== data.length)\n      throw new Error('Trailing bytes.');\n\n    return this;\n  }\n\n  static decode(data) {\n    return new DSAPrivateKey().decode(data);\n  }\n}\n\n/**\n * DSASignature\n */\n\nclass DSASignature {\n  constructor() {\n    this.r = new BN(0);\n    this.s = new BN(0);\n  }\n\n  encode() {\n    const size = asn1.sizeInt(this.r) + asn1.sizeInt(this.s);\n    const out = Buffer.alloc(asn1.sizeSeq(size));\n\n    let pos = 0;\n\n    pos = asn1.writeSeq(out, pos, size);\n    pos = asn1.writeInt(out, pos, this.r);\n    pos = asn1.writeInt(out, pos, this.s);\n\n    assert(pos === out.length);\n\n    return out;\n  }\n\n  decode(data) {\n    assert(Buffer.isBuffer(data));\n\n    let pos = 0;\n\n    pos = asn1.readSeq(data, pos);\n\n    [this.r, pos] = asn1.readInt(data, pos);\n    [this.s, pos] = asn1.readInt(data, pos);\n\n    if (pos !== data.length)\n      throw new Error('Trailing bytes.');\n\n    return this;\n  }\n\n  encodeRS(size) {\n    assert((size >> 0) === size);\n\n    return Buffer.concat([\n      this.r.encode('be', size),\n      this.s.encode('be', size)\n    ]);\n  }\n\n  decodeRS(data, size) {\n    assert(Buffer.isBuffer(data));\n\n    if (size == null)\n      size = data.length >>> 1;\n\n    assert((size >> 0) === size);\n    assert(data.length === size * 2);\n\n    this.r = BN.decode(data.slice(0, size));\n    this.s = BN.decode(data.slice(size, size * 2));\n\n    return this;\n  }\n\n  static decode(data) {\n    return new DSASignature().decode(data);\n  }\n\n  static decodeRS(data, size) {\n    return new DSASignature().decodeRS(data, size);\n  }\n}\n\n/**\n * Create params from key.\n * @param {Buffer} key\n * @returns {Buffer}\n */\n\nfunction paramsCreate(key) {\n  assert(Buffer.isBuffer(key));\n\n  let k;\n\n  try {\n    k = DSAPrivateKey.decode(key);\n  } catch (e) {\n    k = DSAPublicKey.decode(key);\n  }\n\n  const group = k.toParams();\n\n  if (!group.isSane())\n    throw new Error('Invalid DSA key.');\n\n  return group.encode();\n}\n\n/**\n * Generate params.\n * @param {Number} [bits=2048]\n * @returns {Buffer}\n */\n\nfunction paramsGenerate(bits) {\n  if (bits == null)\n    bits = DEFAULT_BITS;\n\n  assert((bits >>> 0) === bits);\n\n  if (bits < MIN_BITS || bits > MAX_BITS)\n    throw new RangeError(`\"bits\" ranges from ${MIN_BITS} to ${MAX_BITS}.`);\n\n  // OpenSSL behavior.\n  const L = bits;\n  const N = bits < 2048 ? 160 : 256;\n\n  return DSAParams.generate(L, N).encode();\n}\n\n/**\n * Generate params.\n * @param {Number} [bits=2048]\n * @returns {Buffer}\n */\n\nasync function paramsGenerateAsync(bits) {\n  return paramsGenerate(bits);\n}\n\n/**\n * Get params prime size in bits.\n * @param {Buffer} params\n * @returns {Number}\n */\n\nfunction paramsBits(params) {\n  const group = DSAParams.decode(params);\n\n  if (!group.isSane())\n    throw new Error('Invalid DSA params.');\n\n  return group.bits();\n}\n\n/**\n * Get params scalar size in bits.\n * @param {Buffer} params\n * @returns {Number}\n */\n\nfunction paramsScalarBits(params) {\n  const group = DSAParams.decode(params);\n\n  if (!group.isSane())\n    throw new Error('Invalid DSA params.');\n\n  return group.q.bitLength();\n}\n\n/**\n * Verify params.\n * @param {Buffer} params\n * @returns {Boolean}\n */\n\nfunction paramsVerify(params) {\n  assert(Buffer.isBuffer(params));\n\n  let group;\n  try {\n    group = DSAParams.decode(params);\n  } catch (e) {\n    return false;\n  }\n\n  if (!group.isSane())\n    return false;\n\n  return group.verify();\n}\n\n/**\n * Import params from an object.\n * @param {Object} json\n * @returns {Buffer}\n */\n\nfunction paramsImport(json) {\n  assert(json && typeof json === 'object');\n\n  const group = new DSAParams();\n\n  if (json.p != null)\n    group.p = BN.decode(json.p);\n\n  if (json.q != null)\n    group.q = BN.decode(json.q);\n\n  if (json.g != null)\n    group.g = BN.decode(json.g);\n\n  if (!group.isSane())\n    throw new Error('Invalid DSA parameters.');\n\n  return group.encode();\n}\n\n/**\n * Export params to an object.\n * @param {Buffer} params\n * @returns {Object}\n */\n\nfunction paramsExport(params) {\n  const group = DSAParams.decode(params);\n\n  if (!group.isSane())\n    throw new Error('Invalid DSA parameters.');\n\n  return {\n    p: group.p.encode(),\n    q: group.q.encode(),\n    g: group.g.encode()\n  };\n}\n\n/**\n * Generate private key from params.\n * @param {Buffer} params\n * @returns {Buffer}\n */\n\nfunction privateKeyCreate(params) {\n  // [FIPS186] Page 46, Appendix B.1.\n  // [DSA] \"Per-user keys\".\n  const group = DSAParams.decode(params);\n\n  if (!group.isSane())\n    throw new Error('Invalid DSA parameters.');\n\n  const {p, q, g} = group;\n  const x = BN.random(rng, 1, q);\n  const y = g.powm(x, p);\n  const key = new DSAPrivateKey();\n\n  key.p = p;\n  key.q = q;\n  key.g = g;\n  key.x = x;\n  key.y = y;\n\n  return key.encode();\n}\n\n/**\n * Generate private key.\n * @param {Number} [bits=2048]\n * @returns {Buffer}\n */\n\nfunction privateKeyGenerate(bits) {\n  const params = paramsGenerate(bits);\n  return privateKeyCreate(params);\n}\n\n/**\n * Generate private key.\n * @param {Number} [bits=2048]\n * @returns {Buffer}\n */\n\nasync function privateKeyGenerateAsync(bits) {\n  const params = await paramsGenerateAsync(bits);\n  return privateKeyCreate(params);\n}\n\n/**\n * Get private key prime size in bits.\n * @param {Buffer} key\n * @returns {Number}\n */\n\nfunction privateKeyBits(key) {\n  const k = DSAPrivateKey.decode(key);\n\n  if (!k.isSane())\n    throw new Error('Invalid DSA private key.');\n\n  return k.bits();\n}\n\n/**\n * Get private key scalar size in bits.\n * @param {Buffer} key\n * @returns {Number}\n */\n\nfunction privateKeyScalarBits(key) {\n  const k = DSAPrivateKey.decode(key);\n\n  if (!k.isSane())\n    throw new Error('Invalid DSA private key.');\n\n  return k.q.bitLength();\n}\n\n/**\n * Verify a private key.\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nfunction privateKeyVerify(key) {\n  assert(Buffer.isBuffer(key));\n\n  let k;\n  try {\n    k = DSAPrivateKey.decode(key);\n  } catch (e) {\n    return false;\n  }\n\n  if (!k.isSane())\n    return false;\n\n  return k.verify();\n}\n\n/**\n * Import a private key from an object.\n * @param {Object} json\n * @returns {Buffer}\n */\n\nfunction privateKeyImport(json) {\n  assert(json && typeof json === 'object');\n\n  const k = new DSAPrivateKey();\n\n  if (json.p != null)\n    k.p = BN.decode(json.p);\n\n  if (json.q != null)\n    k.q = BN.decode(json.q);\n\n  if (json.g != null)\n    k.g = BN.decode(json.g);\n\n  if (json.y != null)\n    k.y = BN.decode(json.y);\n\n  if (json.x != null)\n    k.x = BN.decode(json.x);\n\n  if (k.y.isZero()) {\n    if (!k.isSaneCompute())\n      throw new Error('Invalid DSA private key.');\n\n    k.y = k.g.powm(k.x, k.p);\n  } else {\n    if (!k.isSane())\n      throw new Error('Invalid DSA private key.');\n  }\n\n  return k.encode();\n}\n\n/**\n * Export a private key in OpenSSL ASN.1 format.\n * @param {Buffer} key\n * @returns {Buffer}\n */\n\nfunction privateKeyExport(key) {\n  const k = DSAPrivateKey.decode(key);\n\n  if (!k.isSane())\n    throw new Error('Invalid RSA private key.');\n\n  return {\n    p: k.p.encode(),\n    q: k.q.encode(),\n    g: k.g.encode(),\n    y: k.y.encode(),\n    x: k.x.encode()\n  };\n}\n\n/**\n * Create a public key from a private key.\n * @param {Buffer} key\n * @returns {Buffer}\n */\n\nfunction publicKeyCreate(key) {\n  const k = DSAPrivateKey.decode(key);\n\n  if (!k.isSane())\n    throw new Error('Invalid DSA private key.');\n\n  const p = k.toPublic();\n\n  return p.encode();\n}\n\n/**\n * Get public key prime size in bits.\n * @param {Buffer} key\n * @returns {Number}\n */\n\nfunction publicKeyBits(key) {\n  const k = DSAPublicKey.decode(key);\n\n  if (!k.isSane())\n    throw new Error('Invalid DSA public key.');\n\n  return k.bits();\n}\n\n/**\n * Get public key scalar size in bits.\n * @param {Buffer} key\n * @returns {Number}\n */\n\nfunction publicKeyScalarBits(key) {\n  const k = DSAPublicKey.decode(key);\n\n  if (!k.isSane())\n    throw new Error('Invalid DSA public key.');\n\n  return k.q.bitLength();\n}\n\n/**\n * Verify a public key.\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nfunction publicKeyVerify(key) {\n  let k;\n  try {\n    k = DSAPublicKey.decode(key);\n  } catch (e) {\n    return false;\n  }\n\n  if (!k.isSane())\n    return false;\n\n  return k.verify();\n}\n\n/**\n * Import a public key to an object.\n * @param {Object} json\n * @returns {Buffer}\n */\n\nfunction publicKeyImport(json) {\n  assert(json && typeof json === 'object');\n\n  const k = new DSAPublicKey();\n\n  if (json.p != null)\n    k.p = BN.decode(json.p);\n\n  if (json.q != null)\n    k.q = BN.decode(json.q);\n\n  if (json.g != null)\n    k.g = BN.decode(json.g);\n\n  if (json.y != null)\n    k.y = BN.decode(json.y);\n\n  if (!k.isSane())\n    throw new Error('Invalid DSA public key.');\n\n  return k.encode();\n}\n\n/**\n * Export a public key to an object.\n * @param {Buffer} key\n * @returns {Object}\n */\n\nfunction publicKeyExport(key) {\n  const k = DSAPublicKey.decode(key);\n\n  if (!k.isSane())\n    throw new Error('Invalid DSA public key.');\n\n  return {\n    p: k.p.encode(),\n    q: k.q.encode(),\n    g: k.g.encode(),\n    y: k.y.encode()\n  };\n}\n\n/**\n * Convert DER signature to R/S.\n * @param {Buffer} sig\n * @param {Number} size\n * @returns {Buffer} R/S-formatted signature.\n */\n\nfunction signatureImport(sig, size) {\n  const S = DSASignature.decode(sig);\n  return S.encodeRS(size);\n}\n\n/**\n * Convert R/S signature to DER.\n * @param {Buffer} sig\n * @param {Number} size\n * @returns {Buffer} DER-formatted signature.\n */\n\nfunction signatureExport(sig, size) {\n  const S = DSASignature.decodeRS(sig, size);\n  return S.encode();\n}\n\n/**\n * Sign a message (R/S).\n * @param {Buffer} msg\n * @param {Buffer} key - Private key.\n * @returns {Buffer} R/S-formatted signature.\n */\n\nfunction sign(msg, key) {\n  const k = DSAPrivateKey.decode(key);\n  const S = _sign(msg, k);\n  return S.encodeRS(k.size());\n}\n\n/**\n * Sign a message (DER).\n * @param {Buffer} msg\n * @param {Buffer} key - Private key.\n * @returns {Buffer} DER-formatted signature.\n */\n\nfunction signDER(msg, key) {\n  const k = DSAPrivateKey.decode(key);\n  const S = _sign(msg, k);\n  return S.encode();\n}\n\n/**\n * Sign a message.\n * @private\n * @param {Buffer} msg\n * @param {Buffer} key\n * @returns {Signature}\n */\n\nfunction _sign(msg, key) {\n  // DSA Signing.\n  //\n  // [FIPS186] Page 19, Section 4.6.\n  // [DSA] \"Signing\".\n  // [RFC6979] Page 9, Section 2.4.\n  // [RFC6979] Page 10, Section 3.2.\n  //\n  // Assumptions:\n  //\n  //   - Let `m` be an integer reduced from bytes.\n  //   - Let `x` be a secret non-zero scalar.\n  //   - Let `k` be a random non-zero scalar.\n  //   - r != 0, s != 0.\n  //\n  // Computation:\n  //\n  //   k = random integer in [1,q-1]\n  //   r' = g^k mod p\n  //   r = r' mod q\n  //   s = (r * x + m) / k mod q\n  //   S = (r, s)\n  //\n  // We can blind the scalar arithmetic\n  // with a random integer `b` like so:\n  //\n  //   b = random integer in [1,q-1]\n  //   s = (r * (x * b) + m * b) / (k * b) mod q\n  //\n  // Note that `k` must remain secret,\n  // otherwise an attacker can compute:\n  //\n  //   x = (s * k - m) / r mod q\n  //\n  // This means that if two signatures\n  // share the same `r` value, an attacker\n  // can compute:\n  //\n  //   k = (m1 - m2) / (s1 - s2) mod q\n  //   x = (s1 * k - m1) / r mod q\n  //\n  // Assuming:\n  //\n  //   s1 = (r * x + m1) / k mod q\n  //   s2 = (r * x + m2) / k mod q\n  //\n  // To mitigate this, `k` can be generated\n  // deterministically using the HMAC-DRBG\n  // construction described in [RFC6979].\n  assert(Buffer.isBuffer(msg));\n  assert(key instanceof DSAPrivateKey);\n\n  if (!key.isSane())\n    throw new Error('Invalid DSA private key.');\n\n  const {p, q, g, x} = key;\n  const bytes = q.byteLength();\n  const m = reduce(msg, q);\n  const entropy = x.encode('be', bytes);\n  const nonce = m.encode('be', bytes);\n  const drbg = new HmacDRBG(SHA256, entropy, nonce);\n\n  for (;;) {\n    const k = truncate(drbg.generate(bytes), q);\n\n    if (k.isZero() || k.cmp(q) >= 0)\n      continue;\n\n    const re = powBlind(g, k, p, q);\n    const r = re.mod(q);\n\n    if (r.isZero())\n      continue;\n\n    const b = BN.random(rng, 1, q);\n    const ki = k.mul(b).fermat(q);\n    const bx = x.mul(b).imod(q);\n    const bm = m.mul(b).imod(q);\n    const sk = r.mul(bx).iadd(bm).imod(q);\n    const s = sk.mul(ki).imod(q);\n\n    if (s.isZero())\n      continue;\n\n    const S = new DSASignature();\n\n    S.r = r;\n    S.s = s;\n\n    return S;\n  }\n}\n\n/**\n * Verify a signature (R/S).\n * @private\n * @param {Buffer} msg\n * @param {Buffer} sig - R/S-formatted.\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nfunction verify(msg, sig, key) {\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(sig));\n  assert(Buffer.isBuffer(key));\n\n  let k;\n  try {\n    k = DSAPublicKey.decode(key);\n  } catch (e) {\n    return false;\n  }\n\n  let S;\n  try {\n    S = DSASignature.decodeRS(sig, k.size());\n  } catch (e) {\n    return false;\n  }\n\n  try {\n    return _verify(msg, S, k);\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Verify a signature (DER).\n * @param {Buffer} msg\n * @param {Buffer} sig - DER-formatted.\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nfunction verifyDER(msg, sig, key) {\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(sig));\n  assert(Buffer.isBuffer(key));\n\n  let k;\n  try {\n    k = DSAPublicKey.decode(key);\n  } catch (e) {\n    return false;\n  }\n\n  let S;\n  try {\n    S = DSASignature.decode(sig);\n  } catch (e) {\n    return false;\n  }\n\n  try {\n    return _verify(msg, S, k);\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Verify a signature.\n * @private\n * @param {Buffer} msg\n * @param {Signature} S\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nfunction _verify(msg, S, key) {\n  // DSA Verification.\n  //\n  // [FIPS186] Page 19, Section 4.7.\n  // [DSA] \"Verifying a signature\".\n  //\n  // Assumptions:\n  //\n  //   - Let `m` be an integer reduced from bytes.\n  //   - Let `r` and `s` be signature elements.\n  //   - Let `y` be a valid group element.\n  //   - r != 0, r < q.\n  //   - s != 0, s < q.\n  //\n  // Computation:\n  //\n  //   u1 = m / s mod q\n  //   u2 = r / s mod q\n  //   r' = g^u1 * y^u2 mod p\n  //   r == r' mod q\n  const {r, s} = S;\n  const {p, q, g, y} = key;\n\n  if (!key.isSane())\n    return false;\n\n  if (r.isZero() || r.cmp(q) >= 0)\n    return false;\n\n  if (s.isZero() || s.cmp(q) >= 0)\n    return false;\n\n  const m = reduce(msg, q);\n  const si = s.invert(q);\n  const u1 = m.mul(si).imod(q);\n  const u2 = r.mul(si).imod(q);\n  const e1 = g.powm(u1, p);\n  const e2 = y.powm(u2, p);\n  const re = e1.mul(e2).imod(p);\n\n  return re.imod(q).eq(r);\n}\n\n/**\n * Perform a diffie-hellman.\n * @param {Buffer} pub\n * @param {Buffer} priv\n * @returns {Buffer}\n */\n\nfunction derive(pub, priv) {\n  const k1 = DSAPublicKey.decode(pub);\n  const k2 = DSAPrivateKey.decode(priv);\n\n  if (!k1.isSane())\n    throw new Error('Invalid DSA public key.');\n\n  if (!k2.isSane())\n    throw new Error('Invalid DSA private key.');\n\n  const {p, q, g, x} = k2;\n  const {y} = k1;\n\n  if (!k1.p.eq(p) || !k1.q.eq(q) || !k1.g.eq(g))\n    throw new Error('Incompatible DSA parameters.');\n\n  if (!k1.verify())\n    throw new Error('Invalid DSA public key.');\n\n  const e = powBlind(y, x, p, q);\n\n  return e.encode('be', p.byteLength());\n}\n\n/*\n * Helpers\n */\n\nfunction truncate(msg, q) {\n  // Byte array to integer conversion.\n  //\n  // [FIPS186] Page 68, Appendix C.2.\n  //\n  // Note that the FIPS186 behavior\n  // differs from OpenSSL's behavior.\n  // We replicate OpenSSL which takes\n  // the left-most ceil(log2(q+1)) bits\n  // modulo the order.\n  assert(Buffer.isBuffer(msg));\n  assert(q instanceof BN);\n\n  const bits = q.bitLength();\n  const bytes = (bits + 7) >>> 3;\n\n  if (msg.length > bytes)\n    msg = msg.slice(0, bytes);\n\n  const m = BN.decode(msg);\n  const d = msg.length * 8 - bits;\n\n  if (d > 0)\n    m.iushrn(d);\n\n  return m;\n}\n\nfunction reduce(msg, q) {\n  return truncate(msg, q).imod(q);\n}\n\nfunction powBlind(g, x, p, q) {\n  // Idea: exponentiate by scalar with a\n  // blinding factor, similar to how we\n  // blind multiplications in EC. Note\n  // that it would be safer if we had the\n  // blinding factor pregenerated for each\n  // key.\n  //\n  // Computation:\n  //\n  //   b = random integer in [1,q-1]\n  //   k = (x - b) mod q\n  //   e = g^k * g^b mod p\n  //\n  // In theory, we could also speed up\n  // the calculation of `e` with a multi\n  // exponentiation algorithm.\n  assert(g instanceof BN);\n  assert(x instanceof BN);\n  assert(p instanceof BN);\n  assert(q instanceof BN);\n\n  const G = g.toRed(BN.mont(p));\n  const b = BN.random(rng, 1, q);\n  const k = x.sub(b).imod(q);\n  const e1 = G.redPow(k);\n  const e2 = G.redPow(b);\n  const e = e1.redMul(e2);\n\n  return e.fromRed();\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.paramsCreate = paramsCreate;\nexports.paramsGenerate = paramsGenerate;\nexports.paramsGenerateAsync = paramsGenerateAsync;\nexports.paramsBits = paramsBits;\nexports.paramsScalarBits = paramsScalarBits;\nexports.paramsVerify = paramsVerify;\nexports.paramsImport = paramsImport;\nexports.paramsExport = paramsExport;\nexports.privateKeyCreate = privateKeyCreate;\nexports.privateKeyGenerate = privateKeyGenerate;\nexports.privateKeyGenerateAsync = privateKeyGenerateAsync;\nexports.privateKeyBits = privateKeyBits;\nexports.privateKeyScalarBits = privateKeyScalarBits;\nexports.privateKeyVerify = privateKeyVerify;\nexports.privateKeyImport = privateKeyImport;\nexports.privateKeyExport = privateKeyExport;\nexports.publicKeyCreate = publicKeyCreate;\nexports.publicKeyBits = publicKeyBits;\nexports.publicKeyScalarBits = publicKeyScalarBits;\nexports.publicKeyVerify = publicKeyVerify;\nexports.publicKeyImport = publicKeyImport;\nexports.publicKeyExport = publicKeyExport;\nexports.signatureImport = signatureImport;\nexports.signatureExport = signatureExport;\nexports.sign = sign;\nexports.signDER = signDER;\nexports.verify = verify;\nexports.verifyDER = verifyDER;\nexports.derive = derive;\n","/*!\n * hmac-drbg.js - hmac-drbg implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hmac-drbg:\n *   Copyright Fedor Indutny, 2017.\n *   https://github.com/indutny/hmac-drbg\n *\n * Resources:\n *   https://tools.ietf.org/html/rfc6979\n *   https://csrc.nist.gov/publications/detail/sp/800-90a/archive/2012-01-23\n *   https://github.com/indutny/hmac-drbg/blob/master/lib/hmac-drbg.js\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * Constants\n */\n\nconst RESEED_INTERVAL = 0x1000000000000;\nconst ZERO = Buffer.from([0x00]);\nconst ONE = Buffer.from([0x01]);\n\n/**\n * HmacDRBG\n */\n\nclass HmacDRBG {\n  constructor(hash, entropy, nonce, pers) {\n    assert(hash && typeof hash.id === 'string');\n\n    this.hash = hash;\n    this.minEntropy = hash.id === 'SHA1' ? 10 : 24;\n\n    this.K = Buffer.alloc(hash.size);\n    this.V = Buffer.alloc(hash.size);\n    this.rounds = 0;\n\n    if (entropy)\n      this.init(entropy, nonce, pers);\n  }\n\n  init(entropy, nonce, pers) {\n    if (nonce == null)\n      nonce = Buffer.alloc(0);\n\n    if (pers == null)\n      pers = Buffer.alloc(0);\n\n    assert(Buffer.isBuffer(entropy));\n    assert(Buffer.isBuffer(nonce));\n    assert(Buffer.isBuffer(pers));\n\n    for (let i = 0; i < this.V.length; i++) {\n      this.K[i] = 0x00;\n      this.V[i] = 0x01;\n    }\n\n    const seed = Buffer.concat([entropy, nonce, pers]);\n\n    if (seed.length < this.minEntropy)\n      throw new Error('Not enough entropy.');\n\n    this.update(seed);\n    this.rounds = 1;\n\n    return this;\n  }\n\n  reseed(entropy, add) {\n    if (add == null)\n      add = Buffer.alloc(0);\n\n    assert(Buffer.isBuffer(entropy));\n    assert(Buffer.isBuffer(add));\n\n    if (this.rounds === 0)\n      throw new Error('DRBG not initialized.');\n\n    const seed = Buffer.concat([entropy, add]);\n\n    if (seed.length < this.minEntropy)\n     throw new Error('Not enough entropy.');\n\n    this.update(seed);\n    this.rounds = 1;\n\n    return this;\n  }\n\n  generate(len, add) {\n    assert((len >>> 0) === len);\n    assert(add == null || Buffer.isBuffer(add));\n\n    if (this.rounds === 0)\n      throw new Error('DRBG not initialized.');\n\n    if (this.rounds > RESEED_INTERVAL)\n      throw new Error('Reseed is required.');\n\n    if (add && add.length > 0)\n      this.update(add);\n\n    const blocks = Math.ceil(len / this.hash.size);\n    const out = Buffer.alloc(blocks * this.hash.size);\n\n    for (let i = 0; i < blocks; i++) {\n      this.V = this.mac(this.V);\n      this.V.copy(out, i * this.hash.size);\n    }\n\n    this.update(add);\n    this.rounds += 1;\n\n    return out.slice(0, len);\n  }\n\n  randomBytes(size) {\n    return this.generate(size);\n  }\n\n  /*\n   * Helpers\n   */\n\n  mac(data) {\n    return this.hash.mac(data, this.K);\n  }\n\n  hmac() {\n    return this.hash.hmac().init(this.K);\n  }\n\n  update(seed) {\n    assert(seed == null || Buffer.isBuffer(seed));\n\n    const kmac = this.hmac();\n\n    kmac.update(this.V);\n    kmac.update(ZERO);\n\n    if (seed)\n      kmac.update(seed);\n\n    this.K = kmac.final();\n    this.V = this.mac(this.V);\n\n    if (seed && seed.length > 0) {\n      const kmac = this.hmac();\n\n      kmac.update(this.V);\n      kmac.update(ONE);\n      kmac.update(seed);\n\n      this.K = kmac.final();\n      this.V = this.mac(this.V);\n    }\n\n    return this;\n  }\n}\n\n/*\n * Static\n */\n\nHmacDRBG.native = 0;\n\n/*\n * Expose\n */\n\nmodule.exports = HmacDRBG;\n","/*!\n * dsaies.js - dsaies for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Integrated_Encryption_Scheme\n *   https://nacl.cr.yp.to/secretbox.html\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst dsa = require('./dsa');\nconst random = require('./random');\nconst box = require('./secretbox');\nconst {padLeft} = require('./encoding/util');\n\n/*\n * DSAIES\n */\n\nfunction encrypt(kdf, msg, pub, priv = null) {\n  assert(kdf != null);\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(pub));\n  assert(priv == null || Buffer.isBuffer(priv));\n\n  if (priv == null) {\n    const params = dsa.paramsCreate(pub);\n\n    priv = dsa.privateKeyCreate(params);\n  }\n\n  const klen = (dsa.publicKeyBits(pub) + 7) >>> 3;\n  const {y} = dsa.privateKeyExport(priv);\n  const secret = dsa.derive(pub, priv);\n  const key = box.derive(secret, kdf);\n  const nonce = random.randomBytes(24);\n  const ourY = padLeft(y, klen);\n  const sealed = box.seal(msg, key, nonce);\n\n  return Buffer.concat([ourY, nonce, sealed]);\n}\n\nfunction decrypt(kdf, msg, priv) {\n  assert(kdf != null);\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(priv));\n\n  const klen = (dsa.privateKeyBits(priv) + 7) >>> 3;\n\n  if (msg.length < klen + 24)\n    throw new Error('Invalid ciphertext.');\n\n  const {p, q, g} = dsa.privateKeyExport(priv);\n  const y = msg.slice(0, klen);\n  const theirPub = dsa.publicKeyImport({ p, q, g, y });\n  const nonce = msg.slice(klen, klen + 24);\n  const sealed = msg.slice(klen + 24);\n  const secret = dsa.derive(theirPub, priv);\n  const key = box.derive(secret, kdf);\n\n  return box.open(sealed, key, nonce);\n}\n\n/*\n * Expose\n */\n\nexports.encrypt = encrypt;\nexports.decrypt = decrypt;\n","/*!\n * eb2k.js - EVP_BytesToKey for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on crypto-browserify/EVP_BytesToKey:\n *   Copyright (c) 2017, crypto-browserify contributors\n *   https://github.com/crypto-browserify/EVP_BytesToKey\n *\n * Resources:\n *   https://github.com/openssl/openssl/blob/2e9d61e/crypto/evp/evp_key.c\n *   https://github.com/crypto-browserify/EVP_BytesToKey/blob/master/index.js\n *   https://github.com/openssl/openssl/blob/master/crypto/evp/evp_key.c\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * EB2K\n */\n\nfunction derive(hash, pass, salt, keyLen, ivLen) {\n  if (typeof pass === 'string')\n    pass = Buffer.from(pass, 'utf8');\n\n  if (typeof salt === 'string')\n    salt = Buffer.from(salt, 'utf8');\n\n  if (salt == null)\n    salt = Buffer.alloc(0);\n\n  if (ivLen == null)\n    ivLen = 0;\n\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(pass));\n  assert(Buffer.isBuffer(salt));\n  assert((keyLen >>> 0) === keyLen);\n  assert((ivLen >>> 0) === ivLen);\n\n  if (salt.length > 8)\n    salt = salt.slice(0, 8);\n\n  if (salt.length !== 0 && salt.length !== 8)\n    throw new RangeError('Salt must be at least 8 bytes.');\n\n  const key = Buffer.alloc(keyLen);\n  const iv = Buffer.alloc(ivLen);\n\n  let prev = Buffer.alloc(0);\n  let keyPos = 0;\n  let ivPos = 0;\n\n  while (keyPos < keyLen || ivPos < ivLen) {\n    let prevPos = 0;\n\n    prev = hash.multi(prev, pass, salt);\n\n    if (keyPos < keyLen) {\n      const need = Math.min(keyLen - keyPos, prev.length - prevPos);\n\n      prev.copy(key, keyPos, prevPos, prevPos + need);\n\n      keyPos += need;\n      prevPos += need;\n    }\n\n    if (ivPos < ivLen) {\n      const need = Math.min(ivLen - ivPos, prev.length - prevPos);\n\n      prev.copy(iv, ivPos, prevPos, prevPos + need);\n\n      ivPos += need;\n      prevPos += need;\n    }\n  }\n\n  return [key, iv];\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.derive = derive;\n","/*!\n * ecies.js - ecies for javascript (crypto_secretbox_xsalsa20poly1305)\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Integrated_Encryption_Scheme\n *   https://nacl.cr.yp.to/secretbox.html\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst box = require('./secretbox');\nconst random = require('./random');\n\n/*\n * ECIES\n */\n\nfunction encrypt(curve, kdf, msg, pub, priv = null) {\n  assert(curve && typeof curve.id === 'string');\n\n  if (priv == null)\n    priv = curve.privateKeyGenerate();\n\n  const ourPub = curve.publicKeyCreate(priv);\n  const secret = curve.derive(pub, priv);\n  const key = box.derive(secret, kdf);\n  const nonce = random.randomBytes(24);\n  const sealed = box.seal(msg, key, nonce);\n\n  return Buffer.concat([ourPub, nonce, sealed]);\n}\n\nfunction decrypt(curve, kdf, msg, priv) {\n  assert(curve && typeof curve.id === 'string');\n  assert(Buffer.isBuffer(msg));\n\n  const klen = curve.type === 'ecdsa'\n    ? 1 + curve.size\n    : curve.size;\n\n  if (msg.length < klen + 24)\n    throw new Error('Invalid ciphertext.');\n\n  const theirPub = msg.slice(0, klen);\n  const nonce = msg.slice(klen, klen + 24);\n  const sealed = msg.slice(klen + 24);\n  const secret = curve.derive(theirPub, priv);\n  const key = box.derive(secret, kdf);\n\n  return box.open(sealed, key, nonce);\n}\n\n/*\n * Expose\n */\n\nexports.encrypt = encrypt;\nexports.decrypt = decrypt;\n","/*!\n * ed25519.js - ed25519 for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/EdDSA#Ed25519\n *   https://ed25519.cr.yp.to/ed25519-20110926.pdf\n *   https://tools.ietf.org/html/rfc8032#section-5.1\n */\n\n'use strict';\n\nconst EDDSA = require('./eddsa');\nconst SHA512 = require('../sha512');\nconst pre = require('./precomputed/ed25519.json');\n\n/*\n * Expose\n */\n\nmodule.exports = new EDDSA('ED25519', 'X25519', null, SHA512, pre);\n","/*!\n * ed448.js - ed448 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/ed448');\n","/*!\n * ed448.js - ed448 for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://eprint.iacr.org/2015/625.pdf\n *   https://tools.ietf.org/html/rfc8032#section-5.2\n */\n\n'use strict';\n\nconst EDDSA = require('./eddsa');\nconst SHAKE256 = require('../shake256');\n\n/*\n * Expose\n */\n\nmodule.exports = new EDDSA('ED448', 'X448', 'MONT448', SHAKE256);\n","/*!\n * index.js - encoding for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nexports.asn1 = require('./asn1');\nexports.base16 = require('./base16');\nexports.base32 = require('./base32');\nexports.base58 = require('./base58');\nexports.base64 = require('./base64');\nexports.bech32 = require('./bech32');\nexports.cash32 = require('./cash32');\nexports.lines = require('./lines');\nexports.openssl = require('./openssl');\nexports.pem = require('./pem');\nexports.pemcrypt = require('./pemcrypt');\nexports.pkcs1 = require('./pkcs1');\nexports.pkcs3 = require('./pkcs3');\nexports.pkcs5 = require('./pkcs5');\nexports.pkcs8 = require('./pkcs8');\nexports.rfc3279 = require('./rfc3279');\nexports.sec1 = require('./sec1');\nexports.util = require('./util');\nexports.x509 = require('./x509');\n","/*!\n * struct.js - struct object for bcoin\n * Copyright (c) 2018, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst enforce = require('./enforce');\nconst BufferReader = require('./reader');\nconst BufferWriter = require('./writer');\nconst StaticWriter = require('./staticwriter');\nconst {custom} = require('./custom');\n\n/**\n * Struct\n */\n\nclass Struct {\n  constructor() {}\n\n  inject(obj) {\n    enforce(obj instanceof this.constructor, 'obj', 'struct');\n    return this.decode(obj.encode());\n  }\n\n  clone() {\n    const copy = new this.constructor();\n    return copy.inject(this);\n  }\n\n  /*\n   * Bindable\n   */\n\n  getSize(extra) {\n    return -1;\n  }\n\n  write(bw, extra) {\n    return bw;\n  }\n\n  read(br, extra) {\n    return this;\n  }\n\n  toString() {\n    return Object.prototype.toString.call(this);\n  }\n\n  fromString(str, extra) {\n    return this;\n  }\n\n  getJSON() {\n    return this;\n  }\n\n  fromJSON(json, extra) {\n    return this;\n  }\n\n  fromOptions(options, extra) {\n    return this;\n  }\n\n  from(options, extra) {\n    return this.fromOptions(options, extra);\n  }\n\n  format() {\n    return this.getJSON();\n  }\n\n  /*\n   * API\n   */\n\n  encode(extra) {\n    const size = this.getSize(extra);\n    const bw = size === -1\n      ? new BufferWriter()\n      : new StaticWriter(size);\n\n    this.write(bw, extra);\n\n    return bw.render();\n  }\n\n  decode(data, extra) {\n    const br = new BufferReader(data);\n\n    this.read(br, extra);\n\n    return this;\n  }\n\n  toHex(extra) {\n    return this.encode(extra).toString('hex');\n  }\n\n  fromHex(str, extra) {\n    enforce(typeof str === 'string', 'str', 'string');\n\n    const size = str.length >>> 1;\n    const data = Buffer.from(str, 'hex');\n\n    if (data.length !== size)\n      throw new Error('Invalid hex string.');\n\n    return this.decode(data, extra);\n  }\n\n  toBase64(extra) {\n    return this.encode(extra).toString('base64');\n  }\n\n  fromBase64(str, extra) {\n    enforce(typeof str === 'string', 'str', 'string');\n\n    const data = Buffer.from(str, 'base64');\n\n    if (str.length > size64(data.length))\n      throw new Error('Invalid base64 string.');\n\n    return this.decode(data, extra);\n  }\n\n  toJSON() {\n    return this.getJSON();\n  }\n\n  [custom]() {\n    return this.format();\n  }\n\n  /*\n   * Static API\n   */\n\n  static read(br, extra) {\n    return new this().read(br, extra);\n  }\n\n  static decode(data, extra) {\n    return new this().decode(data, extra);\n  }\n\n  static fromHex(str, extra) {\n    return new this().fromHex(str, extra);\n  }\n\n  static fromBase64(str, extra) {\n    return new this().fromBase64(str, extra);\n  }\n\n  static fromString(str, extra) {\n    return new this().fromString(str, extra);\n  }\n\n  static fromJSON(json, extra) {\n    return new this().fromJSON(json, extra);\n  }\n\n  static fromOptions(options, extra) {\n    return new this().fromOptions(options, extra);\n  }\n\n  static from(options, extra) {\n    return new this().from(options, extra);\n  }\n\n  /*\n   * Aliases\n   */\n\n  toWriter(bw, extra) {\n    return this.write(bw, extra);\n  }\n\n  fromReader(br, extra) {\n    return this.read(br, extra);\n  }\n\n  toRaw(extra) {\n    return this.encode(extra);\n  }\n\n  fromRaw(data, extra) {\n    return this.decode(data, extra);\n  }\n\n  /*\n   * Static Aliases\n   */\n\n  static fromReader(br, extra) {\n    return this.read(br, extra);\n  }\n\n  static fromRaw(data, extra) {\n    return this.decode(data, extra);\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction size64(size) {\n  const expect = ((4 * size / 3) + 3) & ~3;\n  return expect >>> 0;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Struct;\n","/*!\n * objects.js - OIDs encoding for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009, The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Resources:\n *   https://www.ietf.org/rfc/rfc2459.txt\n *   https://tools.ietf.org/html/rfc3279\n *   http://oid-info.com/get/1.2.840.10040.4\n *   http://oid-info.com/get/1.2.840.113549.1.1\n *   http://oid-info.com/get/1.2.840.10045.4.3\n *   https://tools.ietf.org/html/draft-jivsov-openpgp-sha3-01\n *   https://github.com/golang/go/blob/master/src/crypto/x509/x509.go\n *   https://github.com/golang/go/blob/master/src/crypto/x509/pkix/pkix.go\n *   https://tools.ietf.org/html/draft-josefsson-pkix-eddsa-01\n *   https://tools.ietf.org/html/rfc5480\n *   https://tools.ietf.org/html/draft-josefsson-pkix-newcurves-00\n *   https://tools.ietf.org/id/draft-ietf-curdle-pkix-06.html\n *   https://tools.ietf.org/html/rfc7693\n */\n\n'use strict';\n\nconst NONE = '0.0';\n\nconst attrs = {\n  COUNTRY: '2.5.4.6',\n  ORGANIZATION: '2.5.4.10',\n  ORGANIZATIONALUNIT: '2.5.4.11',\n  COMMONNAME: '2.5.4.3',\n  SERIALNUMBER: '2.5.4.5',\n  LOCALITY: '2.5.4.7',\n  PROVINCE: '2.5.4.8',\n  STREETADDRESS: '2.5.4.9',\n  POSTALCODE: '2.5.4.17'\n};\n\nconst attrsByVal = {\n  [attrs.COUNTRY]: 'COUNTRY',\n  [attrs.ORGANIZATION]: 'ORGANIZATION',\n  [attrs.ORGANIZATIONALUNIT]: 'ORGANIZATIONALUNIT',\n  [attrs.COMMONNAME]: 'COMMONNAME',\n  [attrs.SERIALNUMBER]: 'SERIALNUMBER',\n  [attrs.LOCALITY]: 'LOCALITY',\n  [attrs.PROVINCE]: 'PROVINCE',\n  [attrs.STREETADDRESS]: 'STREETADDRESS',\n  [attrs.POSTALCODE]: 'POSTALCODE'\n};\n\nconst keyAlgs = {\n  DH: '1.2.840.113549.1.3.1',\n  DSA: '1.2.840.10040.4.1',\n  DSA_ALT: '1.2.840.10040.4.2',\n  RSA: '1.2.840.113549.1.1.1',\n  ECDSA: '1.2.840.10045.2.1',\n  EDDSA: '1.3.6.1.4.1.11591.4.12.1'\n};\n\nconst keyAlgsByVal = {\n  [keyAlgs.DH]: 'DH',\n  [keyAlgs.DSA]: 'DSA',\n  [keyAlgs.DSA_ALT]: 'DSA',\n  [keyAlgs.RSA]: 'RSA',\n  [keyAlgs.ECDSA]: 'ECDSA',\n  [keyAlgs.EDDSA]: 'EDDSA'\n};\n\nconst hashes = {\n  BLAKE2B160: '1.3.6.1.4.1.1722.12.2.1.5',\n  BLAKE2B256: '1.3.6.1.4.1.1722.12.2.1.8',\n  BLAKE2B384: '1.3.6.1.4.1.1722.12.2.1.12',\n  BLAKE2B512: '1.3.6.1.4.1.1722.12.2.1.16',\n  BLAKE2S128: '1.3.6.1.4.1.1722.12.2.2.4',\n  BLAKE2S160: '1.3.6.1.4.1.1722.12.2.2.5',\n  BLAKE2S224: '1.3.6.1.4.1.1722.12.2.2.7',\n  BLAKE2S256: '1.3.6.1.4.1.1722.12.2.2.8',\n  GOST94: '1.2.643.2.2.20',\n  MD2: '1.2.840.113549.2.2',\n  MD4: '1.2.840.113549.2.4',\n  MD5: '1.2.840.113549.2.5',\n  MDC2: '1.3.14.3.2.19',\n  RIPEMD160: '1.0.10118.3.0.49',\n  RIPEMD160_ALT: '1.3.36.3.2.1',\n  SHA1: '1.3.14.3.2.26',\n  SHA224: '2.16.840.1.101.3.4.2.4',\n  SHA256: '2.16.840.1.101.3.4.2.1',\n  SHA384: '2.16.840.1.101.3.4.2.2',\n  SHA512: '2.16.840.1.101.3.4.2.3',\n  SHA3_224: '2.16.840.1.101.3.4.2.7',\n  SHA3_256: '2.16.840.1.101.3.4.2.8',\n  SHA3_384: '2.16.840.1.101.3.4.2.9',\n  SHA3_512: '2.16.840.1.101.3.4.2.10',\n  SHAKE128: '2.16.840.1.101.3.4.2.11',\n  SHAKE256: '2.16.840.1.101.3.4.2.12',\n  SM3: '1.0.10118.3.0.65',\n  WHIRLPOOL: '1.0.10118.3.0.55'\n};\n\nconst hashesByVal = {\n  [hashes.BLAKE2B160]: 'BLAKE2B160',\n  [hashes.BLAKE2B256]: 'BLAKE2B256',\n  [hashes.BLAKE2B384]: 'BLAKE2B384',\n  [hashes.BLAKE2B512]: 'BLAKE2B512',\n  [hashes.BLAKE2S128]: 'BLAKE2S128',\n  [hashes.BLAKE2S160]: 'BLAKE2S160',\n  [hashes.BLAKE2S224]: 'BLAKE2S224',\n  [hashes.BLAKE2S256]: 'BLAKE2S256',\n  [hashes.GOST94]: 'GOST94',\n  [hashes.MD2]: 'MD2',\n  [hashes.MD4]: 'MD4',\n  [hashes.MD5]: 'MD5',\n  [hashes.MDC2]: 'MDC2',\n  [hashes.RIPEMD160]: 'RIPEMD160',\n  [hashes.RIPEMD160_ALT]: 'RIPEMD160',\n  [hashes.SHA1]: 'SHA1',\n  [hashes.SHA224]: 'SHA224',\n  [hashes.SHA256]: 'SHA256',\n  [hashes.SHA384]: 'SHA384',\n  [hashes.SHA512]: 'SHA512',\n  [hashes.SHA3_224]: 'SHA3_224',\n  [hashes.SHA3_256]: 'SHA3_256',\n  [hashes.SHA3_384]: 'SHA3_384',\n  [hashes.SHA3_512]: 'SHA3_512',\n  [hashes.SHAKE128]: 'SHAKE128',\n  [hashes.SHAKE256]: 'SHAKE256',\n  [hashes.SM3]: 'SM3',\n  [hashes.WHIRLPOOL]: 'WHIRLPOOL'\n};\n\nconst curves = {\n  P192: '1.2.840.10045.3.1.1',\n  P224: '1.3.132.0.33',\n  P256: '1.2.840.10045.3.1.7',\n  P384: '1.3.132.0.34',\n  P521: '1.3.132.0.35',\n  BRAINPOOLP256: '1.3.36.3.3.2.8.1.1.7',\n  BRAINPOOLP384: '1.3.36.3.3.2.8.1.1.11',\n  BRAINPOOLP512: '1.3.36.3.3.2.8.1.1.13',\n  SECP192K1: '1.3.132.0.31',\n  SECP224K1: '1.3.132.0.32',\n  SECP256K1: '1.3.132.0.10',\n  FRP256V1: '1.2.250.1.223.101.256.1',\n  X25519: '1.3.101.110',\n  X25519_ALT: '1.3.6.1.4.1.11591.7',\n  ED25519: '1.3.101.112',\n  X448: '1.3.101.111',\n  X448_ALT: '1.3.6.1.4.1.11591.8',\n  ED448: '1.3.101.113',\n  // Non-standard, but officially registered:\n  // See: https://github.com/weidai11/cryptopp/issues/67#issuecomment-162191213\n  ED1174: '1.3.6.1.4.1.9509.5.2.6',\n  ED41417: '1.3.6.1.4.1.9509.5.2.5',\n  CURVE383187: '1.3.6.1.4.1.9509.5.1.4',\n  M221: '1.3.6.1.4.1.9509.5.1.1',\n  E222: '1.3.6.1.4.1.9509.5.2.1',\n  M383: '1.3.6.1.4.1.9509.5.1.2',\n  E382: '1.3.6.1.4.1.9509.5.2.2',\n  M511: '1.3.6.1.4.1.9509.5.1.3',\n  E521: '1.3.6.1.4.1.9509.5.2.4'\n};\n\nconst curvesByVal = {\n  [curves.P192]: 'P192',\n  [curves.P224]: 'P224',\n  [curves.P256]: 'P256',\n  [curves.P384]: 'P384',\n  [curves.P521]: 'P521',\n  [curves.BRAINPOOLP256]: 'BRAINPOOLP256',\n  [curves.BRAINPOOLP384]: 'BRAINPOOLP384',\n  [curves.BRAINPOOLP512]: 'BRAINPOOLP512',\n  [curves.SECP192K1]: 'SECP192K1',\n  [curves.SECP224K1]: 'SECP224K1',\n  [curves.SECP256K1]: 'SECP256K1',\n  [curves.FRP256V1]: 'FRP256V1',\n  [curves.X25519]: 'X25519',\n  [curves.X25519_ALT]: 'X25519',\n  [curves.ED25519]: 'ED25519',\n  [curves.X448]: 'X448',\n  [curves.X448_ALT]: 'X448',\n  [curves.ED448]: 'ED448',\n  [curves.ED1174]: 'ED1174',\n  [curves.ED41417]: 'ED41417',\n  [curves.CURVE383187]: 'CURVE383187',\n  [curves.M221]: 'M221',\n  [curves.E222]: 'E222',\n  [curves.M383]: 'M383',\n  [curves.E382]: 'E382',\n  [curves.M511]: 'M511',\n  [curves.E521]: 'E521'\n};\n\nconst sigAlgs = {\n  DSASHA1: '1.2.840.10040.4.3',\n  RSAMD2: '1.2.840.113549.1.1.2',\n  RSAMD4: '1.2.840.113549.1.1.3',\n  RSAMD5: '1.2.840.113549.1.1.4',\n  RSASHA1: '1.2.840.113549.1.1.5',\n  RSASHA1_MS: '1.3.14.3.2.29',\n  RSAPSS: '1.2.840.113549.1.1.10',\n  RSASHA256: '1.2.840.113549.1.1.11',\n  RSASHA384: '1.2.840.113549.1.1.12',\n  RSASHA512: '1.2.840.113549.1.1.13',\n  RSASHA224: '1.2.840.113549.1.1.14',\n  MGF1: '1.2.840.113549.1.1.8',\n  RSASHA3_256: '2.16.840.1.101.3.4.2.8',\n  RSASHA3_384: '2.16.840.1.101.3.4.2.9',\n  RSASHA3_512: '2.16.840.1.101.3.4.2.10',\n  ECDSASHA1: '1.2.840.10045.4.1',\n  ECDSASHA224: '1.2.840.10045.4.3.1',\n  ECDSASHA256: '1.2.840.10045.4.3.2',\n  ECDSASHA384: '1.2.840.10045.4.3.3',\n  ECDSASHA512: '1.2.840.10045.4.3.4',\n  EDDSA: '1.3.6.1.4.1.11591.4.12.2'\n};\n\nconst sigAlgsByVal = {\n  [sigAlgs.DSASHA1]: 'DSASHA1',\n  [sigAlgs.RSAMD2]: 'RSAMD2',\n  [sigAlgs.RSAMD4]: 'RSAMD4',\n  [sigAlgs.RSAMD5]: 'RSAMD5',\n  [sigAlgs.RSASHA1]: 'RSASHA1',\n  [sigAlgs.RSASHA1_MS]: 'RSASHA1',\n  [sigAlgs.RSAPSS]: 'RSAPSS',\n  [sigAlgs.RSASHA256]: 'RSASHA256',\n  [sigAlgs.RSASHA384]: 'RSASHA384',\n  [sigAlgs.RSASHA512]: 'RSASHA512',\n  [sigAlgs.MGF1]: 'MGF1',\n  [sigAlgs.RSASHA3_256]: 'RSASHA3_256',\n  [sigAlgs.RSASHA3_384]: 'RSASHA3_384',\n  [sigAlgs.RSASHA3_512]: 'RSASHA3_512',\n  [sigAlgs.ECDSASHA1]: 'ECDSASHA1',\n  [sigAlgs.ECDSASHA224]: 'ECDSASHA224',\n  [sigAlgs.ECDSASHA384]: 'ECDSASHA384',\n  [sigAlgs.ECDSASHA512]: 'ECDSASHA512',\n  [sigAlgs.EDDSA]: 'EDDSA'\n};\n\nconst sigToHash = {\n  [sigAlgs.DSASHA1]: hashes.SHA1,\n  [sigAlgs.RSAMD2]: hashes.MD2,\n  [sigAlgs.RSAMD4]: hashes.MD4,\n  [sigAlgs.RSAMD5]: hashes.MD5,\n  [sigAlgs.RSASHA1]: hashes.SHA1,\n  [sigAlgs.RSASHA1_MS]: hashes.SHA1,\n  [sigAlgs.RSAPSS]: null,\n  [sigAlgs.RSASHA256]: hashes.SHA256,\n  [sigAlgs.RSASHA384]: hashes.SHA384,\n  [sigAlgs.RSASHA512]: hashes.SHA512,\n  [sigAlgs.MGF1]: null,\n  [sigAlgs.RSASHA3_256]: hashes.SHA3_256,\n  [sigAlgs.RSASHA3_384]: hashes.SHA3_384,\n  [sigAlgs.RSASHA3_512]: hashes.SHA3_512,\n  [sigAlgs.ECDSASHA1]: hashes.SHA1,\n  [sigAlgs.ECDSASHA224]: hashes.SHA224,\n  [sigAlgs.ECDSASHA384]: hashes.SHA384,\n  [sigAlgs.ECDSASHA512]: hashes.SHA512,\n  [sigAlgs.EDDSA]: null\n};\n\n/*\n * Expose\n */\n\nexports.NONE = NONE;\nexports.attrs = attrs;\nexports.attrsByVal = attrsByVal;\nexports.keyAlgs = keyAlgs;\nexports.keyAlgsByVal = keyAlgsByVal;\nexports.hashes = hashes;\nexports.hashesByVal = hashesByVal;\nexports.curves = curves;\nexports.curvesByVal = curvesByVal;\nexports.sigAlgs = sigAlgs;\nexports.sigAlgsByVal = sigAlgsByVal;\nexports.sigToHash = sigToHash;\n","/*!\n * base16.js - base16 for bcrypto\n * Copyright (c) 2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('../js/base16');\n","/*!\n * base16.js - base16 for javascript\n * Copyright (c) 2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://tools.ietf.org/html/rfc4648\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * Constants\n */\n\nconst CHARSET = '0123456789abcdef';\n\nconst TABLE = [\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n   0,  1,  2,  3,  4,  5,  6,  7,\n   8,  9, -1, -1, -1, -1, -1, -1,\n  -1, 10, 11, 12, 13, 14, 15, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, 10, 11, 12, 13, 14, 15, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1\n];\n\n/*\n * Encoding\n */\n\nfunction _encode(data, endian) {\n  assert(Buffer.isBuffer(data));\n\n  let len = data.length;\n  let i = endian < 0 ? len - 1 : 0;\n  let str = '';\n\n  while (len--) {\n    str += CHARSET[data[i] >> 4];\n    str += CHARSET[data[i] & 15];\n\n    i += endian;\n  }\n\n  return str;\n}\n\n/*\n * Decoding\n */\n\nfunction _decode(str, endian) {\n  assert(typeof str === 'string');\n\n  let len = str.length;\n  let i = endian < 0 ? len - 2 : 0;\n  let j = 0;\n  let z = 0;\n\n  if (len & 1)\n    throw new Error('Invalid hex string.');\n\n  len >>>= 1;\n  endian *= 2;\n\n  const data = Buffer.alloc(len);\n\n  while (len--) {\n    const c1 = str.charCodeAt(i + 0);\n    const c2 = str.charCodeAt(i + 1);\n    const hi = TABLE[c1 & 0x7f];\n    const lo = TABLE[c2 & 0x7f];\n\n    z |= c1 | c2 | hi | lo;\n\n    data[j++] = (hi << 4) | lo;\n\n    i += endian;\n  }\n\n  // Check for errors at the end.\n  if (z & 0xffffff80)\n    throw new Error('Invalid hex string.');\n\n  return data;\n}\n\n/*\n * Testing\n */\n\nfunction _test(str) {\n  assert(typeof str === 'string');\n\n  if (str.length & 1)\n    return false;\n\n  for (let i = 0; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch & 0xff80)\n      return false;\n\n    if (TABLE[ch] === -1)\n      return false;\n  }\n\n  return true;\n}\n\n/*\n * Base16\n */\n\nfunction encode(data) {\n  return _encode(data, 1);\n}\n\nfunction decode(str) {\n  return _decode(str, 1);\n}\n\nfunction test(str) {\n  return _test(str);\n}\n\n/*\n * Base16 (Little Endian)\n */\n\nfunction encodeLE(data) {\n  return _encode(data, -1);\n}\n\nfunction decodeLE(str) {\n  return _decode(str, -1);\n}\n\nfunction testLE(str) {\n  return _test(str);\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.encode = encode;\nexports.decode = decode;\nexports.test = test;\nexports.encodeLE = encodeLE;\nexports.decodeLE = decodeLE;\nexports.testLE = testLE;\n","/*!\n * base32.js - base32 for bcrypto\n * Copyright (c) 2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('../js/base32');\n","/*!\n * base32.js - base32 for bcrypto\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on bitcoin/bitcoin:\n *   Copyright (c) 2009-2019, The Bitcoin Core Developers (MIT License).\n *   Copyright (c) 2009-2019, The Bitcoin Developers (MIT License).\n *   https://github.com/bitcoin/bitcoin\n *\n * Resources:\n *   https://tools.ietf.org/html/rfc4648\n *   https://github.com/bitcoin/bitcoin/blob/11d486d/src/utilstrencodings.cpp#L230\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * Constants\n */\n\nconst CHARSET = 'abcdefghijklmnopqrstuvwxyz234567';\n\nconst TABLE = [\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, 26, 27, 28, 29, 30, 31,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1,  0,  1,  2,  3,  4,  5,  6,\n   7,  8,  9, 10, 11, 12, 13, 14,\n  15, 16, 17, 18, 19, 20, 21, 22,\n  23, 24, 25, -1, -1, -1, -1, -1,\n  -1,  0,  1,  2,  3,  4,  5,  6,\n   7,  8,  9, 10, 11, 12, 13, 14,\n  15, 16, 17, 18, 19, 20, 21, 22,\n  23, 24, 25, -1, -1, -1, -1, -1\n];\n\nconst CHARSET_HEX = '0123456789abcdefghijklmnopqrstuv';\n\nconst TABLE_HEX = [\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n   0,  1,  2,  3,  4,  5,  6,  7,\n   8,  9, -1, -1, -1, -1, -1, -1,\n  -1, 10, 11, 12, 13, 14, 15, 16,\n  17, 18, 19, 20, 21, 22, 23, 24,\n  25, 26, 27, 28, 29, 30, 31, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, 10, 11, 12, 13, 14, 15, 16,\n  17, 18, 19, 20, 21, 22, 23, 24,\n  25, 26, 27, 28, 29, 30, 31, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1\n];\n\nconst PADDING = [0, 6, 4, 3, 1];\n\n/**\n * Encode a base32 string.\n * @private\n * @param {Buffer} data\n * @param {String} charset\n * @param {Boolean} [pad=false]\n * @returns {String}\n */\n\nfunction _encode(data, charset, pad) {\n  assert(Buffer.isBuffer(data));\n  assert(typeof pad === 'boolean');\n\n  let str = '';\n  let mode = 0;\n  let left = 0;\n\n  for (let i = 0; i < data.length; i++) {\n    const ch = data[i];\n\n    switch (mode) {\n      case 0:\n        str += charset[ch >>> 3];\n        left = (ch & 7) << 2;\n        mode = 1;\n        break;\n      case 1:\n        str += charset[left | (ch >>> 6)];\n        str += charset[(ch >>> 1) & 31];\n        left = (ch & 1) << 4;\n        mode = 2;\n        break;\n      case 2:\n        str += charset[left | (ch >>> 4)];\n        left = (ch & 15) << 1;\n        mode = 3;\n        break;\n      case 3:\n        str += charset[left | (ch >>> 7)];\n        str += charset[(ch >>> 2) & 31];\n        left = (ch & 3) << 3;\n        mode = 4;\n        break;\n      case 4:\n        str += charset[left | (ch >>> 5)];\n        str += charset[ch & 31];\n        mode = 0;\n        break;\n    }\n  }\n\n  if (mode > 0) {\n    str += charset[left];\n    if (pad) {\n      for (let i = 0; i < PADDING[mode]; i++)\n        str += '=';\n    }\n  }\n\n  return str;\n}\n\n/**\n * Decode a base32 string.\n * @private\n * @param {String} str\n * @param {Array} table\n * @param {Boolean} [unpad=false]\n * @returns {Buffer}\n */\n\nfunction _decode(str, table, unpad) {\n  assert(typeof str === 'string');\n  assert(typeof unpad === 'boolean');\n\n  const size = _decodeSize(str);\n  const data = Buffer.alloc(size);\n\n  let mode = 0;\n  let left = 0;\n  let j = 0;\n  let i = 0;\n\n  for (; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch & 0xff80)\n      throw new Error('Invalid base32 string.');\n\n    const val = table[ch];\n\n    if (val === -1)\n      break;\n\n    switch (mode) {\n      case 0:\n        left = val;\n        mode = 1;\n        break;\n      case 1:\n        data[j++] = (left << 3) | (val >>> 2);\n        left = val & 3;\n        mode = 2;\n        break;\n      case 2:\n        left = (left << 5) | val;\n        mode = 3;\n        break;\n      case 3:\n        data[j++] = (left << 1) | (val >>> 4);\n        left = val & 15;\n        mode = 4;\n        break;\n      case 4:\n        data[j++] = (left << 4) | (val >>> 1);\n        left = val & 1;\n        mode = 5;\n        break;\n      case 5:\n        left = (left << 5) | val;\n        mode = 6;\n        break;\n      case 6:\n        data[j++] = (left << 2) | (val >>> 3);\n        left = val & 7;\n        mode = 7;\n        break;\n      case 7:\n        data[j++] = (left << 5) | val;\n        left = 0;\n        mode = 0;\n        break;\n    }\n  }\n\n  if (mode === 1 || mode === 3 || mode === 6)\n    throw new Error('Invalid base32 string.');\n\n  if (left > 0)\n    throw new Error('Invalid base32 string.');\n\n  if (str.length !== i + (-mode & 7) * unpad)\n    throw new Error('Invalid base32 string.');\n\n  for (; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch !== 0x3d)\n      throw new Error('Invalid base32 string.');\n  }\n\n  assert(j === size);\n\n  return data;\n}\n\n/**\n * Calculate decoding size.\n * @private\n * @param {String} str\n * @returns {Number}\n */\n\nfunction _decodeSize(str) {\n  let len = str.length;\n\n  for (let i = 0; i < 6 && len > 0; i++) {\n    if (str[len - 1] === '=')\n      len -= 1;\n  }\n\n  let size = (len >>> 3) * 5;\n\n  switch (len & 7) {\n    case 7:\n      size += 1;\n    case 6: // Invalid.\n    case 5:\n      size += 1;\n    case 4:\n      size += 1;\n    case 3: // Invalid.\n    case 2:\n      size += 1;\n  }\n\n  return size;\n}\n\n/**\n * Test a base32 string.\n * @private\n * @param {String} str\n * @param {Array} table\n * @param {Boolean} [unpad=false]\n * @returns {Boolean}\n */\n\nfunction _test(str, table, unpad) {\n  assert(typeof str === 'string');\n  assert(typeof unpad === 'boolean');\n\n  let i = 0;\n\n  for (; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch & 0xff80)\n      return false;\n\n    if (table[ch] === -1)\n      break;\n  }\n\n  const mode = i & 7;\n\n  switch (mode) {\n    case 1:\n      return false;\n    case 2:\n      if (table[str.charCodeAt(i - 1)] & 3)\n        return false;\n      break;\n    case 3:\n      return false;\n    case 4:\n      if (table[str.charCodeAt(i - 1)] & 15)\n        return false;\n      break;\n    case 5:\n      if (table[str.charCodeAt(i - 1)] & 1)\n        return false;\n      break;\n    case 6:\n      return false;\n    case 7:\n      if (table[str.charCodeAt(i - 1)] & 7)\n        return false;\n      break;\n  }\n\n  if (str.length !== i + (-mode & 7) * unpad)\n    return false;\n\n  for (; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch !== 0x3d)\n      return false;\n  }\n\n  return true;\n}\n\n/**\n * Encode a base32 string.\n * @param {Buffer} data\n * @param {Boolean} [pad=false]\n * @returns {String}\n */\n\nfunction encode(data, pad = false) {\n  return _encode(data, CHARSET, pad);\n}\n\n/**\n * Decode a base32 string.\n * @param {String} str\n * @param {Boolean} [unpad=false]\n * @returns {Buffer}\n */\n\nfunction decode(str, unpad = false) {\n  return _decode(str, TABLE, unpad);\n}\n\n/**\n * Test a base32 string.\n * @param {String} str\n * @param {Boolean} [unpad=false]\n * @returns {Buffer}\n */\n\nfunction test(str, unpad = false) {\n  return _test(str, TABLE, unpad);\n}\n\n/**\n * Encode a base32hex string.\n * @param {Buffer} data\n * @param {Boolean} [pad=false]\n * @returns {String}\n */\n\nfunction encodeHex(data, pad = false) {\n  return _encode(data, CHARSET_HEX, pad);\n}\n\n/**\n * Decode a base32hex string.\n * @param {String} str\n * @param {Boolean} [unpad=false]\n * @returns {Buffer}\n */\n\nfunction decodeHex(str, unpad = false) {\n  return _decode(str, TABLE_HEX, unpad);\n}\n\n/**\n * Test a base32 hex string.\n * @param {String} str\n * @param {Boolean} [unpad=false]\n * @returns {Buffer}\n */\n\nfunction testHex(str, unpad = false) {\n  return _test(str, TABLE_HEX, unpad);\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.encode = encode;\nexports.decode = decode;\nexports.test = test;\nexports.encodeHex = encodeHex;\nexports.decodeHex = decodeHex;\nexports.testHex = testHex;\n","/*!\n * base58.js - base58 for bcrypto\n * Copyright (c) 2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('../js/base58');\n","/*!\n * base58.js - base58 for bcrypto\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on bitcoin/bitcoin:\n *   Copyright (c) 2009-2019, The Bitcoin Core Developers (MIT License).\n *   Copyright (c) 2009-2019, The Bitcoin Developers (MIT License).\n *   https://github.com/bitcoin/bitcoin\n *\n * Resources:\n *   https://github.com/bitcoin/bitcoin/blob/master/src/base58.cpp\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * Constants\n */\n\nconst CHARSET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\nconst TABLE = [\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1,  0,  1,  2,  3,  4,  5,  6,\n   7,  8, -1, -1, -1, -1, -1, -1,\n  -1,  9, 10, 11, 12, 13, 14, 15,\n  16, -1, 17, 18, 19, 20, 21, -1,\n  22, 23, 24, 25, 26, 27, 28, 29,\n  30, 31, 32, -1, -1, -1, -1, -1,\n  -1, 33, 34, 35, 36, 37, 38, 39,\n  40, 41, 42, 43, -1, 44, 45, 46,\n  47, 48, 49, 50, 51, 52, 53, 54,\n  55, 56, 57, -1, -1, -1, -1, -1\n];\n\nconst pool = Buffer.alloc(128);\n\n/**\n * Encode a base58 string.\n * @param {Buffer} data\n * @returns {String}\n */\n\nfunction encode(data) {\n  assert(Buffer.isBuffer(data));\n\n  let zeroes = 0;\n  let i = 0;\n\n  for (; i < data.length; i++) {\n    if (data[i] !== 0)\n      break;\n\n    zeroes += 1;\n  }\n\n  const size = (((data.length - zeroes) * 138 / 100) | 0) + 1;\n  const b58 = size <= 128 ? pool.fill(0) : Buffer.alloc(size);\n\n  let length = 0;\n\n  for (; i < data.length; i++) {\n    let carry = data[i];\n    let j = 0;\n\n    for (let k = size - 1; k >= 0; k--, j++) {\n      if (carry === 0 && j >= length)\n        break;\n\n      carry += b58[k] * 256;\n      b58[k] = carry % 58;\n      carry = (carry / 58) | 0;\n    }\n\n    assert(carry === 0);\n\n    length = j;\n  }\n\n  i = size - length;\n\n  while (i < size && b58[i] === 0)\n    i += 1;\n\n  let str = '';\n\n  for (let j = 0; j < zeroes; j++)\n    str += '1';\n\n  while (i < size)\n    str += CHARSET[b58[i++]];\n\n  return str;\n}\n\n/**\n * Decode a base58 string.\n * @param {String} str\n * @returns {Buffer}\n * @throws on non-base58 character.\n */\n\nfunction decode(str) {\n  assert(typeof str === 'string');\n\n  let zeroes = 0;\n  let i = 0;\n\n  for (; i < str.length; i++) {\n    if (str[i] !== '1')\n      break;\n\n    zeroes += 1;\n  }\n\n  const size = ((str.length * 733) / 1000 | 0) + 1;\n  const b256 = size <= 128 ? pool.fill(0) : Buffer.alloc(size);\n\n  let length = 0;\n\n  for (; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch & 0xff80)\n      throw new Error('Invalid base58 string.');\n\n    const val = TABLE[ch];\n\n    if (val === -1)\n      throw new Error('Invalid base58 string.');\n\n    let carry = val;\n    let j = 0;\n\n    for (let k = size - 1; k >= 0; k--, j++) {\n      if (carry === 0 && j >= length)\n        break;\n\n      carry += b256[k] * 58;\n      b256[k] = carry;\n      carry >>>= 8;\n    }\n\n    assert(carry === 0);\n\n    length = j;\n  }\n\n  // See: https://github.com/bitcoin/bitcoin/commit/2bcf1fc4\n  i = size - length;\n\n  const out = Buffer.alloc(zeroes + (size - i));\n\n  let j;\n\n  for (j = 0; j < zeroes; j++)\n    out[j] = 0;\n\n  while (i < size)\n    out[j++] = b256[i++];\n\n  return out;\n}\n\n/**\n * Test whether the string is a base58 string.\n * @param {String} str\n * @returns {Buffer}\n */\n\nfunction test(str) {\n  assert(typeof str === 'string');\n\n  for (let i = 0; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch & 0xff80)\n      return false;\n\n    if (TABLE[ch] === -1)\n      return false;\n  }\n\n  return true;\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.encode = encode;\nexports.decode = decode;\nexports.test = test;\n","/*!\n * base64.js - base64 for javascript\n * Copyright (c) 2019-2020, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://tools.ietf.org/html/rfc4648\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * Constants\n */\n\nconst CHARSET =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nconst CHARSET_URL =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\n\nconst TABLE = [\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, 62, -1, -1, -1, 63,\n  52, 53, 54, 55, 56, 57, 58, 59,\n  60, 61, -1, -1, -1, -1, -1, -1,\n  -1,  0,  1,  2,  3,  4,  5,  6,\n   7,  8,  9, 10, 11, 12, 13, 14,\n  15, 16, 17, 18, 19, 20, 21, 22,\n  23, 24, 25, -1, -1, -1, -1, -1,\n  -1, 26, 27, 28, 29, 30, 31, 32,\n  33, 34, 35, 36, 37, 38, 39, 40,\n  41, 42, 43, 44, 45, 46, 47, 48,\n  49, 50, 51, -1, -1, -1, -1, -1\n];\n\nconst TABLE_URL = [\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, 62, -1, -1,\n  52, 53, 54, 55, 56, 57, 58, 59,\n  60, 61, -1, -1, -1, -1, -1, -1,\n  -1,  0,  1,  2,  3,  4,  5,  6,\n   7,  8,  9, 10, 11, 12, 13, 14,\n  15, 16, 17, 18, 19, 20, 21, 22,\n  23, 24, 25, -1, -1, -1, -1, 63,\n  -1, 26, 27, 28, 29, 30, 31, 32,\n  33, 34, 35, 36, 37, 38, 39, 40,\n  41, 42, 43, 44, 45, 46, 47, 48,\n  49, 50, 51, -1, -1, -1, -1, -1\n];\n\n/*\n * Encoding\n */\n\nfunction _encode(data, charset, pad) {\n  assert(Buffer.isBuffer(data));\n\n  let left = data.length;\n  let str = '';\n  let i = 0;\n\n  while (left >= 3) {\n    const c1 = data[i++];\n    const c2 = data[i++];\n    const c3 = data[i++];\n\n    str += charset[c1 >> 2];\n    str += charset[((c1 & 3) << 4) | (c2 >> 4)];\n    str += charset[((c2 & 0x0f) << 2) | (c3 >> 6)];\n    str += charset[c3 & 0x3f];\n\n    left -= 3;\n  }\n\n  switch (left) {\n    case 1: {\n      const c1 = data[i++];\n\n      str += charset[c1 >> 2];\n      str += charset[(c1 & 3) << 4];\n\n      if (pad)\n        str += '==';\n\n      break;\n    }\n\n    case 2: {\n      const c1 = data[i++];\n      const c2 = data[i++];\n\n      str += charset[c1 >> 2];\n      str += charset[((c1 & 3) << 4) | (c2 >> 4)];\n      str += charset[(c2 & 0x0f) << 2];\n\n      if (pad)\n        str += '=';\n\n      break;\n    }\n  }\n\n  return str;\n}\n\n/*\n * Decoding\n */\n\nfunction _decode(str, table, size) {\n  assert(typeof str === 'string');\n\n  const data = Buffer.alloc(size);\n\n  let left = str.length;\n  let i = 0;\n  let j = 0;\n\n  if (left > 0 && str[left - 1] === '=')\n    left -= 1;\n\n  if (left > 0 && str[left - 1] === '=')\n    left -= 1;\n\n  if ((left & 3) === 1) // Fail early.\n    throw new Error('Invalid base64 string.');\n\n  while (left >= 4) {\n    const c1 = str.charCodeAt(i++);\n    const c2 = str.charCodeAt(i++);\n    const c3 = str.charCodeAt(i++);\n    const c4 = str.charCodeAt(i++);\n\n    if ((c1 | c2 | c3 | c4) & 0xff80)\n      throw new Error('Invalid base64 string.');\n\n    const t1 = table[c1];\n    const t2 = table[c2];\n    const t3 = table[c3];\n    const t4 = table[c4];\n\n    if ((t1 | t2 | t3 | t4) < 0)\n      throw new Error('Invalid base64 string.');\n\n    data[j++] = (t1 << 2) | (t2 >> 4);\n    data[j++] = (t2 << 4) | (t3 >> 2);\n    data[j++] = (t3 << 6) | (t4 >> 0);\n\n    left -= 4;\n  }\n\n  switch (left) {\n    case 1: {\n      throw new Error('Invalid base64 string.');\n    }\n\n    case 2: {\n      const c1 = str.charCodeAt(i++);\n      const c2 = str.charCodeAt(i++);\n\n      if ((c1 | c2) & 0xff80)\n        throw new Error('Invalid base64 string.');\n\n      const t1 = table[c1];\n      const t2 = table[c2];\n\n      if ((t1 | t2) < 0)\n        throw new Error('Invalid base64 string.');\n\n      data[j++] = (t1 << 2) | (t2 >> 4);\n\n      if (t2 & 15)\n        throw new Error('Invalid base64 string.');\n\n      break;\n    }\n\n    case 3: {\n      const c1 = str.charCodeAt(i++);\n      const c2 = str.charCodeAt(i++);\n      const c3 = str.charCodeAt(i++);\n\n      if ((c1 | c2 | c3) & 0xff80)\n        throw new Error('Invalid base64 string.');\n\n      const t1 = table[c1];\n      const t2 = table[c2];\n      const t3 = table[c3];\n\n      if ((t1 | t2 | t3) < 0)\n        throw new Error('Invalid base64 string.');\n\n      data[j++] = (t1 << 2) | (t2 >> 4);\n      data[j++] = (t2 << 4) | (t3 >> 2);\n\n      if (t3 & 3)\n        throw new Error('Invalid base64 string.');\n\n      break;\n    }\n  }\n\n  assert(j === size);\n\n  return data;\n}\n\n/*\n * Testing\n */\n\nfunction _test(str, table) {\n  assert(typeof str === 'string');\n\n  let len = str.length;\n\n  if (len > 0 && str[len - 1] === '=')\n    len -= 1;\n\n  if (len > 0 && str[len - 1] === '=')\n    len -= 1;\n\n  if ((len & 3) === 1)\n    return false;\n\n  for (let i = 0; i < len; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch & 0xff80)\n      return false;\n\n    if (table[ch] === -1)\n      return false;\n  }\n\n  switch (len & 3) {\n    case 1:\n      return false;\n    case 2:\n      return (table[str.charCodeAt(len - 1)] & 15) === 0;\n    case 3:\n      return (table[str.charCodeAt(len - 1)] & 3) === 0;\n  }\n\n  return true;\n}\n\n/*\n * Base64\n */\n\nfunction encode(data) {\n  return _encode(data, CHARSET, true);\n}\n\nfunction decode(str) {\n  const size = decodeSize(str);\n\n  if (!checkPadding(str, size))\n    throw new Error('Invalid base64 padding.');\n\n  return _decode(str, TABLE, size);\n}\n\nfunction test(str) {\n  const size = decodeSize(str);\n\n  if (!checkPadding(str, size))\n    return false;\n\n  return _test(str, TABLE);\n}\n\n/*\n * Base64-URL\n */\n\nfunction encodeURL(data) {\n  return _encode(data, CHARSET_URL, false);\n}\n\nfunction decodeURL(str) {\n  const size = decodeSize(str);\n\n  if (!checkPadding(str, 0))\n    throw new Error('Invalid base64 padding.');\n\n  return _decode(str, TABLE_URL, size);\n}\n\nfunction testURL(str) {\n  if (!checkPadding(str, 0))\n    return false;\n\n  return _test(str, TABLE_URL);\n}\n\n/*\n * Helpers\n */\n\nfunction decodeSize(str) {\n  assert(typeof str === 'string');\n\n  let len = str.length;\n\n  if (len > 0 && str[len - 1] === '=')\n    len -= 1;\n\n  if (len > 0 && str[len - 1] === '=')\n    len -= 1;\n\n  let size = (len >>> 2) * 3;\n\n  const rem = len & 3;\n\n  if (rem)\n    size += rem - 1;\n\n  return size;\n}\n\nfunction checkPadding(str, size) {\n  assert(typeof str === 'string');\n\n  switch (size % 3) {\n    case 0: {\n      if (str.length === 0)\n        return true;\n\n      if (str.length === 1)\n        return str[0] !== '=';\n\n      return str[str.length - 2] !== '='\n          && str[str.length - 1] !== '=';\n    }\n\n    case 1: {\n      return str.length >= 4\n          && str[str.length - 2] === '='\n          && str[str.length - 1] === '=';\n    }\n\n    case 2: {\n      return str.length >= 4\n          && str[str.length - 2] !== '='\n          && str[str.length - 1] === '=';\n    }\n\n    default: {\n      throw new Error('unreachable');\n    }\n  }\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.encode = encode;\nexports.decode = decode;\nexports.test = test;\nexports.encodeURL = encodeURL;\nexports.decodeURL = decodeURL;\nexports.testURL = testURL;\n","/*!\n * bech32.js - bech32 for bcrypto\n * Copyright (c) 2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('../js/bech32');\n","/*!\n * bech32.js - bech32 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on sipa/bech32:\n *   Copyright (c) 2017, Pieter Wuille (MIT License).\n *   https://github.com/sipa/bech32\n *\n * Resources:\n *   https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki\n *   https://github.com/sipa/bech32/blob/master/ref/c/segwit_addr.c\n *   https://github.com/bitcoin/bitcoin/blob/master/src/bech32.cpp\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/**\n * Constants\n */\n\nconst POOL65 = Buffer.alloc(65);\nconst CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n\nconst TABLE = [\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  15, -1, 10, 17, 21, 20, 26, 30,\n   7,  5, -1, -1, -1, -1, -1, -1,\n  -1, 29, -1, 24, 13, 25,  9,  8,\n  23, -1, 18, 22, 31, 27, 19, -1,\n   1,  0,  3, 16, 11, 28, 12, 14,\n   6,  4,  2, -1, -1, -1, -1, -1,\n  -1, 29, -1, 24, 13, 25,  9,  8,\n  23, -1, 18, 22, 31, 27, 19, -1,\n   1,  0,  3, 16, 11, 28, 12, 14,\n   6,  4,  2, -1, -1, -1, -1, -1\n];\n\n/**\n * Update checksum.\n * @ignore\n * @param {Number} c\n * @returns {Number}\n */\n\nfunction polymod(c) {\n  const b = c >>> 25;\n\n  return ((c & 0x1ffffff) << 5)\n    ^ (0x3b6a57b2 & -((b >> 0) & 1))\n    ^ (0x26508e6d & -((b >> 1) & 1))\n    ^ (0x1ea119fa & -((b >> 2) & 1))\n    ^ (0x3d4233dd & -((b >> 3) & 1))\n    ^ (0x2a1462b3 & -((b >> 4) & 1));\n}\n\n/**\n * Encode hrp and data as a bech32 string.\n * @param {String} hrp\n * @param {Buffer} data\n * @returns {String}\n */\n\nfunction serialize(hrp, data) {\n  assert(typeof hrp === 'string');\n  assert(Buffer.isBuffer(data));\n\n  if (hrp.length === 0 || hrp.length > 83)\n    throw new Error('Invalid bech32 human-readable part.');\n\n  if (hrp.length + 1 + data.length + 6 > 90)\n    throw new Error('Invalid bech32 data length.');\n\n  let str = '';\n  let chk = 1;\n  let i;\n\n  for (i = 0; i < hrp.length; i++) {\n    const ch = hrp.charCodeAt(i);\n\n    if (ch < 33 || ch > 126)\n      throw new Error('Invalid bech32 character.');\n\n    if (ch >= 65 && ch <= 90)\n      throw new Error('Invalid bech32 character.');\n\n    chk = polymod(chk) ^ (ch >> 5);\n  }\n\n  chk = polymod(chk);\n\n  for (let i = 0; i < hrp.length; i++) {\n    const ch = hrp.charCodeAt(i);\n\n    chk = polymod(chk) ^ (ch & 0x1f);\n\n    str += hrp[i];\n  }\n\n  str += '1';\n\n  for (let i = 0; i < data.length; i++) {\n    const ch = data[i];\n\n    if (ch >> 5)\n      throw new Error('Invalid bech32 value.');\n\n    chk = polymod(chk) ^ ch;\n\n    str += CHARSET[ch];\n  }\n\n  for (let i = 0; i < 6; i++)\n    chk = polymod(chk);\n\n  chk ^= 1;\n\n  for (let i = 0; i < 6; i++)\n    str += CHARSET[(chk >>> ((5 - i) * 5)) & 0x1f];\n\n  return str;\n}\n\n/**\n * Decode a bech32 string.\n * @param {String} str\n * @returns {Array} [hrp, data]\n */\n\nfunction deserialize(str) {\n  assert(typeof str === 'string');\n\n  if (str.length < 8 || str.length > 90)\n    throw new Error('Invalid bech32 string length.');\n\n  let lower = false;\n  let upper = false;\n  let hlen = 0;\n\n  for (let i = 0; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch < 33 || ch > 126)\n      throw new Error('Invalid bech32 character.');\n\n    if (ch >= 97 && ch <= 122)\n      lower = true;\n    else if (ch >= 65 && ch <= 90)\n      upper = true;\n    else if (ch === 49)\n      hlen = i;\n  }\n\n  if (hlen === 0)\n    throw new Error('Invalid bech32 human-readable part.');\n\n  const dlen = str.length - (hlen + 1);\n\n  if (dlen < 6)\n    throw new Error('Invalid bech32 data length.');\n\n  if (lower && upper)\n    throw new Error('Invalid bech32 casing.');\n\n  let chk = 1;\n  let hrp = '';\n\n  for (let i = 0; i < hlen; i++) {\n    let ch = str.charCodeAt(i);\n\n    if (ch >= 65 && ch <= 90)\n      ch += 32;\n\n    chk = polymod(chk) ^ (ch >> 5);\n\n    hrp += String.fromCharCode(ch);\n  }\n\n  chk = polymod(chk);\n\n  for (let i = 0; i < hlen; i++)\n    chk = polymod(chk) ^ (str.charCodeAt(i) & 0x1f);\n\n  const data = Buffer.alloc(dlen - 6);\n\n  let j = 0;\n\n  for (let i = hlen + 1; i < str.length; i++) {\n    const val = TABLE[str.charCodeAt(i)];\n\n    if (val === -1)\n      throw new Error('Invalid bech32 character.');\n\n    chk = polymod(chk) ^ val;\n\n    if (i < str.length - 6)\n      data[j++] = val;\n  }\n\n  if (chk !== 1)\n    throw new Error('Invalid bech32 checksum.');\n\n  assert(j === data.length);\n\n  return [hrp, data];\n}\n\n/**\n * Test whether a string is a bech32 string.\n * @param {String} str\n * @returns {Boolean}\n */\n\nfunction is(str) {\n  assert(typeof str === 'string');\n\n  try {\n    deserialize(str);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Convert serialized data to another base.\n * @param {Buffer} dst\n * @param {Number} dstoff\n * @param {Number} dstbits\n * @param {Buffer} src\n * @param {Number} srcoff\n * @param {Number} srcbits\n * @param {Boolean} pad\n * @returns {Buffer}\n */\n\nfunction convert(dst, dstoff, dstbits, src, srcoff, srcbits, pad) {\n  assert(Buffer.isBuffer(dst));\n  assert((dstoff >>> 0) === dstoff);\n  assert((dstbits >>> 0) === dstbits);\n  assert(Buffer.isBuffer(src));\n  assert((srcoff >>> 0) === srcoff);\n  assert((srcbits >>> 0) === srcbits);\n  assert(typeof pad === 'boolean');\n  assert(dstbits >= 1 && dstbits <= 8);\n  assert(srcbits >= 1 && srcbits <= 8);\n\n  const mask = (1 << dstbits) - 1;\n\n  let acc = 0;\n  let bits = 0;\n  let i = srcoff;\n  let j = dstoff;\n\n  for (; i < src.length; i++) {\n    acc = (acc << srcbits) | src[i];\n    bits += srcbits;\n\n    while (bits >= dstbits) {\n      bits -= dstbits;\n      dst[j++] = (acc >>> bits) & mask;\n    }\n  }\n\n  const left = dstbits - bits;\n\n  if (pad) {\n    if (bits)\n      dst[j++] = (acc << left) & mask;\n  } else {\n    if (((acc << left) & mask) || bits >= srcbits)\n      throw new Error('Invalid bits.');\n  }\n\n  assert(j <= dst.length);\n\n  return dst.slice(0, j);\n}\n\n/**\n * Calculate size required for bit conversion.\n * @param {Number} len\n * @param {Number} srcbits\n * @param {Number} dstbits\n * @param {Boolean} pad\n * @returns {Number}\n */\n\nfunction convertSize(len, srcbits, dstbits, pad) {\n  assert((len >>> 0) === len);\n  assert((srcbits >>> 0) === srcbits);\n  assert((dstbits >>> 0) === dstbits);\n  assert(typeof pad === 'boolean');\n  assert(srcbits >= 1 && srcbits <= 8);\n  assert(dstbits >= 1 && dstbits <= 8);\n\n  return ((len * srcbits + (dstbits - 1) * (pad | 0)) / dstbits) >>> 0;\n}\n\n/**\n * Convert serialized data to another base.\n * @param {Buffer} data\n * @param {Number} srcbits\n * @param {Number} dstbits\n * @param {Boolean} pad\n * @returns {Buffer}\n */\n\nfunction convertBits(data, srcbits, dstbits, pad) {\n  assert(Buffer.isBuffer(data));\n\n  const size = convertSize(data.length, srcbits, dstbits, pad);\n  const out = Buffer.alloc(size);\n\n  return convert(out, 0, dstbits, data, 0, srcbits, pad);\n}\n\n/**\n * Serialize data to bech32 address.\n * @param {String} hrp\n * @param {Number} version\n * @param {Buffer} hash\n * @returns {String}\n */\n\nfunction encode(hrp, version, hash) {\n  assert(typeof hrp === 'string');\n  assert((version >>> 0) === version);\n  assert(Buffer.isBuffer(hash));\n\n  if (version > 31)\n    throw new Error('Invalid bech32 version.');\n\n  if (hash.length < 2 || hash.length > 40)\n    throw new Error('Invalid bech32 data length.');\n\n  const out = POOL65;\n\n  out[0] = version;\n\n  const data = convert(out, 1, 5, hash, 0, 8, true);\n\n  return serialize(hrp, data);\n}\n\n/**\n * Deserialize data from bech32 address.\n * @param {String} addr\n * @returns {Array}\n */\n\nfunction decode(addr) {\n  const [hrp, data] = deserialize(addr);\n\n  if (data.length === 0 || data.length > 65)\n    throw new Error('Invalid bech32 data length.');\n\n  const version = data[0];\n\n  if (version > 31)\n    throw new Error('Invalid bech32 version.');\n\n  const output = data; // Works because dstbits > srcbits.\n  const hash = convert(output, 0, 8, data, 1, 5, false);\n\n  if (hash.length < 2 || hash.length > 40)\n    throw new Error('Invalid bech32 data length.');\n\n  return [hrp, version, hash];\n}\n\n/**\n * Test whether a string is a bech32 string.\n * @param {String} addr\n * @returns {Boolean}\n */\n\nfunction test(addr) {\n  assert(typeof addr === 'string');\n\n  try {\n    decode(addr);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.serialize = serialize;\nexports.deserialize = deserialize;\nexports.is = is;\nexports.convertBits = convertBits;\nexports.encode = encode;\nexports.decode = decode;\nexports.test = test;\n","/*!\n * cash32.js - cashaddr for bcrypto\n * Copyright (c) 2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('../js/cash32');\n","/*!\n * cash32.js - cashaddr for bcrypto\n * Copyright (c) 2018-2020, The Bcoin Developers (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on Bitcoin-ABC/bitcoin-abc:\n *   Copyright (c) 2009-2019, The Bitcoin Developers (MIT License).\n *   Copyright (c) 2009-2017, The Bitcoin Core Developers (MIT License).\n *   https://github.com/Bitcoin-ABC/bitcoin-abc\n *\n * Parts of this software are based on sipa/bech32:\n *   Copyright (c) 2017, Pieter Wuille (MIT License).\n *   https://github.com/sipa/bech32\n *\n * Resources:\n *   https://github.com/bitcoincashorg/bitcoincash.org/blob/master/spec/cashaddr.md\n *   https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/src/cashaddr.cpp\n *   https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/src/cashaddrenc.cpp\n *   https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/src/util/strencodings.h\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/**\n * Constants\n */\n\nconst POOL104 = Buffer.alloc(104);\nconst CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n\nconst TABLE = [\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  15, -1, 10, 17, 21, 20, 26, 30,\n   7,  5, -1, -1, -1, -1, -1, -1,\n  -1, 29, -1, 24, 13, 25,  9,  8,\n  23, -1, 18, 22, 31, 27, 19, -1,\n   1,  0,  3, 16, 11, 28, 12, 14,\n   6,  4,  2, -1, -1, -1, -1, -1,\n  -1, 29, -1, 24, 13, 25,  9,  8,\n  23, -1, 18, 22, 31, 27, 19, -1,\n   1,  0,  3, 16, 11, 28, 12, 14,\n   6,  4,  2, -1, -1, -1, -1, -1\n];\n\n/**\n * Update checksum\n * @ignore\n * @param {Number[]} c\n * @param {Number} d\n */\n\nfunction polymod(c, d) {\n  // b = c >> 35\n  const b = c[1] >>> 3;\n\n  // c = (c & 0x7ffffffff) << 5\n  c[0] &= 0xffffffff;\n  c[1] &= 0x00000007;\n  c[1] <<= 5;\n  c[1] |= c[0] >>> 27;\n  c[0] <<= 5;\n\n  // c ^= 0x98f2bc8e61 & -((b >> 0) & 1)\n  if ((b >>> 0) & 1) {\n    c[0] ^= 0xf2bc8e61;\n    c[1] ^= 0x00000098;\n  }\n\n  // c ^= 0x79b76d99e2 & -((b >> 1) & 1)\n  if ((b >>> 1) & 1) {\n    c[0] ^= 0xb76d99e2;\n    c[1] ^= 0x00000079;\n  }\n\n  // c ^= 0xf33e5fb3c4 & -((b >> 2) & 1)\n  if ((b >>> 2) & 1) {\n    c[0] ^= 0x3e5fb3c4;\n    c[1] ^= 0x000000f3;\n  }\n\n  // c ^= 0xae2eabe2a8 & -((b >> 3) & 1)\n  if ((b >>> 3) & 1) {\n    c[0] ^= 0x2eabe2a8;\n    c[1] ^= 0x000000ae;\n  }\n\n  // c ^= 0x1e4f43e470 & -((b >> 4) & 1)\n  if ((b >>> 4) & 1) {\n    c[0] ^= 0x4f43e470;\n    c[1] ^= 0x0000001e;\n  }\n\n  // c ^= d\n  c[0] ^= d;\n}\n\n/**\n * Serialize data to cash32.\n * @param {String} prefix\n * @param {Buffer} data\n * @returns {String}\n */\n\nfunction serialize(prefix, data) {\n  assert(typeof prefix === 'string');\n  assert(Buffer.isBuffer(data));\n\n  if (prefix.length === 0 || prefix.length > 83)\n    throw new Error('Invalid cash32 prefix.');\n\n  if (data.length > 104)\n    throw new Error('Invalid cash32 data.');\n\n  const chk = [1, 0];\n\n  let str = '';\n\n  for (let i = 0; i < prefix.length; i++) {\n    const ch = prefix.charCodeAt(i);\n\n    if (ch < 97 || ch > 122)\n      throw new Error('Invalid cash32 prefix.');\n\n    polymod(chk, ch & 0x1f);\n\n    str += String.fromCharCode(ch);\n  }\n\n  polymod(chk, 0);\n\n  str += ':';\n\n  for (let i = 0; i < data.length; i++) {\n    const ch = data[i];\n\n    if (ch >> 5)\n      throw new Error('Invalid cash32 value.');\n\n    polymod(chk, ch);\n\n    str += CHARSET[ch];\n  }\n\n  for (let i = 0; i < 8; i++)\n    polymod(chk, 0);\n\n  chk[0] ^= 1;\n\n  // First two rounds shift by 35 and 30.\n  str += CHARSET[(chk[1] >>> 3) & 0x1f];\n  str += CHARSET[((chk[0] >>> 30) | (chk[1] << 2)) & 0x1f];\n\n  // Now 25 down to 0.\n  for (let i = 2; i < 8; i++)\n    str += CHARSET[(chk[0] >>> ((7 - i) * 5)) & 0x1f];\n\n  return str;\n}\n\n/**\n * Decode cash32 string.\n * @param {String} str\n * @param {String} fallback\n * @returns {Array} [prefix, data]\n */\n\nfunction deserialize(str, fallback) {\n  assert(typeof str === 'string');\n  assert(typeof fallback === 'string');\n\n  if (str.length < 8 || str.length > 196) // 83 + 1 + 112\n    throw new Error('Invalid cash32 string.');\n\n  let lower = false;\n  let upper = false;\n  let number = false;\n  let plen = 0;\n\n  for (let i = 0; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch >= 97 && ch <= 122) {\n      lower = true;\n      continue;\n    }\n\n    if (ch >= 65 && ch <= 90) {\n      upper = true;\n      continue;\n    }\n\n    if (ch >= 48 && ch <= 57) {\n      number = true;\n      continue;\n    }\n\n    if (ch === 58) {\n      if (number || i === 0 || plen !== 0)\n        throw new Error('Invalid cash32 prefix.');\n\n      plen = i;\n\n      continue;\n    }\n\n    throw new Error('Invalid cash32 string.');\n  }\n\n  if (lower && upper)\n    throw new Error('Invalid cash32 casing.');\n\n  const chk = [1, 0];\n\n  let prefix = '';\n  let dlen;\n\n  if (plen === 0) {\n    if (fallback.length === 0 || fallback.length > 83)\n      throw new Error('Invalid cash32 prefix.');\n\n    for (let i = 0; i < fallback.length; i++) {\n      const ch = fallback.charCodeAt(i);\n\n      if (ch < 97 || ch > 122)\n        throw new Error('Invalid cash32 prefix.');\n\n      polymod(chk, ch & 0x1f);\n    }\n\n    prefix = fallback;\n    dlen = str.length;\n  } else {\n    if (plen > 83)\n      throw new Error('Invalid cash32 prefix.');\n\n    for (let i = 0; i < plen; i++) {\n      const ch = str.charCodeAt(i) | 32;\n\n      polymod(chk, ch & 0x1f);\n\n      prefix += String.fromCharCode(ch);\n    }\n\n    dlen = str.length - (plen + 1);\n  }\n\n  if (dlen < 8 || dlen > 112)\n    throw new Error('Invalid cash32 data.');\n\n  polymod(chk, 0);\n\n  const data = Buffer.alloc(dlen - 8);\n\n  let j = 0;\n\n  for (let i = str.length - dlen; i < str.length; i++) {\n    const val = TABLE[str.charCodeAt(i)];\n\n    if (val === -1)\n      throw new Error('Invalid cash32 character.');\n\n    polymod(chk, val);\n\n    if (i < str.length - 8)\n      data[j++] = val;\n  }\n\n  if (chk[0] !== 1 || chk[1] !== 0)\n    throw new Error('Invalid cash32 checksum.');\n\n  assert(j === data.length);\n\n  return [prefix, data];\n}\n\n/**\n * Test whether a string is a cash32 string.\n * @param {String} str\n * @param {String} fallback\n * @returns {Boolean}\n */\n\nfunction is(str, fallback) {\n  assert(typeof str === 'string');\n  assert(typeof fallback === 'string');\n\n  try {\n    deserialize(str, fallback);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Convert serialized data to another base.\n * @param {Buffer} dst\n * @param {Number} dstoff\n * @param {Number} dstbits\n * @param {Buffer} src\n * @param {Number} srcoff\n * @param {Number} srcbits\n * @param {Boolean} pad\n * @returns {Buffer}\n */\n\nfunction convert(dst, dstoff, dstbits, src, srcoff, srcbits, pad) {\n  assert(Buffer.isBuffer(dst));\n  assert((dstoff >>> 0) === dstoff);\n  assert((dstbits >>> 0) === dstbits);\n  assert(Buffer.isBuffer(src));\n  assert((srcoff >>> 0) === srcoff);\n  assert((srcbits >>> 0) === srcbits);\n  assert(typeof pad === 'boolean');\n  assert(dstbits >= 1 && dstbits <= 8);\n  assert(srcbits >= 1 && srcbits <= 8);\n\n  const mask = (1 << dstbits) - 1;\n  const maxacc = (1 << (srcbits + dstbits - 1)) - 1;\n\n  let acc = 0;\n  let bits = 0;\n  let i = srcoff;\n  let j = dstoff;\n\n  for (; i < src.length; i++) {\n    acc = ((acc << srcbits) | src[i]) & maxacc;\n    bits += srcbits;\n\n    while (bits >= dstbits) {\n      bits -= dstbits;\n      dst[j++] = (acc >>> bits) & mask;\n    }\n  }\n\n  const left = dstbits - bits;\n\n  if (pad) {\n    if (bits)\n      dst[j++] = (acc << left) & mask;\n  } else {\n    if (bits >= srcbits || ((acc << left) & mask))\n      throw new Error('Invalid bits.');\n  }\n\n  assert(j <= dst.length);\n\n  return dst.slice(0, j);\n}\n\n/**\n * Calculate size required for bit conversion.\n * @param {Number} len\n * @param {Number} srcbits\n * @param {Number} dstbits\n * @param {Boolean} pad\n * @returns {Number}\n */\n\nfunction convertSize(len, srcbits, dstbits, pad) {\n  assert((len >>> 0) === len);\n  assert((srcbits >>> 0) === srcbits);\n  assert((dstbits >>> 0) === dstbits);\n  assert(typeof pad === 'boolean');\n  assert(srcbits >= 1 && srcbits <= 8);\n  assert(dstbits >= 1 && dstbits <= 8);\n\n  return ((len * srcbits + (dstbits - 1) * (pad | 0)) / dstbits) >>> 0;\n}\n\n/**\n * Convert serialized data to another base.\n * @param {Buffer} data\n * @param {Number} srcbits\n * @param {Number} dstbits\n * @param {Boolean} pad\n * @returns {Buffer}\n */\n\nfunction convertBits(data, srcbits, dstbits, pad) {\n  assert(Buffer.isBuffer(data));\n\n  const size = convertSize(data.length, srcbits, dstbits, pad);\n  const out = Buffer.alloc(size);\n\n  return convert(out, 0, dstbits, data, 0, srcbits, pad);\n}\n\n/**\n * Get cash32 encoded size.\n * @param {Number} size\n * @returns {Number}\n */\n\nfunction encodedSize(size) {\n  assert((size >>> 0) === size);\n\n  switch (size) {\n    case 20:\n      return 0;\n    case 24:\n      return 1;\n    case 28:\n      return 2;\n    case 32:\n      return 3;\n    case 40:\n      return 4;\n    case 48:\n      return 5;\n    case 56:\n      return 6;\n    case 64:\n      return 7;\n    default:\n      throw new Error('Non-standard length.');\n  }\n}\n\n/**\n * Serialize data to cash32\n * @param {String} prefix\n * @param {Number} type - (0 = P2PKH, 1 = P2SH)\n * @param {Buffer} hash\n * @returns {String}\n */\n\nfunction encode(prefix, type, hash) {\n  assert(typeof prefix === 'string');\n  assert((type >>> 0) === type);\n  assert(Buffer.isBuffer(hash));\n\n  if (type > 15)\n    throw new Error('Invalid cash32 type.');\n\n  const size = encodedSize(hash.length);\n  const data = Buffer.alloc(hash.length + 1);\n\n  data[0] = (type << 3) | size;\n\n  hash.copy(data, 1);\n\n  const output = POOL104;\n  const conv = convert(output, 0, 5, data, 0, 8, true);\n\n  return serialize(prefix, conv);\n}\n\n/**\n * Deserialize data from cash32 address.\n * @param {String} addr\n * @param {String} expect\n * @returns {Array}\n */\n\nfunction decode(addr, expect = 'bitcoincash') {\n  const [prefix, conv] = deserialize(addr, expect);\n\n  if (prefix !== expect)\n    throw new Error('Invalid cash32 prefix.');\n\n  if (conv.length === 0 || conv.length > 104)\n    throw new Error('Invalid cash32 data.');\n\n  const output = conv; // Works because dstbits > srcbits.\n  const data = convert(output, 0, 8, conv, 0, 5, false);\n\n  if (data.length === 0 || data.length > 1 + 64)\n    throw new Error('Invalid cash32 data.');\n\n  const type = (data[0] >> 3) & 31;\n  const hash = data.slice(1);\n\n  let size = 20 + 4 * (data[0] & 3);\n\n  if (data[0] & 4)\n    size *= 2;\n\n  if (type > 15)\n    throw new Error('Invalid cash32 type.');\n\n  if (size !== hash.length)\n    throw new Error('Invalid cash32 data length.');\n\n  return [type, hash];\n}\n\n/**\n * Test whether a string is a cash32 string.\n * @param {String} addr\n * @param {String} expect\n * @returns {Boolean}\n */\n\nfunction test(addr, expect = 'bitcoincash') {\n  assert(typeof addr === 'string');\n  assert(typeof expect === 'string');\n\n  try {\n    decode(addr, expect);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.serialize = serialize;\nexports.deserialize = deserialize;\nexports.is = is;\nexports.convertBits = convertBits;\nexports.encode = encode;\nexports.decode = decode;\nexports.test = test;\n","/*!\n * pkcs3.js - PKCS3 encoding for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://www.teletrust.de/fileadmin/files/oid/oid_pkcs-3v1-4.pdf\n */\n\n'use strict';\n\nconst asn1 = require('./asn1');\nconst pem = require('./pem');\n\n/**\n * DHParams\n */\n\nclass DHParams extends asn1.Sequence {\n  constructor(p, g) {\n    super();\n    this.p = new asn1.Unsigned(p);\n    this.g = new asn1.Unsigned(g);\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.p.getSize();\n    size += this.g.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.p.write(bw);\n    this.g.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.p.read(br);\n    this.g.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.p.clean() && this.g.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'DH PARAMETERS');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'DH PARAMETERS');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      p: this.p,\n      g: this.g\n    };\n  }\n}\n\n/*\n * Expose\n */\n\nexports.DHParams = DHParams;\n","/*!\n * pkcs5.js - PKCS5 padding for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/PKCS\n *   https://tools.ietf.org/html/rfc2898\n *   https://tools.ietf.org/html/rfc8018\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * PKCS5\n */\n\nconst pkcs5 = {\n  pad(pt, size) {\n    assert(Buffer.isBuffer(pt));\n    assert((size >>> 0) === size);\n    assert(size > 0 && size < 256);\n\n    const left = size - (pt.length % size);\n    const out = Buffer.alloc(pt.length + left);\n\n    pt.copy(out, 0);\n\n    for (let i = pt.length; i < out.length; i++)\n      out[i] = left;\n\n    return out;\n  },\n\n  unpad(pt, size) {\n    assert(Buffer.isBuffer(pt));\n    assert((size >>> 0) === size);\n    assert(size > 0 && size < 256);\n\n    if (pt.length < size || (pt.length % size) !== 0)\n      throw new Error('Invalid block.');\n\n    let left = pt[pt.length - 1];\n    let res = 1;\n\n    // left != 0\n    res &= ((left - 1) >>> 31) ^ 1;\n\n    // left <= size\n    res &= (left - size - 1) >>> 31;\n\n    // left = 0 if left == 0 or left > size\n    left &= -res;\n\n    // Verify padding in constant time.\n    const end = size - left;\n\n    for (let i = 0; i < size; i++) {\n      const ch = pt[i];\n\n      // i < end or ch == left\n      res &= ((i - end) >>> 31) | (((ch ^ left) - 1) >>> 31);\n    }\n\n    if (!res)\n      throw new Error('Invalid padding.');\n\n    return pt.slice(0, end);\n  }\n};\n\n/*\n * Expose\n */\n\nmodule.exports = pkcs5;\n","/*!\n * pkcs8.js - PKCS8 encoding for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009 The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/PKCS_8\n *   https://tools.ietf.org/html/rfc5208\n *   https://tools.ietf.org/html/rfc5958\n *   https://github.com/golang/go/blob/master/src/crypto/x509/pkcs8.go\n */\n\n'use strict';\n\nconst asn1 = require('./asn1');\nconst pem = require('./pem');\nconst x509 = require('./x509');\n\n/**\n * PublicKeyInfo\n */\n\n// PublicKeyInfo ::= SEQUENCE {\n//   algorithm       AlgorithmIdentifier,\n//   PublicKey       BIT STRING\n// }\n\nclass PublicKeyInfo extends asn1.Sequence {\n  constructor(algorithm, identifier, publicKey) {\n    super();\n    this.algorithm = new x509.AlgorithmIdentifier(algorithm, identifier);\n    this.publicKey = new asn1.BitString(publicKey);\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.algorithm.getSize();\n    size += this.publicKey.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.algorithm.write(bw);\n    this.publicKey.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.algorithm.read(br);\n    this.publicKey.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.algorithm.clean()\n        && this.publicKey.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'PUBLIC KEY');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'PUBLIC KEY');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      algorithm: this.algorithm,\n      publicKey: this.publicKey\n    };\n  }\n}\n\n/**\n * PrivateKeyInfo\n */\n\n// PrivateKeyInfo ::= SEQUENCE {\n//   version         Version,\n//   algorithm       AlgorithmIdentifier,\n//   PrivateKey      OCTET STRING\n// }\n//\n// PrivateKeyInfo ::= SEQUENCE {\n//    version Version,\n//    privateKeyAlgorithm AlgorithmIdentifier {{PrivateKeyAlgorithms}},\n//    privateKey PrivateKey,\n//    attributes [0] Attributes OPTIONAL\n// }\n//\n// Version ::= INTEGER {v1(0)} (v1,...)\n//\n// PrivateKey ::= OCTET STRING\n\nclass PrivateKeyInfo extends asn1.Sequence {\n  constructor(version, algorithm, parameters, privateKey) {\n    super();\n    this.version = new asn1.Unsigned(version);\n    this.algorithm = new x509.AlgorithmIdentifier(algorithm, parameters);\n    this.privateKey = new asn1.OctString(privateKey);\n  }\n\n  get isRaw() {\n    return true;\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.version.getSize();\n    size += this.algorithm.getSize();\n    size += this.privateKey.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.version.write(bw);\n    this.algorithm.write(bw);\n    this.privateKey.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.version.read(br);\n    this.algorithm.read(br);\n    this.privateKey.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.version.clean()\n        && this.algorithm.clean()\n        && this.privateKey.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'PRIVATE KEY');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'PRIVATE KEY');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      version: this.version,\n      algorithm: this.algorithm,\n      privateKey: this.privateKey\n    };\n  }\n}\n\n/**\n * EncryptedPrivateKeyInfo\n */\n\n// EncryptedPrivateKeyInfo ::= SEQUENCE {\n//   encryptionAlgorithm  EncryptionAlgorithmIdentifier,\n//   encryptedData        EncryptedData\n// }\n//\n// EncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n//\n// EncryptedData ::= OCTET STRING\n\nclass EncryptedPrivateKeyInfo extends asn1.Sequence {\n  constructor(algorithm, identifier, data) {\n    super();\n    this.algorithm =\n      new x509.AlgorithmIdentifier(algorithm, identifier);\n    this.data = new asn1.OctString(data);\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.algorithm.getSize();\n    size += this.data.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.algorithm.write(bw);\n    this.data.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.algorithm.read(br);\n    this.data.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.algorithm.clean()\n        && this.data.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'ENCRYPTED PRIVATE KEY');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'ENCRYPTED PRIVATE KEY');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      algorithm: this.algorithm,\n      data: this.data\n    };\n  }\n}\n\n/*\n * Expose\n */\n\nexports.PublicKeyInfo = PublicKeyInfo;\nexports.PrivateKeyInfo = PrivateKeyInfo;\nexports.EncryptedPrivateKeyInfo = EncryptedPrivateKeyInfo;\n","/*!\n * rfc3279.js - rfc3279 encoding for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://tools.ietf.org/html/rfc3279\n *   https://tools.ietf.org/html/rfc5912\n */\n\n'use strict';\n\nconst asn1 = require('./asn1');\nconst pem = require('./pem');\n\n/**\n * DSA Parms\n */\n\n// Dss-Parms  ::=  SEQUENCE  {\n//     p             INTEGER,\n//     q             INTEGER,\n//     g             INTEGER  }\n\nclass DSAParams extends asn1.Sequence {\n  constructor(p, q, g) {\n    super();\n    this.p = new asn1.Unsigned(p);\n    this.q = new asn1.Unsigned(q);\n    this.g = new asn1.Unsigned(g);\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.p.getSize();\n    size += this.q.getSize();\n    size += this.g.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.p.write(bw);\n    this.q.write(bw);\n    this.g.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.p.read(br);\n    this.q.read(br);\n    this.g.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.p.clean() && this.q.clean() && this.g.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'DSA PARAMETERS');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'DSA PARAMETERS');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      p: this.p,\n      q: this.q,\n      g: this.g\n    };\n  }\n}\n\n/**\n * DSA Public Key\n */\n\n// DSAPublicKey ::= INTEGER -- public key, Y\n\nclass DSAPublicKey extends asn1.Unsigned {\n  constructor(y) {\n    super(y);\n  }\n\n  get y() {\n    return this.value;\n  }\n\n  set y(value) {\n    this.value = value;\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'DSA PUBLIC KEY');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'DSA PUBLIC KEY');\n    return this.decode(data);\n  }\n}\n\n/**\n * DSA Signature\n */\n\nclass DSASignature extends asn1.Sequence {\n  constructor(r, s) {\n    super();\n    this.r = new asn1.Unsigned(r);\n    this.s = new asn1.Unsigned(s);\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.r.getSize();\n    size += this.s.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.r.write(bw);\n    this.s.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.r.read(br);\n    this.s.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.r.clean() && this.s.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'DSA SIGNATURE');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'DSA SIGNATURE');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      r: this.r,\n      s: this.s\n    };\n  }\n}\n\n/*\n * Expose\n */\n\nexports.DSAParams = DSAParams;\nexports.DSAPublicKey = DSAPublicKey;\nexports.DSASignature = DSASignature;\n","/*!\n * gost94.js - gost94 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/gost94');\n","/*!\n * gost94.js - GOST94 implementation for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on RustCrypto/hashes:\n *   Copyright (c) 2016-2018, The RustCrypto Authors (MIT License).\n *   https://github.com/RustCrypto/hashes\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/GOST_(hash_function)\n *   https://tools.ietf.org/html/rfc4357\n *   https://tools.ietf.org/html/rfc5831\n *   https://github.com/RustCrypto/hashes/blob/master/gost94/src/gost94.rs\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst HMAC = require('../internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = -1;\nconst PADDING = Buffer.alloc(32, 0x00);\nconst DESC = Buffer.alloc(32, 0x00);\n\nconst C = Buffer.from([\n  0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff,\n  0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00,\n  0x00, 0xff, 0xff, 0x00, 0xff, 0x00, 0x00, 0xff,\n  0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0xff\n]);\n\nconst S_CRYPTOPRO = [\n  Buffer.from([10, 4, 5, 6, 8, 1, 3, 7, 13, 12, 14, 0, 9, 2, 11, 15]),\n  Buffer.from([5, 15, 4, 0, 2, 13, 11, 9, 1, 7, 6, 3, 12, 14, 10, 8]),\n  Buffer.from([7, 15, 12, 14, 9, 4, 1, 0, 3, 11, 5, 2, 6, 10, 8, 13]),\n  Buffer.from([4, 10, 7, 12, 0, 15, 2, 8, 14, 1, 6, 5, 13, 11, 9, 3]),\n  Buffer.from([7, 6, 4, 11, 9, 12, 2, 10, 1, 8, 0, 14, 15, 13, 3, 5]),\n  Buffer.from([7, 6, 2, 4, 13, 9, 15, 0, 10, 1, 5, 11, 8, 14, 12, 3]),\n  Buffer.from([13, 14, 4, 1, 7, 0, 5, 10, 3, 12, 8, 15, 6, 2, 9, 11]),\n  Buffer.from([1, 3, 10, 9, 5, 11, 4, 15, 8, 6, 7, 14, 13, 0, 2, 12])\n];\n\nconst S_TEST = [\n  Buffer.from([4, 10, 9, 2, 13, 8, 0, 14, 6, 11, 1, 12, 7, 15, 5, 3]),\n  Buffer.from([14, 11, 4, 12, 6, 13, 15, 10, 2, 3, 8, 1, 0, 7, 5, 9]),\n  Buffer.from([5, 8, 1, 13, 10, 3, 4, 2, 14, 15, 12, 7, 6, 0, 9, 11]),\n  Buffer.from([7, 13, 10, 1, 0, 8, 9, 15, 14, 4, 6, 12, 11, 2, 5, 3]),\n  Buffer.from([6, 12, 7, 1, 5, 15, 13, 8, 4, 10, 9, 14, 0, 3, 11, 2]),\n  Buffer.from([4, 11, 10, 0, 7, 2, 1, 13, 3, 6, 8, 5, 9, 12, 15, 14]),\n  Buffer.from([13, 11, 4, 1, 3, 15, 5, 9, 0, 10, 14, 7, 6, 8, 2, 12]),\n  Buffer.from([1, 15, 13, 0, 5, 7, 10, 4, 9, 2, 3, 14, 6, 11, 8, 12])\n];\n\nconst S_S2015 = [\n  Buffer.from([12, 4, 6, 2, 10, 5, 11, 9, 14, 8, 13, 7, 0, 3, 15, 1]),\n  Buffer.from([6, 8, 2, 3, 9, 10, 5, 12, 1, 14, 4, 7, 11, 13, 0, 15]),\n  Buffer.from([11, 3, 5, 8, 2, 15, 10, 13, 14, 1, 7, 4, 12, 9, 6, 0]),\n  Buffer.from([12, 8, 2, 1, 13, 4, 15, 6, 7, 0, 10, 5, 3, 14, 9, 11]),\n  Buffer.from([7, 15, 5, 10, 8, 1, 6, 13, 0, 9, 3, 14, 11, 4, 2, 12]),\n  Buffer.from([5, 13, 15, 6, 9, 2, 12, 10, 11, 7, 8, 1, 4, 3, 14, 0]),\n  Buffer.from([8, 14, 2, 5, 6, 9, 1, 12, 15, 4, 11, 0, 13, 10, 3, 7]),\n  Buffer.from([1, 7, 14, 13, 0, 5, 8, 3, 4, 15, 10, 6, 9, 12, 11, 2])\n];\n\n/**\n * GOST94\n */\n\nclass GOST94 {\n  constructor() {\n    this.S = S_CRYPTOPRO;\n    this.state = Buffer.alloc(32);\n    this.sigma = Buffer.alloc(32);\n    this.block = Buffer.alloc(32);\n    this.size = FINALIZED;\n  }\n\n  init(box) {\n    if (box == null)\n      box = S_CRYPTOPRO;\n\n    assert(Array.isArray(box) && box.length === 8);\n\n    this.S = box;\n    this.state.fill(0);\n    this.sigma.fill(0);\n    this.size = 0;\n\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    this._update(data, data.length);\n    return this;\n  }\n\n  final() {\n    return this._final(Buffer.alloc(32));\n  }\n\n  _update(data, len) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    let pos = this.size & 31;\n    let off = 0;\n\n    this.size += len;\n\n    if (pos > 0) {\n      let want = 32 - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < 32)\n        return;\n\n      this._transform(this.block, 0);\n    }\n\n    while (len >= 32) {\n      this._transform(data, off);\n      off += 32;\n      len -= 32;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n  }\n\n  _final(out) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    const bits = this.size * 8;\n    const pos = this.size & 31;\n\n    if (pos !== 0)\n      this._update(PADDING, 32 - pos);\n\n    const hi = (bits * (1 / 0x100000000)) >>> 0;\n    const lo = bits >>> 0;\n\n    writeU32(DESC, lo, 0);\n    writeU32(DESC, hi, 4);\n\n    this._f(DESC);\n    this._f(this.sigma);\n\n    this.state.copy(out, 0);\n\n    this.state.fill(0);\n    this.sigma.fill(0);\n    this.block.fill(0);\n\n    DESC.fill(0, 0, 8);\n\n    this.size = FINALIZED;\n\n    return out;\n  }\n\n  _transform(chunk, pos) {\n    const m = chunk.slice(pos, pos + 32);\n\n    this._f(m);\n    this._sum(m);\n  }\n\n  _shuffle(m, s) {\n    const res = Buffer.alloc(32);\n    s.copy(res, 0);\n\n    for (let i = 0; i < 12; i++)\n      psi(res);\n\n    XM(res, m);\n    psi(res);\n    XM(this.state, res);\n\n    for (let i = 0; i < 61; i++)\n      psi(this.state);\n  }\n\n  _f(m) {\n    const s = Buffer.alloc(32);\n\n    this.state.copy(s, 0);\n\n    let k, u, v;\n\n    k = P(X(this.state, m));\n    encrypt(s, 0, k, this.S);\n\n    u = A(this.state);\n    v = A(A(m));\n    k = P(X(u, v));\n    encrypt(s, 8, k, this.S);\n\n    u = A(u);\n    XM(u, C);\n    v = A(A(v));\n    k = P(X(u, v));\n    encrypt(s, 16, k, this.S);\n\n    u = A(u);\n    v = A(A(v));\n    k = P(X(u, v));\n    encrypt(s, 24, k, this.S);\n\n    this._shuffle(m, s);\n  }\n\n  _sum(m) {\n    let c = 0;\n\n    for (let i = 0; i < 32; i++) {\n      c += this.sigma[i] + m[i];\n      this.sigma[i] = c;\n      c >>>= 8;\n    }\n  }\n\n  static hash() {\n    return new GOST94();\n  }\n\n  static hmac(box) {\n    return new HMAC(GOST94, 32, [box]);\n  }\n\n  static digest(data, box) {\n    return GOST94.ctx.init(box).update(data).final();\n  }\n\n  static root(left, right, box) {\n    assert(Buffer.isBuffer(left) && left.length === 32);\n    assert(Buffer.isBuffer(right) && right.length === 32);\n    return GOST94.ctx.init(box).update(left).update(right).final();\n  }\n\n  static multi(x, y, z, box) {\n    const {ctx} = GOST94;\n\n    ctx.init(box);\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key, box) {\n    return GOST94.hmac(box).init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nGOST94.native = 0;\nGOST94.id = 'GOST94';\nGOST94.size = 32;\nGOST94.bits = 256;\nGOST94.blockSize = 32;\nGOST94.zero = Buffer.alloc(32, 0x00);\nGOST94.ctx = new GOST94();\n\nGOST94.CRYPTOPRO = S_CRYPTOPRO;\nGOST94.TEST = S_TEST;\nGOST94.S2015 = S_S2015;\n\n/*\n * Helpers\n */\n\nfunction sbox(a, S) {\n  let v = 0;\n\n  for (let i = 0; i < 8; i++) {\n    const shft = 4 * i;\n    const k = (a & (15 << shft)) >>> shft;\n    v += S[i][k] << shft;\n  }\n\n  return v >>> 0;\n}\n\nfunction G(a, k, S) {\n  return rotl32(sbox((a + k) >>> 0, S), 11);\n}\n\nfunction encrypt(msg, pos, key, sbox) {\n  const k = new Uint32Array(8);\n\n  let a = readU32(msg, pos + 0);\n  let b = readU32(msg, pos + 4);\n\n  for (let i = 0; i < 8; i++)\n    k[i] = readU32(key, i * 4);\n\n  for (let x = 0; x < 3; x++) {\n    for (let i = 0; i < 8; i++) {\n      const t = b ^ G(a, k[i], sbox);\n      b = a;\n      a = t;\n    }\n  }\n\n  for (let i = 7; i >= 0; i--) {\n    const t = b ^ G(a, k[i], sbox);\n    b = a;\n    a = t;\n  }\n\n  writeU32(msg, b, pos + 0);\n  writeU32(msg, a, pos + 4);\n}\n\nfunction X(a, b) {\n  const out = Buffer.alloc(32);\n\n  for (let i = 0; i < 32; i++)\n    out[i] = a[i] ^ b[i];\n\n  return out;\n}\n\nfunction XM(a, b) {\n  for (let i = 0; i < 32; i++)\n    a[i] ^= b[i];\n}\n\nfunction A(x) {\n  const out = Buffer.alloc(32);\n\n  x.copy(out, 0, 8, 32);\n\n  for (let i = 0; i < 8; i++)\n    out[24 + i] = x[i] ^ x[i + 8];\n\n  return out;\n}\n\nfunction P(y) {\n  const out = Buffer.alloc(32);\n\n  for (let i = 0; i < 4; i++) {\n    for (let k = 0; k < 8; k++)\n      out[i + 4 * k] = y[8 * i + k];\n  }\n\n  return out;\n}\n\nfunction psi(block) {\n  const out = Buffer.alloc(32);\n\n  block.copy(out, 0, 2, 32);\n  block.copy(out, 30, 0, 2);\n\n  out[30] ^= block[2];\n  out[31] ^= block[3];\n\n  out[30] ^= block[4];\n  out[31] ^= block[5];\n\n  out[30] ^= block[6];\n  out[31] ^= block[7];\n\n  out[30] ^= block[24];\n  out[31] ^= block[25];\n\n  out[30] ^= block[30];\n  out[31] ^= block[31];\n\n  out.copy(block, 0);\n}\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = GOST94;\n","/*!\n * hash160.js - hash160 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/hash160');\n","/*!\n * hash160.js - Hash160 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://github.com/bitcoin/bitcoin/blob/master/src/hash.h\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst SHA256 = require('./sha256');\nconst RIPEMD160 = require('./ripemd160');\nconst HMAC = require('../internal/hmac');\n\n/*\n * Constants\n */\n\nconst rmd = new RIPEMD160();\n\n/**\n * Hash160\n */\n\nclass Hash160 {\n  constructor() {\n    this.ctx = new SHA256();\n  }\n\n  init() {\n    this.ctx.init();\n    return this;\n  }\n\n  update(data) {\n    this.ctx.update(data);\n    return this;\n  }\n\n  final() {\n    const out = Buffer.alloc(32);\n\n    this.ctx._final(out);\n\n    rmd.init();\n    rmd.update(out);\n    rmd._final(out);\n\n    return out.slice(0, 20);\n  }\n\n  static hash() {\n    return new Hash160();\n  }\n\n  static hmac() {\n    return new HMAC(Hash160, 64);\n  }\n\n  static digest(data) {\n    return Hash160.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 20);\n    assert(Buffer.isBuffer(right) && right.length === 20);\n    return Hash160.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = Hash160;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return Hash160.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nHash160.native = 0;\nHash160.id = 'HASH160';\nHash160.size = 20;\nHash160.bits = 160;\nHash160.blockSize = 64;\nHash160.zero = Buffer.alloc(20, 0x00);\nHash160.ctx = new Hash160();\n\n/*\n * Expose\n */\n\nmodule.exports = Hash160;\n","/*!\n * hash256.js - hash256 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/hash256');\n","/*!\n * hash256.js - Hash256 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://github.com/bitcoin/bitcoin/blob/master/src/hash.h\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst SHA256 = require('./sha256');\nconst HMAC = require('../internal/hmac');\n\n/**\n * Hash256\n */\n\nclass Hash256 {\n  constructor() {\n    this.ctx = new SHA256();\n  }\n\n  init() {\n    this.ctx.init();\n    return this;\n  }\n\n  update(data) {\n    this.ctx.update(data);\n    return this;\n  }\n\n  final() {\n    const out = Buffer.alloc(32);\n\n    this.ctx._final(out);\n    this.ctx.init();\n    this.ctx.update(out);\n    this.ctx._final(out);\n\n    return out;\n  }\n\n  static hash() {\n    return new Hash256();\n  }\n\n  static hmac() {\n    return new HMAC(Hash256, 64);\n  }\n\n  static digest(data) {\n    return Hash256.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 32);\n    assert(Buffer.isBuffer(right) && right.length === 32);\n    return Hash256.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = Hash256;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return Hash256.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nHash256.native = 0;\nHash256.id = 'HASH256';\nHash256.size = 32;\nHash256.bits = 256;\nHash256.blockSize = 64;\nHash256.zero = Buffer.alloc(32, 0x00);\nHash256.ctx = new Hash256();\n\n/*\n * Expose\n */\n\nmodule.exports = Hash256;\n","/*!\n * hash-drbg.js - hash-drbg for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/hash-drbg');\n","/*!\n * hash-drbg.js - hash-drbg implementation for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on cryptocoinjs/drbg.js:\n *   Copyright (c) 2016 Kirill Fomichev\n *   https://github.com/cryptocoinjs/drbg.js\n *\n * Resources:\n *   https://csrc.nist.gov/publications/detail/sp/800-90a/archive/2012-01-23\n *   https://github.com/cryptocoinjs/drbg.js/blob/master/hash.js\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * Constants\n */\n\nconst RESEED_INTERVAL = 0x1000000000000;\nconst ONE = Buffer.from([0x01]);\nconst TWO = Buffer.from([0x02]);\nconst THREE = Buffer.from([0x03]);\n\n/**\n * HashDRBG\n */\n\nclass HashDRBG {\n  constructor(hash, entropy, nonce, pers) {\n    assert(hash && typeof hash.id === 'string');\n\n    this.hash = hash;\n    this.minEntropy = hash.id === 'SHA1' ? 10 : 24;\n    this.seedLen = hash.size <= 32 ? 55 : 111;\n\n    this.V = Buffer.alloc(this.seedLen);\n    this.C = Buffer.alloc(this.seedLen);\n    this.len = Buffer.alloc(8);\n    this.rounds = 0;\n\n    if (entropy)\n      this.init(entropy, nonce, pers);\n  }\n\n  init(entropy, nonce, pers) {\n    if (nonce == null)\n      nonce = Buffer.alloc(0);\n\n    if (pers == null)\n      pers = Buffer.alloc(0);\n\n    assert(Buffer.isBuffer(entropy));\n    assert(Buffer.isBuffer(nonce));\n    assert(Buffer.isBuffer(pers));\n\n    const seed = Buffer.concat([entropy, nonce, pers]);\n\n    if (seed.length < this.minEntropy)\n      throw new Error('Not enough entropy.');\n\n    this.V = this.derive(seed, this.seedLen, 0xff);\n    this.C = this.derive(this.V, this.seedLen, 0x00);\n    this.rounds = 1;\n\n    return this;\n  }\n\n  reseed(entropy, add) {\n    if (add == null)\n      add = Buffer.alloc(0);\n\n    assert(Buffer.isBuffer(entropy));\n    assert(Buffer.isBuffer(add));\n\n    if (this.rounds === 0)\n      throw new Error('DRBG not initialized.');\n\n    const seed = Buffer.concat([this.V, entropy, add]);\n\n    if (seed.length < this.minEntropy)\n      throw new Error('Not enough entropy.');\n\n    this.V = this.derive(seed, this.seedLen, 0x01);\n    this.C = this.derive(this.V, this.seedLen, 0x00);\n    this.rounds = 1;\n\n    return this;\n  }\n\n  generate(len, add) {\n    assert((len >>> 0) === len);\n    assert(add == null || Buffer.isBuffer(add));\n\n    if (this.rounds === 0)\n      throw new Error('DRBG not initialized.');\n\n    if (this.rounds > RESEED_INTERVAL)\n      throw new Error('Reseed is required.');\n\n    if (add && add.length > 0)\n      this.sum(this.V, this.hash.multi(TWO, this.V, add));\n\n    const data = Buffer.from(this.V);\n    const blocks = Math.ceil(len / this.hash.size);\n    const out = Buffer.alloc(blocks * this.hash.size);\n\n    for (let i = 0; i < blocks; i++) {\n      this.hash.digest(data).copy(out, i * this.hash.size);\n      this.sum(data, ONE);\n    }\n\n    this.update();\n    this.rounds += 1;\n\n    return out.slice(0, len);\n  }\n\n  randomBytes(size) {\n    return this.generate(size);\n  }\n\n  /*\n   * Helpers\n   */\n\n  update() {\n    const H = this.hash.multi(THREE, this.V);\n    const hi = (this.rounds / 0x100000000) >>> 0;\n    const lo = this.rounds >>> 0;\n\n    this.len[0] = hi >>> 24;\n    this.len[1] = hi >>> 16;\n    this.len[2] = hi >>> 8;\n    this.len[3] = hi;\n    this.len[4] = lo >>> 24;\n    this.len[5] = lo >>> 16;\n    this.len[6] = lo >>> 8;\n    this.len[7] = lo;\n\n    this.sum(this.V, H, this.C, this.len);\n\n    return this;\n  }\n\n  derive(input, len, prepend) {\n    assert(Buffer.isBuffer(input));\n    assert((len >>> 0) === len);\n    assert((prepend & 0xff) === prepend);\n\n    const pre = (prepend !== 0xff) | 0;\n    const data = Buffer.alloc(5 + pre + input.length);\n\n    data[0] = 0x01;\n    data[1] = len >>> 21;\n    data[2] = len >>> 13;\n    data[3] = len >>> 5;\n    data[4] = (len & 0x1f) << 3;\n\n    if (pre)\n      data[5] = prepend;\n\n    input.copy(data, 5 + pre);\n\n    const blocks = Math.ceil(len / this.hash.size);\n    const out = Buffer.alloc(blocks * this.hash.size);\n\n    for (let i = 0; i < blocks; i++) {\n      this.hash.digest(data).copy(out, i * this.hash.size);\n      data[0] += 1;\n    }\n\n    return out.slice(0, len);\n  }\n\n  sum(dst, ...args) {\n    for (const buf of args) {\n      let i = buf.length - 1;\n      let j = dst.length - 1;\n      let carry = 0;\n\n      while (i >= 0) {\n        carry += buf[i] + dst[j];\n        dst[j] = carry & 0xff;\n        carry >>>= 8;\n        i -= 1;\n        j -= 1;\n      }\n\n      while (carry > 0 && j >= 0) {\n        carry += dst[j];\n        dst[j] = carry & 0xff;\n        carry >>>= 8;\n        j -= 1;\n      }\n    }\n\n    return dst;\n  }\n}\n\n/*\n * Static\n */\n\nHashDRBG.native = 0;\n\n/*\n * Expose\n */\n\nmodule.exports = HashDRBG;\n","/*!\n * hkdf.js - hkdf for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/hkdf');\n","/*!\n * hkdf.js - hkdf for bcrypto\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/HKDF\n *   https://tools.ietf.org/html/rfc5869\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/**\n * HKDF\n */\n\nfunction extract(hash, ikm, salt) {\n  assert(hash && typeof hash.id === 'string');\n\n  if (ikm == null)\n    ikm = Buffer.alloc(0);\n\n  if (salt == null)\n    salt = Buffer.alloc(hash.size, 0x00);\n\n  return hash.mac(ikm, salt);\n}\n\nfunction expand(hash, prk, info, len) {\n  if (info == null)\n    info = Buffer.alloc(0);\n\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(prk));\n  assert(Buffer.isBuffer(info));\n  assert((len >>> 0) === len);\n\n  if (prk.length !== hash.size)\n    throw new RangeError('Invalid PRK length.');\n\n  const blocks = Math.ceil(len / hash.size);\n\n  if (blocks > 255)\n    throw new RangeError('Invalid output length.');\n\n  const out = Buffer.alloc(blocks * hash.size);\n  const ctr = Buffer.from([0]);\n  const mac = hash.hmac();\n\n  let prev = Buffer.alloc(0);\n  let pos = 0;\n\n  for (let i = 0; i < blocks; i++) {\n    ctr[0] += 1;\n\n    mac.init(prk);\n    mac.update(prev);\n    mac.update(info);\n    mac.update(ctr);\n\n    prev = mac.final();\n    pos += prev.copy(out, pos);\n  }\n\n  return out.slice(0, len);\n}\n\nfunction derive(hash, ikm, salt, info, len) {\n  const prk = extract(hash, ikm, salt);\n  return expand(hash, prk, info, len);\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.extract = extract;\nexports.expand = expand;\nexports.derive = derive;\n","/*!\n * keccak224.js - Keccak-224 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst Keccak = require('./keccak');\n\n/**\n * Keccak224\n */\n\nclass Keccak224 extends Keccak {\n  constructor() {\n    super();\n  }\n\n  init() {\n    return super.init(224);\n  }\n\n  final() {\n    return super.final(0x01, null);\n  }\n\n  static hash() {\n    return new Keccak224();\n  }\n\n  static hmac() {\n    return super.hmac(224, 0x01, null);\n  }\n\n  static digest(data) {\n    return super.digest(data, 224, 0x01, null);\n  }\n\n  static root(left, right) {\n    return super.root(left, right, 224, 0x01, null);\n  }\n\n  static multi(x, y, z) {\n    return super.multi(x, y, z, 224, 0x01, null);\n  }\n\n  static mac(data, key) {\n    return super.mac(data, key, 224, 0x01, null);\n  }\n}\n\nKeccak224.native = Keccak.native;\nKeccak224.id = 'KECCAK224';\nKeccak224.size = 28;\nKeccak224.bits = 224;\nKeccak224.blockSize = 144;\nKeccak224.zero = Buffer.alloc(28, 0x00);\nKeccak224.ctx = new Keccak224();\n\n/*\n * Expose\n */\n\nmodule.exports = Keccak224;\n","/*!\n * keccak256.js - Keccak-256 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst Keccak = require('./keccak');\n\n/**\n * Keccak256\n */\n\nclass Keccak256 extends Keccak {\n  constructor() {\n    super();\n  }\n\n  init() {\n    return super.init(256);\n  }\n\n  final() {\n    return super.final(0x01, null);\n  }\n\n  static hash() {\n    return new Keccak256();\n  }\n\n  static hmac() {\n    return super.hmac(256, 0x01, null);\n  }\n\n  static digest(data) {\n    return super.digest(data, 256, 0x01, null);\n  }\n\n  static root(left, right) {\n    return super.root(left, right, 256, 0x01, null);\n  }\n\n  static multi(x, y, z) {\n    return super.multi(x, y, z, 256, 0x01, null);\n  }\n\n  static mac(data, key) {\n    return super.mac(data, key, 256, 0x01, null);\n  }\n}\n\nKeccak256.native = Keccak.native;\nKeccak256.id = 'KECCAK256';\nKeccak256.size = 32;\nKeccak256.bits = 256;\nKeccak256.blockSize = 136;\nKeccak256.zero = Buffer.alloc(32, 0x00);\nKeccak256.ctx = new Keccak256();\n\n/*\n * Expose\n */\n\nmodule.exports = Keccak256;\n","/*!\n * keccak384.js - Keccak-384 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst Keccak = require('./keccak');\n\n/**\n * Keccak384\n */\n\nclass Keccak384 extends Keccak {\n  constructor() {\n    super();\n  }\n\n  init() {\n    return super.init(384);\n  }\n\n  final() {\n    return super.final(0x01, null);\n  }\n\n  static hash() {\n    return new Keccak384();\n  }\n\n  static hmac() {\n    return super.hmac(384, 0x01, null);\n  }\n\n  static digest(data) {\n    return super.digest(data, 384, 0x01, null);\n  }\n\n  static root(left, right) {\n    return super.root(left, right, 384, 0x01, null);\n  }\n\n  static multi(x, y, z) {\n    return super.multi(x, y, z, 384, 0x01, null);\n  }\n\n  static mac(data, key) {\n    return super.mac(data, key, 384, 0x01, null);\n  }\n}\n\nKeccak384.native = Keccak.native;\nKeccak384.id = 'KECCAK384';\nKeccak384.size = 48;\nKeccak384.bits = 384;\nKeccak384.blockSize = 104;\nKeccak384.zero = Buffer.alloc(48, 0x00);\nKeccak384.ctx = new Keccak384();\n\n/*\n * Expose\n */\n\nmodule.exports = Keccak384;\n","/*!\n * keccak512.js - Keccak-512 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst Keccak = require('./keccak');\n\n/**\n * Keccak512\n */\n\nclass Keccak512 extends Keccak {\n  constructor() {\n    super();\n  }\n\n  init() {\n    return super.init(512);\n  }\n\n  final() {\n    return super.final(0x01, null);\n  }\n\n  static hash() {\n    return new Keccak512();\n  }\n\n  static hmac() {\n    return super.hmac(512, 0x01, null);\n  }\n\n  static digest(data) {\n    return super.digest(data, 512, 0x01, null);\n  }\n\n  static root(left, right) {\n    return super.root(left, right, 512, 0x01, null);\n  }\n\n  static multi(x, y, z) {\n    return super.multi(x, y, z, 512, 0x01, null);\n  }\n\n  static mac(data, key) {\n    return super.mac(data, key, 512, 0x01, null);\n  }\n}\n\nKeccak512.native = Keccak.native;\nKeccak512.id = 'KECCAK512';\nKeccak512.size = 32;\nKeccak512.bits = 512;\nKeccak512.blockSize = 72;\nKeccak512.zero = Buffer.alloc(32, 0x00);\nKeccak512.ctx = new Keccak512();\n\n/*\n * Expose\n */\n\nmodule.exports = Keccak512;\n","/*!\n * kmac128.js - KMAC128 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst KMAC = require('./kmac');\n\n/**\n * KMAC128\n */\n\nclass KMAC128 extends KMAC {\n  constructor() {\n    super();\n  }\n\n  init(key, pers) {\n    return super.init(128, key, pers);\n  }\n\n  static hash() {\n    return new KMAC128();\n  }\n\n  static hmac(key, pers, len) {\n    return super.hmac(128, key, pers, len);\n  }\n\n  static digest(data, key, pers, len) {\n    return super.digest(data, 128, key, pers, len);\n  }\n\n  static root(left, right, key, pers, len) {\n    return super.root(left, right, 128, key, pers, len);\n  }\n\n  static multi(x, y, z, key, pers, len) {\n    return super.multi(x, y, z, 128, key, pers, len);\n  }\n\n  static mac(data, salt, key, pers, len) {\n    return super.mac(data, salt, 128, key, pers, len);\n  }\n}\n\nKMAC128.native = KMAC.native;\nKMAC128.id = 'KMAC128';\nKMAC128.size = 16;\nKMAC128.bits = 128;\nKMAC128.blockSize = 168;\nKMAC128.zero = Buffer.alloc(16, 0x00);\nKMAC128.ctx = new KMAC128();\n\n/*\n * Expose\n */\n\nmodule.exports = KMAC128;\n","/*!\n * kmac256.js - KMAC256 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst KMAC = require('./kmac');\n\n/**\n * KMAC256\n */\n\nclass KMAC256 extends KMAC {\n  constructor() {\n    super();\n  }\n\n  init(key, pers) {\n    return super.init(256, key, pers);\n  }\n\n  static hash() {\n    return new KMAC256();\n  }\n\n  static hmac(key, pers, len) {\n    return super.hmac(256, key, pers, len);\n  }\n\n  static digest(data, key, pers, len) {\n    return super.digest(data, 256, key, pers, len);\n  }\n\n  static root(left, right, key, pers, len) {\n    return super.root(left, right, 256, key, pers, len);\n  }\n\n  static multi(x, y, z, key, pers, len) {\n    return super.multi(x, y, z, 256, key, pers, len);\n  }\n\n  static mac(data, salt, key, pers, len) {\n    return super.mac(data, salt, 256, key, pers, len);\n  }\n}\n\nKMAC256.native = KMAC.native;\nKMAC256.id = 'KMAC256';\nKMAC256.size = 32;\nKMAC256.bits = 256;\nKMAC256.blockSize = 136;\nKMAC256.zero = Buffer.alloc(32, 0x00);\nKMAC256.ctx = new KMAC256();\n\n/*\n * Expose\n */\n\nmodule.exports = KMAC256;\n","/*!\n * md2.js - md2 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/md2');\n","/*!\n * md2.js - MD2 implementation for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on RustCrypto/hashes:\n *   Copyright (c) 2016-2018, The RustCrypto Authors (MIT License).\n *   https://github.com/RustCrypto/hashes\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/MD2_(hash_function)\n *   https://tools.ietf.org/html/rfc1319\n *   https://github.com/RustCrypto/hashes/blob/master/md2/src/lib.rs\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst HMAC = require('../internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = -1;\n\nconst S = new Uint8Array([\n  0x29, 0x2e, 0x43, 0xc9, 0xa2, 0xd8, 0x7c, 0x01,\n  0x3d, 0x36, 0x54, 0xa1, 0xec, 0xf0, 0x06, 0x13,\n  0x62, 0xa7, 0x05, 0xf3, 0xc0, 0xc7, 0x73, 0x8c,\n  0x98, 0x93, 0x2b, 0xd9, 0xbc, 0x4c, 0x82, 0xca,\n  0x1e, 0x9b, 0x57, 0x3c, 0xfd, 0xd4, 0xe0, 0x16,\n  0x67, 0x42, 0x6f, 0x18, 0x8a, 0x17, 0xe5, 0x12,\n  0xbe, 0x4e, 0xc4, 0xd6, 0xda, 0x9e, 0xde, 0x49,\n  0xa0, 0xfb, 0xf5, 0x8e, 0xbb, 0x2f, 0xee, 0x7a,\n  0xa9, 0x68, 0x79, 0x91, 0x15, 0xb2, 0x07, 0x3f,\n  0x94, 0xc2, 0x10, 0x89, 0x0b, 0x22, 0x5f, 0x21,\n  0x80, 0x7f, 0x5d, 0x9a, 0x5a, 0x90, 0x32, 0x27,\n  0x35, 0x3e, 0xcc, 0xe7, 0xbf, 0xf7, 0x97, 0x03,\n  0xff, 0x19, 0x30, 0xb3, 0x48, 0xa5, 0xb5, 0xd1,\n  0xd7, 0x5e, 0x92, 0x2a, 0xac, 0x56, 0xaa, 0xc6,\n  0x4f, 0xb8, 0x38, 0xd2, 0x96, 0xa4, 0x7d, 0xb6,\n  0x76, 0xfc, 0x6b, 0xe2, 0x9c, 0x74, 0x04, 0xf1,\n  0x45, 0x9d, 0x70, 0x59, 0x64, 0x71, 0x87, 0x20,\n  0x86, 0x5b, 0xcf, 0x65, 0xe6, 0x2d, 0xa8, 0x02,\n  0x1b, 0x60, 0x25, 0xad, 0xae, 0xb0, 0xb9, 0xf6,\n  0x1c, 0x46, 0x61, 0x69, 0x34, 0x40, 0x7e, 0x0f,\n  0x55, 0x47, 0xa3, 0x23, 0xdd, 0x51, 0xaf, 0x3a,\n  0xc3, 0x5c, 0xf9, 0xce, 0xba, 0xc5, 0xea, 0x26,\n  0x2c, 0x53, 0x0d, 0x6e, 0x85, 0x28, 0x84, 0x09,\n  0xd3, 0xdf, 0xcd, 0xf4, 0x41, 0x81, 0x4d, 0x52,\n  0x6a, 0xdc, 0x37, 0xc8, 0x6c, 0xc1, 0xab, 0xfa,\n  0x24, 0xe1, 0x7b, 0x08, 0x0c, 0xbd, 0xb1, 0x4a,\n  0x78, 0x88, 0x95, 0x8b, 0xe3, 0x63, 0xe8, 0x6d,\n  0xe9, 0xcb, 0xd5, 0xfe, 0x3b, 0x00, 0x1d, 0x39,\n  0xf2, 0xef, 0xb7, 0x0e, 0x66, 0x58, 0xd0, 0xe4,\n  0xa6, 0x77, 0x72, 0xf8, 0xeb, 0x75, 0x4b, 0x0a,\n  0x31, 0x44, 0x50, 0xb4, 0x8f, 0xed, 0x1f, 0x1a,\n  0xdb, 0x99, 0x8d, 0x33, 0x9f, 0x11, 0x83, 0x14\n]);\n\n/**\n * MD2\n */\n\nclass MD2 {\n  constructor() {\n    this.state = Buffer.alloc(48);\n    this.checksum = Buffer.alloc(16);\n    this.block = Buffer.alloc(16);\n    this.size = FINALIZED;\n  }\n\n  init() {\n    this.state.fill(0);\n    this.checksum.fill(0);\n    this.size = 0;\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    this._update(data, data.length);\n    return this;\n  }\n\n  final() {\n    return this._final(Buffer.alloc(16));\n  }\n\n  _update(data, len) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    let pos = this.size & 15;\n    let off = 0;\n\n    this.size += len;\n\n    if (pos > 0) {\n      let want = 16 - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < 16)\n        return;\n\n      this._transform(this.block, 0);\n    }\n\n    while (len >= 16) {\n      this._transform(data, off);\n      off += 16;\n      len -= 16;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n  }\n\n  _final(out) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    const pos = this.size & 15;\n    const left = 16 - pos;\n    const pad = Buffer.alloc(left);\n\n    for (let i = 0; i < pad.length; i++)\n      pad[i] = left;\n\n    this._update(pad, left);\n    this._update(this.checksum, 16);\n\n    this.state.copy(out, 0, 0, 16);\n\n    this.state.fill(0);\n    this.checksum.fill(0);\n    this.block.fill(0);\n\n    this.size = FINALIZED;\n\n    return out;\n  }\n\n  _transform(chunk, pos) {\n    for (let j = 0; j < 16; j++) {\n      this.state[16 + j] = chunk[pos + j];\n      this.state[32 + j] = this.state[16 + j] ^ this.state[j];\n    }\n\n    let t = 0;\n\n    for (let j = 0; j < 18; j++) {\n      for (let k = 0; k < 48; k++) {\n        this.state[k] ^= S[t];\n        t = this.state[k];\n      }\n      t = (t + j) & 0xff;\n    }\n\n    let l = this.checksum[15];\n\n    for (let j = 0; j < 16; j++) {\n      this.checksum[j] ^= S[chunk[pos + j] ^ l];\n      l = this.checksum[j];\n    }\n  }\n\n  static hash() {\n    return new MD2();\n  }\n\n  static hmac() {\n    return new HMAC(MD2, 16);\n  }\n\n  static digest(data) {\n    return MD2.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 16);\n    assert(Buffer.isBuffer(right) && right.length === 16);\n    return MD2.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = MD2;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return MD2.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nMD2.native = 0;\nMD2.id = 'MD2';\nMD2.size = 16;\nMD2.bits = 128;\nMD2.blockSize = 16;\nMD2.zero = Buffer.alloc(16, 0x00);\nMD2.ctx = new MD2();\n\n/*\n * Expose\n */\n\nmodule.exports = MD2;\n","/*!\n * md4.js - md4 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/md4');\n","/*!\n * md4.js - MD4 implementation for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on RustCrypto/hashes:\n *   Copyright (c) 2016-2018, The RustCrypto Authors (MIT License).\n *   https://github.com/RustCrypto/hashes\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/MD4\n *   https://tools.ietf.org/html/rfc1320\n *   https://github.com/RustCrypto/hashes/blob/master/md4/src/lib.rs\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst HMAC = require('../internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = -1;\nconst DESC = Buffer.alloc(8, 0x00);\nconst PADDING = Buffer.alloc(64, 0x00);\n\nPADDING[0] = 0x80;\n\nconst K = new Uint32Array([\n  0x67452301, 0xefcdab89,\n  0x98badcfe, 0x10325476\n]);\n\n/**\n * MD4\n */\n\nclass MD4 {\n  constructor() {\n    this.state = new Uint32Array(4);\n    this.msg = new Uint32Array(16);\n    this.block = Buffer.alloc(64);\n    this.size = FINALIZED;\n  }\n\n  init() {\n    this.state[0] = K[0];\n    this.state[1] = K[1];\n    this.state[2] = K[2];\n    this.state[3] = K[3];\n    this.size = 0;\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    this._update(data, data.length);\n    return this;\n  }\n\n  final() {\n    return this._final(Buffer.alloc(16));\n  }\n\n  _update(data, len) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    let pos = this.size & 63;\n    let off = 0;\n\n    this.size += len;\n\n    if (pos > 0) {\n      let want = 64 - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < 64)\n        return;\n\n      this._transform(this.block, 0);\n    }\n\n    while (len >= 64) {\n      this._transform(data, off);\n      off += 64;\n      len -= 64;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n  }\n\n  /**\n   * Finalize MD4 context.\n   * @private\n   * @param {Buffer} out\n   * @returns {Buffer}\n   */\n\n  _final(out) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    const pos = this.size & 63;\n    const len = this.size * 8;\n\n    writeU32(DESC, len >>> 0, 0);\n    writeU32(DESC, (len * (1 / 0x100000000)) >>> 0, 4);\n\n    this._update(PADDING, 1 + ((119 - pos) & 63));\n    this._update(DESC, 8);\n\n    for (let i = 0; i < 4; i++) {\n      writeU32(out, this.state[i], i * 4);\n      this.state[i] = 0;\n    }\n\n    for (let i = 0; i < 16; i++)\n      this.msg[i] = 0;\n\n    for (let i = 0; i < 64; i++)\n      this.block[i] = 0;\n\n    this.size = FINALIZED;\n\n    return out;\n  }\n\n  _transform(chunk, pos) {\n    const W = this.msg;\n\n    let a = this.state[0];\n    let b = this.state[1];\n    let c = this.state[2];\n    let d = this.state[3];\n\n    for (let i = 0; i < 16; i++)\n      W[i] = readU32(chunk, pos + i * 4);\n\n    // round 1\n    for (const i of [0, 4, 8, 12]) {\n      a = op1(a, b, c, d, W[i], 3);\n      d = op1(d, a, b, c, W[i + 1], 7);\n      c = op1(c, d, a, b, W[i + 2], 11);\n      b = op1(b, c, d, a, W[i + 3], 19);\n    }\n\n    // round 2\n    for (let i = 0; i < 4; i++) {\n      a = op2(a, b, c, d, W[i], 3);\n      d = op2(d, a, b, c, W[i + 4], 5);\n      c = op2(c, d, a, b, W[i + 8], 9);\n      b = op2(b, c, d, a, W[i + 12], 13);\n    }\n\n    // round 3\n    for (const i of [0, 2, 1, 3]) {\n      a = op3(a, b, c, d, W[i], 3);\n      d = op3(d, a, b, c, W[i + 8], 9);\n      c = op3(c, d, a, b, W[i + 4], 11);\n      b = op3(b, c, d, a, W[i + 12], 15);\n    }\n\n    this.state[0] += a;\n    this.state[1] += b;\n    this.state[2] += c;\n    this.state[3] += d;\n  }\n\n  static hash() {\n    return new MD4();\n  }\n\n  static hmac() {\n    return new HMAC(MD4, 64);\n  }\n\n  static digest(data) {\n    return MD4.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 16);\n    assert(Buffer.isBuffer(right) && right.length === 16);\n    return MD4.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = MD4;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return MD4.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nMD4.native = 0;\nMD4.id = 'MD4';\nMD4.size = 16;\nMD4.bits = 128;\nMD4.blockSize = 64;\nMD4.zero = Buffer.alloc(16, 0x00);\nMD4.ctx = new MD4();\n\n/*\n * Helpers\n */\n\nfunction f(x, y, z) {\n  return (x & y) | (~x & z);\n}\n\nfunction g(x, y, z) {\n  return (x & y) | (x & z) | (y & z);\n}\n\nfunction h(x, y, z) {\n  return x ^ y ^ z;\n}\n\nfunction op1(a, b, c, d, k, s) {\n  return rotl32(a + f(b, c, d) + k, s);\n}\n\nfunction op2(a, b, c, d, k, s) {\n  return rotl32(a + g(b, c, d) + k + 0x5a827999, s);\n}\n\nfunction op3(a, b, c, d, k, s) {\n  return rotl32(a + h(b, c, d) + k + 0x6ed9eba1, s);\n}\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = MD4;\n","/*!\n * md5sha1.js - md5sha1 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/md5sha1');\n","/*!\n * md5sha1.js - MD5-SHA1 implementation for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst MD5 = require('./md5');\nconst SHA1 = require('./sha1');\nconst HMAC = require('../internal/hmac');\n\n/**\n * MD5SHA1\n */\n\nclass MD5SHA1 {\n  constructor() {\n    this.md5 = new MD5();\n    this.sha1 = new SHA1();\n  }\n\n  init() {\n    this.md5.init();\n    this.sha1.init();\n    return this;\n  }\n\n  update(data) {\n    this.md5.update(data);\n    this.sha1.update(data);\n    return this;\n  }\n\n  final() {\n    const md = Buffer.alloc(36);\n\n    this.md5.final().copy(md, 0);\n    this.sha1.final().copy(md, 16);\n\n    return md;\n  }\n\n  static hash() {\n    return new MD5SHA1();\n  }\n\n  static hmac() {\n    return new HMAC(MD5SHA1, 64);\n  }\n\n  static digest(data) {\n    return MD5SHA1.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 36);\n    assert(Buffer.isBuffer(right) && right.length === 36);\n    return MD5SHA1.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = MD5SHA1;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return MD5SHA1.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nMD5SHA1.native = 0;\nMD5SHA1.id = 'MD5SHA1';\nMD5SHA1.size = 36;\nMD5SHA1.bits = 288;\nMD5SHA1.blockSize = 64;\nMD5SHA1.zero = Buffer.alloc(36, 0x00);\nMD5SHA1.ctx = new MD5SHA1();\n\n/*\n * Expose\n */\n\nmodule.exports = MD5SHA1;\n","/*!\n * merkle.js - merkle trees for bcrypto\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on bitcoin/bitcoin:\n *   Copyright (c) 2009-2019, The Bitcoin Core Developers (MIT License).\n *   Copyright (c) 2009-2019, The Bitcoin Developers (MIT License).\n *   https://github.com/bitcoin/bitcoin\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\n\n// Notes about unbalanced merkle trees:\n//\n// Bitcoin hashes odd nodes with themselves,\n// allowing an attacker to add a duplicate\n// TXID, creating an even number of leaves\n// and computing the same root (CVE-2012-2459).\n// In contrast, RFC 6962 simply propagates\n// odd nodes up.\n//\n// RFC 6962:\n//\n//              R\n//             / \\\n//            /   \\\n//           /     \\\n//          /       \\\n//         /         \\\n//        k           j <-- same as below\n//       / \\          |\n//      /   \\         |\n//     /     \\        |\n//    h       i       j\n//   / \\     / \\     / \\\n//  a   b   c   d   e   f\n//\n// Bitcoin Behavior:\n//\n//              R\n//             / \\\n//            /   \\\n//           /     \\\n//          /       \\\n//         /         \\\n//        k           l <-- HASH(j || j)\n//       / \\          |\n//      /   \\         |\n//     /     \\        |\n//    h       i       j\n//   / \\     / \\     / \\\n//  a   b   c   d   e   f\n//\n// This creates a situation where these leaves:\n//\n//        R\n//       / \\\n//      /   \\\n//     /     \\\n//    d       e <-- HASH(c || c)\n//   / \\     / \\\n//  a   b   c   c\n//\n// Compute the same root as:\n//\n//       R\n//      / \\\n//     /   \\\n//    d     e <-- HASH(c || c)\n//   / \\    |\n//  a   b   c\n//\n// Why does this matter? Duplicate TXIDs are\n// invalid right? They're spending the same\n// inputs! The problem arises in certain\n// implementation optimizations which may\n// mark a block hash invalid. In other words,\n// an invalid block shares the same block\n// hash as a valid one!\n//\n// See:\n//   https://tools.ietf.org/html/rfc6962#section-2.1\n//   https://nvd.nist.gov/vuln/detail/CVE-2012-2459\n//   https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-2459\n//   https://bitcointalk.org/?topic=81749\n\n/**\n * Build a merkle tree from leaves.\n * @param {Object} alg\n * @param {Buffer[]} leaves\n * @returns {Array} [nodes, malleated]\n */\n\nfunction createTree(alg, leaves) {\n  assert(alg && typeof alg.root === 'function');\n  assert(Array.isArray(leaves));\n\n  const nodes = new Array(leaves.length);\n\n  for (let i = 0; i < leaves.length; i++)\n    nodes[i] = leaves[i];\n\n  let size = nodes.length;\n  let malleated = false;\n  let i = 0;\n\n  if (size === 0) {\n    nodes.push(alg.zero);\n    return [nodes, malleated];\n  }\n\n  while (size > 1) {\n    for (let j = 0; j < size; j += 2) {\n      const k = Math.min(j + 1, size - 1);\n      const left = nodes[i + j];\n      const right = nodes[i + k];\n\n      if (k === j + 1 && k + 1 === size\n          && left.equals(right)) {\n        malleated = true;\n      }\n\n      const hash = alg.root(left, right);\n\n      nodes.push(hash);\n    }\n\n    i += size;\n\n    size = (size + 1) >>> 1;\n  }\n\n  return [nodes, malleated];\n}\n\n/**\n * Calculate merkle root from leaves.\n * @param {Object} alg\n * @param {Buffer[]} leaves\n * @returns {Array} [root, malleated]\n */\n\nfunction createRoot(alg, leaves) {\n  assert(alg && typeof alg.root === 'function');\n  assert(Array.isArray(leaves));\n\n  const [nodes, malleated] = createTree(alg, leaves);\n  const root = nodes[nodes.length - 1];\n\n  return [root, malleated];\n}\n\n/**\n * Collect a merkle branch from vector index.\n * @param {Object} alg\n * @param {Number} index\n * @param {Buffer[]} leaves\n * @returns {Buffer[]} branch\n */\n\nfunction createBranch(alg, index, leaves) {\n  assert(alg && typeof alg.root === 'function');\n  assert((index >>> 0) === index);\n  assert(Array.isArray(leaves));\n  assert(index < leaves.length);\n\n  let size = leaves.length;\n\n  const [nodes] = createTree(alg, leaves);\n  const branch = [];\n\n  let i = 0;\n\n  while (size > 1) {\n    const j = Math.min(index ^ 1, size - 1);\n\n    branch.push(nodes[i + j]);\n\n    index >>>= 1;\n\n    i += size;\n\n    size = (size + 1) >>> 1;\n  }\n\n  return branch;\n}\n\n/**\n * Derive merkle root from branch.\n * @param {Object} alg\n * @param {Buffer} hash\n * @param {Buffer[]} branch\n * @param {Number} index\n * @returns {Buffer} root\n */\n\nfunction deriveRoot(alg, hash, branch, index) {\n  assert(alg && typeof alg.root === 'function');\n  assert(Buffer.isBuffer(hash));\n  assert(Array.isArray(branch));\n  assert((index >>> 0) === index);\n\n  let root = hash;\n\n  for (const hash of branch) {\n    if ((index & 1) && hash.equals(root))\n      return alg.zero;\n\n    if (index & 1)\n      root = alg.root(hash, root);\n    else\n      root = alg.root(root, hash);\n\n    index >>>= 1;\n  }\n\n  return root;\n}\n\n/*\n * Expose\n */\n\nexports.createTree = createTree;\nexports.createRoot = createRoot;\nexports.createBranch = createBranch;\nexports.deriveRoot = deriveRoot;\n","/*!\n * mrkl.js - merkle trees for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\n\n/*\n * Constants\n */\n\nconst EMPTY = Buffer.alloc(0);\nconst INTERNAL = Buffer.from([0x01]);\nconst LEAF = Buffer.from([0x00]);\n\n/**\n * Build a merkle tree from leaves.\n * @param {Object} alg\n * @param {Buffer[]} leaves\n * @returns {Buffer[]} nodes\n */\n\nfunction createTree(alg, leaves) {\n  assert(alg && typeof alg.multi === 'function');\n  assert(Array.isArray(leaves));\n\n  const nodes = [];\n  const sentinel = hashEmpty(alg);\n\n  for (const data of leaves) {\n    const leaf = hashLeaf(alg, data);\n    nodes.push(leaf);\n  }\n\n  let size = nodes.length;\n  let i = 0;\n\n  if (size === 0) {\n    nodes.push(sentinel);\n    return nodes;\n  }\n\n  while (size > 1) {\n    for (let j = 0; j < size; j += 2) {\n      const l = j;\n      const r = j + 1;\n      const left = nodes[i + l];\n\n      let right;\n\n      if (r < size)\n        right = nodes[i + r];\n      else\n        right = sentinel;\n\n      const hash = hashInternal(alg, left, right);\n      nodes.push(hash);\n    }\n\n    i += size;\n\n    size = (size + 1) >>> 1;\n  }\n\n  return nodes;\n}\n\n/**\n * Calculate merkle root from leaves.\n * @param {Object} alg\n * @param {Buffer[]} leaves\n * @returns {Buffer} root\n */\n\nfunction createRoot(alg, leaves) {\n  const nodes = createTree(alg, leaves);\n  const root = nodes[nodes.length - 1];\n  return root;\n}\n\n/**\n * Collect a merkle branch from vector index.\n * @param {Object} alg\n * @param {Number} index\n * @param {Buffer[]} leaves\n * @returns {Buffer[]} branch\n */\n\nfunction createBranch(alg, index, leaves) {\n  assert((index >>> 0) === index);\n\n  const nodes = createTree(alg, leaves);\n  const sentinel = hashEmpty(alg);\n  const branch = [];\n\n  let size = leaves.length;\n  let i = 0;\n\n  assert(index < leaves.length);\n\n  while (size > 1) {\n    const j = index ^ 1;\n\n    if (j < size)\n      branch.push(nodes[i + j]);\n    else\n      branch.push(sentinel);\n\n    index >>>= 1;\n\n    i += size;\n\n    size = (size + 1) >>> 1;\n  }\n\n  return branch;\n}\n\n/**\n * Derive merkle root from branch.\n * @param {Object} alg\n * @param {Buffer} leaf\n * @param {Buffer[]} branch\n * @param {Number} index\n * @returns {Buffer} root\n */\n\nfunction deriveRoot(alg, leaf, branch, index) {\n  assert(alg && typeof alg.multi === 'function');\n  assert(Buffer.isBuffer(leaf));\n  assert(Array.isArray(branch));\n  assert((index >>> 0) === index);\n\n  let root = hashLeaf(alg, leaf);\n\n  for (const hash of branch) {\n    if (index & 1)\n      root = hashInternal(alg, hash, root);\n    else\n      root = hashInternal(alg, root, hash);\n\n    index >>>= 1;\n  }\n\n  return root;\n}\n\n/**\n * Get sentinel hash.\n * @param {Object} alg\n * @returns {Buffer}\n */\n\nfunction hashEmpty(alg) {\n  return alg.digest(EMPTY);\n}\n\n/**\n * Hash a leaf node.\n * @param {Object} alg\n * @param {Buffer} data\n * @returns {Buffer}\n */\n\nfunction hashLeaf(alg, data) {\n  return alg.multi(LEAF, data);\n}\n\n/**\n * Hash an internal node.\n * @param {Object} alg\n * @param {Buffer} left\n * @param {Buffer} right\n * @returns {Buffer}\n */\n\nfunction hashInternal(alg, left, right) {\n  assert(right != null);\n  return alg.multi(INTERNAL, left, right);\n}\n\n/*\n * Expose\n */\n\nexports.createTree = createTree;\nexports.createRoot = createRoot;\nexports.createBranch = createBranch;\nexports.deriveRoot = deriveRoot;\nexports.hashEmpty = hashEmpty;\nexports.hashLeaf = hashLeaf;\nexports.hashInternal = hashInternal;\n","/*!\n * murmur3.js - murmur3 hash for bcrypto\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/murmur3');\n","/*!\n * murmur3.js - murmur3 hash for bcrypto\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/MurmurHash\n *   https://github.com/aappleby/smhasher\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/**\n * Murmur3 hash.\n * @param {Buffer} data\n * @param {Number} seed\n * @returns {Number}\n */\n\nfunction sum(data, seed) {\n  assert(Buffer.isBuffer(data));\n  assert(typeof seed === 'number');\n\n  const tail = data.length - (data.length & 3);\n  const c1 = 0xcc9e2d51;\n  const c2 = 0x1b873593;\n\n  let h1 = seed | 0;\n\n  for (let i = 0; i < tail; i += 4) {\n    let k1 = readU32(data, i);\n\n    k1 = mul32(k1, c1);\n    k1 = rotl32(k1, 15);\n    k1 = mul32(k1, c2);\n    h1 ^= k1;\n    h1 = rotl32(h1, 13);\n    h1 = (mul32(h1, 5) + 0xe6546b64) | 0;\n  }\n\n  let k1 = 0;\n\n  switch (data.length & 3) {\n    case 3:\n      k1 ^= data[tail + 2] << 16;\n    case 2:\n      k1 ^= data[tail + 1] << 8;\n    case 1:\n      k1 ^= data[tail + 0];\n      k1 = mul32(k1, c1);\n      k1 = rotl32(k1, 15);\n      k1 = mul32(k1, c2);\n      h1 ^= k1;\n  }\n\n  h1 ^= data.length;\n  h1 ^= h1 >>> 16;\n  h1 = mul32(h1, 0x85ebca6b);\n  h1 ^= h1 >>> 13;\n  h1 = mul32(h1, 0xc2b2ae35);\n  h1 ^= h1 >>> 16;\n\n  return h1 >>> 0;\n}\n\n/**\n * Murmur3 hash.\n * @param {Buffer} data\n * @param {Number} n\n * @param {Number} tweak\n * @returns {Number}\n */\n\nfunction tweak(data, n, tweak) {\n  assert(typeof n === 'number');\n  assert(typeof tweak === 'number');\n\n  const seed = mul32(n, 0xfba4c795) + (tweak | 0);\n\n  return sum(data, seed);\n}\n\n/*\n * Helpers\n */\n\nfunction mul32(a, b) {\n  const alo = a & 0xffff;\n  const blo = b & 0xffff;\n  const ahi = a >>> 16;\n  const bhi = b >>> 16;\n  const lo = alo * blo;\n  const hi = ahi * blo + bhi * alo + (lo >>> 16);\n\n  return (hi << 16) | (lo & 0xffff);\n}\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\n/**\n * Expose\n */\n\nexports.native = 0;\nexports.sum = sum;\nexports.tweak = tweak;\n","/*!\n * p192.js - p192 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/p192');\n","/*!\n * p192.js - ECDSA-P192 for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst ECDSA = require('./ecdsa');\nconst SHA256 = require('../sha256');\n\n/*\n * Expose\n */\n\nmodule.exports = new ECDSA('P192', SHA256, SHA256);\n","/*!\n * schnorr-legacy.js - bip-schnorr for bcrypto\n * Copyright (c) 2019-2020, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on sipa/bip-schnorr:\n *   Copyright (c) 2018-2019, Pieter Wuille (2-clause BSD License).\n *   https://github.com/sipa/bips/blob/d194620/bip-schnorr/reference.py\n *\n * Parts of this software are based on ElementsProject/secp256k1-zkp:\n *   Copyright (c) 2013, Pieter Wuille.\n *   https://github.com/ElementsProject/secp256k1-zkp\n *\n * Resources:\n *   https://github.com/sipa/bips/blob/d194620/bip-schnorr.mediawiki\n *   https://github.com/sipa/bips/blob/d194620/bip-schnorr/reference.py\n *   https://github.com/sipa/bips/blob/d194620/bip-schnorr/test-vectors.csv\n *   https://github.com/ElementsProject/secp256k1-zkp/tree/11af701/src/modules/schnorrsig\n *   https://github.com/bitcoincashorg/bitcoincash.org/blob/master/spec/2019-05-15-schnorr.md\n *\n * References:\n *\n *   [SCHNORR] Schnorr Signatures for secp256k1\n *     Pieter Wuille\n *     https://github.com/sipa/bips/blob/d194620/bip-schnorr.mediawiki\n *\n *   [CASH] Schnorr Signature specification\n *     Mark B. Lundeberg\n *     https://github.com/bitcoincashorg/bitcoincash.org/blob/master/spec/2019-05-15-schnorr.md\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst BatchRNG = require('./batch-rng');\nconst BN = require('../bn');\n\n/**\n * Schnorr\n */\n\nclass Schnorr {\n  constructor(curve, hash) {\n    this.curve = curve;\n    this.hash = hash;\n    this.rng = new BatchRNG(this.curve, this.encode.bind(this));\n  }\n\n  check() {\n    // [SCHNORR] \"Footnotes\".\n    // Must be congruent to 3 mod 4.\n    if (this.curve.p.andln(3) !== 3)\n      throw new Error(`Schnorr is not supported for ${this.curve.id}.`);\n  }\n\n  encode(key) {\n    // Extra speedy key reserialization.\n    assert(Buffer.isBuffer(key));\n\n    const {fieldSize} = this.curve;\n\n    if (key.length === 1 + fieldSize)\n      return key;\n\n    if (key.length !== 1 + fieldSize * 2)\n      throw new Error('Invalid point.');\n\n    const out = Buffer.alloc(1 + fieldSize);\n\n    out[0] = 0x02 | (key[key.length - 1] & 1);\n    key.copy(out, 1, 1, 1 + fieldSize);\n\n    return out;\n  }\n\n  hashInt(...items) {\n    // [SCHNORR] \"Specification\".\n    // eslint-disable-next-line\n    const h = new this.hash();\n\n    h.init();\n\n    for (const item of items)\n      h.update(item);\n\n    let hash = h.final(this.curve.scalarSize);\n\n    if (hash.length > this.curve.scalarSize)\n      hash = hash.slice(0, this.curve.scalarSize);\n\n    const num = BN.decode(hash, this.curve.endian);\n\n    num.iumaskn(this.curve.scalarBits);\n\n    return num.imod(this.curve.n);\n  }\n\n  hashNonce(a, m) {\n    return this.hashInt(a, m);\n  }\n\n  hashChallenge(R, A, m) {\n    return this.hashInt(R, this.encode(A), m);\n  }\n\n  sign(msg, key) {\n    assert(Buffer.isBuffer(msg));\n\n    this.check();\n\n    return this._sign(msg, key);\n  }\n\n  _sign(msg, key) {\n    // Schnorr Signing.\n    //\n    // [SCHNORR] \"Signing\".\n    // [CASH] \"Recommended practices for secure signature generation\".\n    //\n    // Assumptions:\n    //\n    //   - Let `H` be a cryptographic hash function.\n    //   - Let `m` be a 32-byte array.\n    //   - Let `a` be a secret non-zero scalar.\n    //   - k != 0.\n    //\n    // Computation:\n    //\n    //   A = G * a\n    //   k = H(a, m) mod n\n    //   R = G * k\n    //   k = -k mod n, if y(R) is not square\n    //   r = x(R)\n    //   e = H(r, A, m) mod n\n    //   s = (k + e * a) mod n\n    //   S = (r, s)\n    //\n    // Note that `k` must remain secret,\n    // otherwise an attacker can compute:\n    //\n    //   a = (s - k) / e mod n\n    const {n} = this.curve;\n    const G = this.curve.g;\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const A = G.mulBlind(a);\n    const k = this.hashNonce(key, msg);\n\n    if (k.isZero())\n      throw new Error('Signing failed (k\\' = 0).');\n\n    const R = G.mulBlind(k);\n\n    if (!R.isSquare())\n      k.ineg().imod(n);\n\n    const Rraw = R.encodeX();\n    const Araw = A.encode();\n    const e = this.hashChallenge(Rraw, Araw, msg);\n    const s = k.add(e.mul(a)).imod(n);\n\n    return Buffer.concat([Rraw, this.curve.encodeScalar(s)]);\n  }\n\n  verify(msg, sig, key) {\n    assert(Buffer.isBuffer(msg));\n    assert(Buffer.isBuffer(sig));\n    assert(Buffer.isBuffer(key));\n\n    this.check();\n\n    if (sig.length !== this.curve.fieldSize + this.curve.scalarSize)\n      return false;\n\n    try {\n      return this._verify(msg, sig, key);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  _verify(msg, sig, key) {\n    // Schnorr Verification.\n    //\n    // [SCHNORR] \"Verification\".\n    // [CASH] \"Signature verification algorithm\".\n    //\n    // Assumptions:\n    //\n    //   - Let `H` be a cryptographic hash function.\n    //   - Let `m` be a 32-byte array.\n    //   - Let `r` and `s` be signature elements.\n    //   - Let `A` be a valid group element.\n    //   - r^3 + a * r + b is square in F(p).\n    //   - sqrt(r^3 + a * r + b) is square in F(p).\n    //   - r < p, s < n.\n    //   - R != O.\n    //\n    // Computation:\n    //\n    //   R = (r, sqrt(r^3 + a * r + b))\n    //   e = H(r, A, m) mod n\n    //   R == G * s - A * e\n    //\n    // We can skip a square root with:\n    //\n    //   e = H(r, A, m) mod n\n    //   R = G * s - A * e\n    //   y(R) is square\n    //   x(R) == r\n    //\n    // We can also avoid affinization by\n    // replacing the two assertions with:\n    //\n    //   (y(R) * z(R) mod p) is square\n    //   x(R) == r * z(R)^2 mod p\n    //\n    // Furthermore, squareness can be calculated\n    // with a variable time Jacobi symbol algorithm.\n    const {p, n} = this.curve;\n    const G = this.curve.g;\n    const Rraw = sig.slice(0, this.curve.fieldSize);\n    const sraw = sig.slice(this.curve.fieldSize);\n    const r = this.curve.decodeField(Rraw);\n    const s = this.curve.decodeScalar(sraw);\n    const A = this.curve.decodePoint(key);\n\n    if (r.cmp(p) >= 0 || s.cmp(n) >= 0)\n      return false;\n\n    const e = this.hashChallenge(Rraw, key, msg);\n    const R = G.jmulAdd(s, A, e.ineg().imod(n));\n\n    if (!R.isSquare())\n      return false;\n\n    if (!R.eqX(r))\n      return false;\n\n    return true;\n  }\n\n  verifyBatch(batch) {\n    assert(Array.isArray(batch));\n\n    this.check();\n\n    for (const item of batch) {\n      assert(Array.isArray(item) && item.length === 3);\n\n      const [msg, sig, key] = item;\n\n      assert(Buffer.isBuffer(msg));\n      assert(Buffer.isBuffer(sig));\n      assert(Buffer.isBuffer(key));\n\n      if (sig.length !== this.curve.fieldSize + this.curve.scalarSize)\n        return false;\n    }\n\n    try {\n      return this._verifyBatch(batch);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  _verifyBatch(batch) {\n    // Schnorr Batch Verification.\n    //\n    // [SCHNORR] \"Batch Verification\".\n    //\n    // Assumptions:\n    //\n    //   - Let `H` be a cryptographic hash function.\n    //   - Let `m` be a 32-byte array.\n    //   - Let `r` and `s` be signature elements.\n    //   - Let `A` be a valid group element.\n    //   - Let `i` be the batch item index.\n    //   - r^3 + a * r + b is square in F(p).\n    //   - sqrt(r^3 + a * r + b) is square in F(p).\n    //   - r < p, s < n.\n    //   - a1 = 1 mod n.\n    //\n    // Computation:\n    //\n    //   Ri = (ri, sqrt(ri^3 + a * ri + b))\n    //   ei = H(ri, Ai, mi) mod n\n    //   ai = random integer in [1,n-1]\n    //   lhs = si * ai + ... mod n\n    //   rhs = Ri * ai + Ai * (ei * ai mod n) + ...\n    //   G * -lhs + rhs == O\n    const {n} = this.curve;\n    const G = this.curve.g;\n    const points = new Array(1 + batch.length * 2);\n    const coeffs = new Array(1 + batch.length * 2);\n    const sum = new BN(0);\n\n    this.rng.init(batch);\n\n    points[0] = G;\n    coeffs[0] = sum;\n\n    for (let i = 0; i < batch.length; i++) {\n      const [msg, sig, key] = batch[i];\n      const Rraw = sig.slice(0, this.curve.fieldSize);\n      const sraw = sig.slice(this.curve.fieldSize);\n      const R = this.curve.decodeSquare(Rraw);\n      const s = this.curve.decodeScalar(sraw);\n      const A = this.curve.decodePoint(key);\n\n      if (s.cmp(n) >= 0)\n        return false;\n\n      const e = this.hashChallenge(Rraw, key, msg);\n      const a = this.rng.generate(i);\n      const ea = e.mul(a).imod(n);\n\n      sum.iadd(s.mul(a)).imod(n);\n\n      points[1 + i * 2 + 0] = R;\n      coeffs[1 + i * 2 + 0] = a;\n      points[1 + i * 2 + 1] = A;\n      coeffs[1 + i * 2 + 1] = ea;\n    }\n\n    sum.ineg().imod(n);\n\n    return this.curve.jmulAll(points, coeffs).isInfinity();\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Schnorr;\n","/*!\n * p224.js - p224 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/p224');\n","/*!\n * p224.js - ECDSA-P224 for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst ECDSA = require('./ecdsa');\nconst SHA256 = require('../sha256');\n\n/*\n * Expose\n */\n\nmodule.exports = new ECDSA('P224', SHA256, SHA256);\n","/*!\n * p256.js - ECDSA-P256 for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst ECDSA = require('./ecdsa');\nconst SHA256 = require('../sha256');\n\n/*\n * Expose\n */\n\nmodule.exports = new ECDSA('P256', SHA256, SHA256);\n","/*!\n * p384.js - ECDSA-P384 for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst ECDSA = require('./ecdsa');\nconst SHA384 = require('../sha384');\n\n/*\n * Expose\n */\n\nmodule.exports = new ECDSA('P384', SHA384, SHA384);\n","/*!\n * sha384.js - SHA384 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hash.js:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/hash.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SHA-2\n *   https://tools.ietf.org/html/rfc4634\n *   https://github.com/indutny/hash.js/blob/master/lib/hash/sha/384.js\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst SHA512 = require('./sha512');\nconst HMAC = require('../internal/hmac');\n\n/**\n * SHA384\n */\n\nclass SHA384 extends SHA512 {\n  constructor() {\n    super();\n  }\n\n  init() {\n    this.state[0] = 0xcbbb9d5d;\n    this.state[1] = 0xc1059ed8;\n    this.state[2] = 0x629a292a;\n    this.state[3] = 0x367cd507;\n    this.state[4] = 0x9159015a;\n    this.state[5] = 0x3070dd17;\n    this.state[6] = 0x152fecd8;\n    this.state[7] = 0xf70e5939;\n    this.state[8] = 0x67332667;\n    this.state[9] = 0xffc00b31;\n    this.state[10] = 0x8eb44a87;\n    this.state[11] = 0x68581511;\n    this.state[12] = 0xdb0c2e0d;\n    this.state[13] = 0x64f98fa7;\n    this.state[14] = 0x47b5481d;\n    this.state[15] = 0xbefa4fa4;\n    this.size = 0;\n    return this;\n  }\n\n  final() {\n    return super.final().slice(0, 48);\n  }\n\n  static hash() {\n    return new SHA384();\n  }\n\n  static hmac() {\n    return new HMAC(SHA384, 128);\n  }\n\n  static digest(data) {\n    return SHA384.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 48);\n    assert(Buffer.isBuffer(right) && right.length === 48);\n    return SHA384.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = SHA384;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return SHA384.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nSHA384.native = 0;\nSHA384.id = 'SHA384';\nSHA384.size = 48;\nSHA384.bits = 384;\nSHA384.blockSize = 128;\nSHA384.zero = Buffer.alloc(48, 0x00);\nSHA384.ctx = new SHA384();\n\n/*\n * Expose\n */\n\nmodule.exports = SHA384;\n","/*!\n * p521.js - ECDSA-P521 for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst ECDSA = require('./ecdsa');\nconst SHA512 = require('../sha512');\nconst SHAKE256 = require('../shake256');\n\n/*\n * Expose\n */\n\nmodule.exports = new ECDSA('P521', SHA512, SHAKE256);\n","/*!\n * pbkdf2.js - pbkdf2 for bcrypto\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/PBKDF2\n *   https://tools.ietf.org/html/rfc2898\n *   https://tools.ietf.org/html/rfc2898#section-5.2\n *   https://tools.ietf.org/html/rfc6070\n *   https://www.emc.com/collateral/white-papers/h11302-pkcs5v2-1-password-based-cryptography-standard-wp.pdf\n *   http://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst crypto = global.crypto || global.msCrypto || {};\nconst subtle = crypto.subtle || {};\n\n/**\n * Perform key derivation using PBKDF2.\n * @param {Function} hash\n * @param {Buffer} pass\n * @param {Buffer} salt\n * @param {Number} iter\n * @param {Number} len\n * @returns {Buffer}\n */\n\nfunction derive(hash, pass, salt, iter, len) {\n  if (typeof pass === 'string')\n    pass = Buffer.from(pass, 'utf8');\n\n  if (typeof salt === 'string')\n    salt = Buffer.from(salt, 'utf8');\n\n  if (salt == null)\n    salt = Buffer.alloc(0);\n\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(pass));\n  assert(Buffer.isBuffer(salt));\n  assert((iter >>> 0) === iter);\n  assert((len >>> 0) === len);\n\n  const size = hash.size;\n  const blocks = Math.ceil(len / size);\n  const out = Buffer.alloc(blocks * size);\n  const state = Buffer.alloc(salt.length + 4);\n\n  salt.copy(state, 0);\n\n  // Preemptively shorten key.\n  if (pass.length > hash.blockSize) {\n    pass = hash.digest(pass);\n    assert(pass.length <= hash.blockSize);\n  }\n\n  for (let i = 0; i < blocks; i++) {\n    const round = i + 1;\n\n    state[salt.length + 0] = round >>> 24;\n    state[salt.length + 1] = round >>> 16;\n    state[salt.length + 2] = round >>> 8;\n    state[salt.length + 3] = round;\n\n    const block = hash.mac(state, pass);\n\n    let mac = block;\n\n    for (let j = 1; j < iter; j++) {\n      mac = hash.mac(mac, pass);\n\n      for (let k = 0; k < size; k++)\n        block[k] ^= mac[k];\n    }\n\n    block.copy(out, i * size);\n  }\n\n  return out.slice(0, len);\n}\n\n/**\n * Execute pbkdf2 asynchronously.\n * @param {Function} hash\n * @param {Buffer} pass\n * @param {Buffer} salt\n * @param {Number} iter\n * @param {Number} len\n * @returns {Promise}\n */\n\nasync function deriveAsync(hash, pass, salt, iter, len) {\n  if (typeof pass === 'string')\n    pass = Buffer.from(pass, 'utf8');\n\n  if (typeof salt === 'string')\n    salt = Buffer.from(salt, 'utf8');\n\n  if (salt == null)\n    salt = Buffer.alloc(0);\n\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(pass));\n  assert(Buffer.isBuffer(salt));\n  assert((iter >>> 0) === iter);\n  assert((len >>> 0) === len);\n\n  const name = getHash(hash);\n\n  if (!subtle.importKey || !subtle.deriveBits || !name)\n    return derive(hash, pass, salt, iter, len);\n\n  const algo = { name: 'PBKDF2' };\n  const use = ['deriveBits'];\n\n  const options = {\n    name: 'PBKDF2',\n    salt: salt,\n    iterations: iter,\n    hash: name\n  };\n\n  const key = await subtle.importKey('raw', pass, algo, false, use);\n  const out = await subtle.deriveBits(options, key, len * 8);\n\n  return Buffer.from(out);\n}\n\n/*\n * Helpers\n */\n\nfunction getHash(hash) {\n  switch (hash.id) {\n    case 'SHA1':\n      return 'SHA-1';\n    case 'SHA256':\n      return 'SHA-256';\n    case 'SHA384':\n      return 'SHA-384';\n    case 'SHA512':\n      return 'SHA-512';\n    default:\n      return null;\n  }\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.derive = derive;\nexports.deriveAsync = deriveAsync;\n","/*!\n * pgp.js - PGP for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/crypto:\n *   Copyright (c) 2009 The Go Authors. All rights reserved.\n *   https://github.com/golang/crypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Pretty_Good_Privacy#OpenPGP\n *   https://tools.ietf.org/html/rfc4880\n *   https://github.com/golang/crypto/tree/master/openpgp\n *   https://github.com/gpg/gnupg/blob/master/common/openpgpdefs.h\n *   https://github.com/gpg/gnupg/blob/master/g10/parse-packet.c\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst bio = require('bufio');\nconst {PEMBlock} = require('./encoding/pem');\nconst {countLeft} = require('./encoding/util');\nconst cipher = require('./cipher');\nconst MD5 = require('./md5');\nconst SHA1 = require('./sha1');\nconst RIPEMD160 = require('./ripemd160');\nconst SHA224 = require('./sha224');\nconst SHA256 = require('./sha256');\nconst SHA384 = require('./sha384');\nconst SHA512 = require('./sha512');\nconst pgpdf = require('./internal/pgpdf');\n\n/*\n * Constants\n */\n\nconst packetTypes = {\n  NONE: 0,\n  PUBKEY_ENC: 1,\n  SIGNATURE: 2,\n  SYMKEY_ENC: 3,\n  ONEPASS_SIG: 4,\n  PRIVATE_KEY: 5,\n  PUBLIC_KEY: 6,\n  PRIVATE_SUBKEY: 7,\n  COMPRESSED: 8,\n  ENCRYPTED: 9,\n  MARKER: 10,\n  PLAINTEXT: 11,\n  RING_TRUST: 12,\n  USER_ID: 13,\n  PUBLIC_SUBKEY: 14,\n  OLD_COMMENT: 16,\n  ATTRIBUTE: 17,\n  ENCRYPTED_MDC: 18,\n  MDC: 19,\n  ENCRYPTED_AEAD: 20\n};\n\nconst packetTypesByVal = {\n  0: 'NONE',\n  1: 'PUBKEY_ENC',\n  2: 'SIGNATURE',\n  3: 'SYMKEY_ENC',\n  4: 'ONEPASS_SIG',\n  5: 'PRIVATE_KEY',\n  6: 'PUBLIC_KEY',\n  7: 'PRIVATE_SUBKEY',\n  8: 'COMPRESSED',\n  9: 'ENCRYPTED',\n  10: 'MARKER',\n  11: 'PLAINTEXT',\n  12: 'RING_TRUST',\n  13: 'USER_ID',\n  14: 'PUBLIC_SUBKEY',\n  16: 'OLD_COMMENT',\n  17: 'ATTRIBUTE',\n  18: 'ENCRYPTED_MDC',\n  19: 'MDC',\n  20: 'ENCRYPTED_AEAD'\n};\n\nconst sigTypes = {\n  BINARY: 0x00,\n  TEXT: 0x01,\n  GENERIC_CERT: 0x10,\n  PERSONA_CERT: 0x11,\n  CASUAL_CERT: 0x12,\n  POSITIVE_CERT: 0x13,\n  SUBKEY_BINDING: 0x18,\n  PRIMARY_KEY_BINDING: 0x19,\n  DIRECT_SIGNATURE: 0x1f,\n  KEY_REVOCATION: 0x20,\n  SUBKEY_REVOCATION: 0x28\n};\n\nconst sigTypesByVal = {\n  0x00: 'BINARY',\n  0x01: 'TEXT',\n  0x10: 'GENERIC_CERT',\n  0x11: 'PERSONA_CERT',\n  0x12: 'CASUAL_CERT',\n  0x13: 'POSITIVE_CERT',\n  0x18: 'SUBKEY_BINDING',\n  0x19: 'PRIMARY_KEY_BINDING',\n  0x1f: 'DIRECT_SIGNATURE',\n  0x20: 'KEY_REVOCATION',\n  0x28: 'SUBKEY_REVOCATION'\n};\n\nconst keyTypes = {\n  RSA: 1,\n  RSA_ENCRYPT_ONLY: 2,\n  RSA_SIGN_ONLY: 3,\n  ELGAMAL: 16,\n  DSA: 17,\n  ECDH: 18,\n  ECDSA: 19,\n  ELGAMAL_LEGACY: 20,\n  EDDSA: 22\n};\n\nconst keyTypesByVal = {\n  1: 'RSA',\n  2: 'RSA_ENCRYPT_ONLY',\n  3: 'RSA_SIGN_ONLY',\n  16: 'ELGAMAL',\n  17: 'DSA',\n  18: 'ECDH',\n  19: 'ECDSA',\n  20: 'ELGAMAL_LEGACY',\n  22: 'EDDSA'\n};\n\nconst cipherTypes = {\n  NONE: 0,\n  IDEA: 1,\n  DES3: 2,\n  CAST5: 3,\n  BLOWFISH: 4,\n  AES128: 7,\n  AES192: 8,\n  AES256: 9,\n  TWOFISH: 10,\n  CAMELLIA128: 11,\n  CAMELLIA192: 12,\n  CAMELLIA256: 13\n};\n\nconst cipherTypesByVal = {\n  0: 'NONE',\n  1: 'IDEA',\n  2: 'DES3',\n  3: 'CAST5',\n  4: 'BLOWFISH',\n  7: 'AES128',\n  8: 'AES192',\n  9: 'AES256',\n  10: 'TWOFISH',\n  11: 'CAMELLIA128',\n  12: 'CAMELLIA192',\n  13: 'CAMELLIA256'\n};\n\nconst hashTypes = {\n  MD5: 1,\n  SHA1: 2,\n  RIPEMD160: 3,\n  SHA256: 8,\n  SHA384: 9,\n  SHA512: 10,\n  SHA224: 11\n};\n\nconst hashTypesByVal = {\n  1: 'MD5',\n  2: 'SHA1',\n  3: 'RIPEMD160',\n  8: 'SHA256',\n  9: 'SHA384',\n  10: 'SHA512',\n  11: 'SHA224'\n};\n\nconst hashToHash = {\n  1: MD5,\n  2: SHA1,\n  3: RIPEMD160,\n  8: SHA256,\n  9: SHA384,\n  10: SHA512,\n  11: SHA224\n};\n\nconst compressTypes = {\n  NONE: 0,\n  ZIP: 1,\n  ZLIB: 2,\n  BZIP2: 3\n};\n\nconst compressTypesByVal = {\n  0: 'NONE',\n  1: 'ZIP',\n  2: 'ZLIB',\n  3: 'BZIP2'\n};\n\nconst curveTypes = {\n  NONE: 0,\n  P256: 1,\n  P384: 2,\n  P521: 3,\n  SECP256K1: 4,\n  X25519: 5,\n  BRAINPOOLP256: 6,\n  BRAINPOOLP384: 7,\n  BRAINPOOLP512: 8,\n  ED25519: 9\n};\n\nconst curveTypesByVal = {\n  0: 'NONE',\n  1: 'P256',\n  2: 'P384',\n  3: 'P521',\n  4: 'SECP256K1',\n  5: 'X25519',\n  6: 'BRAINPOOLP256',\n  7: 'BRAINPOOLP384',\n  8: 'BRAINPOOLP512',\n  9: 'ED25519'\n};\n\nconst oids = {\n  P256: Buffer.from('2a8648ce3d030107', 'hex'),\n  P384: Buffer.from('2b81040022', 'hex'),\n  P521: Buffer.from('2b81040023', 'hex'),\n  SECP256K1: Buffer.from('2b8104000a', 'hex'),\n  X25519: Buffer.from('2b060104019755010501', 'hex'),\n  BRAINPOOLP256: Buffer.from('2b2403030208010107', 'hex'),\n  BRAINPOOLP384: Buffer.from('2b240303020801010b', 'hex'),\n  BRAINPOOLP512: Buffer.from('2b240303020801010d', 'hex'),\n  ED25519: Buffer.from('2b06010401da470f01', 'hex')\n};\n\nconst EMPTY = Buffer.alloc(0);\n\n/**\n * PGP Message\n */\n\nclass PGPMessage extends bio.Struct {\n  constructor() {\n    super();\n    this.packets = [];\n  }\n\n  getSize() {\n    let size = 0;\n\n    for (const pkt of this.packets)\n      size += pkt.getSize();\n\n    return size;\n  }\n\n  write(bw) {\n    for (const pkt of this.packets)\n      pkt.write(bw);\n\n    return bw;\n  }\n\n  read(br) {\n    while (br.left()) {\n      const pkt = PGPPacket.read(br);\n      this.packets.push(pkt);\n    }\n\n    return this;\n  }\n\n  toString(type = 'PGP MESSAGE') {\n    assert(typeof type === 'string');\n\n    const block = new PEMBlock();\n\n    block.type = type;\n    block.data = this.encode();\n\n    return block.toString(true);\n  }\n\n  fromString(str) {\n    const block = PEMBlock.fromString(str, true);\n\n    if (block.type.substring(0, 4) !== 'PGP ')\n      throw new Error('PEM type mismatch.');\n\n    return this.decode(block.data);\n  }\n\n  format() {\n    return {\n      packets: this.packets\n    };\n  }\n}\n\n/**\n * PGP Packet\n */\n\nclass PGPPacket extends bio.Struct {\n  constructor() {\n    super();\n    this.type = 0;\n    this.body = new PGPUnknown();\n  }\n\n  getSize() {\n    const len = this.body.getSize();\n\n    let size = 0;\n\n    size += 1;\n\n    if (len < 192) {\n      size += 1;\n    } else if (len < 8384) {\n      size += 2;\n    } else {\n      size += 5;\n    }\n\n    size += len;\n\n    return size;\n  }\n\n  write(bw) {\n    let len = this.body.getSize();\n\n    bw.writeU8(0x80 | 0x40 | this.type);\n\n    if (len < 192) {\n      bw.writeU8(len);\n    } else if (len < 8384) {\n      len -= 192;\n      bw.writeU8(192 + (len >>> 8));\n      bw.writeU8(len & 0xff);\n    } else {\n      bw.writeU8(255);\n      bw.writeU32BE(len);\n    }\n\n    this.body.write(bw);\n\n    return bw;\n  }\n\n  read(br) {\n    const ch = br.readU8();\n\n    if ((ch & 0x80) === 0)\n      throw new Error('Hi bit unset in PGP packet header.');\n\n    let type = 0;\n    let child = null;\n\n    if ((ch & 0x40) === 0) {\n      const t = (ch & 0x3f) >>> 2;\n      const s = 1 << (ch & 3);\n\n      let size = 0;\n\n      switch (s) {\n        case 1:\n          size = br.readU8();\n          break;\n        case 2:\n          size = br.readU16BE();\n          break;\n        case 4:\n          size = br.readU32BE();\n          break;\n        case 8:\n          size = br.left();\n          break;\n      }\n\n      type = t;\n      child = br.readChild(size);\n    } else {\n      const t = ch & 0x3f;\n      const s = br.readU8();\n\n      let size = 0;\n\n      if (s < 192) {\n        size = s;\n      } else if (s < 224) {\n        size = (s - 192) * 0x100;\n        size += br.readU8() + 192;\n      } else if (s < 255) {\n        throw new Error('Cannot handle PGP partial length.');\n      } else {\n        size = br.readU32BE();\n      }\n\n      type = t;\n      child = br.readChild(size);\n    }\n\n    this.type = type;\n\n    switch (this.type) {\n      case packetTypes.PUBKEY_ENC:\n        this.body = PGPUnknown.read(child);\n        break;\n      case packetTypes.SIGNATURE:\n        this.body = PGPUnknown.read(child);\n        break;\n      case packetTypes.SYMKEY_ENC:\n        this.body = PGPUnknown.read(child);\n        break;\n      case packetTypes.ONEPASS_SIG:\n        this.body = PGPUnknown.read(child);\n        break;\n      case packetTypes.PRIVATE_KEY:\n        this.body = PGPPrivateKey.read(child);\n        break;\n      case packetTypes.PUBLIC_KEY:\n        this.body = PGPPublicKey.read(child);\n        break;\n      case packetTypes.PRIVATE_SUBKEY:\n        this.body = PGPPrivateKey.read(child);\n        break;\n      case packetTypes.COMPRESSED:\n        this.body = PGPUnknown.read(child);\n        break;\n      case packetTypes.ENCRYPTED:\n        this.body = PGPUnknown.read(child);\n        break;\n      case packetTypes.MARKER:\n        this.body = PGPUnknown.read(child);\n        break;\n      case packetTypes.PLAINTEXT:\n        this.body = PGPUnknown.read(child);\n        break;\n      case packetTypes.RING_TRUST:\n        this.body = PGPUnknown.read(child);\n        break;\n      case packetTypes.USER_ID:\n        this.body = PGPUserID.read(child);\n        break;\n      case packetTypes.PUBLIC_SUBKEY:\n        this.body = PGPPublicKey.read(child);\n        break;\n      case packetTypes.OLD_COMMENT:\n        this.body = PGPPublicKey.read(child);\n        break;\n      case packetTypes.ATTRIBUTE:\n        this.body = PGPUnknown.read(child);\n        break;\n      case packetTypes.ENCRYPTED_MDC:\n        this.body = PGPUnknown.read(child);\n        break;\n      case packetTypes.MDC:\n        this.body = PGPUnknown.read(child);\n        break;\n      case packetTypes.ENCRYPTED_AEAD:\n        this.body = PGPUnknown.read(child);\n        break;\n      default:\n        this.body = PGPUnknown.read(child);\n        break;\n    }\n\n    return this;\n  }\n\n  format() {\n    return {\n      type: packetTypesByVal[this.type] || 'UNKNOWN',\n      body: this.body\n    };\n  }\n}\n\n/**\n * PGP Body\n */\n\nclass PGPBody extends bio.Struct {\n  constructor() {\n    super();\n  }\n}\n\n/**\n * PGP Unknown\n */\n\nclass PGPUnknown extends PGPBody {\n  constructor() {\n    super();\n    this.data = EMPTY;\n  }\n\n  getSize() {\n    return this.data.length;\n  }\n\n  write(bw) {\n    bw.writeBytes(this.data);\n    return bw;\n  }\n\n  read(br) {\n    this.data = br.readBytes(br.left());\n    return this;\n  }\n\n  format() {\n    return {\n      data: this.data.toString('hex')\n    };\n  }\n}\n\n/**\n * PGP Public Key\n */\n\nclass PGPPublicKey extends PGPBody {\n  constructor() {\n    super();\n\n    this.version = 4;\n    this.algorithm = 0;\n    this.expires = 0;\n    this.timestamp = 0;\n\n    // RSA\n    this.n = new MPI();\n    this.e = new MPI();\n\n    // El Gamal\n    this.p = new MPI();\n    this.g = new MPI();\n    this.y = new MPI();\n\n    // DSA\n    this.p;\n    this.q = new MPI();\n    this.g;\n    this.y;\n\n    // ECDH\n    this.oid = EMPTY;\n    this.point = new MPI();\n    this.kdfHash = 0;\n    this.kdfAlg = 0;\n\n    // ECDSA\n    this.oid;\n    this.point;\n\n    // Unknown\n    this.data = EMPTY;\n  }\n\n  get curve() {\n    if (this.oid.equals(oids.P256))\n      return curveTypes.P256;\n\n    if (this.oid.equals(oids.P384))\n      return curveTypes.P384;\n\n    if (this.oid.equals(oids.P521))\n      return curveTypes.P521;\n\n    if (this.oid.equals(oids.SECP256K1))\n      return curveTypes.SECP256K1;\n\n    if (this.oid.equals(oids.X25519))\n      return curveTypes.X25519;\n\n    if (this.oid.equals(oids.BRAINPOOLP256))\n      return curveTypes.BRAINPOOLP256;\n\n    if (this.oid.equals(oids.BRAINPOOLP384))\n      return curveTypes.BRAINPOOLP384;\n\n    if (this.oid.equals(oids.BRAINPOOLP512))\n      return curveTypes.BRAINPOOLP512;\n\n    if (this.oid.equals(oids.ED25519))\n      return curveTypes.ED25519;\n\n    return 0;\n  }\n\n  set curve(value) {\n    switch (value) {\n      case curveTypes.P256:\n        this.oid = oids.P256;\n        break;\n      case curveTypes.P384:\n        this.oid = oids.P384;\n        break;\n      case curveTypes.P521:\n        this.oid = oids.P521;\n        break;\n      case curveTypes.SECP256K1:\n        this.oid = oids.SECP256K1;\n        break;\n      case curveTypes.X25519:\n        this.oid = oids.X25519;\n        break;\n      case curveTypes.BRAINPOOLP256:\n        this.oid = oids.BRAINPOOLP256;\n        break;\n      case curveTypes.BRAINPOOLP384:\n        this.oid = oids.BRAINPOOLP384;\n        break;\n      case curveTypes.BRAINPOOLP512:\n        this.oid = oids.BRAINPOOLP512;\n        break;\n      case curveTypes.ED25519:\n        this.oid = oids.ED25519;\n        break;\n    }\n  }\n\n  isRSA() {\n    switch (this.algorithm) {\n      case keyTypes.RSA:\n      case keyTypes.RSA_ENCRYPT_ONLY:\n      case keyTypes.RSA_SIGN_ONLY:\n        return true;\n    }\n    return false;\n  }\n\n  isElgamal() {\n    switch (this.algorithm) {\n      case keyTypes.ELGAMAL:\n      case keyTypes.ELGAMAL_LEGACY:\n        return true;\n    }\n    return false;\n  }\n\n  getSize() {\n    let size = 0;\n\n    size += 1;\n\n    switch (this.version) {\n      case 2:\n      case 3: {\n        size += 4;\n        size += 2;\n        size += 1;\n        break;\n      }\n\n      case 4: {\n        size += 4;\n        size += 1;\n        break;\n      }\n\n      default: {\n        throw new Error('Unknown PGP key version.');\n      }\n    }\n\n    switch (this.algorithm) {\n      case keyTypes.RSA:\n      case keyTypes.RSA_ENCRYPT_ONLY:\n      case keyTypes.RSA_SIGN_ONLY: {\n        size += this.n.getSize();\n        size += this.e.getSize();\n        break;\n      }\n\n      case keyTypes.ELGAMAL:\n      case keyTypes.ELGAMAL_LEGACY: {\n        size += this.p.getSize();\n        size += this.g.getSize();\n        size += this.y.getSize();\n        break;\n      }\n\n      case keyTypes.DSA: {\n        size += this.p.getSize();\n        size += this.q.getSize();\n        size += this.g.getSize();\n        size += this.y.getSize();\n        break;\n      }\n\n      case keyTypes.ECDH: {\n        size += 1;\n        size += this.oid.length;\n        size += this.point.getSize();\n        size += 4;\n        break;\n      }\n\n      case keyTypes.ECDSA:\n      case keyTypes.EDDSA: {\n        size += 1;\n        size += this.oid.length;\n        size += this.point.getSize();\n        break;\n      }\n\n      default: {\n        size += this.data.length;\n        break;\n      }\n    }\n\n    return size;\n  }\n\n  write(bw) {\n    bw.writeU8(this.version);\n\n    switch (this.version) {\n      case 2:\n      case 3: {\n        if (!this.isRSA())\n          throw new Error('Unknown PGP key algorithm.');\n\n        bw.writeU32BE(this.timestamp);\n        bw.writeU16BE(this.expires);\n        bw.writeU8(this.algorithm);\n\n        break;\n      }\n\n      case 4: {\n        bw.writeU32BE(this.timestamp);\n        bw.writeU8(this.algorithm);\n        break;\n      }\n\n      default: {\n        throw new Error('Unknown PGP key version.');\n      }\n    }\n\n    switch (this.algorithm) {\n      case keyTypes.RSA:\n      case keyTypes.RSA_ENCRYPT_ONLY:\n      case keyTypes.RSA_SIGN_ONLY: {\n        this.n.write(bw);\n        this.e.write(bw);\n        break;\n      }\n\n      case keyTypes.ELGAMAL:\n      case keyTypes.ELGAMAL_LEGACY: {\n        this.p.write(bw);\n        this.g.write(bw);\n        this.y.write(bw);\n        break;\n      }\n\n      case keyTypes.DSA: {\n        this.p.write(bw);\n        this.q.write(bw);\n        this.g.write(bw);\n        this.y.write(bw);\n        break;\n      }\n\n      case keyTypes.ECDH: {\n        bw.writeU8(this.oid.length);\n        bw.writeBytes(this.oid);\n        this.point.write(bw);\n        bw.writeU8(3);\n        bw.writeU8(0x01);\n        bw.writeU8(this.kdfHash);\n        bw.writeU8(this.kdfAlg);\n        break;\n      }\n\n      case keyTypes.ECDSA:\n      case keyTypes.EDDSA: {\n        bw.writeU8(this.oid.length);\n        bw.writeBytes(this.oid);\n        this.point.write(bw);\n        break;\n      }\n\n      default: {\n        bw.writeBytes(this.data);\n        break;\n      }\n    }\n\n    return bw;\n  }\n\n  read(br) {\n    this.version = br.readU8();\n\n    switch (this.version) {\n      case 2:\n      case 3: {\n        this.timestamp = br.readU32BE();\n        this.expires = br.readU16BE();\n        this.algorithm = br.readU8();\n\n        if (!this.isRSA()) {\n          if (this.version === 3 && this.isElgamal()) {\n            this.expires = 0;\n            this.version = 4;\n          } else {\n            throw new Error('Unknown PGP key algorithm.');\n          }\n        }\n\n        break;\n      }\n\n      case 4: {\n        this.timestamp = br.readU32BE();\n        this.algorithm = br.readU8();\n        break;\n      }\n\n      default: {\n        throw new Error('Unknown PGP key version.');\n      }\n    }\n\n    switch (this.algorithm) {\n      case keyTypes.RSA:\n      case keyTypes.RSA_ENCRYPT_ONLY:\n      case keyTypes.RSA_SIGN_ONLY: {\n        this.n.read(br);\n        this.e.read(br);\n        break;\n      }\n\n      case keyTypes.ELGAMAL:\n      case keyTypes.ELGAMAL_LEGACY: {\n        this.p.read(br);\n        this.g.read(br);\n        this.y.read(br);\n        break;\n      }\n\n      case keyTypes.DSA: {\n        this.p.read(br);\n        this.q.read(br);\n        this.g.read(br);\n        this.y.read(br);\n        break;\n      }\n\n      case keyTypes.ECDH: {\n        this.oid = br.readBytes(br.readU8());\n        this.point.read(br);\n\n        const size = br.readU8();\n\n        if (size < 3 || size > br.left())\n          throw new Error('Invalid ECDH params.');\n\n        // Reserved.\n        if (br.readU8() !== 0x01)\n          throw new Error('Invalid ECDH reserved byte.');\n\n        this.kdfHash = br.readU8();\n        this.kdfAlg = br.readU8();\n\n        break;\n      }\n\n      case keyTypes.ECDSA:\n      case keyTypes.EDDSA: {\n        this.oid = br.readBytes(br.readU8());\n        this.point.read(br);\n        break;\n      }\n\n      default: {\n        this.data = br.readBytes(br.left());\n        break;\n      }\n    }\n\n    return this;\n  }\n\n  fingerprint() {\n    switch (this.version) {\n      case 2:\n      case 3: {\n        if (!this.isRSA())\n          throw new Error('Unknown PGP key algorithm.');\n\n        const data = bio.concat(this.n.data, this.e.data);\n        return MD5.digest(data);\n      }\n\n      case 4: {\n        const size = this.getSize();\n        const bw = bio.write(3 + size);\n\n        bw.writeU8(0x99);\n        bw.writeU16BE(size);\n\n        this.write(bw);\n\n        return SHA1.digest(bw.render());\n      }\n\n      default: {\n        throw new Error('Unknown PGP key version.');\n      }\n    }\n  }\n\n  id() {\n    switch (this.version) {\n      case 2:\n      case 3: {\n        if (!this.isRSA())\n          throw new Error('Unknown PGP key algorithm.');\n\n        if (this.n.data.length < 8)\n          throw new Error('Unknown PGP key algorithm.');\n\n        return this.n.data.slice(this.n.data.length - 8);\n      }\n\n      case 4: {\n        return this.fingerprint().slice(12, 20);\n      }\n\n      default: {\n        throw new Error('Unknown PGP key version.');\n      }\n    }\n  }\n\n  long() {\n    return this.id();\n  }\n\n  short() {\n    return this.id().slice(4, 8);\n  }\n\n  matches(id) {\n    if (typeof id === 'string')\n      id = decodeID(id);\n\n    switch (id.length) {\n      case 4:\n        return this.short().equals(id);\n      case 8:\n        return this.long().equals(id);\n      case 16:\n      case 20:\n        return this.fingerprint().equals(id);\n      default:\n        return false;\n    }\n  }\n\n  keyHash() {\n    let size = 6;\n\n    if (this.version !== 4)\n      size += 2;\n\n    // Create a real key hash without any bullshit.\n    const raw = this.encode().slice(size - 1);\n\n    raw[0] = this.algorithm;\n\n    return SHA256.digest(raw);\n  }\n\n  format() {\n    const algorithm = keyTypesByVal[this.algorithm] || 'UNKNOWN';\n    const version = this.version;\n    const timestamp = this.timestamp;\n    const expires = this.expires;\n\n    switch (this.algorithm) {\n      case keyTypes.RSA:\n      case keyTypes.RSA_ENCRYPT_ONLY:\n      case keyTypes.RSA_SIGN_ONLY: {\n        return {\n          version,\n          algorithm,\n          timestamp,\n          expires,\n          n: this.n.data.toString('hex'),\n          e: this.e.data.toString('hex')\n        };\n      }\n\n      case keyTypes.ELGAMAL:\n      case keyTypes.ELGAMAL_LEGACY: {\n        return {\n          version,\n          algorithm,\n          timestamp,\n          expires,\n          p: this.p.data.toString('hex'),\n          g: this.g.data.toString('hex'),\n          y: this.y.data.toString('hex')\n        };\n      }\n\n      case keyTypes.DSA: {\n        return {\n          version,\n          algorithm,\n          timestamp,\n          expires,\n          p: this.p.data.toString('hex'),\n          q: this.q.data.toString('hex'),\n          g: this.g.data.toString('hex'),\n          y: this.y.data.toString('hex')\n        };\n      }\n\n      case keyTypes.ECDH: {\n        return {\n          version,\n          algorithm,\n          timestamp,\n          expires,\n          curve: curveTypesByVal[this.curve] || 'UNKNOWN',\n          point: this.point.data.toString('hex'),\n          kdfHash: this.kdfHash,\n          kdfAlg: this.kdfAlg\n        };\n      }\n\n      case keyTypes.ECDSA:\n      case keyTypes.EDDSA: {\n        return {\n          version,\n          algorithm,\n          timestamp,\n          expires,\n          curve: curveTypesByVal[this.curve] || 'UNKNOWN',\n          point: this.point.data.toString('hex')\n        };\n      }\n\n      default: {\n        return {\n          version,\n          algorithm,\n          timestamp,\n          expires,\n          data: this.data.toString('hex')\n        };\n      }\n    }\n  }\n}\n\n/**\n * PGP Private Key\n */\n\nclass PGPPrivateKey extends PGPBody {\n  constructor() {\n    super();\n\n    this.key = new PGPPublicKey();\n    this.params = new CipherParams();\n    this.data = EMPTY;\n  }\n\n  secret(passphrase) {\n    let data = this.data;\n\n    if (this.params.encrypted) {\n      if (passphrase == null)\n        throw new Error('Key requires a passphrase.');\n\n      data = this.params.decrypt(data, passphrase);\n    }\n\n    return SecretKey.decode(data, this.key.algorithm);\n  }\n\n  getSize() {\n    let size = 0;\n\n    size += this.key.getSize();\n    size += this.params.getSize();\n    size += this.data.length;\n\n    return size;\n  }\n\n  write(bw) {\n    this.key.write(bw);\n    this.params.write(bw);\n    bw.writeBytes(this.data);\n    return bw;\n  }\n\n  read(br) {\n    this.key.read(br);\n    this.params.read(br);\n    this.data = br.readBytes(br.left());\n    return this;\n  }\n\n  format() {\n    let params = null;\n    let data = null;\n\n    if (this.params.encrypted) {\n      params = this.params;\n      data = this.data.toString('hex');\n    } else {\n      params = null;\n      data = this.secret();\n    }\n\n    return {\n      key: this.key,\n      params,\n      data\n    };\n  }\n}\n\n/**\n * Cipher Params\n */\n\nclass CipherParams extends bio.Struct {\n  constructor() {\n    super();\n    this.encrypted = false;\n    this.checksum = false;\n    this.cipher = 0;\n    this.s2k = new S2K();\n    this.iv = EMPTY;\n  }\n\n  blockSize() {\n    switch (this.cipher) {\n      case cipherTypes.IDEA:\n      case cipherTypes.DES3:\n      case cipherTypes.CAST5:\n      case cipherTypes.BLOWFISH:\n        return 8;\n      case cipherTypes.AES128:\n      case cipherTypes.AES192:\n      case cipherTypes.AES256:\n      case cipherTypes.TWOFISH:\n      case cipherTypes.CAMELLIA128:\n      case cipherTypes.CAMELLIA192:\n      case cipherTypes.CAMELLIA256:\n        return 16;\n      default:\n        throw new Error('Unknown cipher type.');\n    }\n  }\n\n  keySize() {\n    switch (this.cipher) {\n      case cipherTypes.IDEA:\n        return 16;\n      case cipherTypes.DES3:\n        return 24;\n      case cipherTypes.CAST5:\n        return 16;\n      case cipherTypes.BLOWFISH:\n        return 16;\n      case cipherTypes.AES128:\n        return 16;\n      case cipherTypes.AES192:\n        return 24;\n      case cipherTypes.AES256:\n        return 32;\n      case cipherTypes.TWOFISH:\n        return 32;\n      case cipherTypes.CAMELLIA128:\n        return 16;\n      case cipherTypes.CAMELLIA192:\n        return 24;\n      case cipherTypes.CAMELLIA256:\n        return 32;\n      default:\n        throw new Error('Unknown cipher type.');\n    }\n  }\n\n  algName() {\n    switch (this.cipher) {\n      case cipherTypes.IDEA:\n        return 'IDEA-CFB';\n      case cipherTypes.DES3:\n        return 'DES-EDE3-CFB';\n      case cipherTypes.CAST5:\n        return 'CAST5-CFB';\n      case cipherTypes.BLOWFISH:\n        return 'BF-CFB';\n      case cipherTypes.AES128:\n        return 'AES-128-CFB';\n      case cipherTypes.AES192:\n        return 'AES-192-CFB';\n      case cipherTypes.AES256:\n        return 'AES-256-CFB';\n      case cipherTypes.TWOFISH:\n        return 'TWOFISH-256-CFB';\n      case cipherTypes.CAMELLIA128:\n        return 'CAMELLIA-128-CFB';\n      case cipherTypes.CAMELLIA192:\n        return 'CAMELLIA-192-CFB';\n      case cipherTypes.CAMELLIA256:\n        return 'CAMELLIA-256-CFB';\n      default:\n        throw new Error('Unknown cipher type.');\n    }\n  }\n\n  derive(passphrase) {\n    if (!this.encrypted)\n      throw new Error('Cannot derive passphrase.');\n\n    return this.s2k.derive(passphrase, this.keySize());\n  }\n\n  encipher(pt, key) {\n    assert(Buffer.isBuffer(pt));\n\n    const name = this.algName();\n    const add = this.checksum ? 20 : 2;\n    const padded = Buffer.alloc(pt.length + add);\n\n    pt.copy(padded, 0);\n\n    if (this.checksum) {\n      SHA1.digest(pt).copy(padded, pt.length);\n    } else {\n      let sum = 0;\n\n      for (let i = 0; i < pt.length; i++) {\n        sum += pt[i];\n        sum &= 0xffff;\n      }\n\n      bio.writeU16BE(padded, sum, pt.length);\n    }\n\n    return cipher.encrypt(name, key, this.iv, padded);\n  }\n\n  decipher(ct, key) {\n    const name = this.algName();\n    const padded = cipher.decrypt(name, key, this.iv, ct);\n\n    if (this.checksum) {\n      if (padded.length < 20)\n        throw new Error('Truncated data.');\n\n      const pt = padded.slice(0, -20);\n      const chk = padded.slice(-20);\n      const sum = SHA1.digest(pt);\n\n      if (!sum.equals(chk))\n        throw new Error('Invalid checksum.');\n\n      return pt;\n    }\n\n    if (padded.length < 2)\n      throw new Error('Truncated data.');\n\n    const pt = padded.slice(0, -2);\n    const chk = bio.readU16BE(padded, padded.length - 2);\n\n    let sum = 0;\n\n    for (let i = 0; i < pt.length; i++) {\n      sum += pt[i];\n      sum &= 0xffff;\n    }\n\n    if (sum !== chk)\n      throw new Error('Invalid checksum.');\n\n    return pt;\n  }\n\n  encrypt(data, passphrase) {\n    const key = this.derive(passphrase);\n    return this.encipher(data, key);\n  }\n\n  decrypt(data, passphrase) {\n    const key = this.derive(passphrase);\n    return this.decipher(data, key);\n  }\n\n  getSize() {\n    let size = 0;\n\n    if (this.encrypted) {\n      size += 1;\n      size += 1;\n      size += this.s2k.getSize();\n      size += this.iv.length;\n    } else {\n      size += 1;\n    }\n\n    return size;\n  }\n\n  write(bw) {\n    if (this.encrypted) {\n      assert(this.iv.length === this.blockSize());\n\n      bw.writeU8(this.checksum ? 0xfe : 0xff);\n      bw.writeU8(this.cipher);\n      this.s2k.write(bw);\n      bw.writeBytes(this.iv);\n    } else {\n      bw.writeU8(0x00);\n    }\n\n    return bw;\n  }\n\n  read(br) {\n    const type = br.readU8();\n\n    switch (type) {\n      case 0x00:\n        break;\n      case 0xfe:\n      case 0xff:\n        this.encrypted = true;\n        this.checksum = type === 0xfe;\n        this.cipher = br.readU8();\n        this.s2k.read(br);\n        this.iv = br.readBytes(this.blockSize());\n        break;\n      default:\n        throw new Error('Unknown S2K type.');\n    }\n\n    return this;\n  }\n\n  format() {\n    return {\n      encrypted: this.encrypted,\n      checksum: this.checksum,\n      cipher: cipherTypesByVal[this.cipher] || 'UNKNOWN',\n      s2k: this.s2k,\n      iv: this.iv.toString('hex')\n    };\n  }\n}\n\n/**\n * S2K\n */\n\nclass S2K extends bio.Struct {\n  constructor() {\n    super();\n    this.mode = 0;\n    this.hash = 0;\n    this.count = 0;\n    this.salt = EMPTY;\n    this.serial = EMPTY;\n  }\n\n  derive(passphrase, size) {\n    assert(typeof passphrase === 'string');\n    assert((size >>> 0) === size);\n\n    const {salt, count} = this;\n    const input = Buffer.from(passphrase, 'binary');\n    const hash = hashToHash[this.hash];\n\n    if (!hash)\n      throw new Error('Unknown hash.');\n\n    switch (this.mode) {\n      case 0:\n        return pgpdf.deriveSimple(hash, input, size);\n      case 1:\n        return pgpdf.deriveSalted(hash, input, salt, size);\n      case 3:\n        return pgpdf.deriveIterated(hash, input, salt, count, size);\n      default:\n        throw new Error('Unknown S2K mode.');\n    }\n  }\n\n  getSize() {\n    let size = 2;\n\n    switch (this.mode) {\n      case 0:\n        break;\n      case 1:\n        size += 8;\n        break;\n      case 3:\n        size += 8;\n        size += 1;\n        break;\n      case 1001:\n        size += 3;\n        size += 1;\n        break;\n      case 1002:\n        size += 3;\n        size += 1;\n        size += 1;\n        size += this.serial.length;\n        break;\n      default:\n        throw new Error('Unknown S2K function.');\n    }\n\n    return size;\n  }\n\n  write(bw) {\n    bw.writeU8(this.mode > 0xff ? 101 : this.mode);\n    bw.writeU8(this.hash);\n\n    switch (this.mode) {\n      case 0:\n        break;\n      case 1:\n        bw.writeBytes(this.salt);\n        break;\n      case 3:\n        bw.writeBytes(this.salt);\n        bw.writeU8(encodeCount(this.count));\n        break;\n      case 1001:\n        bw.writeString('GNU', 'binary');\n        bw.writeU8(1);\n        break;\n      case 1002:\n        bw.writeString('GNU', 'binary');\n        bw.writeU8(2);\n        bw.writeU8(this.serial.length);\n        bw.writeBytes(this.serial);\n        break;\n      default:\n        throw new Error('Unknown S2K function.');\n    }\n\n    return bw;\n  }\n\n  read(br) {\n    this.mode = br.readU8();\n    this.hash = br.readU8();\n\n    switch (this.mode) {\n      case 0: {\n        break;\n      }\n\n      case 1: {\n        this.salt = br.readBytes(8);\n        break;\n      }\n\n      case 3: {\n        this.salt = br.readBytes(8);\n        this.count = decodeCount(br.readU8());\n        break;\n      }\n\n      case 101: {\n        // GNU extensions.\n        // See: https://github.com/handshake-org/hs-airdrop/issues/44\n        const tag = br.readString(3, 'binary');\n\n        if (tag !== 'GNU')\n          throw new Error('Unknown S2K function.');\n\n        this.mode = 1000 + br.readU8();\n\n        switch (this.mode) {\n          case 1001:\n            // gnu-dummy\n            break;\n          case 1002:\n            // gnu-divert-to-card\n            this.serial = br.readBytes(Math.min(br.readU8(), 16));\n            break;\n          default:\n            throw new Error('Unknown S2K function.');\n        }\n\n        break;\n      }\n\n      default: {\n        throw new Error('Unknown S2K function.');\n      }\n    }\n\n    return this;\n  }\n\n  format() {\n    return {\n      mode: this.mode,\n      hash: hashTypesByVal[this.hash] || 'UNKNOWN',\n      count: this.count,\n      salt: this.salt.toString('hex'),\n      serial: this.serial.toString('hex')\n    };\n  }\n}\n\n/**\n * Secret Key\n */\n\nclass SecretKey extends bio.Struct {\n  constructor() {\n    super();\n\n    // RSA\n    this.d = new MPI();\n    this.q = new MPI();\n    this.p = new MPI();\n    this.qi = new MPI();\n\n    // DSA\n    this.x = new MPI();\n\n    // El Gamal\n    this.x;\n\n    // ECDSA\n    this.d;\n  }\n\n  getSize(algorithm) {\n    assert((algorithm & 0xff) === algorithm);\n\n    let size = 0;\n\n    switch (algorithm) {\n      case keyTypes.RSA:\n      case keyTypes.RSA_ENCRYPT_ONLY:\n      case keyTypes.RSA_SIGN_ONLY: {\n        size += this.d.getSize();\n        size += this.q.getSize();\n        size += this.p.getSize();\n        size += this.qi.getSize();\n        break;\n      }\n\n      case keyTypes.ELGAMAL:\n      case keyTypes.ELGAMAL_LEGACY: {\n        size += this.x.getSize();\n        break;\n      }\n\n      case keyTypes.DSA: {\n        size += this.x.getSize();\n        break;\n      }\n\n      case keyTypes.ECDSA:\n      case keyTypes.EDDSA: {\n        size += this.d.getSize();\n        break;\n      }\n\n      default: {\n        throw new Error('Unknown key type.');\n      }\n    }\n\n    return size;\n  }\n\n  write(bw, algorithm) {\n    assert((algorithm & 0xff) === algorithm);\n\n    switch (algorithm) {\n      case keyTypes.RSA:\n      case keyTypes.RSA_ENCRYPT_ONLY:\n      case keyTypes.RSA_SIGN_ONLY: {\n        this.d.write(bw);\n        this.q.write(bw);\n        this.p.write(bw);\n        this.qi.write(bw);\n        break;\n      }\n\n      case keyTypes.ELGAMAL:\n      case keyTypes.ELGAMAL_LEGACY: {\n        this.x.write(bw);\n        break;\n      }\n\n      case keyTypes.DSA: {\n        this.x.write(bw);\n        break;\n      }\n\n      case keyTypes.ECDSA:\n      case keyTypes.EDDSA: {\n        this.d.write(bw);\n        break;\n      }\n\n      default: {\n        throw new Error('Unknown key type.');\n      }\n    }\n\n    return bw;\n  }\n\n  read(br, algorithm) {\n    assert((algorithm & 0xff) === algorithm);\n\n    switch (algorithm) {\n      case keyTypes.RSA:\n      case keyTypes.RSA_ENCRYPT_ONLY:\n      case keyTypes.RSA_SIGN_ONLY: {\n        this.d.read(br);\n        this.q.read(br);\n        this.p.read(br);\n        this.qi.read(br);\n        break;\n      }\n\n      case keyTypes.ELGAMAL:\n      case keyTypes.ELGAMAL_LEGACY: {\n        this.x.read(br);\n        break;\n      }\n\n      case keyTypes.DSA: {\n        this.x.read(br);\n        break;\n      }\n\n      case keyTypes.ECDSA:\n      case keyTypes.EDDSA: {\n        this.d.read(br);\n        break;\n      }\n\n      default: {\n        throw new Error('Unknown key type.');\n      }\n    }\n\n    return this;\n  }\n\n  format() {\n    if (this.p.data.length > 0) {\n      return {\n        d: this.d.data.toString('hex'),\n        q: this.q.data.toString('hex'),\n        p: this.p.data.toString('hex'),\n        qi: this.qi.data.toString('hex')\n      };\n    }\n\n    if (this.x.data.length > 0) {\n      return {\n        x: this.x.data.toString('hex')\n      };\n    }\n\n    if (this.d.data.length > 0) {\n      return {\n        d: this.d.data.toString('hex')\n      };\n    }\n\n    return {\n      d: this.d.data.toString('hex'),\n      q: this.q.data.toString('hex'),\n      p: this.p.data.toString('hex'),\n      qi: this.qi.data.toString('hex'),\n      x: this.x.data.toString('hex')\n    };\n  }\n}\n\n/**\n * PGP User ID\n */\n\nclass PGPUserID extends PGPBody {\n  constructor() {\n    super();\n    this.id = '';\n  }\n\n  getSize() {\n    return Buffer.byteLength(this.id, 'utf8');\n  }\n\n  write(bw) {\n    bw.writeString(this.id, 'utf8');\n    return bw;\n  }\n\n  read(br) {\n    this.id = br.readString(br.left(), 'utf8');\n    return this;\n  }\n\n  format() {\n    return {\n      id: this.id\n    };\n  }\n}\n\n/**\n * MPI\n */\n\nclass MPI extends bio.Struct {\n  constructor(data) {\n    super();\n\n    this.bits = 0;\n    this.data = EMPTY;\n\n    if (data != null)\n      this.fromOptions(data);\n  }\n\n  get() {\n    return this.data;\n  }\n\n  set(data) {\n    return this.fromOptions(data);\n  }\n\n  fromOptions(data) {\n    assert(Buffer.isBuffer(data));\n    this.bits = countLeft(data);\n    this.data = data;\n    return this;\n  }\n\n  getSize() {\n    return 2 + this.data.length;\n  }\n\n  write(bw) {\n    bw.writeU16BE(this.bits);\n    bw.writeBytes(this.data);\n    return bw;\n  }\n\n  read(br) {\n    if (br.left() === 0)\n      return this;\n\n    const bits = br.readU16BE();\n    const size = (bits + 7) >>> 3;\n    const s = Math.min(size, br.left());\n    const data = br.readBytes(s);\n\n    this.bits = bits;\n    this.data = data;\n\n    return this;\n  }\n}\n\n/*\n * ID Parsing\n */\n\nfunction encodeID(raw) {\n  assert(Buffer.isBuffer(raw));\n\n  switch (raw.length) {\n    case 4:\n    case 8:\n    case 16:\n    case 20:\n      break;\n    default:\n      throw new Error('Invalid PGP key id/fingerprint.');\n  }\n\n  const id = raw.toString('hex');\n\n  return `0x${id.toUpperCase()}`;\n}\n\nfunction decodeID(id) {\n  assert(typeof id === 'string');\n\n  id = id.replace(/[\\t ]/g, '');\n\n  if (id.length >= 2\n      && id.charCodeAt(0) === 0x30\n      && (id.charCodeAt(1) | 0x20) === 0x78) {\n    id = id.substring(2);\n  }\n\n  if (id.length > 40)\n    throw new Error('Invalid PGP key id/fingerprint.');\n\n  const raw = Buffer.from(id, 'hex');\n\n  if (raw.length !== (id.length >>> 1))\n    throw new Error('Invalid PGP key id/fingerprint.');\n\n  switch (raw.length) {\n    case 4:\n    case 8:\n    case 16:\n    case 20:\n      break;\n    default:\n      throw new Error('Invalid PGP key id/fingerprint.');\n  }\n\n  return raw;\n}\n\n/*\n * Helpers\n */\n\nfunction encodeCount(i) {\n  assert((i >>> 0) === i);\n\n  if (i < 1024 || i > 65011712)\n    throw new RangeError('Invalid iteration count.');\n\n  for (let j = 0; j < 256; j++) {\n    const c = decodeCount(j);\n\n    if (c >= i)\n      return j;\n  }\n\n  return 255;\n}\n\nfunction decodeCount(c) {\n  assert((c & 0xff) === c);\n  return (16 + (c & 15)) << ((c >>> 4) + 6);\n}\n\n/*\n * Expose\n */\n\nexports.packetTypes = packetTypes;\nexports.packetTypesByVal = packetTypesByVal;\nexports.sigTypes = sigTypes;\nexports.sigTypesByVal = sigTypesByVal;\nexports.keyTypes = keyTypes;\nexports.keyTypesByVal = keyTypesByVal;\nexports.cipherTypes = cipherTypes;\nexports.cipherTypesByVal = cipherTypesByVal;\nexports.hashTypes = hashTypes;\nexports.hashTypesByVal = hashTypesByVal;\nexports.compressTypes = compressTypes;\nexports.compressTypesByVal = compressTypesByVal;\nexports.curveTypes = curveTypes;\nexports.curveTypesByVal = curveTypesByVal;\nexports.oids = oids;\n\nexports.PGPMessage = PGPMessage;\nexports.PGPPacket = PGPPacket;\nexports.PGPBody = PGPBody;\nexports.PGPUnknown = PGPUnknown;\nexports.PGPPublicKey = PGPPublicKey;\nexports.PGPPrivateKey = PGPPrivateKey;\nexports.CipherParams = CipherParams;\nexports.S2K = S2K;\nexports.SecretKey = SecretKey;\nexports.PGPUserID = PGPUserID;\nexports.MPI = MPI;\nexports.encodeID = encodeID;\nexports.decodeID = decodeID;\n","/*!\n * sha224.js - SHA224 implementation for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hash.js:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/hash.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SHA-2\n *   https://tools.ietf.org/html/rfc4634\n *   https://github.com/indutny/hash.js/blob/master/lib/hash/sha/224.js\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst SHA256 = require('./sha256');\nconst HMAC = require('../internal/hmac');\n\n/**\n * SHA224\n */\n\nclass SHA224 extends SHA256 {\n  constructor() {\n    super();\n  }\n\n  init() {\n    this.state[0] = 0xc1059ed8;\n    this.state[1] = 0x367cd507;\n    this.state[2] = 0x3070dd17;\n    this.state[3] = 0xf70e5939;\n    this.state[4] = 0xffc00b31;\n    this.state[5] = 0x68581511;\n    this.state[6] = 0x64f98fa7;\n    this.state[7] = 0xbefa4fa4;\n    this.size = 0;\n    return this;\n  }\n\n  final() {\n    return super.final().slice(0, 28);\n  }\n\n  static hash() {\n    return new SHA224();\n  }\n\n  static hmac() {\n    return new HMAC(SHA224, 64);\n  }\n\n  static digest(data) {\n    return SHA224.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 28);\n    assert(Buffer.isBuffer(right) && right.length === 28);\n    return SHA224.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = SHA224;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return SHA224.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nSHA224.native = 0;\nSHA224.id = 'SHA224';\nSHA224.size = 28;\nSHA224.bits = 224;\nSHA224.blockSize = 64;\nSHA224.zero = Buffer.alloc(28, 0x00);\nSHA224.ctx = new SHA224();\n\n/*\n * Expose\n */\n\nmodule.exports = SHA224;\n","/*!\n * pgpdf.js - pgpdf for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('../js/pgpdf');\n","/*!\n * pgpdf.js - PGP derivation functions for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/crypto:\n *   Copyright (c) 2009 The Go Authors. All rights reserved.\n *   https://github.com/golang/crypto\n *\n * Resources:\n *   https://github.com/golang/crypto/tree/master/openpgp\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * Constants\n */\n\nconst EMPTY = Buffer.alloc(0);\nconst ZERO = Buffer.alloc(1, 0x00);\n\n/*\n * PGPDF\n */\n\nfunction deriveSimple(hash, input, size) {\n  return deriveSalted(hash, input, EMPTY, size);\n}\n\nfunction deriveSalted(hash, input, salt, size) {\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(input));\n  assert(Buffer.isBuffer(salt));\n  assert((size >>> 0) === size);\n\n  // eslint-disable-next-line\n  const ctx = new hash();\n  const out = Buffer.alloc(size);\n\n  let i = 0;\n  let pos = 0;\n\n  while (pos < size) {\n    ctx.init();\n\n    for (let j = 0; j < i; j++)\n      ctx.update(ZERO);\n\n    ctx.update(salt);\n    ctx.update(input);\n\n    pos += ctx.final().copy(out, pos);\n    i += 1;\n  }\n\n  return out;\n}\n\nfunction deriveIterated(hash, input, salt, count, size) {\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(input));\n  assert(Buffer.isBuffer(salt));\n  assert((count >>> 0) === count);\n  assert((size >>> 0) === size);\n\n  // eslint-disable-next-line\n  const ctx = new hash();\n  const out = Buffer.alloc(size);\n  const combined = salt.length + input.length;\n\n  if (count < combined)\n    count = combined;\n\n  let i = 0;\n  let pos = 0;\n\n  while (pos < size) {\n    ctx.init();\n\n    for (let j = 0; j < i; j++)\n      ctx.update(ZERO);\n\n    let w = 0;\n\n    while (w < count) {\n      if (w + combined > count) {\n        const todo = count - w;\n\n        if (todo < salt.length) {\n          ctx.update(salt.slice(0, todo));\n        } else {\n          ctx.update(salt);\n          ctx.update(input.slice(0, todo - salt.length));\n        }\n\n        break;\n      }\n\n      ctx.update(salt);\n      ctx.update(input);\n\n      w += combined;\n    }\n\n    pos += ctx.final().copy(out, pos);\n    i += 1;\n  }\n\n  return out;\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.deriveSimple = deriveSimple;\nexports.deriveSalted = deriveSalted;\nexports.deriveIterated = deriveIterated;\n","/*!\n * rsa.js - RSA for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009 The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Parts of this software are based on indutny/miller-rabin:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/miller-rabin\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/RSA_(cryptosystem)\n *   https://tools.ietf.org/html/rfc3447\n *   https://tools.ietf.org/html/rfc8017\n *   https://github.com/openssl/openssl/blob/master/crypto/rsa/rsa_ossl.c\n *   https://github.com/openssl/openssl/blob/master/crypto/rsa/rsa_sign.c\n *   https://github.com/openssl/openssl/blob/master/crypto/rsa/rsa_oaep.c\n *   https://github.com/openssl/openssl/blob/master/crypto/rsa/rsa_pss.c\n *   https://github.com/openssl/openssl/blob/master/crypto/rsa/rsa_pk1.c\n *   https://github.com/golang/go/blob/master/src/crypto/rsa/rsa.go\n *   https://github.com/golang/go/blob/master/src/crypto/rsa/pkcs1v15.go\n *   https://github.com/golang/go/blob/master/src/crypto/rsa/pss.go\n *   https://github.com/golang/go/blob/master/src/crypto/subtle/constant_time.go\n *   https://github.com/ARMmbed/mbed-crypto/blob/master/library/rsa.c\n *\n * References:\n *\n *   [RFC8017] PKCS #1: RSA Cryptography Specifications Version 2.2\n *     K. Moriarty, B. Kaliski, J. Jonsson, A. Rusch\n *     https://tools.ietf.org/html/rfc8017\n *\n *   [FIPS186] Federal Information Processing Standards Publication 186-4\n *     National Institute of Standards and Technology\n *     https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst BN = require('../bn');\nconst rng = require('../random');\nconst {randomPrime} = require('../internal/primes');\nconst base64 = require('../encoding/base64');\nconst asn1 = require('../internal/asn1');\nconst safe = require('../safe');\n\nconst {\n  safeEqual,\n  safeEqualByte,\n  safeSelect,\n  safeLTE\n} = safe;\n\n/*\n * Constants\n */\n\nconst DEFAULT_BITS = 2048;\nconst DEFAULT_EXP = 65537;\nconst MIN_BITS = 512;\nconst MAX_BITS = 16384;\nconst MIN_EXP = 3;\nconst MAX_EXP = (2 ** 33) - 1;\nconst MAX_EXP_BITS = 33;\nconst SALT_LENGTH_AUTO = 0;\nconst SALT_LENGTH_HASH = -1;\nconst PREFIX = Buffer.alloc(8, 0x00);\nconst EMPTY = Buffer.alloc(0);\n\n/**\n * PKCS1v1.5+ASN.1 DigestInfo prefixes.\n * @see [RFC8017] Page 45, Section 9.2.\n * @see [RFC8017] Page 63, Section B.1.\n * @const {Object}\n */\n\nconst digestInfo = {\n  __proto__: null,\n  BLAKE2B160: Buffer.from('3027300f060b2b060104018d3a0c02010505000414', 'hex'),\n  BLAKE2B256: Buffer.from('3033300f060b2b060104018d3a0c02010805000420', 'hex'),\n  BLAKE2B384: Buffer.from('3043300f060b2b060104018d3a0c02010c05000430', 'hex'),\n  BLAKE2B512: Buffer.from('3053300f060b2b060104018d3a0c02011005000440', 'hex'),\n  BLAKE2S128: Buffer.from('3023300f060b2b060104018d3a0c02020405000410', 'hex'),\n  BLAKE2S160: Buffer.from('3027300f060b2b060104018d3a0c02020505000414', 'hex'),\n  BLAKE2S224: Buffer.from('302f300f060b2b060104018d3a0c0202070500041c', 'hex'),\n  BLAKE2S256: Buffer.from('3033300f060b2b060104018d3a0c02020805000420', 'hex'),\n  GOST94: Buffer.from('302e300a06062a850302021405000420', 'hex'),\n  HASH160: Buffer.from([20]),\n  HASH256: Buffer.from([32]),\n  KECCAK224: Buffer.from([28]),\n  KECCAK256: Buffer.from([32]),\n  KECCAK384: Buffer.from([48]),\n  KECCAK512: Buffer.from([64]),\n  MD2: Buffer.from('3020300c06082a864886f70d020205000410', 'hex'),\n  MD4: Buffer.from('3020300c06082a864886f70d020405000410', 'hex'),\n  MD5: Buffer.from('3020300c06082a864886f70d020505000410', 'hex'),\n  MD5SHA1: Buffer.from([36]),\n  RIPEMD160: Buffer.from('3022300a060628cf0603003105000414', 'hex'),\n  SHA1: Buffer.from('3021300906052b0e03021a05000414', 'hex'),\n  SHA224: Buffer.from('302d300d06096086480165030402040500041c', 'hex'),\n  SHA256: Buffer.from('3031300d060960864801650304020105000420', 'hex'),\n  SHA384: Buffer.from('3041300d060960864801650304020205000430', 'hex'),\n  SHA512: Buffer.from('3051300d060960864801650304020305000440', 'hex'),\n  SHA3_224: Buffer.from('302d300d06096086480165030402070500041c', 'hex'),\n  SHA3_256: Buffer.from('3031300d060960864801650304020805000420', 'hex'),\n  SHA3_384: Buffer.from('3041300d060960864801650304020905000430', 'hex'),\n  SHA3_512: Buffer.from('3051300d060960864801650304020a05000440', 'hex'),\n  SHAKE128: Buffer.from('3021300d060960864801650304020b05000410', 'hex'),\n  SHAKE256: Buffer.from('3031300d060960864801650304020c05000420', 'hex'),\n  WHIRLPOOL: Buffer.from('304e300a060628cf0603003705000440', 'hex')\n};\n\n/**\n * RSAPublicKey\n */\n\nclass RSAPublicKey {\n  constructor() {\n    this.n = new BN(0);\n    this.e = new BN(0);\n  }\n\n  bits() {\n    return this.n.bitLength();\n  }\n\n  size() {\n    return this.n.byteLength();\n  }\n\n  isSane() {\n    return this.n.sign() > 0\n        && this.e.sign() > 0\n        && this.n.bitLength() <= MAX_BITS\n        && this.e.bitLength() <= MAX_EXP_BITS;\n  }\n\n  verify() {\n    // Sanity checks.\n    if (!this.isSane())\n      return false;\n\n    // n >= 2^511 and n mod 2 != 0\n    if (this.n.bitLength() < MIN_BITS || !this.n.isOdd())\n      return false;\n\n    // e >= 3 and e mod 2 != 0\n    if (this.e.cmpn(MIN_EXP) < 0 || !this.e.isOdd())\n      return false;\n\n    return true;\n  }\n\n  encrypt(msg) {\n    // [RFC8017] Page 13, Section 5.1.1.\n    //           Page 16, Section 5.2.2.\n    assert(Buffer.isBuffer(msg));\n\n    const {n, e} = this;\n    const m = BN.decode(msg);\n\n    if (m.cmp(n) >= 0)\n      throw new Error('Invalid RSA message size.');\n\n    // c = m^e mod n\n    const c = m.powm(e, n);\n\n    return c.encode('be', n.byteLength());\n  }\n\n  encode() {\n    const size = asn1.sizeInt(this.n) + asn1.sizeInt(this.e);\n    const out = Buffer.alloc(asn1.sizeSeq(size));\n\n    let pos = 0;\n\n    pos = asn1.writeSeq(out, pos, size);\n    pos = asn1.writeInt(out, pos, this.n);\n    pos = asn1.writeInt(out, pos, this.e);\n\n    assert(pos === out.length);\n\n    return out;\n  }\n\n  decode(data) {\n    let pos = 0;\n\n    pos = asn1.readSeq(data, pos);\n\n    [this.n, pos] = asn1.readInt(data, pos);\n    [this.e, pos] = asn1.readInt(data, pos);\n\n    if (pos !== data.length)\n      throw new Error('Trailing bytes.');\n\n    return this;\n  }\n\n  static decode(data) {\n    return new RSAPublicKey().decode(data);\n  }\n}\n\n/**\n * RSAPrivateKey\n */\n\nclass RSAPrivateKey extends RSAPublicKey {\n  constructor() {\n    super();\n    this.d = new BN(0);\n    this.p = new BN(0);\n    this.q = new BN(0);\n    this.dp = new BN(0);\n    this.dq = new BN(0);\n    this.qi = new BN(0);\n  }\n\n  isSane() {\n    return this.n.sign() > 0\n        && this.e.sign() > 0\n        && this.d.sign() > 0\n        && this.p.sign() > 0\n        && this.q.sign() > 0\n        && this.dp.sign() > 0\n        && this.dq.sign() > 0\n        && this.qi.sign() > 0\n        && this.n.bitLength() <= MAX_BITS\n        && this.e.bitLength() <= MAX_EXP_BITS\n        && this.d.bitLength() <= MAX_BITS\n        && this.p.bitLength() <= MAX_BITS\n        && this.q.bitLength() <= MAX_BITS\n        && this.dp.bitLength() <= MAX_BITS\n        && this.dq.bitLength() <= MAX_BITS\n        && this.qi.bitLength() <= MAX_BITS;\n  }\n\n  verify() {\n    // Sanity checks.\n    if (!this.isSane())\n      return false;\n\n    // n >= 2^511 and n mod 2 != 0\n    if (this.n.bitLength() < MIN_BITS || !this.n.isOdd())\n      return false;\n\n    // e >= 3 and e mod 2 != 0\n    if (this.e.cmpn(MIN_EXP) < 0 || !this.e.isOdd())\n      return false;\n\n    // p >= 3 and p mod 2 != 0\n    if (this.p.cmpn(3) < 0 || !this.p.isOdd())\n      return false;\n\n    // q >= 3 and q mod 2 != 0\n    if (this.q.cmpn(3) < 0 || !this.q.isOdd())\n      return false;\n\n    // phi = (p - 1) * (q - 1)\n    const pm1 = this.p.subn(1);\n    const qm1 = this.q.subn(1);\n    const phi = pm1.mul(qm1);\n\n    // d >= 2 and d < phi\n    if (this.d.cmpn(2) < 0 || this.d.cmp(phi) >= 0)\n      return false;\n\n    // dp != 0 and dp < p - 1\n    if (this.dp.sign() === 0 || this.dp.cmp(pm1) >= 0)\n      return false;\n\n    // dq != 0 and dq < q - 1\n    if (this.dq.sign() === 0 || this.dq.cmp(qm1) >= 0)\n      return false;\n\n    // qi <= 2 and qi < p\n    if (this.qi.cmpn(2) < 0 || this.qi.cmp(this.p) >= 0)\n      return false;\n\n    // p != q\n    if (this.p.cmp(this.q) === 0)\n      return false;\n\n    // n == p * q\n    if (this.p.mul(this.q).cmp(this.n) !== 0)\n      return false;\n\n    // lam = lcm(p - 1, q - 1)\n    const lam = phi.div(pm1.gcd(qm1));\n\n    // e * d mod lam\n    if (this.e.mul(this.d).imod(lam).cmpn(1) !== 0)\n      return false;\n\n    // dp == d mod (p - 1)\n    if (this.d.mod(pm1).cmp(this.dp) !== 0)\n      return false;\n\n    // dq == d mod (q - 1)\n    if (this.d.mod(qm1).cmp(this.dq) !== 0)\n      return false;\n\n    // q * qi mod p == 1\n    if (this.q.mul(this.qi).imod(this.p).cmpn(1) !== 0)\n      return false;\n\n    return true;\n  }\n\n  decrypt(msg) {\n    // [RFC8017] Page 13, Section 5.1.2.\n    //           Page 15, Section 5.2.1.\n    assert(Buffer.isBuffer(msg));\n\n    const {n, e, p, q, dp, dq, qi} = this;\n\n    // Decode message.\n    const c = BN.decode(msg);\n\n    // Validate params.\n    if (c.cmp(n) >= 0)\n      throw new Error('Invalid RSA message size.');\n\n    // Generate blinding factor.\n    let b, bi;\n    for (;;) {\n      // s = random integer in [1,n-1]\n      const s = BN.random(rng, 1, n);\n\n      // bi = s^-1 mod n\n      try {\n        bi = s.invert(n);\n      } catch (e) {\n        continue;\n      }\n\n      // b = s^e mod n\n      b = s.powm(e, n);\n\n      break;\n    }\n\n    // Blind.\n    c.imul(b).imod(n);\n\n    // Leverage Chinese Remainder Theorem.\n    //\n    // Computation:\n    //\n    //   mp = c^(d mod p-1) mod p\n    //   mq = c^(d mod q-1) mod q\n    //   md = (mp - mq) / q mod p\n    //   m = (md * q + mq) mod n\n    const mp = c.powm(dp, p, true);\n    const mq = c.powm(dq, q, true);\n    const md = mp.sub(mq).mul(qi).imod(p);\n    const m = md.mul(q).iadd(mq).imod(n);\n\n    if (m.powm(e, n).cmp(c) !== 0)\n      throw new Error('Invalid RSA private key.');\n\n    // Unblind.\n    m.imul(bi).imod(n);\n\n    return m.encode('be', n.byteLength());\n  }\n\n  generate(bits, exponent) {\n    // [RFC8017] Page 9, Section 3.2.\n    // [FIPS186] Page 51, Appendix B.3.1\n    //           Page 55, Appendix B.3.3\n    //\n    // There are two methods for choosing `d`.\n    // Implementations differ on whether they\n    // use Euler's totient or the Carmichael\n    // function.\n    //\n    // The best explanation of Euler's phi vs.\n    // Carmichael's lambda I've seen comes from\n    // the crypto stackexchange[1].\n    //\n    // Note that both functions are _equivalent_\n    // when used with RSA, however, Carmichael's\n    // may lend itself to some perf benefits.\n    //\n    // [1] https://crypto.stackexchange.com/a/29595\n    assert((bits >>> 0) === bits);\n    assert(Number.isSafeInteger(exponent) && exponent >= 0);\n    assert(bits >= 64);\n    assert(exponent >= 3 && (exponent & 1) !== 0);\n\n    const e = new BN(exponent);\n\n    for (;;) {\n      const p = randomPrime((bits >>> 1) + (bits & 1));\n      const q = randomPrime(bits >>> 1);\n\n      if (p.cmp(q) === 0)\n        continue;\n\n      if (p.cmp(q) < 0)\n        p.swap(q);\n\n      if (p.sub(q).bitLength() <= (bits >>> 1) - 99)\n        continue;\n\n      const n = p.mul(q);\n\n      if (n.bitLength() !== bits)\n        continue;\n\n      // Euler's totient: (p - 1) * (q - 1).\n      const pm1 = p.subn(1);\n      const qm1 = q.subn(1);\n      const phi = pm1.mul(qm1);\n\n      if (e.gcd(phi).cmpn(1) !== 0)\n        continue;\n\n      // Carmichael's function: lcm(p - 1, q - 1).\n      const lam = phi.div(pm1.gcd(qm1));\n      const d = e.invert(lam);\n\n      if (d.bitLength() <= ((bits + 1) >>> 1))\n        continue;\n\n      const dp = d.mod(pm1);\n      const dq = d.mod(qm1);\n      const qi = q.invert(p);\n\n      this.n = n;\n      this.e = e;\n      this.d = d;\n      this.p = p;\n      this.q = q;\n      this.dp = dp;\n      this.dq = dq;\n      this.qi = qi;\n\n      return this;\n    }\n  }\n\n  async _generateSubtle(bits, exponent) {\n    assert((bits >>> 0) === bits);\n    assert(Number.isSafeInteger(exponent) && exponent >= 0);\n    assert(bits >= 64);\n    assert(exponent >= 3 && (exponent & 1) !== 0);\n\n    const crypto = global.crypto || global.msCrypto;\n\n    if (!crypto)\n      throw new Error('Crypto API not available.');\n\n    const {subtle} = crypto;\n\n    if (!subtle || !subtle.generateKey || !subtle.exportKey)\n      throw new Error('Subtle API not available.');\n\n    const e = new BN(exponent);\n\n    const algo = {\n      name: 'RSASSA-PKCS1-v1_5',\n      modulusLength: bits,\n      publicExponent: e.toArrayLike(Uint8Array, 'be', 8),\n      hash: { name: 'SHA-256' }\n    };\n\n    const ck = await subtle.generateKey(algo, true, ['sign']);\n    const jwk = await subtle.exportKey('jwk', ck.privateKey);\n    const p = BN.decode(base64.decodeURL(jwk.p));\n    const q = BN.decode(base64.decodeURL(jwk.q));\n\n    return this.fromPQE(p, q, e);\n  }\n\n  async generateAsync(bits, exponent) {\n    try {\n      return await this._generateSubtle(bits, exponent);\n    } catch (e) {\n      return this.generate(bits, exponent);\n    }\n  }\n\n  fromPQE(p, q, e) {\n    assert(p instanceof BN);\n    assert(q instanceof BN);\n    assert(e instanceof BN);\n\n    if (p.cmp(q) < 0)\n      [p, q] = [q, p];\n\n    if (p.cmp(q) === 0)\n      throw new Error('Invalid RSA private key.');\n\n    if (p.cmpn(3) < 0 || p.bitLength() > MAX_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    if (q.cmpn(3) < 0 || q.bitLength() > MAX_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    if (e.cmpn(MIN_EXP) < 0 || e.bitLength() > MAX_EXP_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    if (!p.isOdd() || !q.isOdd() || !e.isOdd())\n      throw new Error('Invalid RSA private key.');\n\n    const n = p.mul(q);\n\n    assert(n.isOdd());\n\n    if (n.bitLength() < MIN_BITS || n.bitLength() > MAX_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    const pm1 = p.subn(1);\n    const qm1 = q.subn(1);\n    const lam = pm1.lcm(qm1);\n    const d = e.invert(lam);\n    const dp = d.mod(pm1);\n    const dq = d.mod(qm1);\n    const qi = q.invert(p);\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.p = p;\n    this.q = q;\n    this.dp = dp;\n    this.dq = dq;\n    this.qi = qi;\n\n    return this;\n  }\n\n  fromPQD(p, q, d) {\n    assert(p instanceof BN);\n    assert(q instanceof BN);\n    assert(d instanceof BN);\n\n    if (p.cmpn(3) < 0 || p.bitLength() > MAX_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    if (q.cmpn(3) < 0 || q.bitLength() > MAX_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    if (!p.isOdd() || !q.isOdd())\n      throw new Error('Invalid RSA private key.');\n\n    const pm1 = p.subn(1);\n    const qm1 = q.subn(1);\n    const phi = pm1.mul(qm1);\n\n    if (d.cmpn(2) < 0 || d.cmp(phi) >= 0)\n      throw new Error('Invalid RSA private key.');\n\n    const lam = phi.div(pm1.gcd(qm1));\n    const e = d.invert(lam);\n\n    return this.fromPQE(p, q, e);\n  }\n\n  fromNED(n, e, d) {\n    // Factor an RSA modulus given (n, e, d).\n    //\n    // This is basically the same logic as the\n    // Miller-Rabin primality test[1][2].\n    //\n    // [1] https://crypto.stackexchange.com/questions/11509\n    // [2] https://crypto.stackexchange.com/questions/22374\n    assert(n instanceof BN);\n    assert(e instanceof BN);\n    assert(d instanceof BN);\n\n    if (n.sign() < 0)\n      throw new Error('Invalid RSA private key.');\n\n    if (n.bitLength() < MIN_BITS || n.bitLength() > MAX_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    if (e.cmpn(MIN_EXP) < 0 || e.bitLength() > MAX_EXP_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    if (d.cmpn(2) < 0 || d.bitLength() > MAX_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    if (!n.isOdd() || !e.isOdd())\n      throw new Error('Invalid RSA private key.');\n\n    const f = e.mul(d).isubn(1);\n    const nm1 = n.subn(1);\n    const s = f.zeroBits();\n    const g = f.ushrn(s);\n\n    for (let i = 0; i < 64; i++) {\n      const a = BN.random(rng, 2, nm1);\n\n      let b = a.powm(g, n);\n\n      if (b.cmpn(1) === 0 || b.cmp(nm1) === 0)\n        continue;\n\n      for (let j = 1; j < s; j++) {\n        const c = b.sqr().imod(n);\n\n        if (c.cmpn(1) === 0) {\n          const p = n.gcd(b.subn(1));\n          const q = n.gcd(b.addn(1));\n\n          return this.fromPQE(p, q, e);\n        }\n\n        if (c.cmp(nm1) === 0)\n          break;\n\n        b = c;\n      }\n    }\n\n    throw new Error('Invalid RSA private key.');\n  }\n\n  toPublic() {\n    const pub = new RSAPublicKey();\n\n    pub.n = this.n;\n    pub.e = this.e;\n\n    return pub;\n  }\n\n  encode() {\n    let size = 0;\n\n    size += asn1.sizeVersion(0);\n    size += asn1.sizeInt(this.n);\n    size += asn1.sizeInt(this.e);\n    size += asn1.sizeInt(this.d);\n    size += asn1.sizeInt(this.p);\n    size += asn1.sizeInt(this.q);\n    size += asn1.sizeInt(this.dp);\n    size += asn1.sizeInt(this.dq);\n    size += asn1.sizeInt(this.qi);\n\n    const out = Buffer.alloc(asn1.sizeSeq(size));\n\n    let pos = 0;\n\n    pos = asn1.writeSeq(out, pos, size);\n    pos = asn1.writeVersion(out, pos, 0);\n    pos = asn1.writeInt(out, pos, this.n);\n    pos = asn1.writeInt(out, pos, this.e);\n    pos = asn1.writeInt(out, pos, this.d);\n    pos = asn1.writeInt(out, pos, this.p);\n    pos = asn1.writeInt(out, pos, this.q);\n    pos = asn1.writeInt(out, pos, this.dp);\n    pos = asn1.writeInt(out, pos, this.dq);\n    pos = asn1.writeInt(out, pos, this.qi);\n\n    assert(pos === out.length);\n\n    return out;\n  }\n\n  decode(data) {\n    let pos = 0;\n\n    pos = asn1.readSeq(data, pos);\n    pos = asn1.readVersion(data, pos, 0);\n\n    [this.n, pos] = asn1.readInt(data, pos);\n    [this.e, pos] = asn1.readInt(data, pos);\n    [this.d, pos] = asn1.readInt(data, pos);\n    [this.p, pos] = asn1.readInt(data, pos);\n    [this.q, pos] = asn1.readInt(data, pos);\n    [this.dp, pos] = asn1.readInt(data, pos);\n    [this.dq, pos] = asn1.readInt(data, pos);\n    [this.qi, pos] = asn1.readInt(data, pos);\n\n    if (pos !== data.length)\n      throw new Error('Trailing bytes.');\n\n    return this;\n  }\n\n  static generate(bits, exponent) {\n    return new RSAPrivateKey().generate(bits, exponent);\n  }\n\n  static async generateAsync(bits, exponent) {\n    return new RSAPrivateKey().generateAsync(bits, exponent);\n  }\n\n  static fromPQE(p, q, e) {\n    return new RSAPrivateKey().fromPQE(p, q, e);\n  }\n\n  static fromPQD(p, q, d) {\n    return new RSAPrivateKey().fromPQD(p, q, d);\n  }\n\n  static fromNED(n, e, d) {\n    return new RSAPrivateKey().fromNED(n, e, d);\n  }\n\n  static decode(data) {\n    return new RSAPrivateKey().decode(data);\n  }\n}\n\n/**\n * Generate a private key.\n * @param {Number} [bits=2048]\n * @param {Number} [exponent=65537]\n * @returns {Buffer} Private key.\n */\n\nfunction privateKeyGenerate(bits, exponent) {\n  if (bits == null)\n    bits = DEFAULT_BITS;\n\n  if (exponent == null)\n    exponent = DEFAULT_EXP;\n\n  assert((bits >>> 0) === bits);\n  assert(Number.isSafeInteger(exponent) && exponent >= 0);\n\n  if (bits < MIN_BITS || bits > MAX_BITS)\n    throw new RangeError(`\"bits\" ranges from ${MIN_BITS} to ${MAX_BITS}.`);\n\n  if (exponent < MIN_EXP || exponent > MAX_EXP)\n    throw new RangeError(`\"exponent\" ranges from ${MIN_EXP} to ${MAX_EXP}.`);\n\n  if (exponent === 1 || (exponent & 1) === 0)\n    throw new RangeError('\"exponent\" must be odd.');\n\n  const key = RSAPrivateKey.generate(bits, exponent);\n\n  return key.encode();\n}\n\n/**\n * Generate a private key.\n * @param {Number} [bits=2048]\n * @param {Number} [exponent=65537]\n * @returns {Buffer} Private key.\n */\n\nasync function privateKeyGenerateAsync(bits, exponent) {\n  if (bits == null)\n    bits = DEFAULT_BITS;\n\n  if (exponent == null)\n    exponent = DEFAULT_EXP;\n\n  assert((bits >>> 0) === bits);\n  assert(Number.isSafeInteger(exponent) && exponent >= 0);\n\n  if (bits < MIN_BITS || bits > MAX_BITS)\n    throw new RangeError(`\"bits\" ranges from ${MIN_BITS} to ${MAX_BITS}.`);\n\n  if (exponent < MIN_EXP || exponent > MAX_EXP)\n    throw new RangeError(`\"exponent\" ranges from ${MIN_EXP} to ${MAX_EXP}.`);\n\n  if (exponent === 1 || (exponent & 1) === 0)\n    throw new RangeError('\"exponent\" must be odd.');\n\n  const key = await RSAPrivateKey.generateAsync(bits, exponent);\n\n  return key.encode();\n}\n\n/**\n * Get a private key's modulus size in bits.\n * @param {Buffer} key\n * @returns {Number}\n */\n\nfunction privateKeyBits(key) {\n  const k = RSAPrivateKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA private key.');\n\n  return k.bits();\n}\n\n/**\n * Verify a private key.\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nfunction privateKeyVerify(key) {\n  // [RFC8017] Page 9, Section 3.2.\n  assert(Buffer.isBuffer(key));\n\n  let k;\n\n  try {\n    k = RSAPrivateKey.decode(key);\n  } catch (e) {\n    return false;\n  }\n\n  return k.verify();\n}\n\n/**\n * Import a private key from an object.\n * @param {Object} json\n * @returns {Buffer}\n */\n\nfunction privateKeyImport(json) {\n  // [RFC8017] Page 55, Section A.1.2.\n  assert(json && typeof json === 'object');\n\n  let k = new RSAPrivateKey();\n\n  if (json.n != null)\n    k.n = BN.decode(json.n);\n\n  if (json.e != null)\n    k.e = BN.decode(json.e);\n\n  if (json.d != null)\n    k.d = BN.decode(json.d);\n\n  if (json.p != null)\n    k.p = BN.decode(json.p);\n\n  if (json.q != null)\n    k.q = BN.decode(json.q);\n\n  if (json.dp != null)\n    k.dp = BN.decode(json.dp);\n\n  if (json.dq != null)\n    k.dq = BN.decode(json.dq);\n\n  if (json.qi != null)\n    k.qi = BN.decode(json.qi);\n\n  if (!k.verify()) {\n    if (!k.p.isZero() && !k.q.isZero()) {\n      if (!k.e.isZero())\n        k = RSAPrivateKey.fromPQE(k.p, k.q, k.e);\n      else\n        k = RSAPrivateKey.fromPQD(k.p, k.q, k.d);\n    } else {\n      k = RSAPrivateKey.fromNED(k.n, k.e, k.d);\n    }\n  }\n\n  return k.encode();\n}\n\n/**\n * Export a private key to an object.\n * @param {Buffer} key\n * @returns {Object}\n */\n\nfunction privateKeyExport(key) {\n  // [RFC8017] Page 55, Section A.1.2.\n  const k = RSAPrivateKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA private key.');\n\n  return {\n    n: k.n.encode(),\n    e: k.e.encode(),\n    d: k.d.encode(),\n    p: k.p.encode(),\n    q: k.q.encode(),\n    dp: k.dp.encode(),\n    dq: k.dq.encode(),\n    qi: k.qi.encode()\n  };\n}\n\n/**\n * Create a public key from a private key.\n * @param {Buffer} key\n * @returns {Buffer}\n */\n\nfunction publicKeyCreate(key) {\n  const k = RSAPrivateKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA private key.');\n\n  const p = k.toPublic();\n\n  return p.encode();\n}\n\n/**\n * Get a public key's modulus size in bits.\n * @param {Buffer} key\n * @returns {Number}\n */\n\nfunction publicKeyBits(key) {\n  const k = RSAPublicKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA public key.');\n\n  return k.bits();\n}\n\n/**\n * Verify a public key.\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nfunction publicKeyVerify(key) {\n  // [RFC8017] Page 8, Section 3.1.\n  assert(Buffer.isBuffer(key));\n\n  let k;\n\n  try {\n    k = RSAPublicKey.decode(key);\n  } catch (e) {\n    return false;\n  }\n\n  return k.verify();\n}\n\n/**\n * Import a public key from an object.\n * @param {Object} json\n * @returns {Buffer}\n */\n\nfunction publicKeyImport(json) {\n  // [RFC8017] Page 54, Section A.1.1.\n  assert(json && typeof json === 'object');\n\n  const k = new RSAPublicKey();\n\n  if (json.n != null)\n    k.n = BN.decode(json.n);\n\n  if (json.e != null)\n    k.e = BN.decode(json.e);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA public key.');\n\n  return k.encode();\n}\n\n/**\n * Export a public key to an object.\n * @param {Buffer} key\n * @returns {Object}\n */\n\nfunction publicKeyExport(key) {\n  // [RFC8017] Page 54, Section A.1.1.\n  const k = RSAPublicKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA public key.');\n\n  return {\n    n: k.n.encode(),\n    e: k.e.encode()\n  };\n}\n\n/**\n * Sign a message (PKCS1v1.5).\n * @param {Object|String|null} hash\n * @param {Buffer} msg\n * @param {Buffer} key - Private key.\n * @returns {Buffer} PKCS#1v1.5-formatted signature.\n */\n\nfunction sign(hash, msg, key) {\n  // [RFC8017] Page 36, Section 8.2.1.\n  //           Page 45, Section 9.2.\n  if (hash && typeof hash.id === 'string')\n    hash = hash.id;\n\n  assert(hash == null || typeof hash === 'string');\n  assert(Buffer.isBuffer(msg));\n\n  const [prefix, hlen] = getDigestInfo(hash, msg);\n\n  if (!prefix)\n    throw new Error('Unknown RSA hash function.');\n\n  if (msg.length !== hlen)\n    throw new Error('Invalid RSA message size.');\n\n  const k = RSAPrivateKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA private key.');\n\n  const tlen = prefix.length + hlen;\n  const klen = k.size();\n\n  if (klen < tlen + 11)\n    throw new Error('Invalid RSA message size.');\n\n  // EM = 0x00 || 0x01 || PS || 0x00 || T\n  const em = Buffer.alloc(klen);\n\n  em[0] = 0x00;\n  em[1] = 0x01;\n\n  for (let i = 2; i < klen - tlen - 1; i++)\n    em[i] = 0xff;\n\n  em[klen - tlen - 1] = 0x00;\n\n  prefix.copy(em, klen - tlen);\n  msg.copy(em, klen - hlen);\n\n  return k.decrypt(em);\n}\n\n/**\n * Verify a signature (PKCS1v1.5).\n * @param {Object|String|null} hash\n * @param {Buffer} msg\n * @param {Buffer} sig - PKCS#1v1.5-formatted.\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nfunction verify(hash, msg, sig, key) {\n  if (hash && typeof hash.id === 'string')\n    hash = hash.id;\n\n  assert(hash == null || typeof hash === 'string');\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(sig));\n  assert(Buffer.isBuffer(key));\n\n  try {\n    return _verify(hash, msg, sig, key);\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Verify a signature (PKCS1v1.5).\n * @private\n * @param {String} hash\n * @param {Buffer} msg\n * @param {Buffer} sig - PKCS#1v1.5-formatted.\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nfunction _verify(hash, msg, sig, key) {\n  // [RFC8017] Page 37, Section 8.2.2.\n  //           Page 45, Section 9.2.\n  const [prefix, hlen] = getDigestInfo(hash, msg);\n\n  if (!prefix)\n    return false;\n\n  if (msg.length !== hlen)\n    return false;\n\n  const k = RSAPublicKey.decode(key);\n\n  if (!k.verify())\n    return false;\n\n  const klen = k.size();\n\n  if (sig.length !== klen)\n    return false;\n\n  const tlen = prefix.length + hlen;\n\n  if (klen < tlen + 11)\n    return false;\n\n  const em = k.encrypt(sig);\n\n  // EM = 0x00 || 0x01 || PS || 0x00 || T\n  let ok = 1;\n\n  ok &= safeEqualByte(em[0], 0x00);\n  ok &= safeEqualByte(em[1], 0x01);\n\n  for (let i = 2; i < klen - tlen - 1; i++)\n    ok &= safeEqualByte(em[i], 0xff);\n\n  ok &= safeEqualByte(em[klen - tlen - 1], 0x00);\n  ok &= safeEqual(em.slice(klen - tlen, klen - hlen), prefix);\n  ok &= safeEqual(em.slice(klen - hlen, klen), msg);\n\n  return ok === 1;\n}\n\n/**\n * Encrypt a message with public key (PKCS1v1.5).\n * @param {Buffer} msg\n * @param {Buffer} key\n * @returns {Buffer}\n */\n\nfunction encrypt(msg, key) {\n  // [RFC8017] Page 28, Section 7.2.1.\n  assert(Buffer.isBuffer(msg));\n\n  const k = RSAPublicKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA public key.');\n\n  const klen = k.size();\n\n  if (msg.length > klen - 11)\n    throw new Error('Invalid RSA message size.');\n\n  // EM = 0x00 || 0x02 || PS || 0x00 || M\n  const em = Buffer.alloc(klen);\n  const mlen = msg.length;\n  const plen = klen - mlen - 3;\n\n  em[0] = 0x00;\n  em[1] = 0x02;\n\n  rng.randomFill(em, 2, plen);\n\n  for (let i = 2; i < 2 + plen; i++) {\n    while (em[i] === 0x00)\n      rng.randomFill(em, i, 1);\n  }\n\n  em[klen - mlen - 1] = 0x00;\n\n  msg.copy(em, klen - mlen);\n\n  return k.encrypt(em);\n}\n\n/**\n * Decrypt a message with private key (PKCS1v1.5).\n * @param {Buffer} msg\n * @param {Buffer} key\n * @returns {Buffer}\n */\n\nfunction decrypt(msg, key) {\n  // [RFC8017] Page 29, Section 7.2.2.\n  assert(Buffer.isBuffer(msg));\n\n  const k = RSAPrivateKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA private key.');\n\n  const klen = k.size();\n\n  if (klen < 11)\n    throw new Error('Invalid RSA private key.');\n\n  if (msg.length !== klen)\n    throw new Error('Invalid RSA message size.');\n\n  // EM = 0x00 || 0x02 || PS || 0x00 || M\n  const em = k.decrypt(msg);\n  const zero = safeEqualByte(em[0], 0x00);\n  const two = safeEqualByte(em[1], 0x02);\n\n  let index = 0;\n  let looking = 1;\n\n  for (let i = 2; i < em.length; i++) {\n    const equals0 = safeEqualByte(em[i], 0x00);\n\n    index = safeSelect(index, i, looking & equals0);\n    looking = safeSelect(looking, 0, equals0);\n  }\n\n  const validPS = safeLTE(2 + 8, index);\n  const valid = zero & two & (looking ^ 1) & validPS;\n  const offset = safeSelect(0, index + 1, valid);\n\n  if (valid === 0)\n    throw new Error('Invalid RSA ciphertext.');\n\n  return em.slice(offset);\n}\n\n/**\n * Sign a message (PSS).\n * @param {Object} hash\n * @param {Buffer} msg\n * @param {Buffer} key - Private key.\n * @param {Number} [saltLen=SALT_LENGTH_HASH]\n * @returns {Buffer} PSS-formatted signature.\n */\n\nfunction signPSS(hash, msg, key, saltLen) {\n  // [RFC8017] Page 33, Section 8.1.1.\n  if (saltLen == null)\n    saltLen = SALT_LENGTH_HASH;\n\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(msg));\n  assert((saltLen | 0) === saltLen);\n\n  if (msg.length !== hash.size)\n    throw new Error('Invalid RSA message size.');\n\n  const k = RSAPrivateKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA private key.');\n\n  const bits = k.bits();\n  const klen = (bits + 7) >>> 3;\n  const emlen = (bits + 6) >>> 3;\n\n  if (saltLen === SALT_LENGTH_AUTO)\n    saltLen = emlen - 2 - hash.size;\n  else if (saltLen === SALT_LENGTH_HASH)\n    saltLen = hash.size;\n\n  if (saltLen < 0 || saltLen > klen)\n    throw new Error('Invalid PSS salt length.');\n\n  const salt = rng.randomBytes(saltLen);\n  const em = pssEncode(hash, msg, bits - 1, salt);\n\n  // Note that `em` may be one byte less\n  // than the modulus size in the case\n  // of (bits - 1) mod 8 == 0.\n  return k.decrypt(em);\n}\n\n/**\n * Verify a signature (PSS).\n * @param {Object} hash\n * @param {Buffer} msg\n * @param {Buffer} sig - PSS-formatted.\n * @param {Buffer} key\n * @param {Number} [saltLen=SALT_LENGTH_HASH]\n * @returns {Boolean}\n */\n\nfunction verifyPSS(hash, msg, sig, key, saltLen) {\n  if (saltLen == null)\n    saltLen = SALT_LENGTH_HASH;\n\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(sig));\n  assert(Buffer.isBuffer(key));\n  assert((saltLen | 0) === saltLen);\n\n  try {\n    return _verifyPSS(hash, msg, sig, key, saltLen);\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Verify a signature (PSS).\n * @private\n * @param {Object} hash\n * @param {Buffer} msg\n * @param {Buffer} sig - PSS-formatted.\n * @param {Buffer} key\n * @param {Number} saltLen\n * @returns {Boolean}\n */\n\nfunction _verifyPSS(hash, msg, sig, key, saltLen) {\n  // [RFC8017] Page 34, Section 8.1.2.\n  if (msg.length !== hash.size)\n    return false;\n\n  const k = RSAPublicKey.decode(key);\n\n  if (!k.verify())\n    return false;\n\n  const bits = k.bits();\n  const klen = (bits + 7) >>> 3;\n\n  if (sig.length !== klen)\n    return false;\n\n  if (saltLen === SALT_LENGTH_AUTO)\n    saltLen = 0; // Handled in pssVerify.\n  else if (saltLen === SALT_LENGTH_HASH)\n    saltLen = hash.size;\n\n  if (saltLen < 0 || saltLen > klen)\n    return false;\n\n  let em = k.encrypt(sig);\n\n  // Edge case: the encoding crossed a\n  // a byte boundary. Our encryption\n  // function pads to the modulus size\n  // by default, meaning there's one\n  // extra zero byte prepended.\n  if (((bits - 1) & 7) === 0) {\n    if (em[0] !== 0x00)\n      return false;\n\n    em = em.slice(1);\n  }\n\n  return pssVerify(hash, msg, em, bits - 1, saltLen);\n}\n\n/**\n * Encrypt a message with public key (OAEP).\n * @param {Object} hash\n * @param {Buffer} msg\n * @param {Buffer} key\n * @param {Buffer?} label\n * @returns {Buffer}\n */\n\nfunction encryptOAEP(hash, msg, key, label) {\n  // [RFC8017] Page 22, Section 7.1.1.\n  if (label == null)\n    label = EMPTY;\n\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(label));\n\n  const k = RSAPublicKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA public key.');\n\n  const klen = k.size();\n  const mlen = msg.length;\n  const hlen = hash.size;\n\n  if (mlen > klen - 2 * hlen - 2)\n    throw new Error('Invalid RSA message size.');\n\n  // EM = 0x00 || (seed) || (Hash(L) || PS || 0x01 || M)\n  const em = Buffer.alloc(klen);\n  const lhash = hash.digest(label);\n  const seed = em.slice(1, 1 + hlen);\n  const db = em.slice(1 + hlen);\n  const dlen = db.length;\n\n  em[0] = 0x00;\n\n  rng.randomFill(seed, 0, seed.length);\n\n  lhash.copy(db, 0);\n  db.fill(0x00, hlen, dlen - mlen - 1);\n  db[dlen - mlen - 1] = 0x01;\n  msg.copy(db, dlen - mlen);\n\n  mgf1xor(hash, db, seed);\n  mgf1xor(hash, seed, db);\n\n  return k.encrypt(em);\n}\n\n/**\n * Decrypt a message with private key (OAEP).\n * @param {Object} hash\n * @param {Buffer} msg\n * @param {Buffer} key\n * @param {Buffer?} label\n * @returns {Buffer}\n */\n\nfunction decryptOAEP(hash, msg, key, label) {\n  // [RFC8017] Page 25, Section 7.1.2.\n  if (label == null)\n    label = EMPTY;\n\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(label));\n\n  const k = RSAPrivateKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA private key.');\n\n  const klen = k.size();\n  const mlen = msg.length;\n  const hlen = hash.size;\n\n  if (klen < hlen * 2 + 2)\n    throw new Error('Invalid RSA private key size.');\n\n  if (mlen !== klen)\n    throw new Error('Invalid RSA message size.');\n\n  // EM = 0x00 || (seed) || (Hash(L) || PS || 0x01 || M)\n  const em = k.decrypt(msg);\n  const expect = hash.digest(label);\n  const zero = safeEqualByte(em[0], 0x00);\n  const seed = em.slice(1, hlen + 1);\n  const db = em.slice(hlen + 1);\n\n  mgf1xor(hash, seed, db);\n  mgf1xor(hash, db, seed);\n\n  const lhash = db.slice(0, hlen);\n  const lvalid = safeEqual(lhash, expect);\n  const rest = db.slice(hlen);\n\n  let looking = 1;\n  let index = 0;\n  let invalid = 0;\n\n  for (let i = 0; i < rest.length; i++) {\n    const equals0 = safeEqualByte(rest[i], 0x00);\n    const equals1 = safeEqualByte(rest[i], 0x01);\n\n    index = safeSelect(index, i, looking & equals1);\n    looking = safeSelect(looking, 0, equals1);\n    invalid = safeSelect(invalid, 1, looking & (equals0 ^ 1));\n  }\n\n  const valid = zero & lvalid & (invalid ^ 1) & (looking ^ 1);\n\n  if (valid === 0)\n    throw new Error('Invalid RSA ciphertext.');\n\n  return rest.slice(index + 1);\n}\n\n/**\n * \"Veil\" an RSA ciphertext to hide the key size.\n * @param {Buffer} msg\n * @param {Number} bits\n * @param {Buffer} key\n * @returns {Buffer}\n */\n\nfunction veil(msg, bits, key) {\n  assert(Buffer.isBuffer(msg));\n  assert((bits >>> 0) === bits);\n\n  const k = RSAPublicKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA public key.');\n\n  if (msg.length !== k.size())\n    throw new Error('Invalid RSA ciphertext.');\n\n  if (bits < k.bits())\n    throw new Error('Cannot make ciphertext smaller.');\n\n  const bytes = (bits + 7) >>> 3;\n  const c = BN.decode(msg);\n\n  if (c.cmp(k.n) >= 0)\n    throw new Error('Invalid RSA ciphertext.');\n\n  const vmax = BN.shift(1, bits);\n  const rmax = vmax.sub(c).iadd(k.n).isubn(1).div(k.n);\n\n  assert(rmax.sign() > 0);\n\n  let v = vmax;\n\n  while (v.cmp(vmax) >= 0) {\n    const r = BN.random(rng, 0, rmax);\n\n    v = c.add(r.mul(k.n));\n  }\n\n  assert(v.mod(k.n).cmp(c) === 0);\n  assert(v.bitLength() <= bits);\n\n  return v.encode('be', bytes);\n}\n\n/**\n * \"Unveil\" a veiled RSA ciphertext.\n * @param {Buffer} msg\n * @param {Number} bits\n * @param {Buffer} key\n * @returns {Buffer}\n */\n\nfunction unveil(msg, bits, key) {\n  assert(Buffer.isBuffer(msg));\n  assert((bits >>> 0) === bits);\n\n  const k = RSAPublicKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA public key.');\n\n  const klen = k.size();\n\n  if (msg.length < klen)\n    throw new Error('Invalid RSA ciphertext.');\n\n  const v = BN.decode(msg);\n\n  if (bits !== 0 && v.bitLength() > bits)\n    throw new Error('Invalid RSA ciphertext.');\n\n  const c = v.imod(k.n);\n\n  return c.encode('be', klen);\n}\n\n/*\n * Digest Info\n */\n\nfunction getDigestInfo(name, msg) {\n  // [RFC8017] Page 63, Section B.1.\n  assert(name == null || typeof name === 'string');\n  assert(Buffer.isBuffer(msg));\n\n  if (name == null)\n    return [EMPTY, msg.length];\n\n  const prefix = digestInfo[name];\n\n  if (prefix == null)\n    return [null, 0];\n\n  if (prefix.length === 1)\n    return [EMPTY, prefix[0]];\n\n  return [\n    prefix,\n    prefix[prefix.length - 1]\n  ];\n}\n\n/*\n * MGF1\n */\n\nfunction mgf1xor(hash, out, seed) {\n  // [RFC8017] Page 67, Section B.2.1.\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(out));\n  assert(Buffer.isBuffer(seed));\n\n  const ctr = Buffer.alloc(4, 0x00);\n\n  let i = 0;\n\n  while (i < out.length) {\n    const digest = hash.multi(seed, ctr);\n\n    let j = 0;\n\n    while (i < out.length && j < digest.length)\n      out[i++] ^= digest[j++];\n\n    for (j = 3; j >= 0; j--) {\n      ctr[j] += 1;\n\n      if (ctr[j] !== 0x00)\n        break;\n    }\n  }\n}\n\n/*\n * PSS\n */\n\nfunction pssEncode(hash, msg, embits, salt) {\n  // [RFC8017] Page 42, Section 9.1.1.\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(msg));\n  assert((embits >>> 0) === embits);\n  assert(Buffer.isBuffer(salt));\n\n  const hlen = hash.size;\n  const slen = salt.length;\n  const emlen = (embits + 7) >>> 3;\n\n  if (msg.length !== hlen)\n    throw new Error('Invalid RSA message size.');\n\n  if (emlen < hlen + slen + 2)\n    throw new Error('Message too long.');\n\n  // EM = (PS || 0x01 || salt) || H || 0xbc\n  const em = Buffer.alloc(emlen);\n  const db = em.slice(0, emlen - hlen - 1);\n  const h = em.slice(emlen - hlen - 1, emlen - 1);\n  const h0 = hash.multi(PREFIX, msg, salt);\n  const mask = 0xff >>> (8 * emlen - embits);\n\n  db.fill(0x00, 0, emlen - slen - hlen - 2);\n  db[emlen - slen - hlen - 2] = 0x01;\n  salt.copy(db, emlen - slen - hlen - 1);\n  h0.copy(h, 0);\n  em[emlen - 1] = 0xbc;\n\n  mgf1xor(hash, db, h);\n\n  db[0] &= mask;\n\n  return em;\n}\n\nfunction pssVerify(hash, msg, em, embits, slen) {\n  // [RFC8017] Page 44, Section 9.1.2.\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(em));\n  assert((embits >>> 0) === embits);\n  assert((slen >>> 0) === slen);\n\n  const hlen = hash.size;\n  const emlen = (embits + 7) >>> 3;\n\n  if (msg.length !== hlen)\n    return false;\n\n  if (emlen < hlen + slen + 2)\n    return false;\n\n  if (em[emlen - 1] !== 0xbc)\n    return false;\n\n  // EM = (PS || 0x01 || salt) || H || 0xbc\n  const db = em.slice(0, emlen - hlen - 1);\n  const h = em.slice(emlen - hlen - 1, emlen - 1);\n  const mask = 0xff >>> (8 * emlen - embits);\n\n  if (em[0] & ~mask)\n    return false;\n\n  mgf1xor(hash, db, h);\n\n  db[0] &= mask;\n\n  if (slen === 0) { // Auto\n    slen = -1;\n\n    for (let i = 0; i < db.length; i++) {\n      if (db[i] === 0x00)\n        continue;\n\n      if (db[i] === 0x01) {\n        slen = db.length - (i + 1);\n        break;\n      }\n\n      return false;\n    }\n\n    if (slen === -1)\n      return false;\n  } else {\n    const len = db.length - slen - 1;\n\n    for (let i = 0; i < len; i++) {\n      if (db[i] !== 0x00)\n        return false;\n    }\n\n    if (db[len] !== 0x01)\n      return false;\n  }\n\n  const salt = db.slice(db.length - slen);\n  const h0 = hash.multi(PREFIX, msg, salt);\n\n  return h0.equals(h);\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.SALT_LENGTH_AUTO = SALT_LENGTH_AUTO;\nexports.SALT_LENGTH_HASH = SALT_LENGTH_HASH;\nexports.privateKeyGenerate = privateKeyGenerate;\nexports.privateKeyGenerateAsync = privateKeyGenerateAsync;\nexports.privateKeyBits = privateKeyBits;\nexports.privateKeyVerify = privateKeyVerify;\nexports.privateKeyImport = privateKeyImport;\nexports.privateKeyExport = privateKeyExport;\nexports.publicKeyCreate = publicKeyCreate;\nexports.publicKeyBits = publicKeyBits;\nexports.publicKeyVerify = publicKeyVerify;\nexports.publicKeyImport = publicKeyImport;\nexports.publicKeyExport = publicKeyExport;\nexports.sign = sign;\nexports.verify = verify;\nexports.encrypt = encrypt;\nexports.decrypt = decrypt;\nexports.signPSS = signPSS;\nexports.verifyPSS = verifyPSS;\nexports.encryptOAEP = encryptOAEP;\nexports.decryptOAEP = decryptOAEP;\nexports.veil = veil;\nexports.unveil = unveil;\n","/*!\n * rsaies.js - rsaies for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst rsa = require('./rsa');\nconst random = require('./random');\nconst box = require('./secretbox');\n\n/*\n * RSAIES\n */\n\nfunction encrypt(hash, msg, pub, size = null, label = null) {\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(msg));\n\n  const key = random.randomBytes(32);\n\n  let ct = rsa.encryptOAEP(hash, key, pub, label);\n\n  if (size != null)\n    ct = rsa.veil(ct, size, pub);\n\n  const nonce = random.randomBytes(24);\n  const sealed = box.seal(msg, key, nonce);\n\n  return Buffer.concat([ct, nonce, sealed]);\n}\n\nfunction decrypt(hash, msg, priv, size = null, label = null) {\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(priv));\n\n  if (size == null)\n    size = rsa.privateKeyBits(priv);\n\n  assert((size >>> 0) === size);\n\n  const bytes = (size + 7) >>> 3;\n\n  if (msg.length < bytes + 24)\n    throw new Error('Invalid ciphertext.');\n\n  const pub = rsa.publicKeyCreate(priv);\n  const ct = rsa.unveil(msg.slice(0, bytes), size, pub);\n  const key = rsa.decryptOAEP(hash, ct, priv, label);\n  const nonce = msg.slice(bytes, bytes + 24);\n  const sealed = msg.slice(bytes + 24);\n\n  return box.open(sealed, key, nonce);\n}\n\n/*\n * Expose\n */\n\nexports.encrypt = encrypt;\nexports.decrypt = decrypt;\n","/*!\n * schnorr.js - schnorr for bcrypto\n * Copyright (c) 2020, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/schnorr');\n","/*!\n * schnorr.js - bip340 for bcrypto\n * Copyright (c) 2019-2020, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on bips/bip-0340:\n *   Copyright (c) 2018-2020, Pieter Wuille (2-clause BSD License).\n *   https://github.com/bitcoin/bips/blob/master/bip-0340/reference.py\n *\n * Parts of this software are based on bitcoin-core/secp256k1:\n *   Copyright (c) 2013, Pieter Wuille.\n *   https://github.com/bitcoin-core/secp256k1\n *\n * Resources:\n *   https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n *   https://github.com/bitcoin/bips/blob/master/bip-0340/reference.py\n *   https://github.com/bitcoin/bips/blob/master/bip-0340/test-vectors.csv\n *\n * References:\n *\n *   [BIP340] Schnorr Signatures for secp256k1\n *     Pieter Wuille, Jonas Nick, Tim Ruffing\n *     https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst BatchRNG = require('./batch-rng');\nconst BN = require('../bn');\nconst rng = require('../random');\nconst SHA256 = require('../sha256');\nconst SHAKE256 = require('../shake256');\nconst elliptic = require('./elliptic');\nconst pre = require('./precomputed/secp256k1.json');\n\n/**\n * Schnorr\n */\n\nclass Schnorr {\n  constructor(name, hash, pre) {\n    assert(typeof name === 'string');\n    assert(hash);\n\n    this.id = name;\n    this.type = 'schnorr';\n    this.hash = hash;\n    this.native = 0;\n\n    this._pre = pre || null;\n    this._curve = null;\n    this._rng = null;\n    this._auxTag = null;\n    this._nonceTag = null;\n    this._challengeTag = null;\n  }\n\n  get curve() {\n    if (!this._curve) {\n      this._curve = elliptic.curve(this.id, this._pre);\n      this._curve.precompute(rng);\n      this._pre = null;\n    }\n\n    return this._curve;\n  }\n\n  get rng() {\n    if (!this._rng)\n      this._rng = new BatchRNG(this.curve);\n\n    return this._rng;\n  }\n\n  get size() {\n    return this.curve.fieldSize;\n  }\n\n  get bits() {\n    return this.curve.fieldBits;\n  }\n\n  hashInt(...items) {\n    // [BIP340] \"Specification\".\n    // eslint-disable-next-line\n    const h = new this.hash();\n\n    h.init();\n\n    for (const item of items)\n      h.update(item);\n\n    let hash = h.final(this.curve.scalarSize);\n\n    if (hash.length > this.curve.scalarSize)\n      hash = hash.slice(0, this.curve.scalarSize);\n\n    const num = BN.decode(hash, this.curve.endian);\n\n    num.iumaskn(this.curve.scalarBits);\n\n    return num.imod(this.curve.n);\n  }\n\n  hashAux(a, d) {\n    assert(Buffer.isBuffer(a));\n    assert(Buffer.isBuffer(d));\n    assert(a.length === this.curve.scalarSize);\n    assert(d.length === 32);\n\n    if (!this._auxTag)\n      this._auxTag = createTag(this.hash, 'BIP0340/aux');\n\n    // eslint-disable-next-line\n    const h = new this.hash();\n\n    h.init();\n    h.update(this._auxTag);\n    h.update(d);\n\n    const hash = h.final(this.curve.scalarSize);\n    const t = Buffer.alloc(this.curve.scalarSize);\n\n    for (let i = 0; i < this.curve.scalarSize; i++)\n      t[i] = a[i] ^ hash[i];\n\n    return t;\n  }\n\n  hashNonce(a, A, m, d) {\n    if (!this._nonceTag)\n      this._nonceTag = createTag(this.hash, 'BIP0340/nonce');\n\n    if (d == null)\n      return this.hashInt(this._nonceTag, a, A, m);\n\n    return this.hashInt(this._nonceTag, this.hashAux(a, d), A, m);\n  }\n\n  hashChallenge(R, A, m) {\n    if (!this._challengeTag)\n      this._challengeTag = createTag(this.hash, 'BIP0340/challenge');\n\n    return this.hashInt(this._challengeTag, R, A, m);\n  }\n\n  privateKeyGenerate() {\n    const a = this.curve.randomScalar(rng);\n    return this.curve.encodeScalar(a);\n  }\n\n  privateKeyVerify(key) {\n    assert(Buffer.isBuffer(key));\n\n    let a;\n    try {\n      a = this.curve.decodeScalar(key);\n    } catch (e) {\n      return false;\n    }\n\n    return !a.isZero() && a.cmp(this.curve.n) < 0;\n  }\n\n  privateKeyExport(key) {\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    let A = this.curve.g.mul(a);\n\n    if (!A.isEven()) {\n      a.ineg().imod(this.curve.n);\n      A = A.neg();\n    }\n\n    return {\n      d: this.curve.encodeScalar(a),\n      x: this.curve.encodeField(A.x.fromRed()),\n      y: this.curve.encodeField(A.y.fromRed())\n    };\n  }\n\n  privateKeyImport(json) {\n    assert(json && typeof json === 'object');\n\n    const a = BN.decode(json.d, this.curve.endian);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    return this.curve.encodeScalar(a);\n  }\n\n  privateKeyTweakAdd(key, tweak) {\n    const t = this.curve.decodeScalar(tweak);\n\n    if (t.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid scalar.');\n\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const A = this.curve.g.mul(a);\n\n    if (!A.isEven())\n      a.ineg().imod(this.curve.n);\n\n    const k = a.add(t).imod(this.curve.n);\n\n    if (k.isZero())\n      throw new Error('Invalid private key.');\n\n    return this.curve.encodeScalar(k);\n  }\n\n  privateKeyTweakMul(key, tweak) {\n    const t = this.curve.decodeScalar(tweak);\n\n    if (t.isZero() || t.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid scalar.');\n\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const k = a.mul(t).imod(this.curve.n);\n\n    if (k.isZero())\n      throw new Error('Invalid private key.');\n\n    return this.curve.encodeScalar(k);\n  }\n\n  privateKeyInvert(key) {\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const k = a.invert(this.curve.n);\n\n    return this.curve.encodeScalar(k);\n  }\n\n  publicKeyCreate(key) {\n    // [BIP340] \"Public Key Generation\".\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const A = this.curve.g.mulBlind(a);\n\n    return A.encodeX();\n  }\n\n  publicKeyFromUniform(bytes) {\n    const u = this.curve.decodeUniform(bytes);\n    const A = this.curve.pointFromUniform(u);\n\n    return A.encodeX();\n  }\n\n  publicKeyToUniform(key, hint = rng.randomInt()) {\n    const A = this.curve.decodeEven(key);\n    const u = this.curve.pointToUniform(A, hint);\n\n    return this.curve.encodeUniform(u, hint >>> 8);\n  }\n\n  publicKeyFromHash(bytes) {\n    const A = this.curve.pointFromHash(bytes);\n    return A.encodeX();\n  }\n\n  publicKeyToHash(key) {\n    const A = this.curve.decodeEven(key);\n    return this.curve.pointToHash(A, 0, rng);\n  }\n\n  publicKeyVerify(key) {\n    assert(Buffer.isBuffer(key));\n\n    try {\n      this.curve.decodeEven(key);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  publicKeyExport(key) {\n    const {x, y} = this.curve.decodeEven(key);\n\n    return {\n      x: this.curve.encodeField(x.fromRed()),\n      y: this.curve.encodeField(y.fromRed())\n    };\n  }\n\n  publicKeyImport(json) {\n    assert(json && typeof json === 'object');\n\n    const x = BN.decode(json.x, this.curve.endian);\n\n    if (x.cmp(this.curve.p) >= 0)\n      throw new Error('Invalid point.');\n\n    if (json.y != null) {\n      const y = BN.decode(json.y, this.curve.endian);\n\n      if (y.cmp(this.curve.p) >= 0)\n        throw new Error('Invalid point.');\n\n      const A = this.curve.point(x, y);\n\n      if (!A.validate())\n        throw new Error('Invalid point.');\n\n      return A.encodeX();\n    }\n\n    const A = this.curve.pointFromX(x);\n\n    return A.encodeX();\n  }\n\n  publicKeyTweakAdd(key, tweak) {\n    const t = this.curve.decodeScalar(tweak);\n\n    if (t.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid scalar.');\n\n    const A = this.curve.decodeEven(key);\n    const T = this.curve.g.jmul(t);\n    const P = T.add(A);\n\n    return P.encodeX();\n  }\n\n  publicKeyTweakMul(key, tweak) {\n    const t = this.curve.decodeScalar(tweak);\n\n    if (t.isZero() || t.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid scalar.');\n\n    const A = this.curve.decodeEven(key);\n    const P = A.mul(t);\n\n    return P.encodeX();\n  }\n\n  publicKeyTweakSum(key, tweak) {\n    const t = this.curve.decodeScalar(tweak);\n\n    if (t.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid scalar.');\n\n    const A = this.curve.decodeEven(key);\n    const T = this.curve.g.jmul(t);\n    const P = T.add(A);\n\n    return [P.encodeX(), P.isOdd()];\n  }\n\n  publicKeyTweakCheck(key, tweak, expect, negated) {\n    assert(Buffer.isBuffer(key));\n    assert(Buffer.isBuffer(tweak));\n    assert(Buffer.isBuffer(expect));\n    assert(typeof negated === 'boolean');\n\n    let point, sign;\n\n    try {\n      [point, sign] = this.publicKeyTweakSum(key, tweak);\n    } catch (e) {\n      return false;\n    }\n\n    return point.equals(expect) && sign === negated;\n  }\n\n  publicKeyCombine(keys) {\n    assert(Array.isArray(keys));\n\n    let P = this.curve.jpoint();\n\n    for (const key of keys) {\n      const A = this.curve.decodeEven(key);\n\n      P = P.add(A);\n    }\n\n    return P.encodeX();\n  }\n\n  sign(msg, key, aux = rng.randomBytes(32)) {\n    assert(Buffer.isBuffer(msg));\n\n    if (aux != null) {\n      assert(Buffer.isBuffer(aux));\n      assert(aux.length === 32);\n    }\n\n    return this._sign(msg, key, aux);\n  }\n\n  _sign(msg, key, aux) {\n    // Schnorr Signing.\n    //\n    // [BIP340] \"Default Signing\".\n    //\n    // Assumptions:\n    //\n    //   - Let `H` be a cryptographic hash function.\n    //   - Let `m` be a 32-byte array.\n    //   - Let `a` be a secret non-zero scalar.\n    //   - Let `d` be a 32-byte array.\n    //   - k != 0.\n    //\n    // Computation:\n    //\n    //   A = G * a\n    //   a = -a mod n, if y(A) is not even\n    //   x = x(A)\n    //   t = a xor H(\"BIP0340/aux\", d)\n    //   k = H(\"BIP0340/nonce\", t, x, m) mod n\n    //   R = G * k\n    //   k = -k mod n, if y(R) is not even\n    //   r = x(R)\n    //   e = H(\"BIP0340/challenge\", r, x, m) mod n\n    //   s = (k + e * a) mod n\n    //   S = (r, s)\n    //\n    // Note that `k` must remain secret,\n    // otherwise an attacker can compute:\n    //\n    //   a = (s - k) / e mod n\n    const {n} = this.curve;\n    const G = this.curve.g;\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const A = G.mulBlind(a);\n\n    if (!A.isEven())\n      a.ineg().imod(n);\n\n    const araw = this.curve.encodeScalar(a);\n    const Araw = A.encodeX();\n    const k = this.hashNonce(araw, Araw, msg, aux);\n\n    if (k.isZero())\n      throw new Error('Signing failed (k\\' = 0).');\n\n    const R = G.mulBlind(k);\n\n    if (!R.isEven())\n      k.ineg().imod(n);\n\n    const Rraw = R.encodeX();\n    const e = this.hashChallenge(Rraw, Araw, msg);\n    const s = k.add(e.mul(a)).imod(n);\n\n    return Buffer.concat([Rraw, this.curve.encodeScalar(s)]);\n  }\n\n  verify(msg, sig, key) {\n    assert(Buffer.isBuffer(msg));\n    assert(Buffer.isBuffer(sig));\n    assert(Buffer.isBuffer(key));\n\n    if (sig.length !== this.curve.fieldSize + this.curve.scalarSize)\n      return false;\n\n    if (key.length !== this.curve.fieldSize)\n      return false;\n\n    try {\n      return this._verify(msg, sig, key);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  _verify(msg, sig, key) {\n    // Schnorr Verification.\n    //\n    // [BIP340] \"Verification\".\n    //\n    // Assumptions:\n    //\n    //   - Let `H` be a cryptographic hash function.\n    //   - Let `m` be a 32-byte array.\n    //   - Let `r` and `s` be signature elements.\n    //   - Let `x` be a field element.\n    //   - r^3 + a * r + b is square in F(p).\n    //   - x^3 + a * x + b is square in F(p).\n    //   - sqrt(r^3 + a * r + b) is even in F(p).\n    //   - sqrt(x^3 + a * x + b) is even in F(p).\n    //   - r < p, s < n, x < p.\n    //   - R != O.\n    //\n    // Computation:\n    //\n    //   R = (r, sqrt(r^3 + a * r + b))\n    //   A = (x, sqrt(x^3 + a * x + b))\n    //   e = H(\"BIP0340/challenge\", r, x, m) mod n\n    //   R == G * s - A * e\n    //\n    // We can skip a square root with:\n    //\n    //   A = (x, sqrt(x^3 + a * x + b))\n    //   e = H(\"BIP0340/challenge\", r, x, m) mod n\n    //   R = G * s - A * e\n    //   y(R) is even\n    //   x(R) == r\n    const {p, n} = this.curve;\n    const G = this.curve.g;\n    const Rraw = sig.slice(0, this.curve.fieldSize);\n    const sraw = sig.slice(this.curve.fieldSize);\n    const r = this.curve.decodeField(Rraw);\n    const s = this.curve.decodeScalar(sraw);\n    const A = this.curve.decodeEven(key);\n\n    if (r.cmp(p) >= 0 || s.cmp(n) >= 0)\n      return false;\n\n    const e = this.hashChallenge(Rraw, key, msg);\n    const R = G.mulAdd(s, A, e.ineg().imod(n));\n\n    if (!R.isEven())\n      return false;\n\n    if (!R.eqX(r))\n      return false;\n\n    return true;\n  }\n\n  verifyBatch(batch) {\n    assert(Array.isArray(batch));\n\n    for (const item of batch) {\n      assert(Array.isArray(item) && item.length === 3);\n\n      const [msg, sig, key] = item;\n\n      assert(Buffer.isBuffer(msg));\n      assert(Buffer.isBuffer(sig));\n      assert(Buffer.isBuffer(key));\n\n      if (sig.length !== this.curve.fieldSize + this.curve.scalarSize)\n        return false;\n\n      if (key.length !== this.curve.fieldSize)\n        return false;\n    }\n\n    try {\n      return this._verifyBatch(batch);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  _verifyBatch(batch) {\n    // Schnorr Batch Verification.\n    //\n    // [BIP340] \"Batch Verification\".\n    //\n    // Assumptions:\n    //\n    //   - Let `H` be a cryptographic hash function.\n    //   - Let `m` be a 32-byte array.\n    //   - Let `r` and `s` be signature elements.\n    //   - Let `x` be a field element.\n    //   - Let `i` be the batch item index.\n    //   - r^3 + a * r + b is square in F(p).\n    //   - x^3 + a * x + b is square in F(p).\n    //   - sqrt(r^3 + a * r + b) is even in F(p).\n    //   - sqrt(x^3 + a * x + b) is even in F(p).\n    //   - r < p, s < n, x < p.\n    //   - a1 = 1 mod n.\n    //\n    // Computation:\n    //\n    //   Ri = (ri, sqrt(ri^3 + a * ri + b))\n    //   Ai = (xi, sqrt(xi^3 + a * xi + b))\n    //   ei = H(\"BIP0340/challenge\", ri, xi, mi) mod n\n    //   ai = random integer in [1,n-1]\n    //   lhs = si * ai + ... mod n\n    //   rhs = Ri * ai + Ai * (ei * ai mod n) + ...\n    //   G * -lhs + rhs == O\n    const {n} = this.curve;\n    const G = this.curve.g;\n    const points = new Array(1 + batch.length * 2);\n    const coeffs = new Array(1 + batch.length * 2);\n    const sum = new BN(0);\n\n    this.rng.init(batch);\n\n    points[0] = G;\n    coeffs[0] = sum;\n\n    for (let i = 0; i < batch.length; i++) {\n      const [msg, sig, key] = batch[i];\n      const Rraw = sig.slice(0, this.curve.fieldSize);\n      const sraw = sig.slice(this.curve.fieldSize);\n      const R = this.curve.decodeEven(Rraw);\n      const s = this.curve.decodeScalar(sraw);\n      const A = this.curve.decodeEven(key);\n\n      if (s.cmp(n) >= 0)\n        return false;\n\n      const e = this.hashChallenge(Rraw, key, msg);\n      const a = this.rng.generate(i);\n      const ea = e.mul(a).imod(n);\n\n      sum.iadd(s.mul(a)).imod(n);\n\n      points[1 + i * 2 + 0] = R;\n      coeffs[1 + i * 2 + 0] = a;\n      points[1 + i * 2 + 1] = A;\n      coeffs[1 + i * 2 + 1] = ea;\n    }\n\n    sum.ineg().imod(n);\n\n    return this.curve.jmulAll(points, coeffs).isInfinity();\n  }\n\n  derive(pub, priv) {\n    const A = this.curve.decodeEven(pub);\n    const a = this.curve.decodeScalar(priv);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const P = A.mulConst(a, rng);\n\n    return P.encodeX();\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction createTag(alg, tag) {\n  // [BIP340] \"Tagged Hashes\".\n  const raw = Buffer.from(tag, 'binary');\n\n  let hash;\n\n  if (alg.size !== alg.blockSize / 2)\n    hash = SHAKE256.digest(raw, alg.blockSize / 2);\n  else\n    hash = alg.digest(raw);\n\n  return Buffer.concat([hash, hash]);\n}\n\n/*\n * Expose\n */\n\nmodule.exports = new Schnorr('SECP256K1', SHA256, pre);\n","/*!\n * scrypt.js - scrypt for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/scrypt');\n","/*!\n * scrypt.js - scrypt for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on Tarsnap/scrypt:\n *   Copyright (c) 2005-2016, Colin Percival. All rights reserved.\n *   Copyright (c) 2005-2016, Tarsnap Backup Inc. All rights reserved.\n *   Copyright (c) 2014, Sean Kelly. All rights reserved.\n *   https://github.com/Tarsnap/scrypt\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Scrypt\n *   http://www.tarsnap.com/scrypt.html\n *   http://www.tarsnap.com/scrypt/scrypt.pdf\n *   https://github.com/Tarsnap/scrypt/blob/master/lib/crypto/crypto_scrypt-ref.c\n */\n\n/* eslint camelcase: \"off\" */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst pbkdf2 = require('../pbkdf2');\nconst SHA256 = require('../sha256');\n\n/*\n * Constants\n */\n\nconst SLAB1 = Buffer.alloc(64);\nconst SLAB2 = new Uint32Array(16);\nconst SLAB3 = new Uint32Array(16);\n\n/**\n * Perform scrypt key derivation.\n * @param {Buffer} passwd\n * @param {Buffer} salt\n * @param {Number} N\n * @param {Number} r\n * @param {Number} p\n * @param {Number} len\n * @returns {Buffer}\n */\n\nfunction derive(passwd, salt, N, r, p, len) {\n  if (typeof passwd === 'string')\n    passwd = Buffer.from(passwd, 'utf8');\n\n  if (typeof salt === 'string')\n    salt = Buffer.from(salt, 'utf8');\n\n  if (salt == null)\n    salt = Buffer.alloc(0);\n\n  assert(Buffer.isBuffer(passwd));\n  assert(Buffer.isBuffer(salt));\n  assert((N >>> 0) === N);\n  assert((r >>> 0) === r);\n  assert((p >>> 0) === p);\n  assert((len >>> 0) === len);\n\n  if (r * p >= (1 << 30))\n    throw new Error('EFBIG');\n\n  if ((N & (N - 1)) !== 0 || N === 0)\n    throw new Error('EINVAL');\n\n  if (N > 0xffffffff)\n    throw new Error('EINVAL');\n\n  const XY = Buffer.alloc(256 * r);\n  const V = Buffer.alloc(128 * r * N);\n  const B = pbkdf2.derive(SHA256, passwd, salt, 1, p * 128 * r);\n\n  for (let i = 0; i < p; i++)\n    smix(B, i * 128 * r, r, N, V, XY);\n\n  clear();\n\n  return pbkdf2.derive(SHA256, passwd, B, 1, len);\n}\n\n/**\n * Perform scrypt key derivation (async).\n * @param {Buffer} passwd\n * @param {Buffer} salt\n * @param {Number} N\n * @param {Number} r\n * @param {Number} p\n * @param {Number} len\n * @returns {Promise}\n */\n\nasync function deriveAsync(passwd, salt, N, r, p, len) {\n  if (typeof passwd === 'string')\n    passwd = Buffer.from(passwd, 'utf8');\n\n  if (typeof salt === 'string')\n    salt = Buffer.from(salt, 'utf8');\n\n  if (salt == null)\n    salt = Buffer.alloc(0);\n\n  assert(Buffer.isBuffer(passwd));\n  assert(Buffer.isBuffer(salt));\n  assert((N >>> 0) === N);\n  assert((r >>> 0) === r);\n  assert((p >>> 0) === p);\n  assert((len >>> 0) === len);\n\n  if (r * p >= (1 << 30))\n    throw new Error('EFBIG');\n\n  if ((N & (N - 1)) !== 0 || N === 0)\n    throw new Error('EINVAL');\n\n  if (N > 0xffffffff)\n    throw new Error('EINVAL');\n\n  const XY = Buffer.alloc(256 * r);\n  const V = Buffer.alloc(128 * r * N);\n  const B = await pbkdf2.deriveAsync(SHA256, passwd, salt, 1, p * 128 * r);\n\n  for (let i = 0; i < p; i++)\n    await smixAsync(B, i * 128 * r, r, N, V, XY);\n\n  clear();\n\n  return pbkdf2.deriveAsync(SHA256, passwd, B, 1, len);\n}\n\n/*\n * Helpers\n */\n\nfunction salsa20_8(B) {\n  const B32 = SLAB2;\n  const X = SLAB3;\n\n  for (let i = 0; i < 16; i++)\n    B32[i] = readU32(B, i * 4);\n\n  for (let i = 0; i < 16; i++)\n    X[i] = B32[i];\n\n  for (let i = 0; i < 8; i += 2) {\n    X[4] ^= R(X[0] + X[12], 7);\n    X[8] ^= R(X[4] + X[0], 9);\n    X[12] ^= R(X[8] + X[4], 13);\n    X[0] ^= R(X[12] + X[8], 18);\n\n    X[9] ^= R(X[5] + X[1], 7);\n    X[13] ^= R(X[9] + X[5], 9);\n    X[1] ^= R(X[13] + X[9], 13);\n    X[5] ^= R(X[1] + X[13], 18);\n\n    X[14] ^= R(X[10] + X[6], 7);\n    X[2] ^= R(X[14] + X[10], 9);\n    X[6] ^= R(X[2] + X[14], 13);\n    X[10] ^= R(X[6] + X[2], 18);\n\n    X[3] ^= R(X[15] + X[11], 7);\n    X[7] ^= R(X[3] + X[15], 9);\n    X[11] ^= R(X[7] + X[3], 13);\n    X[15] ^= R(X[11] + X[7], 18);\n\n    X[1] ^= R(X[0] + X[3], 7);\n    X[2] ^= R(X[1] + X[0], 9);\n    X[3] ^= R(X[2] + X[1], 13);\n    X[0] ^= R(X[3] + X[2], 18);\n\n    X[6] ^= R(X[5] + X[4], 7);\n    X[7] ^= R(X[6] + X[5], 9);\n    X[4] ^= R(X[7] + X[6], 13);\n    X[5] ^= R(X[4] + X[7], 18);\n\n    X[11] ^= R(X[10] + X[9], 7);\n    X[8] ^= R(X[11] + X[10], 9);\n    X[9] ^= R(X[8] + X[11], 13);\n    X[10] ^= R(X[9] + X[8], 18);\n\n    X[12] ^= R(X[15] + X[14], 7);\n    X[13] ^= R(X[12] + X[15], 9);\n    X[14] ^= R(X[13] + X[12], 13);\n    X[15] ^= R(X[14] + X[13], 18);\n  }\n\n  for (let i = 0; i < 16; i++)\n    B32[i] += X[i];\n\n  for (let i = 0; i < 16; i++)\n    writeU32(B, B32[i], 4 * i);\n}\n\nfunction R(a, b) {\n  return (a << b) | (a >>> (32 - b));\n}\n\nfunction blockmix_salsa8(B, Y, Yo, r) {\n  const X = SLAB1;\n\n  blkcpy(X, B, 0, (2 * r - 1) * 64, 64);\n\n  for (let i = 0; i < 2 * r; i++) {\n    blkxor(X, B, 0, i * 64, 64);\n    salsa20_8(X);\n    blkcpy(Y, X, Yo + i * 64, 0, 64);\n  }\n\n  for (let i = 0; i < r; i++)\n    blkcpy(B, Y, i * 64, Yo + (i * 2) * 64, 64);\n\n  for (let i = 0; i < r; i++)\n    blkcpy(B, Y, (i + r) * 64, Yo + (i * 2 + 1) * 64, 64);\n}\n\nfunction integerify(B, r) {\n  return readU32(B, (2 * r - 1) * 64);\n}\n\nfunction smix(B, Bo, r, N, V, XY) {\n  const X = XY;\n  const Y = XY;\n\n  blkcpy(X, B, 0, Bo, 128 * r);\n\n  for (let i = 0; i < N; i++) {\n    blkcpy(V, X, i * (128 * r), 0, 128 * r);\n    blockmix_salsa8(X, Y, 128 * r, r);\n  }\n\n  for (let i = 0; i < N; i++) {\n    const j = integerify(X, r) & (N - 1);\n\n    blkxor(X, V, 0, j * (128 * r), 128 * r);\n    blockmix_salsa8(X, Y, 128 * r, r);\n  }\n\n  blkcpy(B, X, Bo, 0, 128 * r);\n}\n\nasync function smixAsync(B, Bo, r, N, V, XY) {\n  const X = XY;\n  const Y = XY;\n\n  blkcpy(X, B, 0, Bo, 128 * r);\n\n  for (let i = 0; i < N; i++) {\n    blkcpy(V, X, i * (128 * r), 0, 128 * r);\n    blockmix_salsa8(X, Y, 128 * r, r);\n\n    await wait();\n  }\n\n  for (let i = 0; i < N; i++) {\n    const j = integerify(X, r) & (N - 1);\n\n    blkxor(X, V, 0, j * (128 * r), 128 * r);\n    blockmix_salsa8(X, Y, 128 * r, r);\n\n    await wait();\n  }\n\n  blkcpy(B, X, Bo, 0, 128 * r);\n}\n\nfunction blkcpy(dst, src, dstOff, srcOff, len) {\n  src.copy(dst, dstOff, srcOff, srcOff + len);\n}\n\nfunction blkxor(dst, src, dstOff, srcOff, len) {\n  for (let i = 0; i < len; i++)\n    dst[dstOff + i] ^= src[srcOff + i];\n}\n\nfunction wait() {\n  return new Promise(r => setImmediate(r));\n}\n\nfunction clear() {\n  for (let i = 0; i < 64; i++)\n    SLAB1[i] = 0;\n\n  for (let i = 0; i < 16; i++) {\n    SLAB2[i] = 0;\n    SLAB3[i] = 0;\n  }\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.derive = derive;\nexports.deriveAsync = deriveAsync;\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/*!\n * secp256k1.js - secp256k1 for bcrypto\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/secp256k1');\n","/*!\n * secp256k1.js - secp256k1 for bcrypto\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst ECDSA = require('./ecdsa');\nconst SHA256 = require('../sha256');\nconst pre = require('./precomputed/secp256k1.json');\n\n/*\n * Expose\n */\n\nmodule.exports = new ECDSA('SECP256K1', SHA256, SHA256, pre);\n","/*!\n * ssh.js - SSH keys for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://github.com/openssh/openssh-portable/blob/master/cipher.c\n *   https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.key\n */\n\n/* eslint no-prototype-builtins: \"off\" */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst bio = require('bufio');\nconst base64 = require('./encoding/base64');\nconst {padLeft, padRight} = require('./encoding/util');\nconst bcrypt = require('./bcrypt');\nconst cipher = require('./cipher');\nconst random = require('./random');\nconst openssl = require('./encoding/openssl');\nconst {PEMBlock} = require('./encoding/pem');\nconst pemcrypt = require('./encoding/pemcrypt');\nconst pkcs1 = require('./encoding/pkcs1');\nconst sec1 = require('./encoding/sec1');\nconst p256 = require('./p256');\nconst p384 = require('./p384');\nconst p521 = require('./p521');\nconst ed25519 = require('./ed25519');\nconst BN = require('./bn');\n\n/*\n * Constants\n */\n\nconst keyTypes = {\n  DSA: 'ssh-dss',\n  RSA: 'ssh-rsa',\n  P256: 'ecdsa-sha2-nistp256',\n  P384: 'ecdsa-sha2-nistp384',\n  P521: 'ecdsa-sha2-nistp521',\n  ED25519: 'ssh-ed25519'\n};\n\nconst keyTypesByVal = {\n  [keyTypes.DSA]: 'DSA',\n  [keyTypes.RSA]: 'RSA',\n  [keyTypes.P256]: 'P256',\n  [keyTypes.P384]: 'P384',\n  [keyTypes.P521]: 'P521',\n  [keyTypes.ED25519]: 'ED25519'\n};\n\nconst typeToCurve = {\n  [keyTypes.P256]: 'nistp256',\n  [keyTypes.P384]: 'nistp384',\n  [keyTypes.P521]: 'nistp521'\n};\n\nconst cipherInfo = {\n  '3des-cbc': ['DES-EDE3-CBC', 24, 8],\n  'aes128-cbc': ['AES-128-CBC', 16, 16],\n  'aes192-cbc': ['AES-192-CBC', 24, 16],\n  'aes256-cbc': ['AES-256-CBC', 32, 16],\n  'rijndael-cbc@lysator.liu.se': ['AES-256-CBC', 32, 16],\n  'aes128-ctr': ['AES-128-CTR', 16, 16],\n  'aes192-ctr': ['AES-192-CTR', 24, 16],\n  'aes256-ctr': ['AES-256-CTR', 32, 16]\n};\n\nconst AUTH_MAGIC = 'openssh-key-v1';\n\nconst EMPTY = Buffer.alloc(0);\nconst ZERO32 = Buffer.alloc(32, 0x00);\n\n/**\n * SSHPublicKey\n */\n\nclass SSHPublicKey extends bio.Struct {\n  constructor() {\n    super();\n\n    this.type = keyTypes.ED25519;\n\n    // DSA\n    this.p = EMPTY;\n    this.q = EMPTY;\n    this.g = EMPTY;\n    this.y = EMPTY;\n\n    // RSA\n    this.n = EMPTY;\n    this.e = EMPTY;\n\n    // ECDSA / EDDSA\n    this.point = ZERO32;\n\n    // Comment\n    this.comment = '';\n  }\n\n  getCurve() {\n    if (!typeToCurve.hasOwnProperty(this.type))\n      throw new Error('No curve available.');\n\n    return typeToCurve[this.type];\n  }\n\n  getSize() {\n    let size = 0;\n\n    size += sizeString(this.type);\n\n    switch (this.type) {\n      case keyTypes.DSA: {\n        size += sizeBytes(this.p);\n        size += sizeBytes(this.q);\n        size += sizeBytes(this.g);\n        size += sizeBytes(this.y);\n        break;\n      }\n\n      case keyTypes.RSA: {\n        size += sizeBytes(this.e);\n        size += sizeBytes(this.n);\n        break;\n      }\n\n      case keyTypes.P256:\n      case keyTypes.P384:\n      case keyTypes.P521: {\n        size += sizeBytes(this.getCurve());\n        size += sizeBytes(this.point);\n        break;\n      }\n\n      case keyTypes.ED25519: {\n        size += sizeBytes(this.point);\n        break;\n      }\n\n      default: {\n        throw new assert.AssertionError('Invalid key.');\n      }\n    }\n\n    return size;\n  }\n\n  write(bw) {\n    writeString(bw, this.type);\n\n    switch (this.type) {\n      case keyTypes.DSA: {\n        writeBytes(bw, this.p);\n        writeBytes(bw, this.q);\n        writeBytes(bw, this.g);\n        writeBytes(bw, this.y);\n        break;\n      }\n\n      case keyTypes.RSA: {\n        writeBytes(bw, this.e);\n        writeBytes(bw, this.n);\n        break;\n      }\n\n      case keyTypes.P256:\n      case keyTypes.P384:\n      case keyTypes.P521: {\n        writeString(bw, this.getCurve());\n        writeBytes(bw, this.point);\n        break;\n      }\n\n      case keyTypes.ED25519: {\n        writeBytes(bw, this.point);\n        break;\n      }\n\n      default: {\n        throw new assert.AssertionError('Invalid key.');\n      }\n    }\n\n    return bw;\n  }\n\n  read(br) {\n    this.type = readString(br);\n\n    switch (this.type) {\n      case keyTypes.DSA: {\n        this.p = readBytes(br);\n        this.q = readBytes(br);\n        this.g = readBytes(br);\n        this.y = readBytes(br);\n        break;\n      }\n\n      case keyTypes.RSA: {\n        this.e = readBytes(br);\n        this.n = readBytes(br);\n        break;\n      }\n\n      case keyTypes.P256:\n      case keyTypes.P384:\n      case keyTypes.P521: {\n        if (readString(br) !== this.getCurve())\n          throw new Error('Invalid curve prefix.');\n\n        this.point = readBytes(br);\n\n        break;\n      }\n\n      case keyTypes.ED25519: {\n        this.point = readBytes(br);\n        break;\n      }\n\n      default: {\n        throw new Error('Invalid key type.');\n      }\n    }\n\n    return this;\n  }\n\n  toString() {\n    const raw = this.encode();\n\n    let comment = this.comment;\n\n    if (comment.length > 0)\n      comment = ' ' + comment;\n\n    return `${this.type} ${base64.encode(raw)}${comment}`;\n  }\n\n  fromString(str) {\n    assert(typeof str === 'string');\n\n    const parts = str.split(' ', 3);\n\n    if (parts.length < 2)\n      throw new Error('Invalid SSH key text.');\n\n    const [type, rest] = parts;\n\n    if (!keyTypesByVal.hasOwnProperty(type))\n      throw new Error(`Unknown SSH public key type: ${type}.`);\n\n    const data = base64.decode(rest);\n\n    this.decode(data);\n\n    if (this.type !== type)\n      throw new Error('Key type mismatch.');\n\n    if (parts.length > 2)\n      this.comment = parts[2].trim();\n\n    return this;\n  }\n\n  format() {\n    switch (this.type) {\n      case keyTypes.DSA: {\n        return {\n          type: this.type,\n          p: this.p.toString('hex'),\n          q: this.q.toString('hex'),\n          g: this.g.toString('hex'),\n          y: this.y.toString('hex'),\n          comment: this.comment\n        };\n      }\n\n      case keyTypes.RSA: {\n        return {\n          type: this.type,\n          n: this.n.toString('hex'),\n          e: this.e.toString('hex'),\n          comment: this.comment\n        };\n      }\n\n      case keyTypes.P256:\n      case keyTypes.P384:\n      case keyTypes.P521:\n      case keyTypes.ED25519: {\n        return {\n          type: this.type,\n          point: this.point.toString('hex'),\n          comment: this.comment\n        };\n      }\n\n      default: {\n        return this;\n      }\n    }\n  }\n}\n\n/**\n * SSHPrivateKey\n */\n\nclass SSHPrivateKey extends bio.Struct {\n  constructor() {\n    super();\n\n    this.type = keyTypes.ED25519;\n\n    // DSA\n    this.p = EMPTY;\n    this.q = EMPTY;\n    this.g = EMPTY;\n    this.y = EMPTY;\n    this.x = EMPTY;\n\n    // RSA\n    this.n = EMPTY;\n    this.e = EMPTY;\n    this.d = EMPTY;\n    this.p = EMPTY;\n    this.q = EMPTY;\n    this.dp = EMPTY;\n    this.dq = EMPTY;\n    this.qi = EMPTY;\n\n    // ECDSA / EDDSA\n    this.key = ZERO32;\n\n    // Comment\n    this.comment = '';\n    this.modern = false;\n  }\n\n  getCurve() {\n    if (!typeToCurve.hasOwnProperty(this.type))\n      throw new Error('No curve available.');\n\n    return typeToCurve[this.type];\n  }\n\n  encodeSSH(passwd) {\n    assert(passwd == null || typeof passwd === 'string');\n\n    const kdf = new KDFOptions();\n    const pub = new SSHPublicKey();\n    const priv = new RawPrivateKey();\n\n    const bw = bio.write(8192);\n\n    bw.writeString(AUTH_MAGIC);\n    bw.writeU8(0);\n\n    if (passwd != null) {\n      kdf.name = 'bcrypt';\n      kdf.salt = random.randomBytes(16);\n      kdf.rounds = 16;\n\n      writeString(bw, 'aes256-ctr');\n    } else {\n      writeString(bw, 'none');\n    }\n\n    kdf.write(bw);\n\n    writeInt(bw, 1);\n\n    pub.type = this.type;\n\n    writeBytes(bw, pub.encode());\n\n    priv.type = this.type;\n\n    switch (this.type) {\n      case keyTypes.DSA: {\n        priv.p = this.p;\n        priv.q = this.q;\n        priv.g = this.g;\n        priv.y = this.y;\n        priv.x = this.x;\n        break;\n      }\n\n      case keyTypes.RSA: {\n        priv.n = this.n;\n        priv.e = this.e;\n        priv.d = this.d;\n        priv.p = this.p;\n        priv.q = this.q;\n        priv.qi = this.qi;\n        break;\n      }\n\n      case keyTypes.P256: {\n        priv.point = p256.publicKeyCreate(this.key, false);\n        priv.key = this.key;\n        break;\n      }\n\n      case keyTypes.P384: {\n        priv.point = p384.publicKeyCreate(this.key, false);\n        priv.key = this.key;\n        break;\n      }\n\n      case keyTypes.P521: {\n        priv.point = p521.publicKeyCreate(this.key, false);\n        priv.key = this.key;\n        break;\n      }\n\n      case keyTypes.ED25519: {\n        priv.point = ed25519.publicKeyCreate(this.key);\n        priv.key = this.key;\n        break;\n      }\n\n      default: {\n        throw new assert.AssertionError('Invalid key.');\n      }\n    }\n\n    priv.comment = this.comment;\n\n    let raw = priv.encode(passwd != null);\n\n    if (passwd != null)\n      raw = encrypt(raw, 'aes256-ctr', passwd, kdf.salt, kdf.rounds);\n\n    writeBytes(bw, raw);\n\n    return bw.slice();\n  }\n\n  decodeSSH(data, passwd) {\n    const br = bio.read(data);\n    const magic = br.readString(14, 'binary');\n\n    if (magic !== AUTH_MAGIC || br.readU8() !== 0)\n      throw new Error('Invalid magic prefix for SSH key.');\n\n    const cipher = readString(br);\n    const kdf = KDFOptions.read(br);\n\n    if (readInt(br) !== 1)\n      throw new Error('Too many SSH keys.');\n\n    const pubRaw = readBytes(br);\n    const publicKey = SSHPublicKey.decode(pubRaw);\n\n    let privRaw = readBytes(br);\n\n    if (cipher !== 'none') {\n      if (passwd == null)\n        throw new Error('Cannot decrypt without passphrase.');\n\n      if (kdf.name !== 'bcrypt')\n        throw new Error('Invalid KDF.');\n\n      privRaw = decrypt(privRaw, cipher, passwd, kdf.salt, kdf.rounds);\n    }\n\n    const priv = RawPrivateKey.decode(privRaw);\n\n    if (priv.type !== publicKey.type)\n      throw new Error('Public/private mismatch.');\n\n    this.type = publicKey.type;\n\n    switch (this.type) {\n      case keyTypes.DSA: {\n        this.p = priv.p;\n        this.q = priv.q;\n        this.g = priv.g;\n        this.y = priv.y;\n        this.x = priv.x;\n        break;\n      }\n\n      case keyTypes.RSA: {\n        this.n = priv.n;\n        this.e = priv.e;\n        this.d = priv.d;\n        this.p = priv.p;\n        this.q = priv.q;\n        this.qi = priv.qi;\n        break;\n      }\n\n      case keyTypes.P256:\n      case keyTypes.P384:\n      case keyTypes.P521:\n      case keyTypes.ED25519: {\n        this.key = priv.key;\n        break;\n      }\n\n      default: {\n        throw new assert.AssertionError('Invalid key.');\n      }\n    }\n\n    // Recompute dp and dq.\n    if (this.type === keyTypes.RSA) {\n      const p = BN.decode(this.p);\n      const q = BN.decode(this.q);\n      const d = BN.decode(this.d);\n      const dp = d.mod(p.subn(1));\n      const dq = d.mod(q.subn(1));\n\n      this.dp = dp.encode();\n      this.dq = dq.encode();\n    }\n\n    this.comment = priv.comment;\n    this.modern = true;\n\n    return this;\n  }\n\n  encode(passwd) {\n    // Ed25519 can _only_ use the new school encoding.\n    if (this.modern || this.type === keyTypes.ED25519)\n      return this.encodeSSH(passwd);\n\n    switch (this.type) {\n      case keyTypes.DSA: {\n        const key = new openssl.DSAPrivateKey(0,\n          this.p,\n          this.q,\n          this.g,\n          this.y,\n          this.x\n        );\n\n        return key.encode();\n      }\n\n      case keyTypes.RSA: {\n        const key = new pkcs1.RSAPrivateKey(0,\n          this.n,\n          this.e,\n          this.d,\n          this.p,\n          this.q,\n          this.dp,\n          this.dq,\n          this.qi\n        );\n\n        return key.encode();\n      }\n\n      case keyTypes.P256:\n      case keyTypes.P384:\n      case keyTypes.P521: {\n        let curve = null;\n        let pub = null;\n\n        switch (this.type) {\n          case keyTypes.P256:\n            curve = 'P256';\n            pub = p256.publicKeyCreate(this.key, false);\n            break;\n          case keyTypes.P384:\n            curve = 'P384';\n            pub = p384.publicKeyCreate(this.key, false);\n            break;\n          case keyTypes.P521:\n            curve = 'P521';\n            pub = p521.publicKeyCreate(this.key, false);\n            break;\n        }\n\n        const key = new sec1.ECPrivateKey(1, this.key, curve, pub);\n\n        return key.encode();\n      }\n\n      default: {\n        throw new assert.AssertionError('Invalid key.');\n      }\n    }\n  }\n\n  toString(passwd) {\n    const block = new PEMBlock();\n\n    // Ed25519 can _only_ use the new school encoding.\n    if (this.modern || this.type === keyTypes.ED25519) {\n      block.type = 'OPENSSH PRIVATE KEY';\n      block.data = this.encode(passwd);\n      return block.toString();\n    }\n\n    switch (this.type) {\n      case keyTypes.DSA: {\n        block.type = 'DSA PRIVATE KEY';\n        break;\n      }\n\n      case keyTypes.RSA: {\n        block.type = 'RSA PRIVATE KEY';\n        break;\n      }\n\n      case keyTypes.P256:\n      case keyTypes.P384:\n      case keyTypes.P521: {\n        block.type = 'EC PRIVATE KEY';\n        break;\n      }\n\n      default: {\n        throw new assert.AssertionError('Invalid key.');\n      }\n    }\n\n    block.data = this.encode(null);\n\n    if (passwd != null)\n      pemcrypt.encrypt(block, 'AES-128-CBC', passwd);\n\n    return block.toString();\n  }\n\n  fromString(str, passwd) {\n    const block = PEMBlock.fromString(str);\n\n    if (block.isEncrypted()) {\n      if (passwd == null)\n        throw new Error('Private key requires a passphrase.');\n\n      pemcrypt.decrypt(block, passwd);\n    }\n\n    switch (block.type) {\n      case 'DSA PRIVATE KEY': { // OpenSSL PKCS1-like format\n        const key = openssl.DSAPrivateKey.decode(block.data);\n\n        this.type = keyTypes.DSA;\n        this.p = key.p.value;\n        this.q = key.q.value;\n        this.g = key.g.value;\n        this.y = key.y.value;\n        this.x = key.x.value;\n\n        return this;\n      }\n\n      case 'RSA PRIVATE KEY': { // PKCS1\n        const key = pkcs1.RSAPrivateKey.decode(block.data);\n\n        this.type = keyTypes.RSA;\n        this.n = key.n.value;\n        this.e = key.e.value;\n        this.d = key.d.value;\n        this.p = key.p.value;\n        this.q = key.q.value;\n        this.dp = key.dp.value;\n        this.dq = key.dq.value;\n        this.qi = key.qi.value;\n\n        return this;\n      }\n\n      case 'EC PRIVATE KEY': { // SEC1\n        const key = sec1.ECPrivateKey.decode(block.data);\n        const curve = key.namedCurveOID.getCurveName();\n\n        if (!curve)\n          throw new Error(`Unknown curve: ${key.namedCurveOID.toString()}.`);\n\n        let type = null;\n        let size = 0;\n\n        switch (curve) {\n          case 'P256':\n            type = keyTypes.P256;\n            size = 32;\n            break;\n          case 'P384':\n            type = keyTypes.P384;\n            size = 48;\n            break;\n          case 'P521':\n            type = keyTypes.P521;\n            size = 66;\n            break;\n          case 'ED25519':\n            type = keyTypes.ED25519;\n            size = 32;\n            break;\n          default:\n            throw new Error(`Unsupported curve: ${curve}.`);\n        }\n\n        this.type = type;\n        this.key = curve === 'ED25519'\n          ? padRight(key.privateKey.value, size)\n          : padLeft(key.privateKey.value, size);\n\n        return this;\n      }\n\n      case 'OPENSSH PRIVATE KEY': { // OpenSSH format\n        return this.decodeSSH(block.data, passwd);\n      }\n\n      default: {\n        throw new Error(`Unknown private key type: ${block.type}.`);\n      }\n    }\n  }\n\n  format() {\n    switch (this.type) {\n      case keyTypes.DSA: {\n        return {\n          type: this.type,\n          p: this.p.toString('hex'),\n          q: this.q.toString('hex'),\n          g: this.g.toString('hex'),\n          y: this.y.toString('hex'),\n          x: this.x.toString('hex'),\n          comment: this.comment,\n          modern: this.modern\n        };\n      }\n\n      case keyTypes.RSA: {\n        return {\n          type: this.type,\n          n: this.n.toString('hex'),\n          e: this.q.toString('hex'),\n          d: this.d.toString('hex'),\n          p: this.p.toString('hex'),\n          q: this.q.toString('hex'),\n          dp: this.dp.toString('hex'),\n          dq: this.dq.toString('hex'),\n          qi: this.qi.toString('hex'),\n          comment: this.comment,\n          modern: this.modern\n        };\n      }\n\n      case keyTypes.P256:\n      case keyTypes.P384:\n      case keyTypes.P521:\n      case keyTypes.ED25519: {\n        return {\n          type: this.type,\n          key: this.key.toString('hex'),\n          comment: this.comment,\n          modern: this.modern\n        };\n      }\n\n      default: {\n        return this;\n      }\n    }\n  }\n}\n\n/**\n * KDFOptions\n */\n\nclass KDFOptions extends bio.Struct {\n  constructor() {\n    super();\n    this.name = 'none';\n    this.salt = EMPTY;\n    this.rounds = 0;\n  }\n\n  getBodySize() {\n    let size = 0;\n\n    switch (this.name) {\n      case 'none':\n        break;\n      case 'bcrypt':\n        size += sizeBytes(this.salt);\n        size += sizeInt(this.rounds);\n        break;\n      default:\n        throw new Error(`Unknown KDF: ${this.name}.`);\n    }\n\n    return size;\n  }\n\n  getSize() {\n    let size = 0;\n    size += sizeString(this.name);\n    size += sizeInt(0);\n    size += this.getBodySize();\n    return size;\n  }\n\n  write(bw) {\n    writeString(bw, this.name);\n    writeInt(bw, this.getBodySize());\n\n    switch (this.name) {\n      case 'none':\n        break;\n      case 'bcrypt':\n        writeBytes(bw, this.salt);\n        writeInt(bw, this.rounds);\n        break;\n      default:\n        throw new Error(`Unknown KDF: ${this.name}.`);\n    }\n\n    return bw;\n  }\n\n  read(br) {\n    this.name = readString(br);\n\n    const child = readChild(br);\n\n    switch (this.name) {\n      case 'none':\n        break;\n      case 'bcrypt':\n        this.salt = readBytes(child);\n        this.rounds = readInt(child);\n        break;\n      default:\n        throw new Error(`Unknown KDF: ${this.name}.`);\n    }\n\n    return this;\n  }\n}\n\n/**\n * RawPrivateKey\n */\n\nclass RawPrivateKey extends bio.Struct {\n  constructor() {\n    super();\n\n    this.type = keyTypes.ED25519;\n\n    // DSA\n    this.p = EMPTY;\n    this.q = EMPTY;\n    this.g = EMPTY;\n    this.y = EMPTY;\n    this.x = EMPTY;\n\n    // RSA\n    this.n = EMPTY;\n    this.e = EMPTY;\n    this.d = EMPTY;\n    this.p = EMPTY;\n    this.q = EMPTY;\n    this.qi = EMPTY;\n\n    // ECDSA / EDDSA\n    this.point = ZERO32;\n    this.key = ZERO32;\n\n    this.comment = '';\n  }\n\n  getSize(useNonce) {\n    let size = 0;\n\n    size += sizeInt(0);\n    size += sizeInt(0);\n    size += sizeString(this.type);\n\n    switch (this.type) {\n      case keyTypes.DSA: {\n        size += sizeBytes(this.p);\n        size += sizeBytes(this.q);\n        size += sizeBytes(this.g);\n        size += sizeBytes(this.y);\n        size += sizeBytes(this.x);\n        break;\n      }\n\n      case keyTypes.RSA: {\n        size += sizeBytes(this.n);\n        size += sizeBytes(this.e);\n        size += sizeBytes(this.d);\n        size += sizeBytes(this.qi);\n        size += sizeBytes(this.p);\n        size += sizeBytes(this.q);\n        break;\n      }\n\n      case keyTypes.P256:\n      case keyTypes.P384:\n      case keyTypes.P521: {\n        size += sizeString(typeToCurve[this.type]);\n        size += sizeBytes(this.point);\n        size += sizeBytes(this.key);\n        break;\n      }\n\n      case keyTypes.ED25519: {\n        size += sizeBytes(this.point);\n        size += sizeInt(0);\n        size += this.key.length;\n        size += this.point.length;\n        break;\n      }\n\n      default: {\n        throw new Error('Invalid key.');\n      }\n    }\n\n    size += sizeString(this.comment);\n    size += 8 - (size & 7);\n\n    return size;\n  }\n\n  write(bw, useNonce) {\n    const offset = bw.offset;\n\n    let n = 0;\n\n    if (useNonce)\n      n = (Math.random() * 0x100000000) >>> 0;\n\n    writeInt(bw, n);\n    writeInt(bw, n);\n    writeString(bw, this.type);\n\n    switch (this.type) {\n      case keyTypes.DSA: {\n        writeBytes(bw, this.p);\n        writeBytes(bw, this.q);\n        writeBytes(bw, this.g);\n        writeBytes(bw, this.y);\n        writeBytes(bw, this.x);\n        break;\n      }\n\n      case keyTypes.RSA: {\n        writeBytes(bw, this.n);\n        writeBytes(bw, this.e);\n        writeBytes(bw, this.d);\n        writeBytes(bw, this.qi);\n        writeBytes(bw, this.p);\n        writeBytes(bw, this.q);\n        break;\n      }\n\n      case keyTypes.P256:\n      case keyTypes.P384:\n      case keyTypes.P521: {\n        writeString(bw, typeToCurve[this.type]);\n        writeBytes(bw, this.point);\n        writeBytes(bw, this.key);\n        break;\n      }\n\n      case keyTypes.ED25519: {\n        writeBytes(bw, this.point);\n        writeBytes(bw, bio.concat(this.key, this.point));\n        break;\n      }\n\n      default: {\n        throw new Error('Invalid key.');\n      }\n    }\n\n    writeString(bw, this.comment);\n\n    let size = bw.offset - offset;\n    let i = 1;\n\n    while (size & 7) {\n      bw.writeU8(i);\n      size += 1;\n      i += 1;\n    }\n\n    return bw;\n  }\n\n  read(br) {\n    if ((br.left() & 7) !== 0)\n      throw new Error('Invalid padding.');\n\n    if (readInt(br) !== readInt(br))\n      throw new Error('Decryption failed.');\n\n    this.type = readString(br);\n\n    switch (this.type) {\n      case keyTypes.DSA: {\n        this.p = readBytes(br);\n        this.q = readBytes(br);\n        this.g = readBytes(br);\n        this.y = readBytes(br);\n        this.x = readBytes(br);\n        break;\n      }\n\n      case keyTypes.RSA: {\n        this.n = readBytes(br);\n        this.e = readBytes(br);\n        this.d = readBytes(br);\n        this.qi = readBytes(br);\n        this.p = readBytes(br);\n        this.q = readBytes(br);\n        break;\n      }\n\n      case keyTypes.P256:\n      case keyTypes.P384:\n      case keyTypes.P521: {\n        const curve = readString(br);\n\n        if (curve !== typeToCurve[this.type])\n          throw new Error('Invalid curve.');\n\n        this.point = readBytes(br);\n        this.key = readBytes(br);\n\n        if (this.type === keyTypes.P256)\n          this.key = padLeft(this.key, 32);\n        else if (this.type === keyTypes.P384)\n          this.key = padLeft(this.key, 48);\n        else\n          this.key = padLeft(this.key, 66);\n\n        break;\n      }\n\n      case keyTypes.ED25519: {\n        const point = readBytes(br);\n        const blob = readBytes(br);\n\n        if (blob.length !== 64)\n          throw new Error('Invalid key pair.');\n\n        const key = blob.slice(0, 32);\n        const pub = blob.slice(32, 64);\n\n        if (!point.equals(pub))\n          throw new Error('Public key mismatch.');\n\n        this.point = point;\n        this.key = key;\n\n        break;\n      }\n\n      default: {\n        throw new Error('Invalid key.');\n      }\n    }\n\n    this.comment = readString(br);\n\n    const padding = br.readBytes(br.left(), true);\n\n    for (let i = 0; i < padding.length; i++) {\n      if (padding[i] !== i + 1)\n        throw new Error('Invalid padding.');\n    }\n\n    return this;\n  }\n}\n\n/*\n * Encryption\n */\n\nfunction derive(sname, passwd, salt, rounds) {\n  assert(typeof sname === 'string');\n  assert(typeof passwd === 'string');\n  assert(Buffer.isBuffer(salt));\n  assert((rounds >>> 0) === rounds);\n\n  if (!cipherInfo.hasOwnProperty(sname))\n    throw new Error(`Unknown cipher: ${sname}.`);\n\n  const [name, keySize, ivSize] = cipherInfo[sname];\n\n  const size = keySize + ivSize;\n  const secret = bcrypt.pbkdf(passwd, salt, rounds, size);\n\n  const key = secret.slice(0, keySize);\n  const iv = secret.slice(keySize, keySize + ivSize);\n\n  return [name, key, iv];\n}\n\nfunction encrypt(data, sname, passwd, salt, rounds) {\n  const [name, key, iv] = derive(sname, passwd, salt, rounds);\n  return cipher.encrypt(name, key, iv, data);\n}\n\nfunction decrypt(data, sname, passwd, salt, rounds) {\n  const [name, key, iv] = derive(sname, passwd, salt, rounds);\n  return cipher.decrypt(name, key, iv, data);\n}\n\n/*\n * Encoding\n */\n\nfunction readString(br) {\n  return br.readString(br.readU32BE(), 'binary');\n}\n\nfunction readBytes(br) {\n  return br.readBytes(br.readU32BE());\n}\n\nfunction readChild(br) {\n  return br.readChild(br.readU32BE());\n}\n\nfunction readInt(br) {\n  return br.readU32BE();\n}\n\nfunction sizeString(str) {\n  return 4 + str.length;\n}\n\nfunction writeString(bw, str) {\n  bw.writeU32BE(str.length);\n  bw.writeString(str, 'binary');\n  return bw;\n}\n\nfunction sizeBytes(data) {\n  return 4 + data.length;\n}\n\nfunction writeBytes(bw, data) {\n  bw.writeU32BE(data.length);\n  bw.writeBytes(data);\n  return bw;\n}\n\nfunction sizeInt(num) {\n  return 4;\n}\n\nfunction writeInt(bw, num) {\n  bw.writeU32BE(num);\n  return bw;\n}\n\n/*\n * Expose\n */\n\nexports.keyTypes = keyTypes;\nexports.keyTypesByVal = keyTypesByVal;\nexports.SSHPublicKey = SSHPublicKey;\nexports.SSHPrivateKey = SSHPrivateKey;\nexports.KDFOptions = KDFOptions;\nexports.RawPrivateKey = RawPrivateKey;\n","/*!\n * sha3.js - SHA3 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SHA-3\n *   https://keccak.team/specifications.html\n *   https://csrc.nist.gov/projects/hash-functions/sha-3-project/sha-3-standardization\n *   http://dx.doi.org/10.6028/NIST.FIPS.202\n */\n\n'use strict';\n\nconst Keccak = require('./keccak');\n\n/**\n * SHA3\n */\n\nclass SHA3 extends Keccak {\n  constructor() {\n    super();\n  }\n\n  final() {\n    return super.final(0x06, null);\n  }\n\n  static hash() {\n    return new SHA3();\n  }\n\n  static hmac(bits) {\n    return super.hmac(bits, 0x06, null);\n  }\n\n  static digest(data, bits) {\n    return super.digest(data, bits, 0x06, null);\n  }\n\n  static root(left, right, bits) {\n    return super.root(left, right, bits, 0x06, null);\n  }\n\n  static multi(x, y, z, bits) {\n    return super.multi(x, y, z, bits, 0x06, null);\n  }\n\n  static mac(data, key, bits) {\n    return super.mac(data, key, bits, 0x06, null);\n  }\n}\n\n/*\n * Static\n */\n\nSHA3.native = 0;\nSHA3.id = 'SHA3_256';\nSHA3.size = 32;\nSHA3.bits = 256;\nSHA3.blockSize = 136;\nSHA3.zero = Buffer.alloc(32, 0x00);\nSHA3.ctx = new SHA3();\n\n/*\n * Expose\n */\n\nmodule.exports = SHA3;\n","/*!\n * sha3-224.js - sha3-224 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst SHA3 = require('./sha3');\n\n/**\n * SHA3-224\n */\n\nclass SHA3_224 extends SHA3 {\n  constructor() {\n    super();\n  }\n\n  init() {\n    return super.init(224);\n  }\n\n  static hash() {\n    return new SHA3_224();\n  }\n\n  static hmac() {\n    return super.hmac(224);\n  }\n\n  static digest(data) {\n    return super.digest(data, 224);\n  }\n\n  static root(left, right) {\n    return super.root(left, right, 224);\n  }\n\n  static multi(x, y, z) {\n    return super.multi(x, y, z, 224);\n  }\n\n  static mac(data, key) {\n    return super.mac(data, key, 224);\n  }\n}\n\n/*\n * Static\n */\n\nSHA3_224.native = SHA3.native;\nSHA3_224.id = 'SHA3_224';\nSHA3_224.size = 28;\nSHA3_224.bits = 224;\nSHA3_224.blockSize = 144;\nSHA3_224.zero = Buffer.alloc(28, 0x00);\nSHA3_224.ctx = new SHA3_224();\n\n/*\n * Expose\n */\n\nmodule.exports = SHA3_224;\n","/*!\n * sha3-256.js - sha3-256 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst SHA3 = require('./sha3');\n\n/**\n * SHA3-256\n */\n\nclass SHA3_256 extends SHA3 {\n  constructor() {\n    super();\n  }\n\n  init() {\n    return super.init(256);\n  }\n\n  static hash() {\n    return new SHA3_256();\n  }\n\n  static hmac() {\n    return super.hmac(256);\n  }\n\n  static digest(data) {\n    return super.digest(data, 256);\n  }\n\n  static root(left, right) {\n    return super.root(left, right, 256);\n  }\n\n  static multi(x, y, z) {\n    return super.multi(x, y, z, 256);\n  }\n\n  static mac(data, key) {\n    return super.mac(data, key, 256);\n  }\n}\n\n/*\n * Static\n */\n\nSHA3_256.native = SHA3.native;\nSHA3_256.id = 'SHA3_256';\nSHA3_256.size = 32;\nSHA3_256.bits = 256;\nSHA3_256.blockSize = 136;\nSHA3_256.zero = Buffer.alloc(32, 0x00);\nSHA3_256.ctx = new SHA3_256();\n\n/*\n * Expose\n */\n\nmodule.exports = SHA3_256;\n","/*!\n * sha3-384.js - sha3-384 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst SHA3 = require('./sha3');\n\n/**\n * SHA3-384\n */\n\nclass SHA3_384 extends SHA3 {\n  constructor() {\n    super();\n  }\n\n  init() {\n    return super.init(384);\n  }\n\n  static hash() {\n    return new SHA3_384();\n  }\n\n  static hmac() {\n    return super.hmac(384);\n  }\n\n  static digest(data) {\n    return super.digest(data, 384);\n  }\n\n  static root(left, right) {\n    return super.root(left, right, 384);\n  }\n\n  static multi(x, y, z) {\n    return super.multi(x, y, z, 384);\n  }\n\n  static mac(data, key) {\n    return super.mac(data, key, 384);\n  }\n}\n\n/*\n * Static\n */\n\nSHA3_384.native = SHA3.native;\nSHA3_384.id = 'SHA3_384';\nSHA3_384.size = 48;\nSHA3_384.bits = 384;\nSHA3_384.blockSize = 104;\nSHA3_384.zero = Buffer.alloc(48, 0x00);\nSHA3_384.ctx = new SHA3_384();\n\n/*\n * Expose\n */\n\nmodule.exports = SHA3_384;\n","/*!\n * sha3-512.js - sha3-512 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst SHA3 = require('./sha3');\n\n/**\n * SHA3-512\n */\n\nclass SHA3_512 extends SHA3 {\n  constructor() {\n    super();\n  }\n\n  init() {\n    return super.init(512);\n  }\n\n  static hash() {\n    return new SHA3_512();\n  }\n\n  static hmac() {\n    return super.hmac(512);\n  }\n\n  static digest(data) {\n    return super.digest(data, 512);\n  }\n\n  static root(left, right) {\n    return super.root(left, right, 512);\n  }\n\n  static multi(x, y, z) {\n    return super.multi(x, y, z, 512);\n  }\n\n  static mac(data, key) {\n    return super.mac(data, key, 512);\n  }\n}\n\n/*\n * Static\n */\n\nSHA3_512.native = SHA3.native;\nSHA3_512.id = 'SHA3_512';\nSHA3_512.size = 64;\nSHA3_512.bits = 512;\nSHA3_512.blockSize = 72;\nSHA3_512.zero = Buffer.alloc(64, 0x00);\nSHA3_512.ctx = new SHA3_512();\n\n/*\n * Expose\n */\n\nmodule.exports = SHA3_512;\n","/*!\n * shake128.js - SHAKE128 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst SHAKE = require('./shake');\n\n/**\n * SHAKE128\n */\n\nclass SHAKE128 extends SHAKE {\n  constructor() {\n    super();\n  }\n\n  init() {\n    return super.init(128);\n  }\n\n  static hash() {\n    return new SHAKE128();\n  }\n\n  static hmac(len) {\n    return super.hmac(128, len);\n  }\n\n  static digest(data, len) {\n    return super.digest(data, 128, len);\n  }\n\n  static root(left, right, len) {\n    return super.root(left, right, 128, len);\n  }\n\n  static multi(x, y, z, len) {\n    return super.multi(x, y, z, 128, len);\n  }\n\n  static mac(data, key, len) {\n    return super.mac(data, key, 128, len);\n  }\n}\n\n/*\n * Static\n */\n\nSHAKE128.native = SHAKE.native;\nSHAKE128.id = 'SHAKE128';\nSHAKE128.size = 16;\nSHAKE128.bits = 128;\nSHAKE128.blockSize = 168;\nSHAKE128.zero = Buffer.alloc(16, 0x00);\nSHAKE128.ctx = new SHAKE128();\n\n/*\n * Expose\n */\n\nmodule.exports = SHAKE128;\n","/*!\n * siphash.js - siphash for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/siphash');\n","/*!\n * siphash.js - siphash for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on bitcoin/bitcoin:\n *   Copyright (c) 2009-2019, The Bitcoin Core Developers (MIT License).\n *   Copyright (c) 2009-2019, The Bitcoin Developers (MIT License).\n *   https://github.com/bitcoin/bitcoin\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SipHash\n *   https://131002.net/siphash/\n *   https://131002.net/siphash/siphash.pdf\n *   https://github.com/bitcoin/bitcoin/blob/master/src/crypto/siphash.cpp\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * Constants\n */\n\nconst HI = 1 / 0x100000000;\n\n/**\n * Javascript siphash 2-4 implementation.\n * @private\n * @param {Buffer} data\n * @param {Buffer} key - 128 bit key.\n * @returns {Array} [hi, lo]\n */\n\nfunction _siphash(data, key) {\n  assert(Buffer.isBuffer(data));\n  assert(Buffer.isBuffer(key) && key.length >= 16);\n\n  const blocks = data.length >>> 3;\n  const c0 = new U64(0x736f6d65, 0x70736575);\n  const c1 = new U64(0x646f7261, 0x6e646f6d);\n  const c2 = new U64(0x6c796765, 0x6e657261);\n  const c3 = new U64(0x74656462, 0x79746573);\n  const f0 = new U64(data.length << 24, 0);\n  const f1 = new U64(0, 0xff);\n  const k0 = U64.decode(key, 0);\n  const k1 = U64.decode(key, 8);\n\n  // Init.\n  const v0 = c0.ixor(k0);\n  const v1 = c1.ixor(k1);\n  const v2 = c2.ixor(k0);\n  const v3 = c3.ixor(k1);\n\n  // Blocks.\n  let p = 0;\n\n  for (let i = 0; i < blocks; i++) {\n    const d = U64.decode(data, p);\n\n    v3.ixor(d);\n    sipround(v0, v1, v2, v3);\n    sipround(v0, v1, v2, v3);\n    v0.ixor(d);\n\n    p += 8;\n  }\n\n  // Trailing.\n  switch (data.length & 7) {\n    case 7:\n      f0.hi |= data[p + 6] << 16;\n    case 6:\n      f0.hi |= data[p + 5] << 8;\n    case 5:\n      f0.hi |= data[p + 4];\n    case 4:\n      f0.lo |= data[p + 3] << 24;\n    case 3:\n      f0.lo |= data[p + 2] << 16;\n    case 2:\n      f0.lo |= data[p + 1] << 8;\n    case 1:\n      f0.lo |= data[p];\n  }\n\n  // Finalization.\n  v3.ixor(f0);\n  sipround(v0, v1, v2, v3);\n  sipround(v0, v1, v2, v3);\n  v0.ixor(f0);\n  v2.ixor(f1);\n  sipround(v0, v1, v2, v3);\n  sipround(v0, v1, v2, v3);\n  sipround(v0, v1, v2, v3);\n  sipround(v0, v1, v2, v3);\n  v0.ixor(v1);\n  v0.ixor(v2);\n  v0.ixor(v3);\n\n  return [v0.hi, v0.lo];\n}\n\n/**\n * Javascript siphash 2-4 implementation (64 bit ints).\n * @private\n * @param {Number} hi\n * @param {Number} lo\n * @param {Buffer} key - 128 bit key.\n * @returns {Array} [hi, lo]\n */\n\nfunction _siphash64(hi, lo, key) {\n  assert(typeof hi === 'number');\n  assert(typeof lo === 'number');\n  assert(Buffer.isBuffer(key) && key.length >= 16);\n\n  const c0 = new U64(0x736f6d65, 0x70736575);\n  const c1 = new U64(0x646f7261, 0x6e646f6d);\n  const c2 = new U64(0x6c796765, 0x6e657261);\n  const c3 = new U64(0x74656462, 0x79746573);\n  const f0 = new U64(hi, lo);\n  const f1 = new U64(0, 0xff);\n  const k0 = U64.decode(key, 0);\n  const k1 = U64.decode(key, 8);\n\n  // Init.\n  const v0 = c0.ixor(k0);\n  const v1 = c1.ixor(k1);\n  const v2 = c2.ixor(k0);\n  const v3 = c3.ixor(k1);\n\n  // Finalization.\n  v3.ixor(f0);\n  sipround(v0, v1, v2, v3);\n  sipround(v0, v1, v2, v3);\n  v0.ixor(f0);\n  v2.ixor(f1);\n  sipround(v0, v1, v2, v3);\n  sipround(v0, v1, v2, v3);\n  sipround(v0, v1, v2, v3);\n  sipround(v0, v1, v2, v3);\n  v0.ixor(v1);\n  v0.ixor(v2);\n  v0.ixor(v3);\n\n  return [v0.hi, v0.lo];\n}\n\n/**\n * Javascript siphash 2-4 implementation\n * (64 bit ints with a 256 bit key).\n * @private\n * @param {Number} hi\n * @param {Number} lo\n * @param {Buffer} key - 128 bit key.\n * @returns {Array} [hi, lo]\n */\n\nfunction _siphash64k256(hi, lo, key) {\n  assert(typeof hi === 'number');\n  assert(typeof lo === 'number');\n  assert(Buffer.isBuffer(key) && key.length >= 32);\n\n  const f0 = new U64(hi, lo);\n  const f1 = new U64(0, 0xff);\n  const k0 = U64.decode(key, 0);\n  const k1 = U64.decode(key, 8);\n  const k2 = U64.decode(key, 16);\n  const k3 = U64.decode(key, 24);\n\n  // Init.\n  const v0 = k0;\n  const v1 = k1;\n  const v2 = k2;\n  const v3 = k3;\n\n  // Finalization.\n  v3.ixor(f0);\n  sipround(v0, v1, v2, v3);\n  sipround(v0, v1, v2, v3);\n  v0.ixor(f0);\n  v2.ixor(f1);\n  sipround(v0, v1, v2, v3);\n  sipround(v0, v1, v2, v3);\n  sipround(v0, v1, v2, v3);\n  sipround(v0, v1, v2, v3);\n  v0.ixor(v1);\n  v0.ixor(v2);\n  v0.ixor(v3);\n\n  return [v0.hi, v0.lo];\n}\n\n/**\n * Javascript siphash 2-4 implementation.\n * Used by bitcoin for compact block relay.\n * @param {Buffer} data\n * @param {Buffer} key - 128 bit key.\n * @returns {Array} [hi, lo]\n */\n\nfunction siphash(data, key) {\n  return _siphash(data, key);\n}\n\n/**\n * Javascript siphash 2-4 implementation (32 bit ints).\n * Used by legacy cuckoo cycle.\n * @param {Number} num\n * @param {Buffer} key - 128 bit key.\n * @returns {Number}\n */\n\nfunction siphash32(num, key) {\n  return _siphash64(0, num, key)[1];\n}\n\n/**\n * Javascript siphash 2-4 implementation (64 bit ints).\n * Used by legacy cuckoo cycle.\n * @param {Number} hi\n * @param {Number} lo\n * @param {Buffer} key - 128 bit key.\n * @returns {Array} [hi, lo]\n */\n\nfunction siphash64(hi, lo, key) {\n  return _siphash64(hi, lo, key);\n}\n\n/**\n * Javascript siphash 2-4 implementation\n * (32 bit ints with a 256 bit key).\n * Used by cuckoo cycle.\n * @param {Number} num\n * @param {Buffer} key - 256 bit key.\n * @returns {Number}\n */\n\nfunction siphash32k256(num, key) {\n  return _siphash64k256(0, num, key)[1];\n}\n\n/**\n * Javascript siphash 2-4 implementation\n * (64 bit ints with a 256 bit key).\n * Used by cuckoo cycle.\n * @param {Number} hi\n * @param {Number} lo\n * @param {Buffer} key - 256 bit key.\n * @returns {Array} [hi, lo]\n */\n\nfunction siphash64k256(hi, lo, key) {\n  return _siphash64k256(hi, lo, key);\n}\n\n/**\n * Javascript siphash 2-4 implementation\n * plus 128 bit reduction by a modulus.\n * Used by the neutrino protocol.\n * @param {Buffer} data\n * @param {Buffer} key - 128 bit key.\n * @param {Number} mhi - Modulus hi bits.\n * @param {Number} mlo - Modulus lo bits.\n * @returns {Array} [hi, lo]\n */\n\nfunction sipmod(data, key, mhi, mlo) {\n  const [hi, lo] = _siphash(data, key);\n  return reduce64(hi, lo, mhi, mlo);\n}\n\n/**\n * U64\n * @ignore\n */\n\nclass U64 {\n  constructor(hi, lo) {\n    this.hi = hi | 0;\n    this.lo = lo | 0;\n  }\n\n  isum(bhi, blo) {\n    // Credit to @indutny for this method.\n    const a = this;\n    const lo = (a.lo + blo) | 0;\n    const s = lo >> 31;\n    const as = a.lo >> 31;\n    const bs = blo >> 31;\n    const c = ((as & bs) | (~s & (as ^ bs))) & 1;\n    const hi = ((a.hi + bhi) | 0) + c;\n\n    a.hi = hi | 0;\n    a.lo = lo;\n\n    return a;\n  }\n\n  iadd(b) {\n    return this.isum(b.hi, b.lo);\n  }\n\n  ixor(b) {\n    this.hi ^= b.hi;\n    this.lo ^= b.lo;\n    return this;\n  }\n\n  irotl(bits) {\n    let ahi = this.hi;\n    let alo = this.lo;\n    let bhi = this.hi;\n    let blo = this.lo;\n\n    // a = x << b\n    if (bits < 32) {\n      ahi <<= bits;\n      ahi |= alo >>> (32 - bits);\n      alo <<= bits;\n    } else {\n      ahi = alo << (bits - 32);\n      alo = 0;\n    }\n\n    bits = 64 - bits;\n\n    // b = x >> (64 - b)\n    if (bits < 32) {\n      blo >>>= bits;\n      blo |= bhi << (32 - bits);\n      bhi >>>= bits;\n    } else {\n      blo = bhi >>> (bits - 32);\n      bhi = 0;\n    }\n\n    // a | b\n    this.hi = ahi | bhi;\n    this.lo = alo | blo;\n\n    return this;\n  }\n\n  static mul(alo, blo) {\n    // u32 * u32 = u64\n    const a16 = alo >>> 16;\n    const a00 = alo & 0xffff;\n    const b16 = blo >>> 16;\n    const b00 = blo & 0xffff;\n\n    let c48 = 0;\n    let c32 = 0;\n    let c16 = 0;\n    let c00 = 0;\n\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xffff;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c48 += c32 >>> 16;\n    c48 &= 0xffff;\n\n    const hi = (c48 << 16) | c32;\n    const lo = (c16 << 16) | c00;\n\n    return new U64(hi, lo);\n  }\n\n  static decode(data, off) {\n    const lo = readU32(data, off);\n    const hi = readU32(data, off + 4);\n\n    return new U64(hi, lo);\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction sipround(v0, v1, v2, v3) {\n  v0.iadd(v1);\n  v1.irotl(13);\n  v1.ixor(v0);\n\n  v0.irotl(32);\n\n  v2.iadd(v3);\n  v3.irotl(16);\n  v3.ixor(v2);\n\n  v0.iadd(v3);\n  v3.irotl(21);\n  v3.ixor(v0);\n\n  v2.iadd(v1);\n  v1.irotl(17);\n  v1.ixor(v2);\n\n  v2.irotl(32);\n}\n\nfunction reduce64(ahi, alo, bhi, blo) {\n  // Compute `((uint128_t)a * b) >> 64`.\n  // Start with 4 32->64 bit multiplications.\n  const axbhi = U64.mul(ahi, bhi);\n  const axbmid = U64.mul(ahi, blo);\n  const bxamid = U64.mul(bhi, alo);\n  const axblo = U64.mul(alo, blo);\n\n  // We can safely overflow in these next steps.\n  // c = (axbmid & 0xffffffff) + (bxamid & 0xffffffff) + (axblo >> 32)\n  const c = (axbmid.lo >>> 0) + (bxamid.lo >>> 0) + (axblo.hi >>> 0);\n\n  // m = (axbmid >> 32) + (bxamid >> 32) + (c >> 32)\n  const m = (axbmid.hi >>> 0) + (bxamid.hi >>> 0) + ((c * HI) >>> 0);\n\n  // axbhi + m\n  const {hi, lo} = axbhi.isum((m * HI) | 0, m | 0);\n\n  return [hi, lo];\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.siphash = siphash;\nexports.siphash32 = siphash32;\nexports.siphash64 = siphash64;\nexports.siphash32k256 = siphash32k256;\nexports.siphash64k256 = siphash64k256;\nexports.sipmod = sipmod;\n","/*!\n * whirlpool.js - whirlpool for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/whirlpool');\n","/*!\n * whirlpool.js - Whirlpool implementation for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on RustCrypto/hashes:\n *   Copyright (c) 2016-2018, The RustCrypto Authors (MIT License).\n *   https://github.com/RustCrypto/hashes\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Whirlpool_(hash_function)\n *   https://www.iso.org/standard/39876.html\n *   https://github.com/jzelinskie/whirlpool/blob/master/whirlpool.go\n *   https://github.com/RustCrypto/hashes/blob/master/whirlpool/src/consts.rs\n *   https://github.com/RustCrypto/hashes/blob/master/whirlpool/src/lib.rs\n *   https://github.com/RustCrypto/hashes/blob/master/whirlpool/src/utils.rs\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst HMAC = require('../internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = -1;\nconst DESC = Buffer.alloc(32, 0x00);\nconst PADDING = Buffer.alloc(64, 0x00);\n\nPADDING[0] = 0x80;\n\nconst RC = new Uint32Array([\n  0x00000000, 0x00000000,\n  0x1823c6e8, 0x87b8014f,\n  0x36a6d2f5, 0x796f9152,\n  0x60bc9b8e, 0xa30c7b35,\n  0x1de0d7c2, 0x2e4bfe57,\n  0x157737e5, 0x9ff04ada,\n  0x58c9290a, 0xb1a06b85,\n  0xbd5d10f4, 0xcb3e0567,\n  0xe427418b, 0xa77d95d8,\n  0xfbee7c66, 0xdd17479e,\n  0xca2dbf07, 0xad5a8333\n]);\n\nconst C0 = new Uint32Array([\n  0x18186018, 0xc07830d8, 0x23238c23, 0x05af4626,\n  0xc6c63fc6, 0x7ef991b8, 0xe8e887e8, 0x136fcdfb,\n  0x87872687, 0x4ca113cb, 0xb8b8dab8, 0xa9626d11,\n  0x01010401, 0x08050209, 0x4f4f214f, 0x426e9e0d,\n  0x3636d836, 0xadee6c9b, 0xa6a6a2a6, 0x590451ff,\n  0xd2d26fd2, 0xdebdb90c, 0xf5f5f3f5, 0xfb06f70e,\n  0x7979f979, 0xef80f296, 0x6f6fa16f, 0x5fcede30,\n  0x91917e91, 0xfcef3f6d, 0x52525552, 0xaa07a4f8,\n  0x60609d60, 0x27fdc047, 0xbcbccabc, 0x89766535,\n  0x9b9b569b, 0xaccd2b37, 0x8e8e028e, 0x048c018a,\n  0xa3a3b6a3, 0x71155bd2, 0x0c0c300c, 0x603c186c,\n  0x7b7bf17b, 0xff8af684, 0x3535d435, 0xb5e16a80,\n  0x1d1d741d, 0xe8693af5, 0xe0e0a7e0, 0x5347ddb3,\n  0xd7d77bd7, 0xf6acb321, 0xc2c22fc2, 0x5eed999c,\n  0x2e2eb82e, 0x6d965c43, 0x4b4b314b, 0x627a9629,\n  0xfefedffe, 0xa321e15d, 0x57574157, 0x8216aed5,\n  0x15155415, 0xa8412abd, 0x7777c177, 0x9fb6eee8,\n  0x3737dc37, 0xa5eb6e92, 0xe5e5b3e5, 0x7b56d79e,\n  0x9f9f469f, 0x8cd92313, 0xf0f0e7f0, 0xd317fd23,\n  0x4a4a354a, 0x6a7f9420, 0xdada4fda, 0x9e95a944,\n  0x58587d58, 0xfa25b0a2, 0xc9c903c9, 0x06ca8fcf,\n  0x2929a429, 0x558d527c, 0x0a0a280a, 0x5022145a,\n  0xb1b1feb1, 0xe14f7f50, 0xa0a0baa0, 0x691a5dc9,\n  0x6b6bb16b, 0x7fdad614, 0x85852e85, 0x5cab17d9,\n  0xbdbdcebd, 0x8173673c, 0x5d5d695d, 0xd234ba8f,\n  0x10104010, 0x80502090, 0xf4f4f7f4, 0xf303f507,\n  0xcbcb0bcb, 0x16c08bdd, 0x3e3ef83e, 0xedc67cd3,\n  0x05051405, 0x28110a2d, 0x67678167, 0x1fe6ce78,\n  0xe4e4b7e4, 0x7353d597, 0x27279c27, 0x25bb4e02,\n  0x41411941, 0x32588273, 0x8b8b168b, 0x2c9d0ba7,\n  0xa7a7a6a7, 0x510153f6, 0x7d7de97d, 0xcf94fab2,\n  0x95956e95, 0xdcfb3749, 0xd8d847d8, 0x8e9fad56,\n  0xfbfbcbfb, 0x8b30eb70, 0xeeee9fee, 0x2371c1cd,\n  0x7c7ced7c, 0xc791f8bb, 0x66668566, 0x17e3cc71,\n  0xdddd53dd, 0xa68ea77b, 0x17175c17, 0xb84b2eaf,\n  0x47470147, 0x02468e45, 0x9e9e429e, 0x84dc211a,\n  0xcaca0fca, 0x1ec589d4, 0x2d2db42d, 0x75995a58,\n  0xbfbfc6bf, 0x9179632e, 0x07071c07, 0x381b0e3f,\n  0xadad8ead, 0x012347ac, 0x5a5a755a, 0xea2fb4b0,\n  0x83833683, 0x6cb51bef, 0x3333cc33, 0x85ff66b6,\n  0x63639163, 0x3ff2c65c, 0x02020802, 0x100a0412,\n  0xaaaa92aa, 0x39384993, 0x7171d971, 0xafa8e2de,\n  0xc8c807c8, 0x0ecf8dc6, 0x19196419, 0xc87d32d1,\n  0x49493949, 0x7270923b, 0xd9d943d9, 0x869aaf5f,\n  0xf2f2eff2, 0xc31df931, 0xe3e3abe3, 0x4b48dba8,\n  0x5b5b715b, 0xe22ab6b9, 0x88881a88, 0x34920dbc,\n  0x9a9a529a, 0xa4c8293e, 0x26269826, 0x2dbe4c0b,\n  0x3232c832, 0x8dfa64bf, 0xb0b0fab0, 0xe94a7d59,\n  0xe9e983e9, 0x1b6acff2, 0x0f0f3c0f, 0x78331e77,\n  0xd5d573d5, 0xe6a6b733, 0x80803a80, 0x74ba1df4,\n  0xbebec2be, 0x997c6127, 0xcdcd13cd, 0x26de87eb,\n  0x3434d034, 0xbde46889, 0x48483d48, 0x7a759032,\n  0xffffdbff, 0xab24e354, 0x7a7af57a, 0xf78ff48d,\n  0x90907a90, 0xf4ea3d64, 0x5f5f615f, 0xc23ebe9d,\n  0x20208020, 0x1da0403d, 0x6868bd68, 0x67d5d00f,\n  0x1a1a681a, 0xd07234ca, 0xaeae82ae, 0x192c41b7,\n  0xb4b4eab4, 0xc95e757d, 0x54544d54, 0x9a19a8ce,\n  0x93937693, 0xece53b7f, 0x22228822, 0x0daa442f,\n  0x64648d64, 0x07e9c863, 0xf1f1e3f1, 0xdb12ff2a,\n  0x7373d173, 0xbfa2e6cc, 0x12124812, 0x905a2482,\n  0x40401d40, 0x3a5d807a, 0x08082008, 0x40281048,\n  0xc3c32bc3, 0x56e89b95, 0xecec97ec, 0x337bc5df,\n  0xdbdb4bdb, 0x9690ab4d, 0xa1a1bea1, 0x611f5fc0,\n  0x8d8d0e8d, 0x1c830791, 0x3d3df43d, 0xf5c97ac8,\n  0x97976697, 0xccf1335b, 0x00000000, 0x00000000,\n  0xcfcf1bcf, 0x36d483f9, 0x2b2bac2b, 0x4587566e,\n  0x7676c576, 0x97b3ece1, 0x82823282, 0x64b019e6,\n  0xd6d67fd6, 0xfea9b128, 0x1b1b6c1b, 0xd87736c3,\n  0xb5b5eeb5, 0xc15b7774, 0xafaf86af, 0x112943be,\n  0x6a6ab56a, 0x77dfd41d, 0x50505d50, 0xba0da0ea,\n  0x45450945, 0x124c8a57, 0xf3f3ebf3, 0xcb18fb38,\n  0x3030c030, 0x9df060ad, 0xefef9bef, 0x2b74c3c4,\n  0x3f3ffc3f, 0xe5c37eda, 0x55554955, 0x921caac7,\n  0xa2a2b2a2, 0x791059db, 0xeaea8fea, 0x0365c9e9,\n  0x65658965, 0x0fecca6a, 0xbabad2ba, 0xb9686903,\n  0x2f2fbc2f, 0x65935e4a, 0xc0c027c0, 0x4ee79d8e,\n  0xdede5fde, 0xbe81a160, 0x1c1c701c, 0xe06c38fc,\n  0xfdfdd3fd, 0xbb2ee746, 0x4d4d294d, 0x52649a1f,\n  0x92927292, 0xe4e03976, 0x7575c975, 0x8fbceafa,\n  0x06061806, 0x301e0c36, 0x8a8a128a, 0x249809ae,\n  0xb2b2f2b2, 0xf940794b, 0xe6e6bfe6, 0x6359d185,\n  0x0e0e380e, 0x70361c7e, 0x1f1f7c1f, 0xf8633ee7,\n  0x62629562, 0x37f7c455, 0xd4d477d4, 0xeea3b53a,\n  0xa8a89aa8, 0x29324d81, 0x96966296, 0xc4f43152,\n  0xf9f9c3f9, 0x9b3aef62, 0xc5c533c5, 0x66f697a3,\n  0x25259425, 0x35b14a10, 0x59597959, 0xf220b2ab,\n  0x84842a84, 0x54ae15d0, 0x7272d572, 0xb7a7e4c5,\n  0x3939e439, 0xd5dd72ec, 0x4c4c2d4c, 0x5a619816,\n  0x5e5e655e, 0xca3bbc94, 0x7878fd78, 0xe785f09f,\n  0x3838e038, 0xddd870e5, 0x8c8c0a8c, 0x14860598,\n  0xd1d163d1, 0xc6b2bf17, 0xa5a5aea5, 0x410b57e4,\n  0xe2e2afe2, 0x434dd9a1, 0x61619961, 0x2ff8c24e,\n  0xb3b3f6b3, 0xf1457b42, 0x21218421, 0x15a54234,\n  0x9c9c4a9c, 0x94d62508, 0x1e1e781e, 0xf0663cee,\n  0x43431143, 0x22528661, 0xc7c73bc7, 0x76fc93b1,\n  0xfcfcd7fc, 0xb32be54f, 0x04041004, 0x20140824,\n  0x51515951, 0xb208a2e3, 0x99995e99, 0xbcc72f25,\n  0x6d6da96d, 0x4fc4da22, 0x0d0d340d, 0x68391a65,\n  0xfafacffa, 0x8335e979, 0xdfdf5bdf, 0xb684a369,\n  0x7e7ee57e, 0xd79bfca9, 0x24249024, 0x3db44819,\n  0x3b3bec3b, 0xc5d776fe, 0xabab96ab, 0x313d4b9a,\n  0xcece1fce, 0x3ed181f0, 0x11114411, 0x88552299,\n  0x8f8f068f, 0x0c890383, 0x4e4e254e, 0x4a6b9c04,\n  0xb7b7e6b7, 0xd1517366, 0xebeb8beb, 0x0b60cbe0,\n  0x3c3cf03c, 0xfdcc78c1, 0x81813e81, 0x7cbf1ffd,\n  0x94946a94, 0xd4fe3540, 0xf7f7fbf7, 0xeb0cf31c,\n  0xb9b9deb9, 0xa1676f18, 0x13134c13, 0x985f268b,\n  0x2c2cb02c, 0x7d9c5851, 0xd3d36bd3, 0xd6b8bb05,\n  0xe7e7bbe7, 0x6b5cd38c, 0x6e6ea56e, 0x57cbdc39,\n  0xc4c437c4, 0x6ef395aa, 0x03030c03, 0x180f061b,\n  0x56564556, 0x8a13acdc, 0x44440d44, 0x1a49885e,\n  0x7f7fe17f, 0xdf9efea0, 0xa9a99ea9, 0x21374f88,\n  0x2a2aa82a, 0x4d825467, 0xbbbbd6bb, 0xb16d6b0a,\n  0xc1c123c1, 0x46e29f87, 0x53535153, 0xa202a6f1,\n  0xdcdc57dc, 0xae8ba572, 0x0b0b2c0b, 0x58271653,\n  0x9d9d4e9d, 0x9cd32701, 0x6c6cad6c, 0x47c1d82b,\n  0x3131c431, 0x95f562a4, 0x7474cd74, 0x87b9e8f3,\n  0xf6f6fff6, 0xe309f115, 0x46460546, 0x0a438c4c,\n  0xacac8aac, 0x092645a5, 0x89891e89, 0x3c970fb5,\n  0x14145014, 0xa04428b4, 0xe1e1a3e1, 0x5b42dfba,\n  0x16165816, 0xb04e2ca6, 0x3a3ae83a, 0xcdd274f7,\n  0x6969b969, 0x6fd0d206, 0x09092409, 0x482d1241,\n  0x7070dd70, 0xa7ade0d7, 0xb6b6e2b6, 0xd954716f,\n  0xd0d067d0, 0xceb7bd1e, 0xeded93ed, 0x3b7ec7d6,\n  0xcccc17cc, 0x2edb85e2, 0x42421542, 0x2a578468,\n  0x98985a98, 0xb4c22d2c, 0xa4a4aaa4, 0x490e55ed,\n  0x2828a028, 0x5d885075, 0x5c5c6d5c, 0xda31b886,\n  0xf8f8c7f8, 0x933fed6b, 0x86862286, 0x44a411c2\n]);\n\nconst C1 = new Uint32Array([\n  0xd8181860, 0x18c07830, 0x2623238c, 0x2305af46,\n  0xb8c6c63f, 0xc67ef991, 0xfbe8e887, 0xe8136fcd,\n  0xcb878726, 0x874ca113, 0x11b8b8da, 0xb8a9626d,\n  0x09010104, 0x01080502, 0x0d4f4f21, 0x4f426e9e,\n  0x9b3636d8, 0x36adee6c, 0xffa6a6a2, 0xa6590451,\n  0x0cd2d26f, 0xd2debdb9, 0x0ef5f5f3, 0xf5fb06f7,\n  0x967979f9, 0x79ef80f2, 0x306f6fa1, 0x6f5fcede,\n  0x6d91917e, 0x91fcef3f, 0xf8525255, 0x52aa07a4,\n  0x4760609d, 0x6027fdc0, 0x35bcbcca, 0xbc897665,\n  0x379b9b56, 0x9baccd2b, 0x8a8e8e02, 0x8e048c01,\n  0xd2a3a3b6, 0xa371155b, 0x6c0c0c30, 0x0c603c18,\n  0x847b7bf1, 0x7bff8af6, 0x803535d4, 0x35b5e16a,\n  0xf51d1d74, 0x1de8693a, 0xb3e0e0a7, 0xe05347dd,\n  0x21d7d77b, 0xd7f6acb3, 0x9cc2c22f, 0xc25eed99,\n  0x432e2eb8, 0x2e6d965c, 0x294b4b31, 0x4b627a96,\n  0x5dfefedf, 0xfea321e1, 0xd5575741, 0x578216ae,\n  0xbd151554, 0x15a8412a, 0xe87777c1, 0x779fb6ee,\n  0x923737dc, 0x37a5eb6e, 0x9ee5e5b3, 0xe57b56d7,\n  0x139f9f46, 0x9f8cd923, 0x23f0f0e7, 0xf0d317fd,\n  0x204a4a35, 0x4a6a7f94, 0x44dada4f, 0xda9e95a9,\n  0xa258587d, 0x58fa25b0, 0xcfc9c903, 0xc906ca8f,\n  0x7c2929a4, 0x29558d52, 0x5a0a0a28, 0x0a502214,\n  0x50b1b1fe, 0xb1e14f7f, 0xc9a0a0ba, 0xa0691a5d,\n  0x146b6bb1, 0x6b7fdad6, 0xd985852e, 0x855cab17,\n  0x3cbdbdce, 0xbd817367, 0x8f5d5d69, 0x5dd234ba,\n  0x90101040, 0x10805020, 0x07f4f4f7, 0xf4f303f5,\n  0xddcbcb0b, 0xcb16c08b, 0xd33e3ef8, 0x3eedc67c,\n  0x2d050514, 0x0528110a, 0x78676781, 0x671fe6ce,\n  0x97e4e4b7, 0xe47353d5, 0x0227279c, 0x2725bb4e,\n  0x73414119, 0x41325882, 0xa78b8b16, 0x8b2c9d0b,\n  0xf6a7a7a6, 0xa7510153, 0xb27d7de9, 0x7dcf94fa,\n  0x4995956e, 0x95dcfb37, 0x56d8d847, 0xd88e9fad,\n  0x70fbfbcb, 0xfb8b30eb, 0xcdeeee9f, 0xee2371c1,\n  0xbb7c7ced, 0x7cc791f8, 0x71666685, 0x6617e3cc,\n  0x7bdddd53, 0xdda68ea7, 0xaf17175c, 0x17b84b2e,\n  0x45474701, 0x4702468e, 0x1a9e9e42, 0x9e84dc21,\n  0xd4caca0f, 0xca1ec589, 0x582d2db4, 0x2d75995a,\n  0x2ebfbfc6, 0xbf917963, 0x3f07071c, 0x07381b0e,\n  0xacadad8e, 0xad012347, 0xb05a5a75, 0x5aea2fb4,\n  0xef838336, 0x836cb51b, 0xb63333cc, 0x3385ff66,\n  0x5c636391, 0x633ff2c6, 0x12020208, 0x02100a04,\n  0x93aaaa92, 0xaa393849, 0xde7171d9, 0x71afa8e2,\n  0xc6c8c807, 0xc80ecf8d, 0xd1191964, 0x19c87d32,\n  0x3b494939, 0x49727092, 0x5fd9d943, 0xd9869aaf,\n  0x31f2f2ef, 0xf2c31df9, 0xa8e3e3ab, 0xe34b48db,\n  0xb95b5b71, 0x5be22ab6, 0xbc88881a, 0x8834920d,\n  0x3e9a9a52, 0x9aa4c829, 0x0b262698, 0x262dbe4c,\n  0xbf3232c8, 0x328dfa64, 0x59b0b0fa, 0xb0e94a7d,\n  0xf2e9e983, 0xe91b6acf, 0x770f0f3c, 0x0f78331e,\n  0x33d5d573, 0xd5e6a6b7, 0xf480803a, 0x8074ba1d,\n  0x27bebec2, 0xbe997c61, 0xebcdcd13, 0xcd26de87,\n  0x893434d0, 0x34bde468, 0x3248483d, 0x487a7590,\n  0x54ffffdb, 0xffab24e3, 0x8d7a7af5, 0x7af78ff4,\n  0x6490907a, 0x90f4ea3d, 0x9d5f5f61, 0x5fc23ebe,\n  0x3d202080, 0x201da040, 0x0f6868bd, 0x6867d5d0,\n  0xca1a1a68, 0x1ad07234, 0xb7aeae82, 0xae192c41,\n  0x7db4b4ea, 0xb4c95e75, 0xce54544d, 0x549a19a8,\n  0x7f939376, 0x93ece53b, 0x2f222288, 0x220daa44,\n  0x6364648d, 0x6407e9c8, 0x2af1f1e3, 0xf1db12ff,\n  0xcc7373d1, 0x73bfa2e6, 0x82121248, 0x12905a24,\n  0x7a40401d, 0x403a5d80, 0x48080820, 0x08402810,\n  0x95c3c32b, 0xc356e89b, 0xdfecec97, 0xec337bc5,\n  0x4ddbdb4b, 0xdb9690ab, 0xc0a1a1be, 0xa1611f5f,\n  0x918d8d0e, 0x8d1c8307, 0xc83d3df4, 0x3df5c97a,\n  0x5b979766, 0x97ccf133, 0x00000000, 0x00000000,\n  0xf9cfcf1b, 0xcf36d483, 0x6e2b2bac, 0x2b458756,\n  0xe17676c5, 0x7697b3ec, 0xe6828232, 0x8264b019,\n  0x28d6d67f, 0xd6fea9b1, 0xc31b1b6c, 0x1bd87736,\n  0x74b5b5ee, 0xb5c15b77, 0xbeafaf86, 0xaf112943,\n  0x1d6a6ab5, 0x6a77dfd4, 0xea50505d, 0x50ba0da0,\n  0x57454509, 0x45124c8a, 0x38f3f3eb, 0xf3cb18fb,\n  0xad3030c0, 0x309df060, 0xc4efef9b, 0xef2b74c3,\n  0xda3f3ffc, 0x3fe5c37e, 0xc7555549, 0x55921caa,\n  0xdba2a2b2, 0xa2791059, 0xe9eaea8f, 0xea0365c9,\n  0x6a656589, 0x650fecca, 0x03babad2, 0xbab96869,\n  0x4a2f2fbc, 0x2f65935e, 0x8ec0c027, 0xc04ee79d,\n  0x60dede5f, 0xdebe81a1, 0xfc1c1c70, 0x1ce06c38,\n  0x46fdfdd3, 0xfdbb2ee7, 0x1f4d4d29, 0x4d52649a,\n  0x76929272, 0x92e4e039, 0xfa7575c9, 0x758fbcea,\n  0x36060618, 0x06301e0c, 0xae8a8a12, 0x8a249809,\n  0x4bb2b2f2, 0xb2f94079, 0x85e6e6bf, 0xe66359d1,\n  0x7e0e0e38, 0x0e70361c, 0xe71f1f7c, 0x1ff8633e,\n  0x55626295, 0x6237f7c4, 0x3ad4d477, 0xd4eea3b5,\n  0x81a8a89a, 0xa829324d, 0x52969662, 0x96c4f431,\n  0x62f9f9c3, 0xf99b3aef, 0xa3c5c533, 0xc566f697,\n  0x10252594, 0x2535b14a, 0xab595979, 0x59f220b2,\n  0xd084842a, 0x8454ae15, 0xc57272d5, 0x72b7a7e4,\n  0xec3939e4, 0x39d5dd72, 0x164c4c2d, 0x4c5a6198,\n  0x945e5e65, 0x5eca3bbc, 0x9f7878fd, 0x78e785f0,\n  0xe53838e0, 0x38ddd870, 0x988c8c0a, 0x8c148605,\n  0x17d1d163, 0xd1c6b2bf, 0xe4a5a5ae, 0xa5410b57,\n  0xa1e2e2af, 0xe2434dd9, 0x4e616199, 0x612ff8c2,\n  0x42b3b3f6, 0xb3f1457b, 0x34212184, 0x2115a542,\n  0x089c9c4a, 0x9c94d625, 0xee1e1e78, 0x1ef0663c,\n  0x61434311, 0x43225286, 0xb1c7c73b, 0xc776fc93,\n  0x4ffcfcd7, 0xfcb32be5, 0x24040410, 0x04201408,\n  0xe3515159, 0x51b208a2, 0x2599995e, 0x99bcc72f,\n  0x226d6da9, 0x6d4fc4da, 0x650d0d34, 0x0d68391a,\n  0x79fafacf, 0xfa8335e9, 0x69dfdf5b, 0xdfb684a3,\n  0xa97e7ee5, 0x7ed79bfc, 0x19242490, 0x243db448,\n  0xfe3b3bec, 0x3bc5d776, 0x9aabab96, 0xab313d4b,\n  0xf0cece1f, 0xce3ed181, 0x99111144, 0x11885522,\n  0x838f8f06, 0x8f0c8903, 0x044e4e25, 0x4e4a6b9c,\n  0x66b7b7e6, 0xb7d15173, 0xe0ebeb8b, 0xeb0b60cb,\n  0xc13c3cf0, 0x3cfdcc78, 0xfd81813e, 0x817cbf1f,\n  0x4094946a, 0x94d4fe35, 0x1cf7f7fb, 0xf7eb0cf3,\n  0x18b9b9de, 0xb9a1676f, 0x8b13134c, 0x13985f26,\n  0x512c2cb0, 0x2c7d9c58, 0x05d3d36b, 0xd3d6b8bb,\n  0x8ce7e7bb, 0xe76b5cd3, 0x396e6ea5, 0x6e57cbdc,\n  0xaac4c437, 0xc46ef395, 0x1b03030c, 0x03180f06,\n  0xdc565645, 0x568a13ac, 0x5e44440d, 0x441a4988,\n  0xa07f7fe1, 0x7fdf9efe, 0x88a9a99e, 0xa921374f,\n  0x672a2aa8, 0x2a4d8254, 0x0abbbbd6, 0xbbb16d6b,\n  0x87c1c123, 0xc146e29f, 0xf1535351, 0x53a202a6,\n  0x72dcdc57, 0xdcae8ba5, 0x530b0b2c, 0x0b582716,\n  0x019d9d4e, 0x9d9cd327, 0x2b6c6cad, 0x6c47c1d8,\n  0xa43131c4, 0x3195f562, 0xf37474cd, 0x7487b9e8,\n  0x15f6f6ff, 0xf6e309f1, 0x4c464605, 0x460a438c,\n  0xa5acac8a, 0xac092645, 0xb589891e, 0x893c970f,\n  0xb4141450, 0x14a04428, 0xbae1e1a3, 0xe15b42df,\n  0xa6161658, 0x16b04e2c, 0xf73a3ae8, 0x3acdd274,\n  0x066969b9, 0x696fd0d2, 0x41090924, 0x09482d12,\n  0xd77070dd, 0x70a7ade0, 0x6fb6b6e2, 0xb6d95471,\n  0x1ed0d067, 0xd0ceb7bd, 0xd6eded93, 0xed3b7ec7,\n  0xe2cccc17, 0xcc2edb85, 0x68424215, 0x422a5784,\n  0x2c98985a, 0x98b4c22d, 0xeda4a4aa, 0xa4490e55,\n  0x752828a0, 0x285d8850, 0x865c5c6d, 0x5cda31b8,\n  0x6bf8f8c7, 0xf8933fed, 0xc2868622, 0x8644a411\n]);\n\nconst C2 = new Uint32Array([\n  0x30d81818, 0x6018c078, 0x46262323, 0x8c2305af,\n  0x91b8c6c6, 0x3fc67ef9, 0xcdfbe8e8, 0x87e8136f,\n  0x13cb8787, 0x26874ca1, 0x6d11b8b8, 0xdab8a962,\n  0x02090101, 0x04010805, 0x9e0d4f4f, 0x214f426e,\n  0x6c9b3636, 0xd836adee, 0x51ffa6a6, 0xa2a65904,\n  0xb90cd2d2, 0x6fd2debd, 0xf70ef5f5, 0xf3f5fb06,\n  0xf2967979, 0xf979ef80, 0xde306f6f, 0xa16f5fce,\n  0x3f6d9191, 0x7e91fcef, 0xa4f85252, 0x5552aa07,\n  0xc0476060, 0x9d6027fd, 0x6535bcbc, 0xcabc8976,\n  0x2b379b9b, 0x569baccd, 0x018a8e8e, 0x028e048c,\n  0x5bd2a3a3, 0xb6a37115, 0x186c0c0c, 0x300c603c,\n  0xf6847b7b, 0xf17bff8a, 0x6a803535, 0xd435b5e1,\n  0x3af51d1d, 0x741de869, 0xddb3e0e0, 0xa7e05347,\n  0xb321d7d7, 0x7bd7f6ac, 0x999cc2c2, 0x2fc25eed,\n  0x5c432e2e, 0xb82e6d96, 0x96294b4b, 0x314b627a,\n  0xe15dfefe, 0xdffea321, 0xaed55757, 0x41578216,\n  0x2abd1515, 0x5415a841, 0xeee87777, 0xc1779fb6,\n  0x6e923737, 0xdc37a5eb, 0xd79ee5e5, 0xb3e57b56,\n  0x23139f9f, 0x469f8cd9, 0xfd23f0f0, 0xe7f0d317,\n  0x94204a4a, 0x354a6a7f, 0xa944dada, 0x4fda9e95,\n  0xb0a25858, 0x7d58fa25, 0x8fcfc9c9, 0x03c906ca,\n  0x527c2929, 0xa429558d, 0x145a0a0a, 0x280a5022,\n  0x7f50b1b1, 0xfeb1e14f, 0x5dc9a0a0, 0xbaa0691a,\n  0xd6146b6b, 0xb16b7fda, 0x17d98585, 0x2e855cab,\n  0x673cbdbd, 0xcebd8173, 0xba8f5d5d, 0x695dd234,\n  0x20901010, 0x40108050, 0xf507f4f4, 0xf7f4f303,\n  0x8bddcbcb, 0x0bcb16c0, 0x7cd33e3e, 0xf83eedc6,\n  0x0a2d0505, 0x14052811, 0xce786767, 0x81671fe6,\n  0xd597e4e4, 0xb7e47353, 0x4e022727, 0x9c2725bb,\n  0x82734141, 0x19413258, 0x0ba78b8b, 0x168b2c9d,\n  0x53f6a7a7, 0xa6a75101, 0xfab27d7d, 0xe97dcf94,\n  0x37499595, 0x6e95dcfb, 0xad56d8d8, 0x47d88e9f,\n  0xeb70fbfb, 0xcbfb8b30, 0xc1cdeeee, 0x9fee2371,\n  0xf8bb7c7c, 0xed7cc791, 0xcc716666, 0x856617e3,\n  0xa77bdddd, 0x53dda68e, 0x2eaf1717, 0x5c17b84b,\n  0x8e454747, 0x01470246, 0x211a9e9e, 0x429e84dc,\n  0x89d4caca, 0x0fca1ec5, 0x5a582d2d, 0xb42d7599,\n  0x632ebfbf, 0xc6bf9179, 0x0e3f0707, 0x1c07381b,\n  0x47acadad, 0x8ead0123, 0xb4b05a5a, 0x755aea2f,\n  0x1bef8383, 0x36836cb5, 0x66b63333, 0xcc3385ff,\n  0xc65c6363, 0x91633ff2, 0x04120202, 0x0802100a,\n  0x4993aaaa, 0x92aa3938, 0xe2de7171, 0xd971afa8,\n  0x8dc6c8c8, 0x07c80ecf, 0x32d11919, 0x6419c87d,\n  0x923b4949, 0x39497270, 0xaf5fd9d9, 0x43d9869a,\n  0xf931f2f2, 0xeff2c31d, 0xdba8e3e3, 0xabe34b48,\n  0xb6b95b5b, 0x715be22a, 0x0dbc8888, 0x1a883492,\n  0x293e9a9a, 0x529aa4c8, 0x4c0b2626, 0x98262dbe,\n  0x64bf3232, 0xc8328dfa, 0x7d59b0b0, 0xfab0e94a,\n  0xcff2e9e9, 0x83e91b6a, 0x1e770f0f, 0x3c0f7833,\n  0xb733d5d5, 0x73d5e6a6, 0x1df48080, 0x3a8074ba,\n  0x6127bebe, 0xc2be997c, 0x87ebcdcd, 0x13cd26de,\n  0x68893434, 0xd034bde4, 0x90324848, 0x3d487a75,\n  0xe354ffff, 0xdbffab24, 0xf48d7a7a, 0xf57af78f,\n  0x3d649090, 0x7a90f4ea, 0xbe9d5f5f, 0x615fc23e,\n  0x403d2020, 0x80201da0, 0xd00f6868, 0xbd6867d5,\n  0x34ca1a1a, 0x681ad072, 0x41b7aeae, 0x82ae192c,\n  0x757db4b4, 0xeab4c95e, 0xa8ce5454, 0x4d549a19,\n  0x3b7f9393, 0x7693ece5, 0x442f2222, 0x88220daa,\n  0xc8636464, 0x8d6407e9, 0xff2af1f1, 0xe3f1db12,\n  0xe6cc7373, 0xd173bfa2, 0x24821212, 0x4812905a,\n  0x807a4040, 0x1d403a5d, 0x10480808, 0x20084028,\n  0x9b95c3c3, 0x2bc356e8, 0xc5dfecec, 0x97ec337b,\n  0xab4ddbdb, 0x4bdb9690, 0x5fc0a1a1, 0xbea1611f,\n  0x07918d8d, 0x0e8d1c83, 0x7ac83d3d, 0xf43df5c9,\n  0x335b9797, 0x6697ccf1, 0x00000000, 0x00000000,\n  0x83f9cfcf, 0x1bcf36d4, 0x566e2b2b, 0xac2b4587,\n  0xece17676, 0xc57697b3, 0x19e68282, 0x328264b0,\n  0xb128d6d6, 0x7fd6fea9, 0x36c31b1b, 0x6c1bd877,\n  0x7774b5b5, 0xeeb5c15b, 0x43beafaf, 0x86af1129,\n  0xd41d6a6a, 0xb56a77df, 0xa0ea5050, 0x5d50ba0d,\n  0x8a574545, 0x0945124c, 0xfb38f3f3, 0xebf3cb18,\n  0x60ad3030, 0xc0309df0, 0xc3c4efef, 0x9bef2b74,\n  0x7eda3f3f, 0xfc3fe5c3, 0xaac75555, 0x4955921c,\n  0x59dba2a2, 0xb2a27910, 0xc9e9eaea, 0x8fea0365,\n  0xca6a6565, 0x89650fec, 0x6903baba, 0xd2bab968,\n  0x5e4a2f2f, 0xbc2f6593, 0x9d8ec0c0, 0x27c04ee7,\n  0xa160dede, 0x5fdebe81, 0x38fc1c1c, 0x701ce06c,\n  0xe746fdfd, 0xd3fdbb2e, 0x9a1f4d4d, 0x294d5264,\n  0x39769292, 0x7292e4e0, 0xeafa7575, 0xc9758fbc,\n  0x0c360606, 0x1806301e, 0x09ae8a8a, 0x128a2498,\n  0x794bb2b2, 0xf2b2f940, 0xd185e6e6, 0xbfe66359,\n  0x1c7e0e0e, 0x380e7036, 0x3ee71f1f, 0x7c1ff863,\n  0xc4556262, 0x956237f7, 0xb53ad4d4, 0x77d4eea3,\n  0x4d81a8a8, 0x9aa82932, 0x31529696, 0x6296c4f4,\n  0xef62f9f9, 0xc3f99b3a, 0x97a3c5c5, 0x33c566f6,\n  0x4a102525, 0x942535b1, 0xb2ab5959, 0x7959f220,\n  0x15d08484, 0x2a8454ae, 0xe4c57272, 0xd572b7a7,\n  0x72ec3939, 0xe439d5dd, 0x98164c4c, 0x2d4c5a61,\n  0xbc945e5e, 0x655eca3b, 0xf09f7878, 0xfd78e785,\n  0x70e53838, 0xe038ddd8, 0x05988c8c, 0x0a8c1486,\n  0xbf17d1d1, 0x63d1c6b2, 0x57e4a5a5, 0xaea5410b,\n  0xd9a1e2e2, 0xafe2434d, 0xc24e6161, 0x99612ff8,\n  0x7b42b3b3, 0xf6b3f145, 0x42342121, 0x842115a5,\n  0x25089c9c, 0x4a9c94d6, 0x3cee1e1e, 0x781ef066,\n  0x86614343, 0x11432252, 0x93b1c7c7, 0x3bc776fc,\n  0xe54ffcfc, 0xd7fcb32b, 0x08240404, 0x10042014,\n  0xa2e35151, 0x5951b208, 0x2f259999, 0x5e99bcc7,\n  0xda226d6d, 0xa96d4fc4, 0x1a650d0d, 0x340d6839,\n  0xe979fafa, 0xcffa8335, 0xa369dfdf, 0x5bdfb684,\n  0xfca97e7e, 0xe57ed79b, 0x48192424, 0x90243db4,\n  0x76fe3b3b, 0xec3bc5d7, 0x4b9aabab, 0x96ab313d,\n  0x81f0cece, 0x1fce3ed1, 0x22991111, 0x44118855,\n  0x03838f8f, 0x068f0c89, 0x9c044e4e, 0x254e4a6b,\n  0x7366b7b7, 0xe6b7d151, 0xcbe0ebeb, 0x8beb0b60,\n  0x78c13c3c, 0xf03cfdcc, 0x1ffd8181, 0x3e817cbf,\n  0x35409494, 0x6a94d4fe, 0xf31cf7f7, 0xfbf7eb0c,\n  0x6f18b9b9, 0xdeb9a167, 0x268b1313, 0x4c13985f,\n  0x58512c2c, 0xb02c7d9c, 0xbb05d3d3, 0x6bd3d6b8,\n  0xd38ce7e7, 0xbbe76b5c, 0xdc396e6e, 0xa56e57cb,\n  0x95aac4c4, 0x37c46ef3, 0x061b0303, 0x0c03180f,\n  0xacdc5656, 0x45568a13, 0x885e4444, 0x0d441a49,\n  0xfea07f7f, 0xe17fdf9e, 0x4f88a9a9, 0x9ea92137,\n  0x54672a2a, 0xa82a4d82, 0x6b0abbbb, 0xd6bbb16d,\n  0x9f87c1c1, 0x23c146e2, 0xa6f15353, 0x5153a202,\n  0xa572dcdc, 0x57dcae8b, 0x16530b0b, 0x2c0b5827,\n  0x27019d9d, 0x4e9d9cd3, 0xd82b6c6c, 0xad6c47c1,\n  0x62a43131, 0xc43195f5, 0xe8f37474, 0xcd7487b9,\n  0xf115f6f6, 0xfff6e309, 0x8c4c4646, 0x05460a43,\n  0x45a5acac, 0x8aac0926, 0x0fb58989, 0x1e893c97,\n  0x28b41414, 0x5014a044, 0xdfbae1e1, 0xa3e15b42,\n  0x2ca61616, 0x5816b04e, 0x74f73a3a, 0xe83acdd2,\n  0xd2066969, 0xb9696fd0, 0x12410909, 0x2409482d,\n  0xe0d77070, 0xdd70a7ad, 0x716fb6b6, 0xe2b6d954,\n  0xbd1ed0d0, 0x67d0ceb7, 0xc7d6eded, 0x93ed3b7e,\n  0x85e2cccc, 0x17cc2edb, 0x84684242, 0x15422a57,\n  0x2d2c9898, 0x5a98b4c2, 0x55eda4a4, 0xaaa4490e,\n  0x50752828, 0xa0285d88, 0xb8865c5c, 0x6d5cda31,\n  0xed6bf8f8, 0xc7f8933f, 0x11c28686, 0x228644a4\n]);\n\nconst C3 = new Uint32Array([\n  0x7830d818, 0x186018c0, 0xaf462623, 0x238c2305,\n  0xf991b8c6, 0xc63fc67e, 0x6fcdfbe8, 0xe887e813,\n  0xa113cb87, 0x8726874c, 0x626d11b8, 0xb8dab8a9,\n  0x05020901, 0x01040108, 0x6e9e0d4f, 0x4f214f42,\n  0xee6c9b36, 0x36d836ad, 0x0451ffa6, 0xa6a2a659,\n  0xbdb90cd2, 0xd26fd2de, 0x06f70ef5, 0xf5f3f5fb,\n  0x80f29679, 0x79f979ef, 0xcede306f, 0x6fa16f5f,\n  0xef3f6d91, 0x917e91fc, 0x07a4f852, 0x525552aa,\n  0xfdc04760, 0x609d6027, 0x766535bc, 0xbccabc89,\n  0xcd2b379b, 0x9b569bac, 0x8c018a8e, 0x8e028e04,\n  0x155bd2a3, 0xa3b6a371, 0x3c186c0c, 0x0c300c60,\n  0x8af6847b, 0x7bf17bff, 0xe16a8035, 0x35d435b5,\n  0x693af51d, 0x1d741de8, 0x47ddb3e0, 0xe0a7e053,\n  0xacb321d7, 0xd77bd7f6, 0xed999cc2, 0xc22fc25e,\n  0x965c432e, 0x2eb82e6d, 0x7a96294b, 0x4b314b62,\n  0x21e15dfe, 0xfedffea3, 0x16aed557, 0x57415782,\n  0x412abd15, 0x155415a8, 0xb6eee877, 0x77c1779f,\n  0xeb6e9237, 0x37dc37a5, 0x56d79ee5, 0xe5b3e57b,\n  0xd923139f, 0x9f469f8c, 0x17fd23f0, 0xf0e7f0d3,\n  0x7f94204a, 0x4a354a6a, 0x95a944da, 0xda4fda9e,\n  0x25b0a258, 0x587d58fa, 0xca8fcfc9, 0xc903c906,\n  0x8d527c29, 0x29a42955, 0x22145a0a, 0x0a280a50,\n  0x4f7f50b1, 0xb1feb1e1, 0x1a5dc9a0, 0xa0baa069,\n  0xdad6146b, 0x6bb16b7f, 0xab17d985, 0x852e855c,\n  0x73673cbd, 0xbdcebd81, 0x34ba8f5d, 0x5d695dd2,\n  0x50209010, 0x10401080, 0x03f507f4, 0xf4f7f4f3,\n  0xc08bddcb, 0xcb0bcb16, 0xc67cd33e, 0x3ef83eed,\n  0x110a2d05, 0x05140528, 0xe6ce7867, 0x6781671f,\n  0x53d597e4, 0xe4b7e473, 0xbb4e0227, 0x279c2725,\n  0x58827341, 0x41194132, 0x9d0ba78b, 0x8b168b2c,\n  0x0153f6a7, 0xa7a6a751, 0x94fab27d, 0x7de97dcf,\n  0xfb374995, 0x956e95dc, 0x9fad56d8, 0xd847d88e,\n  0x30eb70fb, 0xfbcbfb8b, 0x71c1cdee, 0xee9fee23,\n  0x91f8bb7c, 0x7ced7cc7, 0xe3cc7166, 0x66856617,\n  0x8ea77bdd, 0xdd53dda6, 0x4b2eaf17, 0x175c17b8,\n  0x468e4547, 0x47014702, 0xdc211a9e, 0x9e429e84,\n  0xc589d4ca, 0xca0fca1e, 0x995a582d, 0x2db42d75,\n  0x79632ebf, 0xbfc6bf91, 0x1b0e3f07, 0x071c0738,\n  0x2347acad, 0xad8ead01, 0x2fb4b05a, 0x5a755aea,\n  0xb51bef83, 0x8336836c, 0xff66b633, 0x33cc3385,\n  0xf2c65c63, 0x6391633f, 0x0a041202, 0x02080210,\n  0x384993aa, 0xaa92aa39, 0xa8e2de71, 0x71d971af,\n  0xcf8dc6c8, 0xc807c80e, 0x7d32d119, 0x196419c8,\n  0x70923b49, 0x49394972, 0x9aaf5fd9, 0xd943d986,\n  0x1df931f2, 0xf2eff2c3, 0x48dba8e3, 0xe3abe34b,\n  0x2ab6b95b, 0x5b715be2, 0x920dbc88, 0x881a8834,\n  0xc8293e9a, 0x9a529aa4, 0xbe4c0b26, 0x2698262d,\n  0xfa64bf32, 0x32c8328d, 0x4a7d59b0, 0xb0fab0e9,\n  0x6acff2e9, 0xe983e91b, 0x331e770f, 0x0f3c0f78,\n  0xa6b733d5, 0xd573d5e6, 0xba1df480, 0x803a8074,\n  0x7c6127be, 0xbec2be99, 0xde87ebcd, 0xcd13cd26,\n  0xe4688934, 0x34d034bd, 0x75903248, 0x483d487a,\n  0x24e354ff, 0xffdbffab, 0x8ff48d7a, 0x7af57af7,\n  0xea3d6490, 0x907a90f4, 0x3ebe9d5f, 0x5f615fc2,\n  0xa0403d20, 0x2080201d, 0xd5d00f68, 0x68bd6867,\n  0x7234ca1a, 0x1a681ad0, 0x2c41b7ae, 0xae82ae19,\n  0x5e757db4, 0xb4eab4c9, 0x19a8ce54, 0x544d549a,\n  0xe53b7f93, 0x937693ec, 0xaa442f22, 0x2288220d,\n  0xe9c86364, 0x648d6407, 0x12ff2af1, 0xf1e3f1db,\n  0xa2e6cc73, 0x73d173bf, 0x5a248212, 0x12481290,\n  0x5d807a40, 0x401d403a, 0x28104808, 0x08200840,\n  0xe89b95c3, 0xc32bc356, 0x7bc5dfec, 0xec97ec33,\n  0x90ab4ddb, 0xdb4bdb96, 0x1f5fc0a1, 0xa1bea161,\n  0x8307918d, 0x8d0e8d1c, 0xc97ac83d, 0x3df43df5,\n  0xf1335b97, 0x976697cc, 0x00000000, 0x00000000,\n  0xd483f9cf, 0xcf1bcf36, 0x87566e2b, 0x2bac2b45,\n  0xb3ece176, 0x76c57697, 0xb019e682, 0x82328264,\n  0xa9b128d6, 0xd67fd6fe, 0x7736c31b, 0x1b6c1bd8,\n  0x5b7774b5, 0xb5eeb5c1, 0x2943beaf, 0xaf86af11,\n  0xdfd41d6a, 0x6ab56a77, 0x0da0ea50, 0x505d50ba,\n  0x4c8a5745, 0x45094512, 0x18fb38f3, 0xf3ebf3cb,\n  0xf060ad30, 0x30c0309d, 0x74c3c4ef, 0xef9bef2b,\n  0xc37eda3f, 0x3ffc3fe5, 0x1caac755, 0x55495592,\n  0x1059dba2, 0xa2b2a279, 0x65c9e9ea, 0xea8fea03,\n  0xecca6a65, 0x6589650f, 0x686903ba, 0xbad2bab9,\n  0x935e4a2f, 0x2fbc2f65, 0xe79d8ec0, 0xc027c04e,\n  0x81a160de, 0xde5fdebe, 0x6c38fc1c, 0x1c701ce0,\n  0x2ee746fd, 0xfdd3fdbb, 0x649a1f4d, 0x4d294d52,\n  0xe0397692, 0x927292e4, 0xbceafa75, 0x75c9758f,\n  0x1e0c3606, 0x06180630, 0x9809ae8a, 0x8a128a24,\n  0x40794bb2, 0xb2f2b2f9, 0x59d185e6, 0xe6bfe663,\n  0x361c7e0e, 0x0e380e70, 0x633ee71f, 0x1f7c1ff8,\n  0xf7c45562, 0x62956237, 0xa3b53ad4, 0xd477d4ee,\n  0x324d81a8, 0xa89aa829, 0xf4315296, 0x966296c4,\n  0x3aef62f9, 0xf9c3f99b, 0xf697a3c5, 0xc533c566,\n  0xb14a1025, 0x25942535, 0x20b2ab59, 0x597959f2,\n  0xae15d084, 0x842a8454, 0xa7e4c572, 0x72d572b7,\n  0xdd72ec39, 0x39e439d5, 0x6198164c, 0x4c2d4c5a,\n  0x3bbc945e, 0x5e655eca, 0x85f09f78, 0x78fd78e7,\n  0xd870e538, 0x38e038dd, 0x8605988c, 0x8c0a8c14,\n  0xb2bf17d1, 0xd163d1c6, 0x0b57e4a5, 0xa5aea541,\n  0x4dd9a1e2, 0xe2afe243, 0xf8c24e61, 0x6199612f,\n  0x457b42b3, 0xb3f6b3f1, 0xa5423421, 0x21842115,\n  0xd625089c, 0x9c4a9c94, 0x663cee1e, 0x1e781ef0,\n  0x52866143, 0x43114322, 0xfc93b1c7, 0xc73bc776,\n  0x2be54ffc, 0xfcd7fcb3, 0x14082404, 0x04100420,\n  0x08a2e351, 0x515951b2, 0xc72f2599, 0x995e99bc,\n  0xc4da226d, 0x6da96d4f, 0x391a650d, 0x0d340d68,\n  0x35e979fa, 0xfacffa83, 0x84a369df, 0xdf5bdfb6,\n  0x9bfca97e, 0x7ee57ed7, 0xb4481924, 0x2490243d,\n  0xd776fe3b, 0x3bec3bc5, 0x3d4b9aab, 0xab96ab31,\n  0xd181f0ce, 0xce1fce3e, 0x55229911, 0x11441188,\n  0x8903838f, 0x8f068f0c, 0x6b9c044e, 0x4e254e4a,\n  0x517366b7, 0xb7e6b7d1, 0x60cbe0eb, 0xeb8beb0b,\n  0xcc78c13c, 0x3cf03cfd, 0xbf1ffd81, 0x813e817c,\n  0xfe354094, 0x946a94d4, 0x0cf31cf7, 0xf7fbf7eb,\n  0x676f18b9, 0xb9deb9a1, 0x5f268b13, 0x134c1398,\n  0x9c58512c, 0x2cb02c7d, 0xb8bb05d3, 0xd36bd3d6,\n  0x5cd38ce7, 0xe7bbe76b, 0xcbdc396e, 0x6ea56e57,\n  0xf395aac4, 0xc437c46e, 0x0f061b03, 0x030c0318,\n  0x13acdc56, 0x5645568a, 0x49885e44, 0x440d441a,\n  0x9efea07f, 0x7fe17fdf, 0x374f88a9, 0xa99ea921,\n  0x8254672a, 0x2aa82a4d, 0x6d6b0abb, 0xbbd6bbb1,\n  0xe29f87c1, 0xc123c146, 0x02a6f153, 0x535153a2,\n  0x8ba572dc, 0xdc57dcae, 0x2716530b, 0x0b2c0b58,\n  0xd327019d, 0x9d4e9d9c, 0xc1d82b6c, 0x6cad6c47,\n  0xf562a431, 0x31c43195, 0xb9e8f374, 0x74cd7487,\n  0x09f115f6, 0xf6fff6e3, 0x438c4c46, 0x4605460a,\n  0x2645a5ac, 0xac8aac09, 0x970fb589, 0x891e893c,\n  0x4428b414, 0x145014a0, 0x42dfbae1, 0xe1a3e15b,\n  0x4e2ca616, 0x165816b0, 0xd274f73a, 0x3ae83acd,\n  0xd0d20669, 0x69b9696f, 0x2d124109, 0x09240948,\n  0xade0d770, 0x70dd70a7, 0x54716fb6, 0xb6e2b6d9,\n  0xb7bd1ed0, 0xd067d0ce, 0x7ec7d6ed, 0xed93ed3b,\n  0xdb85e2cc, 0xcc17cc2e, 0x57846842, 0x4215422a,\n  0xc22d2c98, 0x985a98b4, 0x0e55eda4, 0xa4aaa449,\n  0x88507528, 0x28a0285d, 0x31b8865c, 0x5c6d5cda,\n  0x3fed6bf8, 0xf8c7f893, 0xa411c286, 0x86228644\n]);\n\nconst C4 = new Uint32Array([\n  0xc07830d8, 0x18186018, 0x05af4626, 0x23238c23,\n  0x7ef991b8, 0xc6c63fc6, 0x136fcdfb, 0xe8e887e8,\n  0x4ca113cb, 0x87872687, 0xa9626d11, 0xb8b8dab8,\n  0x08050209, 0x01010401, 0x426e9e0d, 0x4f4f214f,\n  0xadee6c9b, 0x3636d836, 0x590451ff, 0xa6a6a2a6,\n  0xdebdb90c, 0xd2d26fd2, 0xfb06f70e, 0xf5f5f3f5,\n  0xef80f296, 0x7979f979, 0x5fcede30, 0x6f6fa16f,\n  0xfcef3f6d, 0x91917e91, 0xaa07a4f8, 0x52525552,\n  0x27fdc047, 0x60609d60, 0x89766535, 0xbcbccabc,\n  0xaccd2b37, 0x9b9b569b, 0x048c018a, 0x8e8e028e,\n  0x71155bd2, 0xa3a3b6a3, 0x603c186c, 0x0c0c300c,\n  0xff8af684, 0x7b7bf17b, 0xb5e16a80, 0x3535d435,\n  0xe8693af5, 0x1d1d741d, 0x5347ddb3, 0xe0e0a7e0,\n  0xf6acb321, 0xd7d77bd7, 0x5eed999c, 0xc2c22fc2,\n  0x6d965c43, 0x2e2eb82e, 0x627a9629, 0x4b4b314b,\n  0xa321e15d, 0xfefedffe, 0x8216aed5, 0x57574157,\n  0xa8412abd, 0x15155415, 0x9fb6eee8, 0x7777c177,\n  0xa5eb6e92, 0x3737dc37, 0x7b56d79e, 0xe5e5b3e5,\n  0x8cd92313, 0x9f9f469f, 0xd317fd23, 0xf0f0e7f0,\n  0x6a7f9420, 0x4a4a354a, 0x9e95a944, 0xdada4fda,\n  0xfa25b0a2, 0x58587d58, 0x06ca8fcf, 0xc9c903c9,\n  0x558d527c, 0x2929a429, 0x5022145a, 0x0a0a280a,\n  0xe14f7f50, 0xb1b1feb1, 0x691a5dc9, 0xa0a0baa0,\n  0x7fdad614, 0x6b6bb16b, 0x5cab17d9, 0x85852e85,\n  0x8173673c, 0xbdbdcebd, 0xd234ba8f, 0x5d5d695d,\n  0x80502090, 0x10104010, 0xf303f507, 0xf4f4f7f4,\n  0x16c08bdd, 0xcbcb0bcb, 0xedc67cd3, 0x3e3ef83e,\n  0x28110a2d, 0x05051405, 0x1fe6ce78, 0x67678167,\n  0x7353d597, 0xe4e4b7e4, 0x25bb4e02, 0x27279c27,\n  0x32588273, 0x41411941, 0x2c9d0ba7, 0x8b8b168b,\n  0x510153f6, 0xa7a7a6a7, 0xcf94fab2, 0x7d7de97d,\n  0xdcfb3749, 0x95956e95, 0x8e9fad56, 0xd8d847d8,\n  0x8b30eb70, 0xfbfbcbfb, 0x2371c1cd, 0xeeee9fee,\n  0xc791f8bb, 0x7c7ced7c, 0x17e3cc71, 0x66668566,\n  0xa68ea77b, 0xdddd53dd, 0xb84b2eaf, 0x17175c17,\n  0x02468e45, 0x47470147, 0x84dc211a, 0x9e9e429e,\n  0x1ec589d4, 0xcaca0fca, 0x75995a58, 0x2d2db42d,\n  0x9179632e, 0xbfbfc6bf, 0x381b0e3f, 0x07071c07,\n  0x012347ac, 0xadad8ead, 0xea2fb4b0, 0x5a5a755a,\n  0x6cb51bef, 0x83833683, 0x85ff66b6, 0x3333cc33,\n  0x3ff2c65c, 0x63639163, 0x100a0412, 0x02020802,\n  0x39384993, 0xaaaa92aa, 0xafa8e2de, 0x7171d971,\n  0x0ecf8dc6, 0xc8c807c8, 0xc87d32d1, 0x19196419,\n  0x7270923b, 0x49493949, 0x869aaf5f, 0xd9d943d9,\n  0xc31df931, 0xf2f2eff2, 0x4b48dba8, 0xe3e3abe3,\n  0xe22ab6b9, 0x5b5b715b, 0x34920dbc, 0x88881a88,\n  0xa4c8293e, 0x9a9a529a, 0x2dbe4c0b, 0x26269826,\n  0x8dfa64bf, 0x3232c832, 0xe94a7d59, 0xb0b0fab0,\n  0x1b6acff2, 0xe9e983e9, 0x78331e77, 0x0f0f3c0f,\n  0xe6a6b733, 0xd5d573d5, 0x74ba1df4, 0x80803a80,\n  0x997c6127, 0xbebec2be, 0x26de87eb, 0xcdcd13cd,\n  0xbde46889, 0x3434d034, 0x7a759032, 0x48483d48,\n  0xab24e354, 0xffffdbff, 0xf78ff48d, 0x7a7af57a,\n  0xf4ea3d64, 0x90907a90, 0xc23ebe9d, 0x5f5f615f,\n  0x1da0403d, 0x20208020, 0x67d5d00f, 0x6868bd68,\n  0xd07234ca, 0x1a1a681a, 0x192c41b7, 0xaeae82ae,\n  0xc95e757d, 0xb4b4eab4, 0x9a19a8ce, 0x54544d54,\n  0xece53b7f, 0x93937693, 0x0daa442f, 0x22228822,\n  0x07e9c863, 0x64648d64, 0xdb12ff2a, 0xf1f1e3f1,\n  0xbfa2e6cc, 0x7373d173, 0x905a2482, 0x12124812,\n  0x3a5d807a, 0x40401d40, 0x40281048, 0x08082008,\n  0x56e89b95, 0xc3c32bc3, 0x337bc5df, 0xecec97ec,\n  0x9690ab4d, 0xdbdb4bdb, 0x611f5fc0, 0xa1a1bea1,\n  0x1c830791, 0x8d8d0e8d, 0xf5c97ac8, 0x3d3df43d,\n  0xccf1335b, 0x97976697, 0x00000000, 0x00000000,\n  0x36d483f9, 0xcfcf1bcf, 0x4587566e, 0x2b2bac2b,\n  0x97b3ece1, 0x7676c576, 0x64b019e6, 0x82823282,\n  0xfea9b128, 0xd6d67fd6, 0xd87736c3, 0x1b1b6c1b,\n  0xc15b7774, 0xb5b5eeb5, 0x112943be, 0xafaf86af,\n  0x77dfd41d, 0x6a6ab56a, 0xba0da0ea, 0x50505d50,\n  0x124c8a57, 0x45450945, 0xcb18fb38, 0xf3f3ebf3,\n  0x9df060ad, 0x3030c030, 0x2b74c3c4, 0xefef9bef,\n  0xe5c37eda, 0x3f3ffc3f, 0x921caac7, 0x55554955,\n  0x791059db, 0xa2a2b2a2, 0x0365c9e9, 0xeaea8fea,\n  0x0fecca6a, 0x65658965, 0xb9686903, 0xbabad2ba,\n  0x65935e4a, 0x2f2fbc2f, 0x4ee79d8e, 0xc0c027c0,\n  0xbe81a160, 0xdede5fde, 0xe06c38fc, 0x1c1c701c,\n  0xbb2ee746, 0xfdfdd3fd, 0x52649a1f, 0x4d4d294d,\n  0xe4e03976, 0x92927292, 0x8fbceafa, 0x7575c975,\n  0x301e0c36, 0x06061806, 0x249809ae, 0x8a8a128a,\n  0xf940794b, 0xb2b2f2b2, 0x6359d185, 0xe6e6bfe6,\n  0x70361c7e, 0x0e0e380e, 0xf8633ee7, 0x1f1f7c1f,\n  0x37f7c455, 0x62629562, 0xeea3b53a, 0xd4d477d4,\n  0x29324d81, 0xa8a89aa8, 0xc4f43152, 0x96966296,\n  0x9b3aef62, 0xf9f9c3f9, 0x66f697a3, 0xc5c533c5,\n  0x35b14a10, 0x25259425, 0xf220b2ab, 0x59597959,\n  0x54ae15d0, 0x84842a84, 0xb7a7e4c5, 0x7272d572,\n  0xd5dd72ec, 0x3939e439, 0x5a619816, 0x4c4c2d4c,\n  0xca3bbc94, 0x5e5e655e, 0xe785f09f, 0x7878fd78,\n  0xddd870e5, 0x3838e038, 0x14860598, 0x8c8c0a8c,\n  0xc6b2bf17, 0xd1d163d1, 0x410b57e4, 0xa5a5aea5,\n  0x434dd9a1, 0xe2e2afe2, 0x2ff8c24e, 0x61619961,\n  0xf1457b42, 0xb3b3f6b3, 0x15a54234, 0x21218421,\n  0x94d62508, 0x9c9c4a9c, 0xf0663cee, 0x1e1e781e,\n  0x22528661, 0x43431143, 0x76fc93b1, 0xc7c73bc7,\n  0xb32be54f, 0xfcfcd7fc, 0x20140824, 0x04041004,\n  0xb208a2e3, 0x51515951, 0xbcc72f25, 0x99995e99,\n  0x4fc4da22, 0x6d6da96d, 0x68391a65, 0x0d0d340d,\n  0x8335e979, 0xfafacffa, 0xb684a369, 0xdfdf5bdf,\n  0xd79bfca9, 0x7e7ee57e, 0x3db44819, 0x24249024,\n  0xc5d776fe, 0x3b3bec3b, 0x313d4b9a, 0xabab96ab,\n  0x3ed181f0, 0xcece1fce, 0x88552299, 0x11114411,\n  0x0c890383, 0x8f8f068f, 0x4a6b9c04, 0x4e4e254e,\n  0xd1517366, 0xb7b7e6b7, 0x0b60cbe0, 0xebeb8beb,\n  0xfdcc78c1, 0x3c3cf03c, 0x7cbf1ffd, 0x81813e81,\n  0xd4fe3540, 0x94946a94, 0xeb0cf31c, 0xf7f7fbf7,\n  0xa1676f18, 0xb9b9deb9, 0x985f268b, 0x13134c13,\n  0x7d9c5851, 0x2c2cb02c, 0xd6b8bb05, 0xd3d36bd3,\n  0x6b5cd38c, 0xe7e7bbe7, 0x57cbdc39, 0x6e6ea56e,\n  0x6ef395aa, 0xc4c437c4, 0x180f061b, 0x03030c03,\n  0x8a13acdc, 0x56564556, 0x1a49885e, 0x44440d44,\n  0xdf9efea0, 0x7f7fe17f, 0x21374f88, 0xa9a99ea9,\n  0x4d825467, 0x2a2aa82a, 0xb16d6b0a, 0xbbbbd6bb,\n  0x46e29f87, 0xc1c123c1, 0xa202a6f1, 0x53535153,\n  0xae8ba572, 0xdcdc57dc, 0x58271653, 0x0b0b2c0b,\n  0x9cd32701, 0x9d9d4e9d, 0x47c1d82b, 0x6c6cad6c,\n  0x95f562a4, 0x3131c431, 0x87b9e8f3, 0x7474cd74,\n  0xe309f115, 0xf6f6fff6, 0x0a438c4c, 0x46460546,\n  0x092645a5, 0xacac8aac, 0x3c970fb5, 0x89891e89,\n  0xa04428b4, 0x14145014, 0x5b42dfba, 0xe1e1a3e1,\n  0xb04e2ca6, 0x16165816, 0xcdd274f7, 0x3a3ae83a,\n  0x6fd0d206, 0x6969b969, 0x482d1241, 0x09092409,\n  0xa7ade0d7, 0x7070dd70, 0xd954716f, 0xb6b6e2b6,\n  0xceb7bd1e, 0xd0d067d0, 0x3b7ec7d6, 0xeded93ed,\n  0x2edb85e2, 0xcccc17cc, 0x2a578468, 0x42421542,\n  0xb4c22d2c, 0x98985a98, 0x490e55ed, 0xa4a4aaa4,\n  0x5d885075, 0x2828a028, 0xda31b886, 0x5c5c6d5c,\n  0x933fed6b, 0xf8f8c7f8, 0x44a411c2, 0x86862286\n]);\n\nconst C5 = new Uint32Array([\n  0x18c07830, 0xd8181860, 0x2305af46, 0x2623238c,\n  0xc67ef991, 0xb8c6c63f, 0xe8136fcd, 0xfbe8e887,\n  0x874ca113, 0xcb878726, 0xb8a9626d, 0x11b8b8da,\n  0x01080502, 0x09010104, 0x4f426e9e, 0x0d4f4f21,\n  0x36adee6c, 0x9b3636d8, 0xa6590451, 0xffa6a6a2,\n  0xd2debdb9, 0x0cd2d26f, 0xf5fb06f7, 0x0ef5f5f3,\n  0x79ef80f2, 0x967979f9, 0x6f5fcede, 0x306f6fa1,\n  0x91fcef3f, 0x6d91917e, 0x52aa07a4, 0xf8525255,\n  0x6027fdc0, 0x4760609d, 0xbc897665, 0x35bcbcca,\n  0x9baccd2b, 0x379b9b56, 0x8e048c01, 0x8a8e8e02,\n  0xa371155b, 0xd2a3a3b6, 0x0c603c18, 0x6c0c0c30,\n  0x7bff8af6, 0x847b7bf1, 0x35b5e16a, 0x803535d4,\n  0x1de8693a, 0xf51d1d74, 0xe05347dd, 0xb3e0e0a7,\n  0xd7f6acb3, 0x21d7d77b, 0xc25eed99, 0x9cc2c22f,\n  0x2e6d965c, 0x432e2eb8, 0x4b627a96, 0x294b4b31,\n  0xfea321e1, 0x5dfefedf, 0x578216ae, 0xd5575741,\n  0x15a8412a, 0xbd151554, 0x779fb6ee, 0xe87777c1,\n  0x37a5eb6e, 0x923737dc, 0xe57b56d7, 0x9ee5e5b3,\n  0x9f8cd923, 0x139f9f46, 0xf0d317fd, 0x23f0f0e7,\n  0x4a6a7f94, 0x204a4a35, 0xda9e95a9, 0x44dada4f,\n  0x58fa25b0, 0xa258587d, 0xc906ca8f, 0xcfc9c903,\n  0x29558d52, 0x7c2929a4, 0x0a502214, 0x5a0a0a28,\n  0xb1e14f7f, 0x50b1b1fe, 0xa0691a5d, 0xc9a0a0ba,\n  0x6b7fdad6, 0x146b6bb1, 0x855cab17, 0xd985852e,\n  0xbd817367, 0x3cbdbdce, 0x5dd234ba, 0x8f5d5d69,\n  0x10805020, 0x90101040, 0xf4f303f5, 0x07f4f4f7,\n  0xcb16c08b, 0xddcbcb0b, 0x3eedc67c, 0xd33e3ef8,\n  0x0528110a, 0x2d050514, 0x671fe6ce, 0x78676781,\n  0xe47353d5, 0x97e4e4b7, 0x2725bb4e, 0x0227279c,\n  0x41325882, 0x73414119, 0x8b2c9d0b, 0xa78b8b16,\n  0xa7510153, 0xf6a7a7a6, 0x7dcf94fa, 0xb27d7de9,\n  0x95dcfb37, 0x4995956e, 0xd88e9fad, 0x56d8d847,\n  0xfb8b30eb, 0x70fbfbcb, 0xee2371c1, 0xcdeeee9f,\n  0x7cc791f8, 0xbb7c7ced, 0x6617e3cc, 0x71666685,\n  0xdda68ea7, 0x7bdddd53, 0x17b84b2e, 0xaf17175c,\n  0x4702468e, 0x45474701, 0x9e84dc21, 0x1a9e9e42,\n  0xca1ec589, 0xd4caca0f, 0x2d75995a, 0x582d2db4,\n  0xbf917963, 0x2ebfbfc6, 0x07381b0e, 0x3f07071c,\n  0xad012347, 0xacadad8e, 0x5aea2fb4, 0xb05a5a75,\n  0x836cb51b, 0xef838336, 0x3385ff66, 0xb63333cc,\n  0x633ff2c6, 0x5c636391, 0x02100a04, 0x12020208,\n  0xaa393849, 0x93aaaa92, 0x71afa8e2, 0xde7171d9,\n  0xc80ecf8d, 0xc6c8c807, 0x19c87d32, 0xd1191964,\n  0x49727092, 0x3b494939, 0xd9869aaf, 0x5fd9d943,\n  0xf2c31df9, 0x31f2f2ef, 0xe34b48db, 0xa8e3e3ab,\n  0x5be22ab6, 0xb95b5b71, 0x8834920d, 0xbc88881a,\n  0x9aa4c829, 0x3e9a9a52, 0x262dbe4c, 0x0b262698,\n  0x328dfa64, 0xbf3232c8, 0xb0e94a7d, 0x59b0b0fa,\n  0xe91b6acf, 0xf2e9e983, 0x0f78331e, 0x770f0f3c,\n  0xd5e6a6b7, 0x33d5d573, 0x8074ba1d, 0xf480803a,\n  0xbe997c61, 0x27bebec2, 0xcd26de87, 0xebcdcd13,\n  0x34bde468, 0x893434d0, 0x487a7590, 0x3248483d,\n  0xffab24e3, 0x54ffffdb, 0x7af78ff4, 0x8d7a7af5,\n  0x90f4ea3d, 0x6490907a, 0x5fc23ebe, 0x9d5f5f61,\n  0x201da040, 0x3d202080, 0x6867d5d0, 0x0f6868bd,\n  0x1ad07234, 0xca1a1a68, 0xae192c41, 0xb7aeae82,\n  0xb4c95e75, 0x7db4b4ea, 0x549a19a8, 0xce54544d,\n  0x93ece53b, 0x7f939376, 0x220daa44, 0x2f222288,\n  0x6407e9c8, 0x6364648d, 0xf1db12ff, 0x2af1f1e3,\n  0x73bfa2e6, 0xcc7373d1, 0x12905a24, 0x82121248,\n  0x403a5d80, 0x7a40401d, 0x08402810, 0x48080820,\n  0xc356e89b, 0x95c3c32b, 0xec337bc5, 0xdfecec97,\n  0xdb9690ab, 0x4ddbdb4b, 0xa1611f5f, 0xc0a1a1be,\n  0x8d1c8307, 0x918d8d0e, 0x3df5c97a, 0xc83d3df4,\n  0x97ccf133, 0x5b979766, 0x00000000, 0x00000000,\n  0xcf36d483, 0xf9cfcf1b, 0x2b458756, 0x6e2b2bac,\n  0x7697b3ec, 0xe17676c5, 0x8264b019, 0xe6828232,\n  0xd6fea9b1, 0x28d6d67f, 0x1bd87736, 0xc31b1b6c,\n  0xb5c15b77, 0x74b5b5ee, 0xaf112943, 0xbeafaf86,\n  0x6a77dfd4, 0x1d6a6ab5, 0x50ba0da0, 0xea50505d,\n  0x45124c8a, 0x57454509, 0xf3cb18fb, 0x38f3f3eb,\n  0x309df060, 0xad3030c0, 0xef2b74c3, 0xc4efef9b,\n  0x3fe5c37e, 0xda3f3ffc, 0x55921caa, 0xc7555549,\n  0xa2791059, 0xdba2a2b2, 0xea0365c9, 0xe9eaea8f,\n  0x650fecca, 0x6a656589, 0xbab96869, 0x03babad2,\n  0x2f65935e, 0x4a2f2fbc, 0xc04ee79d, 0x8ec0c027,\n  0xdebe81a1, 0x60dede5f, 0x1ce06c38, 0xfc1c1c70,\n  0xfdbb2ee7, 0x46fdfdd3, 0x4d52649a, 0x1f4d4d29,\n  0x92e4e039, 0x76929272, 0x758fbcea, 0xfa7575c9,\n  0x06301e0c, 0x36060618, 0x8a249809, 0xae8a8a12,\n  0xb2f94079, 0x4bb2b2f2, 0xe66359d1, 0x85e6e6bf,\n  0x0e70361c, 0x7e0e0e38, 0x1ff8633e, 0xe71f1f7c,\n  0x6237f7c4, 0x55626295, 0xd4eea3b5, 0x3ad4d477,\n  0xa829324d, 0x81a8a89a, 0x96c4f431, 0x52969662,\n  0xf99b3aef, 0x62f9f9c3, 0xc566f697, 0xa3c5c533,\n  0x2535b14a, 0x10252594, 0x59f220b2, 0xab595979,\n  0x8454ae15, 0xd084842a, 0x72b7a7e4, 0xc57272d5,\n  0x39d5dd72, 0xec3939e4, 0x4c5a6198, 0x164c4c2d,\n  0x5eca3bbc, 0x945e5e65, 0x78e785f0, 0x9f7878fd,\n  0x38ddd870, 0xe53838e0, 0x8c148605, 0x988c8c0a,\n  0xd1c6b2bf, 0x17d1d163, 0xa5410b57, 0xe4a5a5ae,\n  0xe2434dd9, 0xa1e2e2af, 0x612ff8c2, 0x4e616199,\n  0xb3f1457b, 0x42b3b3f6, 0x2115a542, 0x34212184,\n  0x9c94d625, 0x089c9c4a, 0x1ef0663c, 0xee1e1e78,\n  0x43225286, 0x61434311, 0xc776fc93, 0xb1c7c73b,\n  0xfcb32be5, 0x4ffcfcd7, 0x04201408, 0x24040410,\n  0x51b208a2, 0xe3515159, 0x99bcc72f, 0x2599995e,\n  0x6d4fc4da, 0x226d6da9, 0x0d68391a, 0x650d0d34,\n  0xfa8335e9, 0x79fafacf, 0xdfb684a3, 0x69dfdf5b,\n  0x7ed79bfc, 0xa97e7ee5, 0x243db448, 0x19242490,\n  0x3bc5d776, 0xfe3b3bec, 0xab313d4b, 0x9aabab96,\n  0xce3ed181, 0xf0cece1f, 0x11885522, 0x99111144,\n  0x8f0c8903, 0x838f8f06, 0x4e4a6b9c, 0x044e4e25,\n  0xb7d15173, 0x66b7b7e6, 0xeb0b60cb, 0xe0ebeb8b,\n  0x3cfdcc78, 0xc13c3cf0, 0x817cbf1f, 0xfd81813e,\n  0x94d4fe35, 0x4094946a, 0xf7eb0cf3, 0x1cf7f7fb,\n  0xb9a1676f, 0x18b9b9de, 0x13985f26, 0x8b13134c,\n  0x2c7d9c58, 0x512c2cb0, 0xd3d6b8bb, 0x05d3d36b,\n  0xe76b5cd3, 0x8ce7e7bb, 0x6e57cbdc, 0x396e6ea5,\n  0xc46ef395, 0xaac4c437, 0x03180f06, 0x1b03030c,\n  0x568a13ac, 0xdc565645, 0x441a4988, 0x5e44440d,\n  0x7fdf9efe, 0xa07f7fe1, 0xa921374f, 0x88a9a99e,\n  0x2a4d8254, 0x672a2aa8, 0xbbb16d6b, 0x0abbbbd6,\n  0xc146e29f, 0x87c1c123, 0x53a202a6, 0xf1535351,\n  0xdcae8ba5, 0x72dcdc57, 0x0b582716, 0x530b0b2c,\n  0x9d9cd327, 0x019d9d4e, 0x6c47c1d8, 0x2b6c6cad,\n  0x3195f562, 0xa43131c4, 0x7487b9e8, 0xf37474cd,\n  0xf6e309f1, 0x15f6f6ff, 0x460a438c, 0x4c464605,\n  0xac092645, 0xa5acac8a, 0x893c970f, 0xb589891e,\n  0x14a04428, 0xb4141450, 0xe15b42df, 0xbae1e1a3,\n  0x16b04e2c, 0xa6161658, 0x3acdd274, 0xf73a3ae8,\n  0x696fd0d2, 0x066969b9, 0x09482d12, 0x41090924,\n  0x70a7ade0, 0xd77070dd, 0xb6d95471, 0x6fb6b6e2,\n  0xd0ceb7bd, 0x1ed0d067, 0xed3b7ec7, 0xd6eded93,\n  0xcc2edb85, 0xe2cccc17, 0x422a5784, 0x68424215,\n  0x98b4c22d, 0x2c98985a, 0xa4490e55, 0xeda4a4aa,\n  0x285d8850, 0x752828a0, 0x5cda31b8, 0x865c5c6d,\n  0xf8933fed, 0x6bf8f8c7, 0x8644a411, 0xc2868622\n]);\n\nconst C6 = new Uint32Array([\n  0x6018c078, 0x30d81818, 0x8c2305af, 0x46262323,\n  0x3fc67ef9, 0x91b8c6c6, 0x87e8136f, 0xcdfbe8e8,\n  0x26874ca1, 0x13cb8787, 0xdab8a962, 0x6d11b8b8,\n  0x04010805, 0x02090101, 0x214f426e, 0x9e0d4f4f,\n  0xd836adee, 0x6c9b3636, 0xa2a65904, 0x51ffa6a6,\n  0x6fd2debd, 0xb90cd2d2, 0xf3f5fb06, 0xf70ef5f5,\n  0xf979ef80, 0xf2967979, 0xa16f5fce, 0xde306f6f,\n  0x7e91fcef, 0x3f6d9191, 0x5552aa07, 0xa4f85252,\n  0x9d6027fd, 0xc0476060, 0xcabc8976, 0x6535bcbc,\n  0x569baccd, 0x2b379b9b, 0x028e048c, 0x018a8e8e,\n  0xb6a37115, 0x5bd2a3a3, 0x300c603c, 0x186c0c0c,\n  0xf17bff8a, 0xf6847b7b, 0xd435b5e1, 0x6a803535,\n  0x741de869, 0x3af51d1d, 0xa7e05347, 0xddb3e0e0,\n  0x7bd7f6ac, 0xb321d7d7, 0x2fc25eed, 0x999cc2c2,\n  0xb82e6d96, 0x5c432e2e, 0x314b627a, 0x96294b4b,\n  0xdffea321, 0xe15dfefe, 0x41578216, 0xaed55757,\n  0x5415a841, 0x2abd1515, 0xc1779fb6, 0xeee87777,\n  0xdc37a5eb, 0x6e923737, 0xb3e57b56, 0xd79ee5e5,\n  0x469f8cd9, 0x23139f9f, 0xe7f0d317, 0xfd23f0f0,\n  0x354a6a7f, 0x94204a4a, 0x4fda9e95, 0xa944dada,\n  0x7d58fa25, 0xb0a25858, 0x03c906ca, 0x8fcfc9c9,\n  0xa429558d, 0x527c2929, 0x280a5022, 0x145a0a0a,\n  0xfeb1e14f, 0x7f50b1b1, 0xbaa0691a, 0x5dc9a0a0,\n  0xb16b7fda, 0xd6146b6b, 0x2e855cab, 0x17d98585,\n  0xcebd8173, 0x673cbdbd, 0x695dd234, 0xba8f5d5d,\n  0x40108050, 0x20901010, 0xf7f4f303, 0xf507f4f4,\n  0x0bcb16c0, 0x8bddcbcb, 0xf83eedc6, 0x7cd33e3e,\n  0x14052811, 0x0a2d0505, 0x81671fe6, 0xce786767,\n  0xb7e47353, 0xd597e4e4, 0x9c2725bb, 0x4e022727,\n  0x19413258, 0x82734141, 0x168b2c9d, 0x0ba78b8b,\n  0xa6a75101, 0x53f6a7a7, 0xe97dcf94, 0xfab27d7d,\n  0x6e95dcfb, 0x37499595, 0x47d88e9f, 0xad56d8d8,\n  0xcbfb8b30, 0xeb70fbfb, 0x9fee2371, 0xc1cdeeee,\n  0xed7cc791, 0xf8bb7c7c, 0x856617e3, 0xcc716666,\n  0x53dda68e, 0xa77bdddd, 0x5c17b84b, 0x2eaf1717,\n  0x01470246, 0x8e454747, 0x429e84dc, 0x211a9e9e,\n  0x0fca1ec5, 0x89d4caca, 0xb42d7599, 0x5a582d2d,\n  0xc6bf9179, 0x632ebfbf, 0x1c07381b, 0x0e3f0707,\n  0x8ead0123, 0x47acadad, 0x755aea2f, 0xb4b05a5a,\n  0x36836cb5, 0x1bef8383, 0xcc3385ff, 0x66b63333,\n  0x91633ff2, 0xc65c6363, 0x0802100a, 0x04120202,\n  0x92aa3938, 0x4993aaaa, 0xd971afa8, 0xe2de7171,\n  0x07c80ecf, 0x8dc6c8c8, 0x6419c87d, 0x32d11919,\n  0x39497270, 0x923b4949, 0x43d9869a, 0xaf5fd9d9,\n  0xeff2c31d, 0xf931f2f2, 0xabe34b48, 0xdba8e3e3,\n  0x715be22a, 0xb6b95b5b, 0x1a883492, 0x0dbc8888,\n  0x529aa4c8, 0x293e9a9a, 0x98262dbe, 0x4c0b2626,\n  0xc8328dfa, 0x64bf3232, 0xfab0e94a, 0x7d59b0b0,\n  0x83e91b6a, 0xcff2e9e9, 0x3c0f7833, 0x1e770f0f,\n  0x73d5e6a6, 0xb733d5d5, 0x3a8074ba, 0x1df48080,\n  0xc2be997c, 0x6127bebe, 0x13cd26de, 0x87ebcdcd,\n  0xd034bde4, 0x68893434, 0x3d487a75, 0x90324848,\n  0xdbffab24, 0xe354ffff, 0xf57af78f, 0xf48d7a7a,\n  0x7a90f4ea, 0x3d649090, 0x615fc23e, 0xbe9d5f5f,\n  0x80201da0, 0x403d2020, 0xbd6867d5, 0xd00f6868,\n  0x681ad072, 0x34ca1a1a, 0x82ae192c, 0x41b7aeae,\n  0xeab4c95e, 0x757db4b4, 0x4d549a19, 0xa8ce5454,\n  0x7693ece5, 0x3b7f9393, 0x88220daa, 0x442f2222,\n  0x8d6407e9, 0xc8636464, 0xe3f1db12, 0xff2af1f1,\n  0xd173bfa2, 0xe6cc7373, 0x4812905a, 0x24821212,\n  0x1d403a5d, 0x807a4040, 0x20084028, 0x10480808,\n  0x2bc356e8, 0x9b95c3c3, 0x97ec337b, 0xc5dfecec,\n  0x4bdb9690, 0xab4ddbdb, 0xbea1611f, 0x5fc0a1a1,\n  0x0e8d1c83, 0x07918d8d, 0xf43df5c9, 0x7ac83d3d,\n  0x6697ccf1, 0x335b9797, 0x00000000, 0x00000000,\n  0x1bcf36d4, 0x83f9cfcf, 0xac2b4587, 0x566e2b2b,\n  0xc57697b3, 0xece17676, 0x328264b0, 0x19e68282,\n  0x7fd6fea9, 0xb128d6d6, 0x6c1bd877, 0x36c31b1b,\n  0xeeb5c15b, 0x7774b5b5, 0x86af1129, 0x43beafaf,\n  0xb56a77df, 0xd41d6a6a, 0x5d50ba0d, 0xa0ea5050,\n  0x0945124c, 0x8a574545, 0xebf3cb18, 0xfb38f3f3,\n  0xc0309df0, 0x60ad3030, 0x9bef2b74, 0xc3c4efef,\n  0xfc3fe5c3, 0x7eda3f3f, 0x4955921c, 0xaac75555,\n  0xb2a27910, 0x59dba2a2, 0x8fea0365, 0xc9e9eaea,\n  0x89650fec, 0xca6a6565, 0xd2bab968, 0x6903baba,\n  0xbc2f6593, 0x5e4a2f2f, 0x27c04ee7, 0x9d8ec0c0,\n  0x5fdebe81, 0xa160dede, 0x701ce06c, 0x38fc1c1c,\n  0xd3fdbb2e, 0xe746fdfd, 0x294d5264, 0x9a1f4d4d,\n  0x7292e4e0, 0x39769292, 0xc9758fbc, 0xeafa7575,\n  0x1806301e, 0x0c360606, 0x128a2498, 0x09ae8a8a,\n  0xf2b2f940, 0x794bb2b2, 0xbfe66359, 0xd185e6e6,\n  0x380e7036, 0x1c7e0e0e, 0x7c1ff863, 0x3ee71f1f,\n  0x956237f7, 0xc4556262, 0x77d4eea3, 0xb53ad4d4,\n  0x9aa82932, 0x4d81a8a8, 0x6296c4f4, 0x31529696,\n  0xc3f99b3a, 0xef62f9f9, 0x33c566f6, 0x97a3c5c5,\n  0x942535b1, 0x4a102525, 0x7959f220, 0xb2ab5959,\n  0x2a8454ae, 0x15d08484, 0xd572b7a7, 0xe4c57272,\n  0xe439d5dd, 0x72ec3939, 0x2d4c5a61, 0x98164c4c,\n  0x655eca3b, 0xbc945e5e, 0xfd78e785, 0xf09f7878,\n  0xe038ddd8, 0x70e53838, 0x0a8c1486, 0x05988c8c,\n  0x63d1c6b2, 0xbf17d1d1, 0xaea5410b, 0x57e4a5a5,\n  0xafe2434d, 0xd9a1e2e2, 0x99612ff8, 0xc24e6161,\n  0xf6b3f145, 0x7b42b3b3, 0x842115a5, 0x42342121,\n  0x4a9c94d6, 0x25089c9c, 0x781ef066, 0x3cee1e1e,\n  0x11432252, 0x86614343, 0x3bc776fc, 0x93b1c7c7,\n  0xd7fcb32b, 0xe54ffcfc, 0x10042014, 0x08240404,\n  0x5951b208, 0xa2e35151, 0x5e99bcc7, 0x2f259999,\n  0xa96d4fc4, 0xda226d6d, 0x340d6839, 0x1a650d0d,\n  0xcffa8335, 0xe979fafa, 0x5bdfb684, 0xa369dfdf,\n  0xe57ed79b, 0xfca97e7e, 0x90243db4, 0x48192424,\n  0xec3bc5d7, 0x76fe3b3b, 0x96ab313d, 0x4b9aabab,\n  0x1fce3ed1, 0x81f0cece, 0x44118855, 0x22991111,\n  0x068f0c89, 0x03838f8f, 0x254e4a6b, 0x9c044e4e,\n  0xe6b7d151, 0x7366b7b7, 0x8beb0b60, 0xcbe0ebeb,\n  0xf03cfdcc, 0x78c13c3c, 0x3e817cbf, 0x1ffd8181,\n  0x6a94d4fe, 0x35409494, 0xfbf7eb0c, 0xf31cf7f7,\n  0xdeb9a167, 0x6f18b9b9, 0x4c13985f, 0x268b1313,\n  0xb02c7d9c, 0x58512c2c, 0x6bd3d6b8, 0xbb05d3d3,\n  0xbbe76b5c, 0xd38ce7e7, 0xa56e57cb, 0xdc396e6e,\n  0x37c46ef3, 0x95aac4c4, 0x0c03180f, 0x061b0303,\n  0x45568a13, 0xacdc5656, 0x0d441a49, 0x885e4444,\n  0xe17fdf9e, 0xfea07f7f, 0x9ea92137, 0x4f88a9a9,\n  0xa82a4d82, 0x54672a2a, 0xd6bbb16d, 0x6b0abbbb,\n  0x23c146e2, 0x9f87c1c1, 0x5153a202, 0xa6f15353,\n  0x57dcae8b, 0xa572dcdc, 0x2c0b5827, 0x16530b0b,\n  0x4e9d9cd3, 0x27019d9d, 0xad6c47c1, 0xd82b6c6c,\n  0xc43195f5, 0x62a43131, 0xcd7487b9, 0xe8f37474,\n  0xfff6e309, 0xf115f6f6, 0x05460a43, 0x8c4c4646,\n  0x8aac0926, 0x45a5acac, 0x1e893c97, 0x0fb58989,\n  0x5014a044, 0x28b41414, 0xa3e15b42, 0xdfbae1e1,\n  0x5816b04e, 0x2ca61616, 0xe83acdd2, 0x74f73a3a,\n  0xb9696fd0, 0xd2066969, 0x2409482d, 0x12410909,\n  0xdd70a7ad, 0xe0d77070, 0xe2b6d954, 0x716fb6b6,\n  0x67d0ceb7, 0xbd1ed0d0, 0x93ed3b7e, 0xc7d6eded,\n  0x17cc2edb, 0x85e2cccc, 0x15422a57, 0x84684242,\n  0x5a98b4c2, 0x2d2c9898, 0xaaa4490e, 0x55eda4a4,\n  0xa0285d88, 0x50752828, 0x6d5cda31, 0xb8865c5c,\n  0xc7f8933f, 0xed6bf8f8, 0x228644a4, 0x11c28686\n]);\n\nconst C7 = new Uint32Array([\n  0x186018c0, 0x7830d818, 0x238c2305, 0xaf462623,\n  0xc63fc67e, 0xf991b8c6, 0xe887e813, 0x6fcdfbe8,\n  0x8726874c, 0xa113cb87, 0xb8dab8a9, 0x626d11b8,\n  0x01040108, 0x05020901, 0x4f214f42, 0x6e9e0d4f,\n  0x36d836ad, 0xee6c9b36, 0xa6a2a659, 0x0451ffa6,\n  0xd26fd2de, 0xbdb90cd2, 0xf5f3f5fb, 0x06f70ef5,\n  0x79f979ef, 0x80f29679, 0x6fa16f5f, 0xcede306f,\n  0x917e91fc, 0xef3f6d91, 0x525552aa, 0x07a4f852,\n  0x609d6027, 0xfdc04760, 0xbccabc89, 0x766535bc,\n  0x9b569bac, 0xcd2b379b, 0x8e028e04, 0x8c018a8e,\n  0xa3b6a371, 0x155bd2a3, 0x0c300c60, 0x3c186c0c,\n  0x7bf17bff, 0x8af6847b, 0x35d435b5, 0xe16a8035,\n  0x1d741de8, 0x693af51d, 0xe0a7e053, 0x47ddb3e0,\n  0xd77bd7f6, 0xacb321d7, 0xc22fc25e, 0xed999cc2,\n  0x2eb82e6d, 0x965c432e, 0x4b314b62, 0x7a96294b,\n  0xfedffea3, 0x21e15dfe, 0x57415782, 0x16aed557,\n  0x155415a8, 0x412abd15, 0x77c1779f, 0xb6eee877,\n  0x37dc37a5, 0xeb6e9237, 0xe5b3e57b, 0x56d79ee5,\n  0x9f469f8c, 0xd923139f, 0xf0e7f0d3, 0x17fd23f0,\n  0x4a354a6a, 0x7f94204a, 0xda4fda9e, 0x95a944da,\n  0x587d58fa, 0x25b0a258, 0xc903c906, 0xca8fcfc9,\n  0x29a42955, 0x8d527c29, 0x0a280a50, 0x22145a0a,\n  0xb1feb1e1, 0x4f7f50b1, 0xa0baa069, 0x1a5dc9a0,\n  0x6bb16b7f, 0xdad6146b, 0x852e855c, 0xab17d985,\n  0xbdcebd81, 0x73673cbd, 0x5d695dd2, 0x34ba8f5d,\n  0x10401080, 0x50209010, 0xf4f7f4f3, 0x03f507f4,\n  0xcb0bcb16, 0xc08bddcb, 0x3ef83eed, 0xc67cd33e,\n  0x05140528, 0x110a2d05, 0x6781671f, 0xe6ce7867,\n  0xe4b7e473, 0x53d597e4, 0x279c2725, 0xbb4e0227,\n  0x41194132, 0x58827341, 0x8b168b2c, 0x9d0ba78b,\n  0xa7a6a751, 0x0153f6a7, 0x7de97dcf, 0x94fab27d,\n  0x956e95dc, 0xfb374995, 0xd847d88e, 0x9fad56d8,\n  0xfbcbfb8b, 0x30eb70fb, 0xee9fee23, 0x71c1cdee,\n  0x7ced7cc7, 0x91f8bb7c, 0x66856617, 0xe3cc7166,\n  0xdd53dda6, 0x8ea77bdd, 0x175c17b8, 0x4b2eaf17,\n  0x47014702, 0x468e4547, 0x9e429e84, 0xdc211a9e,\n  0xca0fca1e, 0xc589d4ca, 0x2db42d75, 0x995a582d,\n  0xbfc6bf91, 0x79632ebf, 0x071c0738, 0x1b0e3f07,\n  0xad8ead01, 0x2347acad, 0x5a755aea, 0x2fb4b05a,\n  0x8336836c, 0xb51bef83, 0x33cc3385, 0xff66b633,\n  0x6391633f, 0xf2c65c63, 0x02080210, 0x0a041202,\n  0xaa92aa39, 0x384993aa, 0x71d971af, 0xa8e2de71,\n  0xc807c80e, 0xcf8dc6c8, 0x196419c8, 0x7d32d119,\n  0x49394972, 0x70923b49, 0xd943d986, 0x9aaf5fd9,\n  0xf2eff2c3, 0x1df931f2, 0xe3abe34b, 0x48dba8e3,\n  0x5b715be2, 0x2ab6b95b, 0x881a8834, 0x920dbc88,\n  0x9a529aa4, 0xc8293e9a, 0x2698262d, 0xbe4c0b26,\n  0x32c8328d, 0xfa64bf32, 0xb0fab0e9, 0x4a7d59b0,\n  0xe983e91b, 0x6acff2e9, 0x0f3c0f78, 0x331e770f,\n  0xd573d5e6, 0xa6b733d5, 0x803a8074, 0xba1df480,\n  0xbec2be99, 0x7c6127be, 0xcd13cd26, 0xde87ebcd,\n  0x34d034bd, 0xe4688934, 0x483d487a, 0x75903248,\n  0xffdbffab, 0x24e354ff, 0x7af57af7, 0x8ff48d7a,\n  0x907a90f4, 0xea3d6490, 0x5f615fc2, 0x3ebe9d5f,\n  0x2080201d, 0xa0403d20, 0x68bd6867, 0xd5d00f68,\n  0x1a681ad0, 0x7234ca1a, 0xae82ae19, 0x2c41b7ae,\n  0xb4eab4c9, 0x5e757db4, 0x544d549a, 0x19a8ce54,\n  0x937693ec, 0xe53b7f93, 0x2288220d, 0xaa442f22,\n  0x648d6407, 0xe9c86364, 0xf1e3f1db, 0x12ff2af1,\n  0x73d173bf, 0xa2e6cc73, 0x12481290, 0x5a248212,\n  0x401d403a, 0x5d807a40, 0x08200840, 0x28104808,\n  0xc32bc356, 0xe89b95c3, 0xec97ec33, 0x7bc5dfec,\n  0xdb4bdb96, 0x90ab4ddb, 0xa1bea161, 0x1f5fc0a1,\n  0x8d0e8d1c, 0x8307918d, 0x3df43df5, 0xc97ac83d,\n  0x976697cc, 0xf1335b97, 0x00000000, 0x00000000,\n  0xcf1bcf36, 0xd483f9cf, 0x2bac2b45, 0x87566e2b,\n  0x76c57697, 0xb3ece176, 0x82328264, 0xb019e682,\n  0xd67fd6fe, 0xa9b128d6, 0x1b6c1bd8, 0x7736c31b,\n  0xb5eeb5c1, 0x5b7774b5, 0xaf86af11, 0x2943beaf,\n  0x6ab56a77, 0xdfd41d6a, 0x505d50ba, 0x0da0ea50,\n  0x45094512, 0x4c8a5745, 0xf3ebf3cb, 0x18fb38f3,\n  0x30c0309d, 0xf060ad30, 0xef9bef2b, 0x74c3c4ef,\n  0x3ffc3fe5, 0xc37eda3f, 0x55495592, 0x1caac755,\n  0xa2b2a279, 0x1059dba2, 0xea8fea03, 0x65c9e9ea,\n  0x6589650f, 0xecca6a65, 0xbad2bab9, 0x686903ba,\n  0x2fbc2f65, 0x935e4a2f, 0xc027c04e, 0xe79d8ec0,\n  0xde5fdebe, 0x81a160de, 0x1c701ce0, 0x6c38fc1c,\n  0xfdd3fdbb, 0x2ee746fd, 0x4d294d52, 0x649a1f4d,\n  0x927292e4, 0xe0397692, 0x75c9758f, 0xbceafa75,\n  0x06180630, 0x1e0c3606, 0x8a128a24, 0x9809ae8a,\n  0xb2f2b2f9, 0x40794bb2, 0xe6bfe663, 0x59d185e6,\n  0x0e380e70, 0x361c7e0e, 0x1f7c1ff8, 0x633ee71f,\n  0x62956237, 0xf7c45562, 0xd477d4ee, 0xa3b53ad4,\n  0xa89aa829, 0x324d81a8, 0x966296c4, 0xf4315296,\n  0xf9c3f99b, 0x3aef62f9, 0xc533c566, 0xf697a3c5,\n  0x25942535, 0xb14a1025, 0x597959f2, 0x20b2ab59,\n  0x842a8454, 0xae15d084, 0x72d572b7, 0xa7e4c572,\n  0x39e439d5, 0xdd72ec39, 0x4c2d4c5a, 0x6198164c,\n  0x5e655eca, 0x3bbc945e, 0x78fd78e7, 0x85f09f78,\n  0x38e038dd, 0xd870e538, 0x8c0a8c14, 0x8605988c,\n  0xd163d1c6, 0xb2bf17d1, 0xa5aea541, 0x0b57e4a5,\n  0xe2afe243, 0x4dd9a1e2, 0x6199612f, 0xf8c24e61,\n  0xb3f6b3f1, 0x457b42b3, 0x21842115, 0xa5423421,\n  0x9c4a9c94, 0xd625089c, 0x1e781ef0, 0x663cee1e,\n  0x43114322, 0x52866143, 0xc73bc776, 0xfc93b1c7,\n  0xfcd7fcb3, 0x2be54ffc, 0x04100420, 0x14082404,\n  0x515951b2, 0x08a2e351, 0x995e99bc, 0xc72f2599,\n  0x6da96d4f, 0xc4da226d, 0x0d340d68, 0x391a650d,\n  0xfacffa83, 0x35e979fa, 0xdf5bdfb6, 0x84a369df,\n  0x7ee57ed7, 0x9bfca97e, 0x2490243d, 0xb4481924,\n  0x3bec3bc5, 0xd776fe3b, 0xab96ab31, 0x3d4b9aab,\n  0xce1fce3e, 0xd181f0ce, 0x11441188, 0x55229911,\n  0x8f068f0c, 0x8903838f, 0x4e254e4a, 0x6b9c044e,\n  0xb7e6b7d1, 0x517366b7, 0xeb8beb0b, 0x60cbe0eb,\n  0x3cf03cfd, 0xcc78c13c, 0x813e817c, 0xbf1ffd81,\n  0x946a94d4, 0xfe354094, 0xf7fbf7eb, 0x0cf31cf7,\n  0xb9deb9a1, 0x676f18b9, 0x134c1398, 0x5f268b13,\n  0x2cb02c7d, 0x9c58512c, 0xd36bd3d6, 0xb8bb05d3,\n  0xe7bbe76b, 0x5cd38ce7, 0x6ea56e57, 0xcbdc396e,\n  0xc437c46e, 0xf395aac4, 0x030c0318, 0x0f061b03,\n  0x5645568a, 0x13acdc56, 0x440d441a, 0x49885e44,\n  0x7fe17fdf, 0x9efea07f, 0xa99ea921, 0x374f88a9,\n  0x2aa82a4d, 0x8254672a, 0xbbd6bbb1, 0x6d6b0abb,\n  0xc123c146, 0xe29f87c1, 0x535153a2, 0x02a6f153,\n  0xdc57dcae, 0x8ba572dc, 0x0b2c0b58, 0x2716530b,\n  0x9d4e9d9c, 0xd327019d, 0x6cad6c47, 0xc1d82b6c,\n  0x31c43195, 0xf562a431, 0x74cd7487, 0xb9e8f374,\n  0xf6fff6e3, 0x09f115f6, 0x4605460a, 0x438c4c46,\n  0xac8aac09, 0x2645a5ac, 0x891e893c, 0x970fb589,\n  0x145014a0, 0x4428b414, 0xe1a3e15b, 0x42dfbae1,\n  0x165816b0, 0x4e2ca616, 0x3ae83acd, 0xd274f73a,\n  0x69b9696f, 0xd0d20669, 0x09240948, 0x2d124109,\n  0x70dd70a7, 0xade0d770, 0xb6e2b6d9, 0x54716fb6,\n  0xd067d0ce, 0xb7bd1ed0, 0xed93ed3b, 0x7ec7d6ed,\n  0xcc17cc2e, 0xdb85e2cc, 0x4215422a, 0x57846842,\n  0x985a98b4, 0xc22d2c98, 0xa4aaa449, 0x0e55eda4,\n  0x28a0285d, 0x88507528, 0x5c6d5cda, 0x31b8865c,\n  0xf8c7f893, 0x3fed6bf8, 0x86228644, 0xa411c286\n]);\n\n/**\n * Whirlpool\n */\n\nclass Whirlpool {\n  constructor() {\n    this.state = new Uint32Array(16);\n    this.msg = new Uint32Array(16);\n    this.block = Buffer.alloc(64);\n    this.size = FINALIZED;\n  }\n\n  init() {\n    for (let i = 0; i < 16; i++)\n      this.state[i] = 0;\n    this.size = 0;\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    this._update(data, data.length);\n    return this;\n  }\n\n  final() {\n    return this._final(Buffer.alloc(64));\n  }\n\n  _update(data, len) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    let pos = this.size & 63;\n    let off = 0;\n\n    this.size += len;\n\n    if (pos > 0) {\n      let want = 64 - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < 64)\n        return;\n\n      this._transform(this.block, 0);\n    }\n\n    while (len >= 64) {\n      this._transform(data, off);\n      off += 64;\n      len -= 64;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n  }\n\n  _final(out) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    const pos = this.size & 63;\n    const len = this.size * 8;\n\n    writeU32(DESC, (len * (1 / 0x100000000)) >>> 0, 24);\n    writeU32(DESC, len >>> 0, 28);\n\n    this._update(PADDING, 1 + ((95 - pos) & 63));\n    this._update(DESC, 32);\n\n    for (let i = 0; i < 16; i++) {\n      writeU32(out, this.state[i], i * 4);\n      this.state[i] = 0;\n    }\n\n    for (let i = 0; i < 16; i++)\n      this.msg[i] = 0;\n\n    for (let i = 0; i < 64; i++)\n      this.block[i] = 0;\n\n    this.size = FINALIZED;\n\n    return out;\n  }\n\n  _transform(chunk, pos) {\n    const block = this.msg;\n\n    for (let i = 0; i < 16; i++)\n      block[i] = readU32(chunk, pos + i * 4);\n\n    const K = new Uint32Array(16);\n    const L = new Uint32Array(16);\n    const state = new Uint32Array(16);\n\n    for (let i = 0; i < 16; i++) {\n      K[i] = this.state[i];\n      state[i] = block[i] ^ K[i];\n    }\n\n    for (let r = 1; r < 10 + 1; r++) {\n      for (let i = 0; i < 8; i++) {\n        L[i * 2 + 0] = 0\n          ^ C0[((K[(0 + i) % 8 * 2 + 0] >>> 24) & 0xff) * 2 + 0]\n          ^ C1[((K[(7 + i) % 8 * 2 + 0] >>> 16) & 0xff) * 2 + 0]\n          ^ C2[((K[(6 + i) % 8 * 2 + 0] >>>  8) & 0xff) * 2 + 0]\n          ^ C3[((K[(5 + i) % 8 * 2 + 0] >>>  0) & 0xff) * 2 + 0]\n          ^ C4[((K[(4 + i) % 8 * 2 + 1] >>> 24) & 0xff) * 2 + 0]\n          ^ C5[((K[(3 + i) % 8 * 2 + 1] >>> 16) & 0xff) * 2 + 0]\n          ^ C6[((K[(2 + i) % 8 * 2 + 1] >>>  8) & 0xff) * 2 + 0]\n          ^ C7[((K[(1 + i) % 8 * 2 + 1] >>>  0) & 0xff) * 2 + 0]\n          ^ (i === 0 ? RC[r * 2 + 0] : 0);\n\n        L[i * 2 + 1] = 0\n          ^ C0[((K[(0 + i) % 8 * 2 + 0] >>> 24) & 0xff) * 2 + 1]\n          ^ C1[((K[(7 + i) % 8 * 2 + 0] >>> 16) & 0xff) * 2 + 1]\n          ^ C2[((K[(6 + i) % 8 * 2 + 0] >>>  8) & 0xff) * 2 + 1]\n          ^ C3[((K[(5 + i) % 8 * 2 + 0] >>>  0) & 0xff) * 2 + 1]\n          ^ C4[((K[(4 + i) % 8 * 2 + 1] >>> 24) & 0xff) * 2 + 1]\n          ^ C5[((K[(3 + i) % 8 * 2 + 1] >>> 16) & 0xff) * 2 + 1]\n          ^ C6[((K[(2 + i) % 8 * 2 + 1] >>>  8) & 0xff) * 2 + 1]\n          ^ C7[((K[(1 + i) % 8 * 2 + 1] >>>  0) & 0xff) * 2 + 1]\n          ^ (i === 0 ? RC[r * 2 + 1] : 0);\n      }\n\n      for (let i = 0; i < 16; i++)\n        K[i] = L[i];\n\n      for (let i = 0; i < 8; i++) {\n        L[i * 2 + 0] = 0\n          ^ C0[((state[(0 + i) % 8 * 2 + 0] >>> 24) & 0xff) * 2 + 0]\n          ^ C1[((state[(7 + i) % 8 * 2 + 0] >>> 16) & 0xff) * 2 + 0]\n          ^ C2[((state[(6 + i) % 8 * 2 + 0] >>>  8) & 0xff) * 2 + 0]\n          ^ C3[((state[(5 + i) % 8 * 2 + 0] >>>  0) & 0xff) * 2 + 0]\n          ^ C4[((state[(4 + i) % 8 * 2 + 1] >>> 24) & 0xff) * 2 + 0]\n          ^ C5[((state[(3 + i) % 8 * 2 + 1] >>> 16) & 0xff) * 2 + 0]\n          ^ C6[((state[(2 + i) % 8 * 2 + 1] >>>  8) & 0xff) * 2 + 0]\n          ^ C7[((state[(1 + i) % 8 * 2 + 1] >>>  0) & 0xff) * 2 + 0]\n          ^ K[i * 2 + 0];\n\n        L[i * 2 + 1] = 0\n          ^ C0[((state[(0 + i) % 8 * 2 + 0] >>> 24) & 0xff) * 2 + 1]\n          ^ C1[((state[(7 + i) % 8 * 2 + 0] >>> 16) & 0xff) * 2 + 1]\n          ^ C2[((state[(6 + i) % 8 * 2 + 0] >>>  8) & 0xff) * 2 + 1]\n          ^ C3[((state[(5 + i) % 8 * 2 + 0] >>>  0) & 0xff) * 2 + 1]\n          ^ C4[((state[(4 + i) % 8 * 2 + 1] >>> 24) & 0xff) * 2 + 1]\n          ^ C5[((state[(3 + i) % 8 * 2 + 1] >>> 16) & 0xff) * 2 + 1]\n          ^ C6[((state[(2 + i) % 8 * 2 + 1] >>>  8) & 0xff) * 2 + 1]\n          ^ C7[((state[(1 + i) % 8 * 2 + 1] >>>  0) & 0xff) * 2 + 1]\n          ^ K[i * 2 + 1];\n      }\n\n      for (let i = 0; i < 16; i++)\n        state[i] = L[i];\n    }\n\n    for (let i = 0; i < 16; i++)\n      this.state[i] ^= state[i] ^ block[i];\n  }\n\n  static hash() {\n    return new Whirlpool();\n  }\n\n  static hmac() {\n    return new HMAC(Whirlpool, 64);\n  }\n\n  static digest(data) {\n    return Whirlpool.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 64);\n    assert(Buffer.isBuffer(right) && right.length === 64);\n    return Whirlpool.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = Whirlpool;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return Whirlpool.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nWhirlpool.native = 0;\nWhirlpool.id = 'WHIRLPOOL';\nWhirlpool.size = 64;\nWhirlpool.bits = 512;\nWhirlpool.blockSize = 64;\nWhirlpool.zero = Buffer.alloc(64, 0x00);\nWhirlpool.ctx = new Whirlpool();\n\n/*\n * Helpers\n */\n\nfunction readU32(data, off) {\n  return (data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction writeU32(data, num, off) {\n  data[off++] = num >>> 24;\n  data[off++] = num >>> 16;\n  data[off++] = num >>> 8;\n  data[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Whirlpool;\n","/*!\n * x448.js - x448 for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nmodule.exports = require('./js/x448');\n","/*!\n * x448.js - x448 for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Curve448\n *   https://eprint.iacr.org/2015/625.pdf\n *   https://tools.ietf.org/html/rfc7748#section-5\n */\n\n'use strict';\n\nconst ECDH = require('./ecdh');\n\n/*\n * Expose\n */\n\nmodule.exports = new ECDH('X448', 'ED448');\n","import { TxData } from \"..\";\nimport { ParseResult, WizDataList } from \"../model\";\nimport { Opcodes } from \"../opcodes\";\nimport { VM } from \"../opcodes/model/VM\";\nimport { currentScope } from \"../utils\";\nimport { compileJoin } from \"./compileAll\";\nimport { parse } from \"./parse\";\n\nconst initialStackDataList: WizDataList = {\n  inputHexes: [],\n  main: [],\n  alt: [],\n  flow: [true],\n  altFlow: [],\n  isStackFailed: false,\n  txData: { inputs: [], outputs: [], version: \"\", timelock: \"\", currentInputIndex: 0 },\n};\n\nexport class ScriptWiz {\n  vm: VM;\n  opCodes: Opcodes;\n  stackDataList: WizDataList;\n\n  constructor(vm: VM) {\n    this.vm = vm;\n    this.opCodes = new Opcodes(vm);\n    this.stackDataList = { ...initialStackDataList };\n  }\n\n  clearStackDataList = () => {\n    this.stackDataList = { ...initialStackDataList };\n  };\n\n  parseHex = (input: string): void => this.parseInput(input);\n\n  parseNumber = (input: number): void => this.parseInput(undefined, input);\n\n  parseText = (input: string): void => this.parseInput(undefined, undefined, input);\n\n  parseBin = (input: string): void => this.parseInput(undefined, undefined, undefined, input);\n\n  parseOpcode = (input: string): void => this.parseInput(undefined, undefined, undefined, undefined, input);\n\n  parseTxData = (input: TxData): void => {\n    this.stackDataList = { ...this.stackDataList, txData: input };\n  };\n\n  //\n  compile = () => compileJoin(this.stackDataList.inputHexes);\n\n  private parseInput = (inputHex?: string, inputNumber?: number, inputText?: string, inputBin?: string, inputOpCode?: string): void => {\n    const currentScopeParse: boolean = currentScope(this.stackDataList);\n    let currentScopeParseException: boolean = false;\n    if (inputOpCode !== undefined) currentScopeParseException = inputOpCode === \"OP_IF\" || inputOpCode === \"OP_NOTIF\" || inputOpCode === \"OP_ELSE\" || inputOpCode === \"OP_ENDIF\";\n\n    let parseResult: ParseResult;\n\n    parseResult = parse(this.opCodes.data, this.stackDataList, currentScopeParse, currentScopeParseException, inputHex, inputNumber, inputText, inputBin, inputOpCode, this.vm);\n\n    this.parseResultCommit(parseResult);\n  };\n\n  private parseResultCommit = (parseResult: ParseResult) => {\n    // add input hexes\n    this.stackDataList = { ...this.stackDataList, inputHexes: [...this.stackDataList.inputHexes, parseResult.inputHex], errorMessage: parseResult.errorMessage };\n\n    // return failed after add input hex\n    if (this.stackDataList.isStackFailed) {\n      this.stackDataList = { ...this.stackDataList, errorMessage: \"Failed stack list can't parse input.\" };\n      return;\n    }\n\n    // remove item(s) from main stack\n    if (parseResult.main.removeLastSize > 0) {\n      this.stackDataList = { ...this.stackDataList, main: this.stackDataList.main.slice(0, this.stackDataList.main.length - parseResult.main.removeLastSize) };\n    }\n\n    // remove last item from alternate stack\n    if (parseResult.alt.removeLastStackData) {\n      this.stackDataList = { ...this.stackDataList, alt: this.stackDataList.alt.slice(0, this.stackDataList.alt.length - 1) };\n    }\n\n    // add item array to main stack\n    this.stackDataList = { ...this.stackDataList, main: this.stackDataList.main.concat(parseResult.main.addDataArray) };\n\n    // add item to alternate stack\n    if (parseResult.alt.addData) this.stackDataList = { ...this.stackDataList, alt: [...this.stackDataList.alt, parseResult.alt.addData] };\n\n    // update flow\n    if (parseResult.flow) this.stackDataList = { ...this.stackDataList, flow: parseResult.flow };\n\n    // update alt flow\n    if (parseResult.altFlow) this.stackDataList = { ...this.stackDataList, altFlow: parseResult.altFlow };\n\n    // stack failed\n    if (parseResult.isStackFailed) {\n      this.stackDataList = { ...this.stackDataList, isStackFailed: true, errorMessage: \"Stack failed an OP_VERIFY operation.\" };\n    }\n  };\n}\n","import { VM, VM_NETWORK, VM_NETWORK_VERSION } from \"./model/VM\";\nimport { Opcode } from \"./model/Opcode\";\nimport { opcodesBitcoinSegwit } from \"./BITCOIN_SEGWIT\";\nimport { opcodesBitcoinTapscript } from \"./BITCOIN_TAPSCRIPT\";\nimport { opcodesLiquidSegwit } from \"./LIQUID_SEGWIT\";\nimport { opcodesLiquidTapscript } from \"./LIQUID_TAPSCRIPT\";\n\nconst opcodes = (vm: VM): Opcode[] => {\n  if (vm.network === VM_NETWORK.BTC) {\n    if (vm.ver === VM_NETWORK_VERSION.SEGWIT) return opcodesBitcoinSegwit;\n    // else if(vm.ver === VM_NETWORK_VERSION.TAPSCRIPT)\n    return opcodesBitcoinTapscript;\n  }\n  // else {\n  // if (vm.network === VM_NETWORK.LIQUID) {\n  if (vm.ver === VM_NETWORK_VERSION.SEGWIT) return opcodesLiquidSegwit;\n  // else if(vm.ver === VM_NETWORK_VERSION.TAPSCRIPT)\n  return opcodesLiquidTapscript;\n  // }\n  // }\n};\n\nexport class Opcodes {\n  vm: VM;\n  data: Opcode[];\n\n  constructor(vm: VM) {\n    this.vm = vm;\n    this.data = opcodes(vm);\n  }\n\n  wordData = (word: string): Opcode | undefined => this.data.find((d) => d.word === word);\n  wordCode = (word: string): number => {\n    const code = this.wordData(word)?.opcode;\n    return code === undefined ? -1 : code;\n  };\n  wordHex = (word: string): string => this.wordData(word)?.hex || \"\";\n\n  codeData = (code: number): Opcode | undefined => this.data.find((d) => d.opcode === code);\n  codeWord = (code: number): string => this.codeData(code)?.word || \"\";\n}\n","import { Opcode } from \"./model/Opcode\";\nimport { opcodesBitcoinSegwit } from \"./BITCOIN_SEGWIT\";\n\nexport const opcodesBitcoinTapscript: Opcode[] = [...opcodesBitcoinSegwit];\n","import { Opcode } from \"./model/Opcode\";\nimport { opcodesLiquidSegwit } from \"./LIQUID_SEGWIT\";\n\nexport const opcodesLiquidTapscript: Opcode[] = [\n  ...opcodesLiquidSegwit,\n\n  /*\n   * Introspection Opcodes\n   */\n  // inputs\n  {\n    word: \"OP_INSPECTINPUTOUTPOINT\",\n    opcode: 199,\n    hex: \"0xc7\",\n    description:\n      \" Pop a CScriptNum input index idx and push the outpoint as a tuple. First push the txid(32) of the prev_out, followed by a 4 byte push of vout followed by a push for the outpoint_flag(1) as defined in Modified BIP-341 SigMsg for Elements.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_INSPECTINPUTASSET\",\n    opcode: 200,\n    hex: \"0xc8\",\n    description: \"  Pop a CScriptNum input index idx and push the nAsset onto the stack as two elements. The first push the assetID(32), followed by the prefix(1).\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_INSPECTINPUTVALUE\",\n    opcode: 201,\n    hex: \"0xc9\",\n    description: \" Pop a CScriptNum input index idx and push the nValue as a tuple, value(8 byte LE, 32) followed by prefix(1).\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_INSPECTINPUTSCRIPTPUBKEY\",\n    opcode: 202,\n    hex: \"0xca\",\n    description:\n      \" Pop a CScriptNum input index idx and push the following depending the type of scriptPubkey: If the scriptPubKey is not a native segwit program, push a single sha256 hash of the scriptPubKey on stack top. Next, push a CScriptNum(-1) to indicate a non-native segwit scriptPubKey.If the scriptPubKey is a native segwit program, push the witness program(2-40) followed by a push for segwit version(0-1).\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_INSPECTINPUTSEQUENCE\",\n    opcode: 203,\n    hex: \"0xcb\",\n    description: \" Pop a CScriptNum input index idx and push the nSequence(4) as little-endian number.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_INSPECTINPUTISSUANCE\",\n    opcode: 204,\n    hex: \"0xcc\",\n    description:\n      \" Pop a CScriptNum input index idx and push the assetIssuance information if the asset has issuance, otherwise push an empty vector. Asset Issuance information is pushed as follows: Push nInflationKeys as tuple, value(8 byte LE, 32) followed by push for prefix(1). In case nInflationKeys is null, push a 8 byte LE 0 followed by a push for explicit prefix(1).Push nAmount as a tuple, value(8 byte LE, 32) followed by a push for prefix(1). In case nAmount is null, push a 8 byte LE 0 followed by a push for explicit prefix(1).Push 32 byte assetEntropy.Push 32 byte assetBlindingNonce.\",\n  }, //\tliquid network feature.\n\n  // current index\n  {\n    word: \"OP_PUSHCURRENTINPUTINDEX\",\n    opcode: 205,\n    hex: \"0xcd\",\n    description: \" that pushes the current input index as CScriptNum. This can be used in conjunction with input introspection opcodes for inspecting current input.\",\n  }, //\tliquid network feature.\n\n  // outputs\n  {\n    word: \"OP_INSPECTOUTPUTASSET\",\n    opcode: 206,\n    hex: \"0xce\",\n    description: \"  Pop a CScriptNum input index idx and push the nAsset as a tuple, first push the assetID(32), followed by the prefix(1).\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_INSPECTOUTPUTVALUE\",\n    opcode: 207,\n    hex: \"0xcf\",\n    description: \" Pop a CScriptNum input index idx and push the nValue as a tuple, value(8 byte LE, 32) followed by prefix.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_INSPECTOUTPUTNONCE\",\n    opcode: 208,\n    hex: \"0xd0\",\n    description: \" Pop a CScriptNum input index idx and push the nNonce(33) onto the stack. If the nonce is null, push an empty vector onto the stack.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_INSPECTOUTPUTSCRIPTPUBKEY\",\n    opcode: 209,\n    hex: \"0xd1\",\n    description:\n      \" Pop a CScriptNum input index idx and push the scriptPubkey onto the stack.If the scriptPubKey is not a native segwit program, push a single sha256 hash of the scriptPubKey on stack top. Next, push a CScriptNum(-1) to indicate a non-native segwit scriptPubKey.If the scriptPubKey is a native segwit program, push the witness program(2-40) followed by a push for segwit version(0-1).\",\n  }, //\tliquid network feature.\n\n  // transaction\n  {\n    word: \"OP_INSPECTVERSION\",\n    opcode: 210,\n    hex: \"0xd2\",\n    description: \" Push the nVersion(4) as little-endian.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_INSPECTLOCKTIME\",\n    opcode: 211,\n    hex: \"0xd3\",\n    description: \" Push the nLockTime(4) as little-endian.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_INSPECTNUMINPUTS\",\n    opcode: 212,\n    hex: \"0xd4\",\n    description: \" Push the number of inputs as CScriptNum.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_INSPECTNUMOUTPUTS\",\n    opcode: 213,\n    hex: \"0xd5\",\n    description: \" Push the number of outputs as CScriptNum.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_TXWEIGHT\",\n    opcode: 214,\n    hex: \"0xd6\",\n    description: \" Push the transaction weight (8) as little-endian.\",\n  }, //\tliquid network feature.\n  /*\n   * Conversion\n   */\n  {\n    word: \"OP_ADD64\",\n    opcode: 215,\n    hex: \"0xd7\",\n    description:\n      \" pop the first number(8 byte LE) as b followed another pop for a(8 byte LE). Push a + b onto the stack. Push 1 CScriptNum if there is no overflow. Overflow behavior defined above.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_SUB64\",\n    opcode: 216,\n    hex: \"0xd8\",\n    description:\n      \" pop the first number(8 byte LE) as b followed another pop for a(8 byte LE). Push a - b onto the stack. Push 1 CScriptNum if there is no overflow. Overflow behavior defined above.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_MUL64\",\n    opcode: 217,\n    hex: \"0xd9\",\n    description:\n      \" pop the first number(8 byte LE) as b followed another pop for a(8 byte LE). Push a*b onto the stack. Push 1 CScriptNum if there is no overflow. Overflow behavior defined above.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_DIV64\",\n    opcode: 218,\n    hex: \"0xda\",\n    description:\n      \" pop the first number(8 byte LE) as b followed another pop for a(8 byte LE). First push remainder a%b(must be non-negative and less than |b|) onto the stack followed by quotient(a//b) onto the stack. If b==0 or a = -2<sup>63</sup> && b = -1, treat as overflow as defined above. Push 1 CScriptNum if there is no overflow.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_NEG64\",\n    opcode: 219,\n    hex: \"0xdb\",\n    description:\n      \" pop the first number(8 byte LE) as a and pushes -a on the stack top. If the number is -2<sup>63</sup>(int64_min) treat as overflow, otherwise push CScriptNum 1 to indicate no overflow.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_LESSTHAN64\",\n    opcode: 220,\n    hex: \"0xdc\",\n    description: \" pop the first number(8 byte LE) as b followed another pop for a(8 byte LE). Push a < b.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_LESSTHANOREQUAL64\",\n    opcode: 221,\n    hex: \"0xdd\",\n    description: \" pop the first number(8 byte LE) as b followed another pop for a(8 byte LE). Push a <= b.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_GREATERTHAN64\",\n    opcode: 222,\n    hex: \"0xde\",\n    description: \" pop the first number(8 byte LE) as b followed another pop for a(8 byte LE). Push a > b.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_GREATERTHANOREQUAL64\",\n    opcode: 223,\n    hex: \"0xdf\",\n    description: \" pop the first number(8 byte LE) as b followed another pop for a(8 byte LE). Push a >= b.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_SCRIPTNUMTOLE64\",\n    opcode: 224,\n    hex: \"0xe0\",\n    description: \" pop the stack as minimal CSciptNum, push 8 byte signed LE corresponding to that number.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_LE64TOSCRIPTNUM\",\n    opcode: 225,\n    hex: \"0xe1\",\n    description: \"pop the stack as a 8 byte signed LE. Convert to CScriptNum and push it, abort on fail.\",\n  }, //\tliquid network feature.\n  {\n    word: \"OP_LE32TOLE64\",\n    opcode: 226,\n    hex: \"0xe2\",\n    description:\n      \"pop the stack as a 4 byte unsigned LE. Push the corresponding 8 byte signed LE number. Cannot fail, useful for operating of version, locktime, sequence, number of inputs, number of outputs, weight etc.\",\n  }, //\tliquid network feature.\n\n  /*\n   * Crypto\n   */\n  {\n    word: \"OP_TWEAKVERIFY\",\n    opcode: 228,\n    hex: \"0xe4\",\n    description:\n      \"Pop the three elements as: 1) 32 byte X-only internal key P, 2) a 32 byte big endian, unsigned scalar k, and 3) 33 byte compressed point Q. Abort if P, Q is invalid or k is not 32 bytes and outside of secp256k1 curve order. Abort if Q != P + k*G where G is the generator for secp256k1.\",\n  }, //\tliquid network feature.\n];\n","import WizData from \"@script-wiz/wiz-data\";\nimport { ParseResult, ParseResultData, WizDataList } from \"../model\";\nimport { Opcode } from \"../opcodes/model/Opcode\";\nimport { VM } from \"../opcodes/model/VM\";\nimport { opcodeToWord, opHexToWord, opWordToHex } from \"../utils\";\nimport { compileData } from \"./compileAll\";\nimport { opFunctions } from \"./opFunctions\";\n\nexport const parse = (\n  opWordCodes: Opcode[],\n  stackDataList: WizDataList,\n  currentScopeParse: boolean,\n  currentScopeParseException: boolean,\n  inputHexParam?: string,\n  inputNumberParam?: number,\n  inputTextParam?: string,\n  inputBinParam?: string,\n  inputOpCodeParam?: string,\n  version?: VM\n): ParseResult => {\n  let emptyParseResultData: ParseResultData = {\n    main: { addDataArray: [], removeLastSize: 0 },\n    alt: { removeLastStackData: false },\n  };\n\n  let inputHex: string = \"\";\n\n  try {\n    // Values\n    if (inputOpCodeParam === undefined) {\n      const wizData: WizData = parseValueInputs(inputHexParam, inputNumberParam, inputTextParam, inputBinParam);\n      inputHex = compileData(wizData.hex);\n\n      if (currentScopeParse) return { inputHex, main: { addDataArray: [wizData], removeLastSize: 0 }, alt: { removeLastStackData: false } };\n      else return { ...emptyParseResultData, inputHex };\n    }\n\n    // OP Functions\n    let opWord = \"\";\n    if (inputOpCodeParam.startsWith(\"OP_\")) {\n      opWord = inputOpCodeParam;\n      inputHex = opWordToHex(opWord, opWordCodes);\n    } else if (inputOpCodeParam.startsWith(\"0x\")) {\n      opWord = opHexToWord(inputOpCodeParam, opWordCodes);\n    } else if (isNaN(inputOpCodeParam as any)) {\n      return { inputHex, errorMessage: \"Invalid OP code, OP word or OP hex\", main: { addDataArray: [], removeLastSize: 0 }, alt: { removeLastStackData: false } };\n    } else {\n      opWord = opcodeToWord(Number(inputOpCodeParam), opWordCodes);\n    }\n\n    if (opWord === undefined || opWord === \"\") throw \"Unknown OP code\";\n\n    if (currentScopeParse || currentScopeParseException) emptyParseResultData = opFunctions(opWord, stackDataList, opWordCodes, version);\n    return { ...emptyParseResultData, inputHex };\n  } catch (ex) {\n    return { inputHex, errorMessage: ex as string, main: { addDataArray: [], removeLastSize: 0 }, alt: { removeLastStackData: false } };\n  }\n};\n\nexport const parseValueInputs = (inputHexParam?: string, inputNumberParam?: number, inputTextParam?: string, inputBinParam?: string): WizData => {\n  // a9f4 (0xa9f4)\n  // 8283284 (8283284)\n  // \"hello\" (\"hello\")\n  // 011101 (0b011101)\n\n  // Hex\n  if (inputHexParam !== undefined) return WizData.fromHex(inputHexParam);\n\n  // Number\n  if (inputNumberParam !== undefined) return WizData.fromNumber(inputNumberParam);\n\n  // Text\n  if (inputTextParam !== undefined) return WizData.fromText(inputTextParam);\n\n  // Bin\n  if (inputBinParam !== undefined) return WizData.fromBin(inputBinParam);\n\n  throw \"parseValueInputs Error: it is not a valid input value!\";\n};\n","import WizData from \"@script-wiz/wiz-data\";\nimport * as arithmetics from \"../core/arithmetics\";\nimport * as bitwise from \"../core/bitwise\";\nimport * as conversion from \"../core/conversion\";\nimport * as arithmetics64 from \"../core/arithmetics64\";\nimport * as crypto from \"../core/crypto\";\nimport * as flow from \"../core/flow\";\nimport * as locktime from \"../core/locktime\";\nimport * as splices from \"../core/splices\";\nimport * as stacks from \"../core/stacks\";\nimport { ParseResultData, WizDataList } from \"../model\";\nimport * as introspection from \"../core/introspection\";\nimport { Opcode } from \"../opcodes/model/Opcode\";\nimport { currentScope } from \"../utils\";\nimport { VM, VM_NETWORK_VERSION } from \"..\";\n\nexport const opFunctions = (word: string, stackDataList: WizDataList, opCodes: Opcode[], vm?: VM): ParseResultData => {\n  const mainStackDataArray: WizData[] = stackDataList.main;\n  const mainStackDataArrayLength = mainStackDataArray.length;\n\n  /*\n   * Constants\n   * * 0 - 96\n   */\n  if (\n    word === \"OP_0\" ||\n    word === \"OP_FALSE\" ||\n    word === \"OP_1\" ||\n    word === \"OP_TRUE\" ||\n    word === \"OP_2\" ||\n    word === \"OP_3\" ||\n    word === \"OP_4\" ||\n    word === \"OP_5\" ||\n    word === \"OP_6\" ||\n    word === \"OP_7\" ||\n    word === \"OP_8\" ||\n    word === \"OP_9\" ||\n    word === \"OP_10\" ||\n    word === \"OP_11\" ||\n    word === \"OP_12\" ||\n    word === \"OP_13\" ||\n    word === \"OP_14\" ||\n    word === \"OP_15\" ||\n    word === \"OP_16\"\n  ) {\n    const currentOpCode = opCodes.find((oc) => oc.word === word);\n    const addDataArray: WizData[] = [WizData.fromNumber(currentOpCode?.output || 0)];\n\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  /*\n   * Flow control\n   * * 97 - 106\n   */\n  if (word === \"OP_NOP\") {\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray: [], removeLastSize }, alt };\n  }\n\n  if (word === \"OP_IF\") {\n    const scope = currentScope(stackDataList);\n\n    let flows = { flow: stackDataList.flow, altFlow: stackDataList.altFlow };\n    if (scope === false) {\n      flows.altFlow.push(false);\n    } else {\n      if (mainStackDataArrayLength < 1) throw \"OP_IF Error: stack data array must include min 1 data!\";\n      flows = flow.flowIf(stackDataList);\n    }\n\n    return {\n      main: { addDataArray: [], removeLastSize: scope ? 1 : 0 },\n      alt: { removeLastStackData: false },\n      flow: flows.flow,\n      altFlow: flows.altFlow,\n    };\n  }\n\n  if (word === \"OP_NOTIF\") {\n    const scope = currentScope(stackDataList);\n\n    let flows = { flow: stackDataList.flow, altFlow: stackDataList.altFlow };\n    if (scope === false) {\n      flows.altFlow.push(false);\n    } else {\n      if (mainStackDataArrayLength < 1) throw \"OP_NOTIF Error: stack data array must include min 1 data!\";\n      flows = flow.flowNotIf(stackDataList);\n    }\n\n    return {\n      main: { addDataArray: [], removeLastSize: scope ? 1 : 0 },\n      alt: { removeLastStackData: false },\n      flow: flows.flow,\n      altFlow: flows.altFlow,\n    };\n  }\n\n  if (word === \"OP_ELSE\") {\n    if (stackDataList.flow.length === 1) throw \"OP_ELSE Error: Encountered an OP_ELSE outside of an OP_IF ... OP_ENDIF block.!\";\n    const flows = flow.flowElse(stackDataList);\n\n    return {\n      main: { addDataArray: [], removeLastSize: 0 },\n      alt: { removeLastStackData: false },\n      flow: flows.flow,\n      altFlow: flows.altFlow,\n    };\n  }\n\n  if (word === \"OP_ENDIF\") {\n    if (stackDataList.flow.length === 1) throw \"OP_ENDIF Error: Encountered an OP_ENDIF which is not following a matching OP_IF.!\";\n    const flows = flow.flowEndIf(stackDataList);\n\n    return {\n      main: { addDataArray: [], removeLastSize: 0 },\n      alt: { removeLastStackData: false },\n      flow: flows.flow,\n      altFlow: flows.altFlow,\n    };\n  }\n\n  if (word === \"OP_VERIFY\") {\n    if (mainStackDataArray.length < 1) throw \"OP_VERIFY Error:  stack data array must include min 1 data!!\";\n\n    const isVerify = flow.flowVerify(mainStackDataArray[mainStackDataArray.length - 1]);\n\n    if (isVerify) {\n      const addDataArray: WizData[] = [];\n      const removeLastSize: number = 1;\n      const alt = { removeLastStackData: false };\n\n      return { main: { addDataArray, removeLastSize }, alt };\n    } else {\n      return { main: { addDataArray: [], removeLastSize: 0 }, alt: { removeLastStackData: false }, isStackFailed: true };\n    }\n  }\n\n  if (word === \"OP_RETURN\") throw \"Program called on OP_RETURN operation\";\n\n  /*\n   * Stack\n   * * 107 - 125\n   */\n  if (word === \"OP_TOALTSTACK\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_TOALTSTACK Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [];\n\n    const removeLastSize: number = 1;\n    const alt = { addData: mainStackDataArray[mainStackDataArrayLength - 1], removeLastStackData: false };\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_FROMALTSTACK\") {\n    const altStackDataArrayLength = stackDataList.alt.length;\n    if (altStackDataArrayLength < 1) throw \"OP_FROMALTSTACK Error: tried to read from an empty alternate stack.\";\n\n    const addDataArray: WizData[] = [stacks.fromAltStack(stackDataList.alt[stackDataList.alt.length - 1])];\n\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: true };\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_2DROP\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_2DROP Error: stack data array must include min 2 data!\";\n    const addDataArray: WizData[] = [];\n    const removeLastSize: number = 2;\n\n    const alt = { removeLastStackData: false };\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_2DUP\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_2DUP Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = stacks.twoDup(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]);\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_3DUP\") {\n    if (mainStackDataArrayLength < 3) throw \"OP_3DUP Error: stack data array must include min 3 data!\";\n\n    const addDataArray: WizData[] = stacks.threeDup(\n      mainStackDataArray[mainStackDataArrayLength - 3],\n      mainStackDataArray[mainStackDataArrayLength - 2],\n      mainStackDataArray[mainStackDataArrayLength - 1]\n    );\n\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_2OVER\") {\n    if (mainStackDataArrayLength < 4) throw \"OP_2OVER Error: stack data array must include min 4 data!\";\n    const addDataArray: WizData[] = stacks.twoOver(mainStackDataArray[mainStackDataArrayLength - 4], mainStackDataArray[mainStackDataArrayLength - 3]);\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_2SWAP\") {\n    if (mainStackDataArrayLength < 4) throw \"OP_2SWAP Error: stack data array must include min 4 data!\";\n\n    const addDataArray: WizData[] = stacks.twoSwap(\n      mainStackDataArray[mainStackDataArrayLength - 1],\n      mainStackDataArray[mainStackDataArrayLength - 2],\n      mainStackDataArray[mainStackDataArrayLength - 3],\n      mainStackDataArray[mainStackDataArrayLength - 4]\n    );\n    const removeLastSize: number = 4;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_IFDUP\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_IFDUP Error: stack data array must include min 1 data!\";\n\n    let addDataArray: WizData[] = [];\n    const currentData = stacks.ifDup(mainStackDataArray[mainStackDataArrayLength - 1]);\n\n    if (currentData !== {}) addDataArray = [stacks.ifDup(mainStackDataArray[mainStackDataArrayLength - 1]) as WizData];\n\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_DEPTH\") {\n    const addDataArray: WizData[] = [stacks.depth(mainStackDataArrayLength)];\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_DROP\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_DROP Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_DUP\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_DUP Error: stack data array must include min 1 data!\";\n    const addDataArray: WizData[] = [stacks.dup(mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_NIP\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_NIP Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [stacks.nip(mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_OVER\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_OVER Error: stack data array must include min 2 data!\";\n    const addDataArray: WizData[] = [stacks.over(mainStackDataArray[mainStackDataArrayLength - 2])];\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_SWAP\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_SWAP Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = stacks.swap(mainStackDataArray[mainStackDataArrayLength - 1], mainStackDataArray[mainStackDataArrayLength - 2]);\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_2ROT\") {\n    if (mainStackDataArrayLength < 6) throw \"OP_2ROT Error: stack data array must include min 6 data!\";\n\n    const addDataArray: WizData[] = stacks.twoRot(\n      mainStackDataArray[mainStackDataArrayLength - 6],\n      mainStackDataArray[mainStackDataArrayLength - 5],\n      mainStackDataArray[mainStackDataArrayLength - 4],\n      mainStackDataArray[mainStackDataArrayLength - 3],\n      mainStackDataArray[mainStackDataArrayLength - 2],\n      mainStackDataArray[mainStackDataArrayLength - 1]\n    );\n\n    const removeLastSize: number = 6;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_ROT\") {\n    if (mainStackDataArrayLength < 3) throw \"OP_ROT Error: stack data array must include min 3 data!\";\n\n    const addDataArray: WizData[] = stacks.rot(\n      mainStackDataArray[mainStackDataArrayLength - 3],\n      mainStackDataArray[mainStackDataArrayLength - 2],\n      mainStackDataArray[mainStackDataArrayLength - 1]\n    );\n\n    const removeLastSize: number = 3;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_PICK\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_PICK Error: stack data array must include min 2 data!\";\n\n    let stackIndex: number | undefined = mainStackDataArray[mainStackDataArrayLength - 1].number;\n\n    let willChangedStackDataArray: WizData[] = [...mainStackDataArray];\n    willChangedStackDataArray.pop();\n\n    if (stackIndex !== undefined) {\n      if (stackIndex >= willChangedStackDataArray.length) throw \"OP_PICK Error: stack index cant be equal and greater than stack array length\";\n    } else {\n      throw \"OP_PICK Error: stack index must be a number\";\n    }\n\n    const addDataArray: WizData[] = stacks.pick(willChangedStackDataArray, stackIndex);\n\n    const removeLastSize: number = mainStackDataArray.length;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_ROLL\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_ROLL Error: stack data array must include min 2 data!\";\n\n    let stackIndex: number | undefined = mainStackDataArray[mainStackDataArrayLength - 1].number;\n    let willChangedStackDataArray: WizData[] = [...mainStackDataArray];\n    willChangedStackDataArray.pop();\n\n    if (stackIndex !== undefined) {\n      if (stackIndex >= willChangedStackDataArray.length) throw \"OP_ROLL Error: stack index cant be equal and greater than stack array length\";\n    } else {\n      throw \"OP_ROLL Error: stack index must be a number\";\n    }\n\n    const addDataArray: WizData[] = stacks.roll(willChangedStackDataArray, stackIndex);\n\n    const removeLastSize: number = mainStackDataArray.length;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_TUCK\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_TUCK Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = stacks.tuck(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]);\n\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  /*\n   * Splice\n   * 126 - 130\n   */\n  if (word === \"OP_CAT\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_CAT Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [splices.concatenate(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_SUBSTR\") {\n    if (mainStackDataArrayLength < 3) throw \"OP_SUBSTR Error: stack data array must include min 3 data!\";\n\n    const addDataArray: WizData[] = [\n      splices.substr(mainStackDataArray[mainStackDataArrayLength - 3], mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]),\n    ];\n    const removeLastSize: number = 3;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_RIGHT\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_RIGHT Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [splices.right(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_LEFT\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_LEFT Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [splices.left(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_SIZE\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_SIZE Error: stack data array must include min 1 data!\";\n    const addDataArray: WizData[] = [splices.size(mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_SUBSTR_LAZY\") {\n    if (mainStackDataArrayLength < 3) throw \"OP_SUBSTR_LAZY Error: stack data array must include min 3 data!\";\n\n    const addDataArray: WizData[] = [\n      splices.substrLazy(mainStackDataArray[mainStackDataArrayLength - 3], mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]),\n    ];\n    const removeLastSize: number = 3;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  /*\n   * Bitwise logic\n   * 131 - 136\n   */\n\n  if (word === \"OP_INVERT\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_INVERT Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [bitwise.invert(mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_AND\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_AND Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [bitwise.and(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_OR\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_OR Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [bitwise.or(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_XOR\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_XOR Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [bitwise.xor(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_EQUAL\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_EQUAL Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [bitwise.equal(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_EQUALVERIFY\") {\n    if (mainStackDataArray.length < 2) throw \"OP_EQUALVERIFY Error:  stack data array must include min 2 data!!\";\n\n    const isVerify = bitwise.equal(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]).number === 1;\n\n    if (isVerify) {\n      const addDataArray: WizData[] = [];\n      const removeLastSize: number = 2;\n      const alt = { removeLastStackData: false };\n\n      return { main: { addDataArray, removeLastSize }, alt };\n    } else {\n      return {\n        main: { addDataArray: [], removeLastSize: 0 },\n        alt: { removeLastStackData: false },\n        isStackFailed: true,\n      };\n    }\n  }\n\n  /*\n   * Arithmetic\n   * 139 - 165\n   */\n  if (word === \"OP_1ADD\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_1ADD Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.add1(mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_1SUB\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_1SUB Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.sub1(mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_NEGATE\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_NEGATE Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.negate(mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_ABS\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_ABS Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.abs(mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_NOT\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_NOT Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.not(mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_0NOTEQUAL\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_0NOTEQUAL Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.notEqual0(mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_ADD\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_ADD Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.add(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_SUB\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_SUB Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.sub(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_MUL\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_MUL Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.mul(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_DIV\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_DIV Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.div(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_LSHIFT\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_LSHIFT Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.lshift(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_RSHIFT\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_RSHIFT Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.rshift(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_BOOLAND\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_BOOLAND Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.boolAnd(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_BOOLOR\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_BOOLOR Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.boolOr(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_NUMEQUAL\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_NUMEQUAL Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.numEqual(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_NUMEQUALVERIFY\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_NUMEQUALVERIFY Error: stack data array must include min 2 data!\";\n\n    const isVerifed: boolean = arithmetics.numEqualVerify(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]).number === 1;\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return {\n      main: { addDataArray: [], removeLastSize },\n      alt,\n      isStackFailed: !isVerifed,\n    };\n  }\n\n  if (word === \"OP_NUMNOTEQUAL\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_NUMNOTEQUAL Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.numNotEqual(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_LESSTHAN\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_LESSTHAN Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.lessThan(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_GREATERTHAN\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_GREATERTHAN Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.graterThan(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_LESSTHANOREQUAL\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_LESSTHANOREQUAL Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.lessThanOrEqual(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_GREATERTHANOREQUAL\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_GREATERTHANOREQUAL Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.graterThanOrEqual(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_MIN\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_MIN Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.min(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_MAX\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_MAX Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics.max(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_WITHIN\") {\n    if (mainStackDataArrayLength < 3) throw \"OP_WITHIN Error: stack data array must include min 3 data!\";\n\n    const addDataArray: WizData[] = [\n      arithmetics.withIn(\n        mainStackDataArray[mainStackDataArrayLength - 3], // x\n        mainStackDataArray[mainStackDataArrayLength - 2], // min\n        mainStackDataArray[mainStackDataArrayLength - 1] // max\n      ),\n    ];\n\n    const removeLastSize: number = 3;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  /*\n   * Crypto\n   * 166 - 175\n   */\n  if (word === \"OP_SHA1\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_SHA1 Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [WizData.fromHex(crypto.sha1(mainStackDataArray[mainStackDataArrayLength - 1]).toString())];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_SHA256\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_SHA256 Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [WizData.fromHex(crypto.sha256(mainStackDataArray[mainStackDataArrayLength - 1]).toString())];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_RIPEMD160\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_RIPEMD160 Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [WizData.fromHex(crypto.ripemd160(mainStackDataArray[mainStackDataArrayLength - 1]).toString())];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_HASH160\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_HASH160 Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [WizData.fromHex(crypto.hash160(mainStackDataArray[mainStackDataArrayLength - 1]).toString())];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_HASH256\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_HASH256 Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [WizData.fromHex(crypto.hash256(mainStackDataArray[mainStackDataArrayLength - 1]).toString())];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_CHECKSIG\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_CHECKSIG Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [crypto.checkSig(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_CHECKSIGVERIFY\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_CHECKSIGVERIFY Error: stack data array must include min 2 data!\";\n\n    let isStackFailed: boolean = false;\n\n    const checkSigResult: WizData = crypto.checkSig(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]);\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    if (checkSigResult.number === 0) isStackFailed = true;\n\n    return { main: { addDataArray: [], removeLastSize }, alt, isStackFailed };\n  }\n\n  if (word === \"OP_CHECKSIGFROMSTACK\") {\n    if (mainStackDataArrayLength < 3) throw \"OP_CHECKSIGFROMSTACK Error: stack data array must include min 3 data!\";\n\n    let addDataArray = [];\n    if (vm && vm.ver === VM_NETWORK_VERSION.TAPSCRIPT) {\n      addDataArray = [\n        crypto.shnorrSigVerify(\n          mainStackDataArray[mainStackDataArrayLength - 3],\n          mainStackDataArray[mainStackDataArrayLength - 2],\n          mainStackDataArray[mainStackDataArrayLength - 1]\n        ),\n      ];\n    } else {\n      addDataArray = [\n        crypto.ecdsaVerify(mainStackDataArray[mainStackDataArrayLength - 3], mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]),\n      ];\n    }\n\n    const removeLastSize: number = 3;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_CHECKSIGFROMSTACKVERIFY\") {\n    if (mainStackDataArrayLength < 3) throw \"OP_CHECKSIGFROMSTACKVERIFY Error: stack data array must include min 3 data!\";\n    let isStackFailed: boolean = false;\n    let verifyResult;\n\n    if (vm && vm.ver === VM_NETWORK_VERSION.TAPSCRIPT) {\n      verifyResult = crypto.shnorrSigVerify(\n        mainStackDataArray[mainStackDataArrayLength - 3],\n        mainStackDataArray[mainStackDataArrayLength - 2],\n        mainStackDataArray[mainStackDataArrayLength - 1]\n      );\n    } else {\n      verifyResult = crypto.ecdsaVerify(\n        mainStackDataArray[mainStackDataArrayLength - 3],\n        mainStackDataArray[mainStackDataArrayLength - 2],\n        mainStackDataArray[mainStackDataArrayLength - 1]\n      );\n    }\n\n    if (verifyResult.number === 0) isStackFailed = true;\n\n    const removeLastSize: number = 3;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray: [], removeLastSize }, alt, isStackFailed };\n  }\n\n  // TAPROOT FEATURE\n  if (word === \"OP_TWEAKVERIFY\") {\n    if (mainStackDataArrayLength < 3) throw \"OP_TWEAKVERIFY Error: stack data array must include min 3 data!\";\n    let isStackFailed: boolean = false;\n\n    const verifyResult: WizData = crypto.tweakVerify(\n      mainStackDataArray[mainStackDataArrayLength - 3],\n      mainStackDataArray[mainStackDataArrayLength - 2],\n      mainStackDataArray[mainStackDataArrayLength - 1]\n    );\n\n    if (verifyResult.number === 0) isStackFailed = true;\n\n    const removeLastSize: number = 3;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray: [], removeLastSize }, alt, isStackFailed };\n  }\n\n  /*\n   * Locktime\n   * 177 - 178\n   */\n  if (word === \"OP_CHECKLOCKTIMEVERIFY\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_CHECKLOCKTIMEVERIFY Error: stack data array must include min 1 data!\";\n    let isStackFailed: boolean = false;\n\n    const addDataArray: WizData[] = [locktime.checkLockTimeVerify(mainStackDataArray[mainStackDataArrayLength - 1])];\n\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt, isStackFailed };\n  }\n\n  if (word === \"OP_CHECKSEQUENCEVERIFY\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_CHECKSEQUENCEVERIFY Error: stack data array must include min 1 data!\";\n    let isStackFailed: boolean = false;\n\n    const addDataArray: WizData[] = [locktime.checkSequenceVerify(mainStackDataArray[mainStackDataArrayLength - 1])];\n\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt, isStackFailed };\n  }\n\n  /*\n   * Introspection\n   * 199 - 214\n   */\n\n  if (word === \"OP_INSPECTINPUTOUTPOINT\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_INSPECTINPUTOUTPOINT Error: stack data array must include min 1 data!\";\n\n    if (!stackDataList.txData) throw \"OP_INSPECTINPUTOUTPOINT Error: transaction template must include data.\";\n\n    const addDataArray: WizData[] = introspection.inspectInputOutPoint(mainStackDataArray[mainStackDataArrayLength - 1], stackDataList.txData.inputs);\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_INSPECTINPUTASSET\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_INSPECTINPUTASSET Error: stack data array must include min 1 data!\";\n\n    if (!stackDataList.txData) throw \"OP_INSPECTINPUTASSET Error: transaction template must include data.\";\n\n    const addDataArray: WizData[] = introspection.inspectInputAsset(mainStackDataArray[mainStackDataArrayLength - 1], stackDataList.txData.inputs);\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_INSPECTINPUTVALUE\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_INSPECTINPUTVALUE Error: stack data array must include min 1 data!\";\n\n    if (!stackDataList.txData) throw \"OP_INSPECTINPUTVALUE Error: transaction template must include data.\";\n\n    const addDataArray: WizData[] = introspection.inspectInputValue(mainStackDataArray[mainStackDataArrayLength - 1], stackDataList.txData.inputs);\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_INSPECTINPUTSCRIPTPUBKEY\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_INSPECTINPUTSCRIPTPUBKEY Error: stack data array must include min 1 data!\";\n\n    if (!stackDataList.txData) throw \"OP_INSPECTINPUTSCRIPTPUBKEY Error: transaction template must include data.\";\n\n    const addDataArray: WizData[] = introspection.inspectInputScriptPubKey(mainStackDataArray[mainStackDataArrayLength - 1], stackDataList.txData.inputs);\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_INSPECTINPUTSEQUENCE\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_INSPECTINPUTSEQUENCE Error: stack data array must include min 1 data!\";\n\n    if (!stackDataList.txData) throw \"OP_INSPECTINPUTSEQUENCE Error: transaction template must include data.\";\n\n    const addDataArray: WizData[] = [introspection.inspectInputSequence(mainStackDataArray[mainStackDataArrayLength - 1], stackDataList.txData.inputs)];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_INSPECTINPUTISSUANCE\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_INSPECTINPUTISSUANCE Error: stack data array must include min 1 data!\";\n\n    if (!stackDataList.txData) throw \"OP_INSPECTINPUTISSUANCE Error: transaction template must include data.\";\n\n    const addDataArray: WizData[] = [introspection.inspectInputIssuance(mainStackDataArray[mainStackDataArrayLength - 1], stackDataList.txData.inputs)];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_PUSHCURRENTINPUTINDEX\") {\n    if (!stackDataList.txData) throw \"OP_PUSHCURRENTINPUTINDEX Error: Script Error introspect context unavailable!\";\n\n    const currentInputIndex = WizData.fromNumber(stackDataList.txData.currentInputIndex);\n    const addDataArray: WizData[] = [currentInputIndex];\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_INSPECTOUTPUTASSET\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_INSPECTOUTPUTASSET Error: stack data array must include min 1 data!\";\n\n    if (!stackDataList.txData) throw \"OP_INSPECTOUTPUTASSET Error: transaction template must include data.\";\n\n    const addDataArray: WizData[] = introspection.inspectOutputAsset(mainStackDataArray[mainStackDataArrayLength - 1], stackDataList.txData.outputs);\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_INSPECTOUTPUTVALUE\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_INSPECTOUTPUTVALUE Error: stack data array must include min 1 data!\";\n\n    if (!stackDataList.txData) throw \"OP_INSPECTOUTPUTVALUE Error: transaction template must include data.\";\n\n    const addDataArray: WizData[] = introspection.inspectOutputValue(mainStackDataArray[mainStackDataArrayLength - 1], stackDataList.txData.outputs);\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_INSPECTOUTPUTNONCE\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_INSPECTOUTPUTNONCE Error: stack data array must include min 1 data!\";\n\n    if (!stackDataList.txData) throw \"OP_INSPECTOUTPUTNONCE Error: transaction template must include data.\";\n\n    const addDataArray: WizData[] = [introspection.inspectOutputNonce(mainStackDataArray[mainStackDataArrayLength - 1], stackDataList.txData.outputs)];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_INSPECTOUTPUTSCRIPTPUBKEY\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_INSPECTOUTPUTSCRIPTPUBKEY Error: stack data array must include min 1 data!\";\n\n    if (!stackDataList.txData) throw \"OP_INSPECTOUTPUTSCRIPTPUBKEY Error: transaction template must include data.\";\n\n    const addDataArray: WizData[] = introspection.inspectOutputScriptPubKey(mainStackDataArray[mainStackDataArrayLength - 1], stackDataList.txData.outputs);\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_INSPECTVERSION\") {\n    if (!stackDataList.txData) throw \"OP_INSPECTVERSION Error: transaction template must include data.\";\n\n    if (!stackDataList.txData.version) throw \"OP_INSPECTVERSION Error: transaction template must include version data.\";\n\n    const versionLE: string = Buffer.from(stackDataList.txData.version, \"hex\").reverse().toString(\"hex\");\n\n    const addDataArray: WizData[] = [WizData.fromHex(versionLE)];\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_INSPECTLOCKTIME\") {\n    if (!stackDataList.txData) throw \"OP_INSPECTLOCKTIME Error: transaction template must include data.\";\n\n    if (!stackDataList.txData.timelock) throw \"OP_INSPECTLOCKTIME Error: transaction template must include timelock data.\";\n\n    const timeLockLE: string = Buffer.from(stackDataList.txData.timelock, \"hex\").reverse().toString(\"hex\");\n\n    const addDataArray: WizData[] = [WizData.fromHex(timeLockLE)];\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_INSPECTNUMINPUTS\") {\n    if (!stackDataList.txData) throw \"OP_INSPECTNUMINPUTS Error: transaction template must include data.\";\n\n    const inspectInputsLength: number = stackDataList.txData.inputs.length;\n\n    const addDataArray: WizData[] = [WizData.fromNumber(inspectInputsLength)];\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_INSPECTNUMOUTPUTS\") {\n    if (!stackDataList.txData) throw \"OP_INSPECTNUMOUTPUTS Error: transaction template must include data.\";\n\n    const inspectOutputsLength: number = stackDataList.txData.outputs.length;\n\n    const addDataArray: WizData[] = [WizData.fromNumber(inspectOutputsLength)];\n    const removeLastSize: number = 0;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n  /*\n   * Conversion\n   * 215 - 227\n   */\n\n  if (word === \"OP_ADD64\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_ADD64 Error: stack data array must include min 2 data!\";\n\n    const addDataArray = arithmetics64.add64(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]);\n    const removeLastSize: number = addDataArray.length === 1 ? 0 : addDataArray.length;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_SUB64\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_SUB64 Error: stack data array must include min 2 data!\";\n\n    const addDataArray = arithmetics64.sub64(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]);\n    const removeLastSize: number = addDataArray.length === 1 ? 0 : 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_MUL64\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_MUL64 Error: stack data array must include min 2 data!\";\n\n    const addDataArray = arithmetics64.mul64(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]);\n    const removeLastSize: number = addDataArray.length === 1 ? 0 : 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_DIV64\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_DIV64 Error: stack data array must include min 2 data!\";\n\n    const addDataArray = arithmetics64.div64(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]);\n    const removeLastSize: number = addDataArray.length === 1 ? 0 : 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_NEG64\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_NEG64 Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = arithmetics64.neg64(mainStackDataArray[mainStackDataArrayLength - 1]);\n    const removeLastSize: number = addDataArray.length === 1 ? 0 : 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_LESSTHAN64\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_LESSTHAN Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics64.lessThan64(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_LESSTHANOREQUAL64\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_LESSTHANOREQUAL64 Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics64.lessThanOrEqual64(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_GREATERTHAN64\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_GREATERTHAN64 Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics64.greaterThan64(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_GREATERTHANOREQUAL64\") {\n    if (mainStackDataArrayLength < 2) throw \"OP_GREATERTHANOREQUAL64 Error: stack data array must include min 2 data!\";\n\n    const addDataArray: WizData[] = [arithmetics64.greaterThanOrEqual64(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 2;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_SCRIPTNUMTOLE64\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_SCRIPTNUMTOLE64 Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [conversion.numToLE64(mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_LE64TOSCRIPTNUM\") {\n    if (mainStackDataArrayLength < 1) throw \"OP_LE64TOSCRIPTNUM Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [conversion.LE64ToNum(mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  if (word === \"OP_LE32TOLE64\") {\n    if (mainStackDataArrayLength < 1) throw \"LE32toLE64 Error: stack data array must include min 1 data!\";\n\n    const addDataArray: WizData[] = [conversion.LE32toLE64(mainStackDataArray[mainStackDataArrayLength - 1])];\n    const removeLastSize: number = 1;\n    const alt = { removeLastStackData: false };\n\n    return { main: { addDataArray, removeLastSize }, alt };\n  }\n\n  /*\n   * Not implemented yet\n   */\n  throw \"Unknown op code\";\n};\n","import WizData from \"@script-wiz/wiz-data\";\n\nexport const add1 = (wizData: WizData): WizData => {\n  if (wizData.number !== undefined) {\n    const numberValue: number = wizData.number + 1;\n    return WizData.fromNumber(numberValue);\n  }\n\n  throw \"Error: this operation requires 1 valid number wizData\";\n};\n\nexport const sub1 = (wizData: WizData): WizData => {\n  if (wizData.number !== undefined) {\n    const numberValue: number = wizData.number - 1;\n    return WizData.fromNumber(numberValue);\n  }\n\n  throw \"Error: this operation requires 1 valid number wizData\";\n};\n\nexport const negate = (wizData: WizData): WizData => {\n  if (wizData.number !== undefined) {\n    const negateValue: number = wizData.number * -1;\n    return WizData.fromNumber(negateValue);\n  }\n\n  throw \"Error: this operation requires 1 valid number wizData\";\n};\n\nexport const abs = (wizData: WizData): WizData => {\n  if (wizData.number !== undefined) {\n    const absValue: number = Math.abs(wizData.number);\n    return WizData.fromNumber(absValue);\n  }\n\n  throw \"Error: this operation requires 1 valid number wizData\";\n};\n\nexport const not = (wizData: WizData): WizData => {\n  if (wizData.number !== undefined) {\n    const isfalse: boolean = !wizData.number;\n\n    return WizData.fromNumber(isfalse ? 1 : 0);\n  }\n\n  throw \"Error: this operation requires 1 valid number wizData\";\n};\n\nexport const notEqual0 = (wizData: WizData): WizData => {\n  if (wizData.number !== undefined) {\n    const isfalse: boolean = !wizData.number;\n\n    return WizData.fromNumber(isfalse ? 0 : 1);\n  }\n\n  throw \"Error: this operation requires 1 valid number wizData\";\n};\n\nexport const add = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\n    const addedValue: number = wizData.number + wizData2.number;\n    return WizData.fromNumber(addedValue);\n  }\n\n  throw \"Error: this operation requires 2 valid number wizData\";\n};\n\nexport const sub = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\n    const subValue: number = wizData.number - wizData2.number;\n    return WizData.fromNumber(subValue);\n  }\n\n  throw \"Error: this operation requires 2 valid number wizData\";\n};\n\nexport const mul = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\n    const mulValue: number = wizData.number * wizData2.number;\n    return WizData.fromNumber(mulValue);\n  }\n\n  throw \"Error: this operation requires 2 valid number wizData\";\n};\n\nexport const div = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\n    if (wizData2.number === 0) throw \"Error: dividing can't be eqaul 0.\";\n\n    let divValue: number = wizData.number / wizData2.number;\n\n    divValue = divValue > 0 ? Math.floor(divValue) : Math.ceil(divValue);\n    return WizData.fromNumber(divValue);\n  }\n\n  throw \"Error: this operation requires 2 valid number wizData\";\n};\n\nexport const lshift = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\n    const lShiftValue: number = wizData.number << wizData2.number;\n    return WizData.fromNumber(lShiftValue);\n  }\n\n  throw \"Error: this operation requires 2 valid number wizData\";\n};\n\nexport const rshift = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\n    const rShiftValue: number = wizData.number >> wizData2.number;\n    return WizData.fromNumber(rShiftValue);\n  }\n\n  throw \"Error: this operation requires 2 valid number wizData\";\n};\n\nexport const boolAnd = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\n    if (wizData.number === 0 || wizData2.number === 0) return WizData.fromNumber(0);\n    return WizData.fromNumber(1);\n  }\n\n  throw \"Error: this operation requires 2 valid number wizData\";\n};\n\nexport const boolOr = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\n    if (wizData.number === 0 && wizData2.number === 0) return WizData.fromNumber(0);\n    return WizData.fromNumber(1);\n  }\n\n  throw \"Error: this operation requires 2 valid number wizData\";\n};\n\nexport const numEqual = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\n    return WizData.fromNumber(wizData.number === wizData2.number ? 1 : 0);\n  }\n\n  throw \"Error: this operation requires 2 valid number wizData\";\n};\n\nexport const numEqualVerify = (wizData: WizData, wizData2: WizData): WizData => {\n  return numEqual(wizData, wizData2);\n};\n\nexport const numNotEqual = (wizData: WizData, wizData2: WizData): WizData => {\n  const equal = numEqual(wizData, wizData2).number === 1;\n  return WizData.fromNumber(equal ? 0 : 1);\n};\n\nexport const lessThan = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\n    return WizData.fromNumber(wizData.number < wizData2.number ? 1 : 0);\n  }\n\n  throw \"Error: this operation requires 2 valid number wizData\";\n};\n\nexport const graterThan = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\n    return WizData.fromNumber(wizData.number > wizData2.number ? 1 : 0);\n  }\n\n  throw \"Error: this operation requires 2 valid number wizData\";\n};\n\nexport const lessThanOrEqual = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\n    return WizData.fromNumber(wizData.number <= wizData2.number ? 1 : 0);\n  }\n\n  throw \"Error: this operation requires 2 valid number wizData\";\n};\n\nexport const graterThanOrEqual = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\n    return WizData.fromNumber(wizData.number >= wizData2.number ? 1 : 0);\n  }\n\n  throw \"Error: this operation requires 2 valid number wizData\";\n};\n\nexport const min = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\n    if (wizData.number >= wizData2.number) return wizData2;\n\n    if (wizData2.number > wizData.number) return wizData;\n  }\n\n  throw \"Error: this operation requires 2 valid number wizData\";\n};\n\nexport const max = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\n    if (wizData.number >= wizData2.number) return wizData;\n\n    if (wizData2.number > wizData.number) return wizData2;\n  }\n\n  throw \"Error: this operation requires 2 valid number wizData\";\n};\n\nexport const withIn = (wizData: WizData, wizData2: WizData, wizData3: WizData): WizData => {\n  const currentNumber = wizData.number;\n  const minValue = wizData2.number;\n  const maxValue = wizData3.number;\n\n  if (currentNumber !== undefined && minValue !== undefined && maxValue !== undefined) {\n    if (currentNumber >= minValue && currentNumber <= maxValue) return WizData.fromNumber(1);\n\n    return WizData.fromNumber(0);\n  }\n\n  throw \"Error: this operation requires 3 valid number wizData\";\n};\n","import WizData from \"@script-wiz/wiz-data\";\nimport { flipbits } from \"../utils\";\n\nexport const invert = (wizData: WizData): WizData => {\n  const complement = flipbits(wizData.bin);\n\n  return WizData.fromBin(complement);\n};\n\nexport const and = (wizData: WizData, wizData2: WizData): WizData => {\n  const fBinary = wizData.bin;\n  const sBinary = wizData2.bin;\n\n  if (fBinary.length === sBinary.length) {\n    const fBinaryArray = fBinary.split(\"\").map((x) => +x);\n    const sBinaryArray = sBinary.split(\"\").map((x) => +x);\n    let resultBinary: string = \"\";\n\n    for (let i in fBinaryArray) {\n      resultBinary += fBinaryArray[i] & sBinaryArray[i];\n    }\n\n    return WizData.fromBin(resultBinary);\n  }\n\n  // stack bump\n  throw \"Bitwise operation on operands of different lengths.\";\n};\n\nexport const or = (wizData: WizData, wizData2: WizData): WizData => {\n  const fBinary = wizData.bin;\n  const sBinary = wizData2.bin;\n\n  if (fBinary.length === sBinary.length) {\n    const fBinaryArray = fBinary.split(\"\").map((x) => +x);\n    const sBinaryArray = sBinary.split(\"\").map((x) => +x);\n    let resultBinary: string = \"\";\n\n    for (let i in fBinaryArray) {\n      resultBinary += fBinaryArray[i] | sBinaryArray[i];\n    }\n\n    return WizData.fromBin(resultBinary);\n  }\n\n  // stack bump\n  throw \"Bitwise operation on operands of different lengths.\";\n};\n\nexport const xor = (wizData: WizData, wizData2: WizData): WizData => {\n  const fBinary = wizData.bin;\n  const sBinary = wizData2.bin;\n\n  if (fBinary.length === sBinary.length) {\n    const fBinaryArray = fBinary.split(\"\").map((x) => +x);\n    const sBinaryArray = sBinary.split(\"\").map((x) => +x);\n    let resultBinary: string = \"\";\n\n    for (let i in fBinaryArray) {\n      resultBinary += fBinaryArray[i] ^ sBinaryArray[i];\n    }\n\n    return WizData.fromBin(resultBinary);\n  }\n\n  // stack bump\n  throw \"Bitwise operation on operands of different lengths.\";\n};\n\nexport const equal = (wizData: WizData, wizData2: WizData): WizData => {\n  const expression = wizData.hex === wizData2.hex && wizData.bin === wizData2.bin;\n  return WizData.fromNumber(expression ? 1 : 0);\n};\n","import WizData from \"@script-wiz/wiz-data\";\nimport BN from \"bn.js\";\nimport { MAX_INTEGER_64, MIN_INTEGER_64, NEGATIVE_1_64, ZERO_64 } from \"../utils\";\nimport { convert64, numToLE64 } from \"./conversion\";\n\nexport const add64 = (wizData: WizData, wizData2: WizData): WizData[] => {\n  if (wizData.bytes.length != 8 || wizData2.bytes.length != 8) throw \"Input bytes length must be equal 8 byte\";\n\n  const a = new BN(wizData.bin, 2);\n  const b = new BN(wizData2.bin, 2);\n\n  const isANeg = a.toString(2).charAt(0) === \"1\";\n\n  if ((!isANeg && b.gt(MAX_INTEGER_64.sub(a))) || (isANeg && b.lt(MIN_INTEGER_64.sub(a)))) {\n    return [WizData.fromNumber(0)];\n  } else {\n    const addedValue = a.add(b);\n    const addedValueBin = addedValue.toString(2, 64);\n    const modifiedAddedValueBin = addedValueBin.slice(-64);\n\n    return [WizData.fromBin(modifiedAddedValueBin), WizData.fromNumber(1)];\n  }\n};\n\nexport const sub64 = (wizData: WizData, wizData2: WizData): WizData[] => {\n  if (wizData.bytes.length != 8 || wizData2.bytes.length != 8) throw \"Input bytes length must be equal 8 byte\";\n\n  const a = new BN(wizData.bin, 2);\n  const b = new BN(wizData2.bin, 2);\n\n  const isBNeg = b.toString(2).charAt(0) === \"1\";\n\n  if ((!isBNeg && a.lt(MIN_INTEGER_64.add(b))) || (isBNeg && a.gt(MAX_INTEGER_64.add(b)))) {\n    return [WizData.fromNumber(0)];\n  } else {\n    const subValue = a.sub(b);\n\n    let subValueBin = subValue.toString(2, 64);\n    if (subValue.isNeg()) subValueBin = subValue.toTwos(64).toString(2, 64);\n\n    const modifiedSubValueBin = subValueBin.slice(-64);\n\n    return [WizData.fromBin(modifiedSubValueBin), WizData.fromNumber(1)];\n  }\n};\n\nexport const mul64 = (wizData: WizData, wizData2: WizData): WizData[] => {\n  if (wizData.bytes.length !== 8 || wizData2.bytes.length !== 8) throw \"Input bytes length must be equal 8 byte\";\n\n  const a = new BN(wizData.bin, 2);\n  const b = new BN(wizData2.bin, 2);\n\n  const isANeg = a.toString(2).charAt(0) === \"1\";\n\n  if (\n    (!isANeg && b.gt(ZERO_64) && a.gt(MAX_INTEGER_64.div(b))) ||\n    (!isANeg && b.lt(ZERO_64) && b.lt(MIN_INTEGER_64.div(a))) ||\n    (isANeg && b.gt(ZERO_64) && a.lt(MIN_INTEGER_64.div(b))) ||\n    (isANeg && b.lt(ZERO_64) && b.lt(MAX_INTEGER_64.div(a)))\n  ) {\n    return [WizData.fromNumber(0)];\n  } else {\n    const mulValue = a.mul(b);\n    let mulValueBin = mulValue.toString(2, 64);\n    const modifiedMulValueBin = mulValueBin.slice(-64);\n\n    return [WizData.fromBin(modifiedMulValueBin), WizData.fromNumber(1)];\n  }\n};\n\nexport const div64 = (wizData: WizData, wizData2: WizData): WizData[] => {\n  if (wizData.bytes.length != 8 || wizData2.bytes.length != 8) throw \"Input bytes length must be equal 8 byte\";\n\n  const a = new BN(wizData.bin, 2);\n  const b = new BN(wizData2.bin, 2);\n\n  if (b.eq(ZERO_64) || (b.eq(NEGATIVE_1_64) && a.eq(MIN_INTEGER_64))) {\n    return [WizData.fromNumber(0)];\n  }\n\n  let r = a.mod(b);\n  let q = a.div(b);\n\n  if (r.lt(ZERO_64) && b.gt(ZERO_64)) {\n    r = r.add(b);\n    q = q.sub(new BN(1));\n  } else if (r.lt(ZERO_64) && b.lt(ZERO_64)) {\n    r = r.sub(b);\n    q = q.add(new BN(1));\n  }\n\n  return [WizData.fromBin(r.toString(2, 64)), WizData.fromBin(q.toString(2, 64)), WizData.fromNumber(1)];\n};\n\nexport const neg64 = (wizData: WizData): WizData[] => {\n  if (wizData.bytes.length != 8) throw \"Input bytes length must be equal 8 byte\";\n\n  const data = new BN(wizData.bin, 2);\n\n  if (data.eq(MIN_INTEGER_64)) return [WizData.fromNumber(0)];\n\n  const negateValue = data.neg();\n\n  const twosNegateValue = negateValue.toTwos(64);\n\n  const twosNegateValue64 = twosNegateValue.toString(2, 64);\n\n  return [WizData.fromBin(twosNegateValue64), WizData.fromNumber(1)];\n};\n\nexport const lessThan64 = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.bytes.length != 8 || wizData2.bytes.length != 8) throw \"Input bytes length must be equal 8 byte\";\n\n  const bigA = new BN(wizData.bin, 2);\n  const bigB = new BN(wizData2.bin, 2);\n\n  const isANeg = wizData.bin.charAt(0) === \"1\";\n  const isBNeg = wizData2.bin.charAt(0) === \"1\";\n\n  if (isANeg && !isBNeg) {\n    return WizData.fromNumber(1);\n  } else if (!isANeg && isBNeg) {\n    return WizData.fromNumber(0);\n  } else if (isANeg && isBNeg) {\n    return WizData.fromNumber(bigB.neg().lt(bigA.neg()) ? 1 : 0);\n  }\n\n  return WizData.fromNumber(bigA.lt(bigB) ? 1 : 0);\n};\n\nexport const lessThanOrEqual64 = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.bytes.length != 8 || wizData2.bytes.length != 8) throw \"Input bytes length must be equal 8 byte\";\n\n  const bigA = new BN(wizData.bin, 2);\n  const bigB = new BN(wizData2.bin, 2);\n\n  const isANeg = wizData.bin.charAt(0) === \"1\";\n  const isBNeg = wizData2.bin.charAt(0) === \"1\";\n\n  if (isANeg && !isBNeg) {\n    return WizData.fromNumber(1);\n  } else if (!isANeg && isBNeg) {\n    return WizData.fromNumber(0);\n  } else if (isANeg && isBNeg) {\n    return WizData.fromNumber(bigB.neg().lte(bigA.neg()) ? 1 : 0);\n  }\n\n  return WizData.fromNumber(bigA.lte(bigB) ? 1 : 0);\n};\n\nexport const greaterThan64 = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.bytes.length != 8 || wizData2.bytes.length != 8) throw \"Input bytes length must be equal 8 byte\";\n\n  const bigA = new BN(wizData.bin, 2);\n  const bigB = new BN(wizData2.bin, 2);\n\n  const isANeg = wizData.bin.charAt(0) === \"1\";\n  const isBNeg = wizData2.bin.charAt(0) === \"1\";\n\n  if (isANeg && !isBNeg) {\n    return WizData.fromNumber(0);\n  } else if (!isANeg && isBNeg) {\n    return WizData.fromNumber(1);\n  } else if (isANeg && isBNeg) {\n    return WizData.fromNumber(bigB.neg().gt(bigA.neg()) ? 1 : 0);\n  }\n\n  return WizData.fromNumber(bigA.gt(bigB) ? 1 : 0);\n};\n\nexport const greaterThanOrEqual64 = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.bytes.length != 8 || wizData2.bytes.length != 8) throw \"Input bytes length must be equal 8 byte\";\n\n  const bigA = new BN(wizData.bin, 2);\n  const bigB = new BN(wizData2.bin, 2);\n\n  const isANeg = wizData.bin.charAt(0) === \"1\";\n  const isBNeg = wizData2.bin.charAt(0) === \"1\";\n\n  if (isANeg && !isBNeg) {\n    return WizData.fromNumber(0);\n  } else if (!isANeg && isBNeg) {\n    return WizData.fromNumber(1);\n  } else if (isANeg && isBNeg) {\n    return WizData.fromNumber(bigB.neg().gte(bigA.neg()) ? 1 : 0);\n  }\n\n  return WizData.fromNumber(bigA.gte(bigB) ? 1 : 0);\n};\n","import WizData from \"@script-wiz/wiz-data\";\nimport { WizDataList } from \"../model\";\nimport { currentScope } from \"../utils\";\n\nexport const flowVerify = (wizData: WizData): boolean => wizData.hex !== \"\" && wizData.hex !== \"00\";\n\nexport const flowIf = (wizDataList: WizDataList): { flow: boolean[]; altFlow: boolean[] } => {\n  const lastStackData = wizDataList.main[wizDataList.main.length - 1];\n  const newExpression: boolean = flowVerify(lastStackData);\n  const newFlow = [...wizDataList.flow, newExpression];\n\n  return { flow: newFlow, altFlow: [] };\n};\n\nexport const flowNotIf = (wizDataList: WizDataList): { flow: boolean[]; altFlow: boolean[] } => {\n  const lastStackData = wizDataList.main[wizDataList.main.length - 1];\n  const newExpression: boolean = !flowVerify(lastStackData);\n  const newFlow = [...wizDataList.flow, newExpression];\n\n  return { flow: newFlow, altFlow: [] };\n};\n\nexport const flowElse = (wizDataList: WizDataList): { flow: boolean[]; altFlow: boolean[] } => {\n  if (wizDataList.altFlow.length === 0) {\n    let newFlow = [...wizDataList.flow];\n    newFlow.pop();\n    newFlow = [...newFlow, !currentScope(wizDataList)];\n    return { flow: newFlow, altFlow: [] };\n  }\n\n  return { flow: wizDataList.flow, altFlow: wizDataList.altFlow };\n};\n\nexport const flowEndIf = (wizDataList: WizDataList): { flow: boolean[]; altFlow: boolean[] } => {\n  if (wizDataList.altFlow.length === 0) {\n    const newFlow = [...wizDataList.flow];\n    return { flow: newFlow.splice(0, newFlow.length - 1), altFlow: [] };\n  }\n\n  const newAltFlow = [...wizDataList.altFlow];\n  return { flow: wizDataList.flow, altFlow: newAltFlow.splice(0, newAltFlow.length - 1) };\n};\n","import WizData from \"@script-wiz/wiz-data\";\n\nexport const checkLockTimeVerify = (wizData: WizData): WizData => {\n  if (wizData.number !== undefined) {\n    return WizData.fromNumber(1);\n  }\n\n  throw \"Error: Invalid input: this operation requires a valid Script Number\";\n};\n\nexport const checkSequenceVerify = (wizData: WizData): WizData => {\n  if (wizData.number !== undefined) {\n    return WizData.fromNumber(1);\n  }\n\n  throw \"Error: Invalid input: this operation requires a valid Script Number\";\n};\n","import WizData from \"@script-wiz/wiz-data\";\n\nexport const concatenate = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData.hex === \"\" && wizData2.hex === \"\") return WizData.fromNumber(0);\n\n  return WizData.fromHex(wizData.hex + wizData2.hex);\n};\n\nexport const substr = (wizData: WizData, wizData2: WizData, wizData3: WizData): WizData => {\n  const message = wizData.hex;\n  const index = wizData2.number;\n  const size = wizData3.number;\n\n  if (index !== undefined && size !== undefined) {\n    const result = message.substr(index * 2, size * 2);\n\n    return WizData.fromHex(result);\n  }\n\n  throw \"Index and size must be number!\";\n};\n\nexport const right = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData2.number !== undefined) {\n    const message = wizData.hex;\n    const size = wizData2.number * 2;\n\n    if (size < 0) throw \"Error: Size can't be negative integer!\";\n    if (message.length < size) throw \"Error: Size can't higher than data length!\";\n    if (size === 0) return WizData.fromNumber(0);\n\n    const result = message.slice(size * -1);\n\n    return WizData.fromHex(result);\n  }\n\n  throw \"Size must be number!\";\n};\n\nexport const left = (wizData: WizData, wizData2: WizData): WizData => {\n  if (wizData2.number !== undefined) {\n    const message = wizData.hex;\n    const size = wizData2.number * 2;\n\n    if (size < 0) throw \"Error: Size can't be negative integer.!\";\n    if (message.length < size) throw \"Error: Size can't higher than data length!\";\n    if (size === 0) WizData.fromNumber(0);\n\n    const result = message.substr(0, size);\n\n    return WizData.fromHex(result);\n  }\n\n  throw \"Error: Size must be number!\";\n};\n\nexport const size = (wizData: WizData): WizData => {\n  const numberValue = wizData.hex.length / 2;\n  return WizData.fromNumber(numberValue);\n};\n\nexport const substrLazy = (wizData: WizData, wizData2: WizData, wizData3: WizData): WizData => {\n  if (wizData2.number !== undefined && wizData3.number !== undefined) {\n    const message = wizData.hex;\n    let index = wizData2.number * 2;\n    let length = wizData3.number * 2;\n\n    const messageSize = message.length;\n\n    if (index < 0) index = 0;\n\n    if (length < 0) length = 0;\n\n    if (index >= messageSize) WizData.fromNumber(0);\n\n    if (index + length > messageSize) {\n      length = messageSize - index;\n    }\n\n    const result = message.substr(index, length);\n\n    return WizData.fromHex(result);\n  }\n\n  throw \"Error: Index and size must be number!\";\n};\n","import WizData from \"@script-wiz/wiz-data\";\n\nexport const fromAltStack = (wizData: WizData): WizData => wizData;\n\nexport const twoDup = (wizData: WizData, wizData2: WizData): WizData[] => [wizData, wizData2];\n\nexport const threeDup = (wizData: WizData, wizData2: WizData, wizData3: WizData): WizData[] => [wizData, wizData2, wizData3];\n\nexport const twoOver = (wizData: WizData, wizData2: WizData): WizData[] => [wizData, wizData2];\n\nexport const rot = (wizData: WizData, wizData2: WizData, wizData3: WizData): WizData[] => [wizData2, wizData3, wizData];\n\nexport const twoRot = (wizData: WizData, wizData2: WizData, wizData3: WizData, wizData4: WizData, wizData5: WizData, wizData6: WizData): WizData[] => [\n  wizData3,\n  wizData4,\n  wizData5,\n  wizData6,\n  wizData,\n  wizData2,\n];\n\nexport const twoSwap = (wizData: WizData, wizData2: WizData, wizData3: WizData, wizData4: WizData): WizData[] => [wizData2, wizData, wizData4, wizData3];\n\nexport const depth = (length: number): WizData => WizData.fromNumber(length);\n\nexport const dup = (wizData: WizData): WizData => wizData;\n\nexport const ifDup = (wizData: WizData): WizData | {} => {\n  if (wizData.number !== undefined && wizData.number === 0) {\n    return {};\n  }\n\n  return wizData;\n};\n\nexport const nip = (wizData: WizData): WizData => wizData;\n\nexport const over = (wizData: WizData): WizData => wizData;\n\nexport const pick = (wizDataArray: WizData[], stackIndex: number): WizData[] => [...wizDataArray, wizDataArray.reverse()[stackIndex]];\n\nexport const roll = (wizDataArray: WizData[], stackIndex: number): WizData[] => {\n  const newWizDataArray: WizData[] = [...wizDataArray].reverse();\n  const currentItem: WizData = newWizDataArray[stackIndex];\n\n  newWizDataArray.splice(stackIndex, 1);\n  newWizDataArray.unshift(currentItem);\n\n  return newWizDataArray.reverse();\n};\n\nexport const swap = (wizData: WizData, wizData2: WizData): WizData[] => [wizData, wizData2];\n\nexport const tuck = (wizData: WizData, wizData2: WizData): WizData[] => [wizData2, wizData, wizData2];\n","import WizData from \"@script-wiz/wiz-data\";\nimport { TxInput, TxOutput } from \"../model/TxData\";\nimport * as crypto from \"../core/crypto\";\n\nexport const inspectInputOutPoint = (wizData: WizData, txInputs: TxInput[]): WizData[] => {\n  let currentTxInputIndex = wizData.number;\n  if (wizData.hex === \"00\") {\n    currentTxInputIndex = 0;\n  }\n  const txInputLength = txInputs.length;\n\n  if (currentTxInputIndex === undefined) throw \"Invalid transaction input index!\";\n\n  if (currentTxInputIndex < 0) throw \"Invalid transaction input index must at least zero!\";\n\n  if (txInputLength === 0) throw \"Transaction input template must include at least an element.\";\n\n  if (txInputLength < currentTxInputIndex + 1) throw \"Input index must less than transaction inputs length!\";\n\n  const currentInputPreviousTxId = txInputs[currentTxInputIndex].previousTxId;\n  const currentInputVout = txInputs[currentTxInputIndex].vout;\n\n  if (!currentInputPreviousTxId) throw \"Previous Tx Id not found! Check your transaction template.\";\n\n  if (!currentInputVout) throw \"Vout not found! Check your transaction template.\";\n\n  return [WizData.fromHex(currentInputPreviousTxId), WizData.fromHex(currentInputVout), WizData.fromHex(\"00\")];\n};\n\nexport const inspectInputAsset = (wizData: WizData, txInputs: TxInput[]): WizData[] => {\n  let currentTxInputIndex = wizData.number;\n  if (wizData.hex === \"00\") {\n    currentTxInputIndex = 0;\n  }\n  const txInputLength = txInputs.length;\n\n  if (currentTxInputIndex === undefined) throw \"Invalid transaction input index!\";\n\n  if (currentTxInputIndex < 0) throw \"Invalid transaction input index must at least zero!\";\n\n  if (txInputLength === 0) throw \"Transaction input template must include at least an element.\";\n\n  //   const txInputIndex = currentTxInputIndex - 1;\n\n  if (txInputLength < currentTxInputIndex + 1) throw \"Input index must less than transaction inputs length!\";\n\n  const currentInputAssetId = txInputs[currentTxInputIndex].assetId;\n\n  if (!currentInputAssetId) throw \"Asset id not found! Check your transaction template.\";\n\n  return [WizData.fromHex(currentInputAssetId), WizData.fromNumber(1)];\n};\n\nexport const inspectInputValue = (wizData: WizData, txInputs: TxInput[]): WizData[] => {\n  let currentTxInputIndex = wizData.number;\n  if (wizData.hex === \"00\") {\n    currentTxInputIndex = 0;\n  }\n  const txInputLength = txInputs.length;\n\n  if (currentTxInputIndex === undefined) throw \"Invalid transaction input index!\";\n\n  if (currentTxInputIndex < 0) throw \"Invalid transaction input index must at least zero!\";\n\n  if (txInputLength === 0) throw \"Transaction input template must include at least an element.\";\n\n  if (txInputLength < currentTxInputIndex + 1) throw \"Input index must less than transaction inputs length!\";\n\n  const currentInputAmount = txInputs[currentTxInputIndex].amount;\n\n  if (!currentInputAmount) throw \"Amount not found! Check your transaction template.\";\n\n  const inputAmountLE = Buffer.from(currentInputAmount, \"hex\").reverse().toString(\"hex\");\n\n  return [WizData.fromHex(inputAmountLE), WizData.fromNumber(1)];\n};\n\nexport const inspectInputScriptPubKey = (wizData: WizData, txInputs: TxInput[]): WizData[] => {\n  let currentTxInputIndex = wizData.number;\n  if (wizData.hex === \"00\") {\n    currentTxInputIndex = 0;\n  }\n  const txInputLength = txInputs.length;\n\n  if (currentTxInputIndex === undefined) throw \"Invalid transaction input index!\";\n\n  if (currentTxInputIndex < 0) throw \"Invalid transaction input index must at least zero!\";\n\n  if (txInputLength === 0) throw \"Transaction input template must include at least an element.\";\n\n  if (txInputLength < currentTxInputIndex + 1) throw \"Input index must less than transaction inputs length!\";\n\n  if (!txInputs[currentTxInputIndex].scriptPubKey) throw \"ScriptPubKey not found! Check your transaction template.\";\n\n  const currentScriptPubKey = txInputs[currentTxInputIndex].scriptPubKey;\n\n  const witnessVersion = currentScriptPubKey.substr(0, 2);\n  const witnessProgram = currentScriptPubKey.substring(4);\n  const witnessProgramLength = WizData.fromHex(witnessProgram).bytes.length;\n\n  let result: WizData[] = [];\n  // Segwit (v0): first byte = 0, witnessProgram length 32 or 20 byte\n  if (witnessVersion === \"00\" && (witnessProgramLength === 20 || witnessProgramLength === 32)) {\n    result = [WizData.fromHex(witnessProgram), WizData.fromNumber(0)];\n    // Taproot (v1):first byte = 51, witnessProgram length 32 byte\n  } else if (witnessVersion === \"51\" && witnessProgramLength === 32) {\n    result = [WizData.fromHex(witnessProgram), WizData.fromNumber(1)];\n  } else {\n    // Legacy: none segwit and none taproot\n    const pubKeySha256 = crypto.sha256(WizData.fromHex(currentScriptPubKey)).toString();\n    result = [WizData.fromHex(pubKeySha256), WizData.fromNumber(-1)];\n  }\n  return result;\n};\n\nexport const inspectInputIssuance = (wizData: WizData, txInputs: TxInput[]): WizData => {\n  let currentTxInputIndex = wizData.number;\n  if (wizData.hex === \"00\") {\n    currentTxInputIndex = 0;\n  }\n  const txInputLength = txInputs.length;\n\n  if (currentTxInputIndex === undefined) throw \"Invalid transaction input index!\";\n\n  if (currentTxInputIndex < 0) throw \"Invalid transaction input index must at least zero!\";\n\n  if (txInputLength === 0) throw \"Transaction input template must include at least an element.\";\n\n  if (txInputLength < currentTxInputIndex + 1) throw \"Input index must less than transaction inputs length!\";\n\n  return WizData.fromNumber(0);\n};\n\nexport const inspectInputSequence = (wizData: WizData, txInputs: TxInput[]): WizData => {\n  let currentTxInputIndex = wizData.number;\n  if (wizData.hex === \"00\") {\n    currentTxInputIndex = 0;\n  }\n  const txInputLength = txInputs.length;\n\n  if (currentTxInputIndex === undefined) throw \"Invalid transaction input index!\";\n\n  if (currentTxInputIndex < 0) throw \"Invalid transaction input index must at least zero!\";\n\n  if (txInputLength === 0) throw \"Transaction input template must include at least an element.\";\n\n  if (txInputLength < currentTxInputIndex + 1) throw \"Input index must less than transaction inputs length!\";\n\n  const currentInputSequence = txInputs[currentTxInputIndex].sequence;\n\n  if (!currentInputSequence) throw \"Sequence not found! Check your transaction template.\";\n\n  const inputSequenceLE = Buffer.from(currentInputSequence, \"hex\").reverse().toString(\"hex\");\n\n  return WizData.fromHex(inputSequenceLE);\n};\n\nexport const inspectOutputAsset = (wizData: WizData, txOutputs: TxOutput[]): WizData[] => {\n  let currentTxOutputIndex = wizData.number;\n  if (wizData.hex === \"00\") {\n    currentTxOutputIndex = 0;\n  }\n  const txOutputLength = txOutputs.length;\n\n  if (currentTxOutputIndex === undefined) throw \"Invalid transaction output index!\";\n\n  if (currentTxOutputIndex < 0) throw \"Invalid transaction output index must at least zero!\";\n\n  if (txOutputLength === 0) throw \"Transaction output template must include at least an element.\";\n\n  if (txOutputLength < currentTxOutputIndex + 1) throw \"Output index must less than transaction outputs length!\";\n\n  const currentOutputAssetId = txOutputs[currentTxOutputIndex].assetId;\n\n  if (!currentOutputAssetId) throw \"Output Asset id not found! Check your transaction template.\";\n\n  return [WizData.fromHex(currentOutputAssetId), WizData.fromNumber(1)];\n};\n\nexport const inspectOutputValue = (wizData: WizData, txOutputs: TxOutput[]): WizData[] => {\n  let currentTxOutputIndex = wizData.number;\n  if (wizData.hex === \"00\") {\n    currentTxOutputIndex = 0;\n  }\n  const txOutputLength = txOutputs.length;\n\n  if (currentTxOutputIndex === undefined) throw \"Invalid transaction output index!\";\n\n  if (currentTxOutputIndex < 0) throw \"Invalid transaction output index must at least zero!\";\n\n  if (txOutputLength === 0) throw \"Transaction output template must include at least an element.\";\n\n  if (txOutputLength < currentTxOutputIndex + 1) throw \"Output index must less than transaction outputs length!\";\n\n  const currentOutputAmount = txOutputs[currentTxOutputIndex].amount;\n\n  if (!currentOutputAmount) throw \"Amount not found! Check your transaction template.\";\n\n  const outputAmountLE = Buffer.from(currentOutputAmount, \"hex\").reverse().toString(\"hex\");\n\n  return [WizData.fromHex(outputAmountLE), WizData.fromNumber(1)];\n};\n\nexport const inspectOutputNonce = (wizData: WizData, txOutputs: TxOutput[]): WizData => {\n  let currentTxOutputIndex = wizData.number;\n  if (wizData.hex === \"00\") {\n    currentTxOutputIndex = 0;\n  }\n  const txOutputLength = txOutputs.length;\n\n  if (currentTxOutputIndex === undefined) throw \"Invalid transaction output index!\";\n\n  if (currentTxOutputIndex < 0) throw \"Invalid transaction output index must at least zero!\";\n\n  if (txOutputLength === 0) throw \"Transaction output template must include at least an element.\";\n\n  if (txOutputLength < currentTxOutputIndex + 1) throw \"Output index must less than transaction outputs length!\";\n\n  return WizData.fromNumber(0);\n};\n\nexport const inspectOutputScriptPubKey = (wizData: WizData, txOutputs: TxOutput[]): WizData[] => {\n  let currentTxOutputIndex = wizData.number;\n  if (wizData.hex === \"00\") {\n    currentTxOutputIndex = 0;\n  }\n  const txOutputLength = txOutputs.length;\n\n  if (currentTxOutputIndex === undefined) throw \"Invalid transaction output index!\";\n\n  if (currentTxOutputIndex < 0) throw \"Invalid transaction output index must at least zero!\";\n\n  if (txOutputLength === 0) throw \"Transaction output template must include at least an element.\";\n\n  if (txOutputLength < currentTxOutputIndex + 1) throw \"Output index must less than transaction outputs length!\";\n\n  if (!txOutputs[currentTxOutputIndex].scriptPubKey) throw \"ScriptPubKey not found! Check your transaction template.\";\n\n  const currentScriptPubKey = txOutputs[currentTxOutputIndex].scriptPubKey;\n\n  const witnessVersion = currentScriptPubKey.substr(0, 2);\n  const witnessProgram = currentScriptPubKey.substring(4);\n  const witnessProgramLength = WizData.fromHex(witnessProgram).bytes.length;\n\n  let result: WizData[] = [];\n  // Segwit (v0): first byte = 0, witnessProgram length 32 or 20 byte\n  if (witnessVersion === \"00\" && (witnessProgramLength === 20 || witnessProgramLength === 32)) {\n    result = [WizData.fromHex(witnessProgram), WizData.fromNumber(0)];\n    // Taproot (v1):first byte = 51, witnessProgram length 32 byte\n  } else if (witnessVersion === \"51\" && witnessProgramLength === 32) {\n    result = [WizData.fromHex(witnessProgram), WizData.fromNumber(1)];\n  } else {\n    // Legacy: none segwit and none taproot\n    const pubKeySha256 = crypto.sha256(WizData.fromHex(currentScriptPubKey)).toString();\n    result = [WizData.fromHex(pubKeySha256), WizData.fromNumber(-1)];\n  }\n  return result;\n};\n"],"sourceRoot":""}