{"version":3,"sources":["webpack://[name]/webpack/bootstrap","webpack://[name]/./node_modules/crypto-js/core.js","webpack://[name]/./node_modules/crypto-js/cipher-core.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/utils.js","webpack://[name]/./node_modules/@script-wiz/wiz-data/index.js","webpack://[name]/./node_modules/hash.js/lib/hash/utils.js","webpack://[name]/./node_modules/elliptic/node_modules/bn.js/lib/bn.js","webpack://[name]/./node_modules/crypto-js/evpkdf.js","webpack://[name]/./node_modules/minimalistic-assert/index.js","webpack://[name]/./src/utils/index.ts","webpack://[name]/./node_modules/crypto-js/enc-base64.js","webpack://[name]/./node_modules/crypto-js/md5.js","webpack://[name]/./node_modules/hash.js/lib/hash/common.js","webpack://[name]/./node_modules/crypto-js/x64-core.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/curve/base.js","webpack://[name]/./node_modules/inherits/inherits_browser.js","webpack://[name]/./src/opcodes/BITCOIN_SEGWIT.ts","webpack://[name]/./node_modules/crypto-js/sha1.js","webpack://[name]/./node_modules/crypto-js/hmac.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/curves.js","webpack://[name]/./node_modules/hash.js/lib/hash.js","webpack://[name]/./src/opcodes/model/VM.ts","webpack://[name]/./src/opcodes/common.ts","webpack://[name]/./src/opcodes/BITCOIN_TAPSCRIPT.ts","webpack://[name]/./src/opcodes/LIQUID_SEGWIT.ts","webpack://[name]/./src/scriptWiz/compileAll.ts","webpack://[name]/./src/core/crypto.ts","webpack://[name]/external \"crypto\"","webpack://[name]/./node_modules/crypto-js/sha256.js","webpack://[name]/./node_modules/crypto-js/sha512.js","webpack://[name]/./node_modules/elliptic/lib/elliptic.js","webpack://[name]/(webpack)/buildin/module.js","webpack://[name]/./node_modules/minimalistic-crypto-utils/lib/utils.js","webpack://[name]/./node_modules/brorand/index.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/curve/index.js","webpack://[name]/./node_modules/hash.js/lib/hash/sha/common.js","webpack://[name]/./node_modules/hash.js/lib/hash/sha/256.js","webpack://[name]/./node_modules/hash.js/lib/hash/sha/512.js","webpack://[name]/./src/index.ts","webpack://[name]/./src/scriptWiz/index.ts","webpack://[name]/./src/opcodes/index.ts","webpack://[name]/./src/opcodes/LIQUID_TAPSCRIPT.ts","webpack://[name]/./src/scriptWiz/parse.ts","webpack://[name]/./src/scriptWiz/opFunctions.ts","webpack://[name]/./src/core/arithmetics.ts","webpack://[name]/./src/core/bitwise.ts","webpack://[name]/./node_modules/crypto-js/index.js","webpack://[name]/(webpack)/buildin/global.js","webpack://[name]/./node_modules/crypto-js/lib-typedarrays.js","webpack://[name]/./node_modules/crypto-js/enc-utf16.js","webpack://[name]/./node_modules/crypto-js/sha224.js","webpack://[name]/./node_modules/crypto-js/sha384.js","webpack://[name]/./node_modules/crypto-js/sha3.js","webpack://[name]/./node_modules/crypto-js/ripemd160.js","webpack://[name]/./node_modules/crypto-js/pbkdf2.js","webpack://[name]/./node_modules/crypto-js/mode-cfb.js","webpack://[name]/./node_modules/crypto-js/mode-ctr.js","webpack://[name]/./node_modules/crypto-js/mode-ctr-gladman.js","webpack://[name]/./node_modules/crypto-js/mode-ofb.js","webpack://[name]/./node_modules/crypto-js/mode-ecb.js","webpack://[name]/./node_modules/crypto-js/pad-ansix923.js","webpack://[name]/./node_modules/crypto-js/pad-iso10126.js","webpack://[name]/./node_modules/crypto-js/pad-iso97971.js","webpack://[name]/./node_modules/crypto-js/pad-zeropadding.js","webpack://[name]/./node_modules/crypto-js/pad-nopadding.js","webpack://[name]/./node_modules/crypto-js/format-hex.js","webpack://[name]/./node_modules/crypto-js/aes.js","webpack://[name]/./node_modules/crypto-js/tripledes.js","webpack://[name]/./node_modules/crypto-js/rc4.js","webpack://[name]/./node_modules/crypto-js/rabbit.js","webpack://[name]/./node_modules/crypto-js/rabbit-legacy.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/curve/short.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/curve/mont.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/curve/edwards.js","webpack://[name]/./node_modules/hash.js/lib/hash/sha.js","webpack://[name]/./node_modules/hash.js/lib/hash/sha/1.js","webpack://[name]/./node_modules/hash.js/lib/hash/sha/224.js","webpack://[name]/./node_modules/hash.js/lib/hash/sha/384.js","webpack://[name]/./node_modules/hash.js/lib/hash/ripemd.js","webpack://[name]/./node_modules/hash.js/lib/hash/hmac.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/ec/index.js","webpack://[name]/./node_modules/hmac-drbg/lib/hmac-drbg.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/ec/key.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/ec/signature.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/eddsa/index.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/eddsa/key.js","webpack://[name]/./node_modules/elliptic/lib/elliptic/eddsa/signature.js","webpack://[name]/./node_modules/bn.js/lib/bn.js","webpack://[name]/./src/core/flow.ts","webpack://[name]/./src/core/locktime.ts","webpack://[name]/./src/core/splices.ts","webpack://[name]/./src/core/stacks.ts","webpack://[name]/./src/scriptWiz/compileFinalInput.ts","webpack://[name]/./src/taproot/index.ts","webpack://[name]/./node_modules/secp256k1/elliptic.js","webpack://[name]/./node_modules/secp256k1/lib/index.js","webpack://[name]/./node_modules/secp256k1/lib/elliptic.js","webpack://[name]/./src/bech32/segwit_addr.ts","webpack://[name]/./src/bech32/bech32.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CryptoJS","Math","undefined","crypto","window","msCrypto","global","err","cryptoSecureRandomInt","getRandomValues","Uint32Array","randomBytes","readInt32LE","Error","F","obj","subtype","C","C_lib","lib","Base","extend","overrides","this","mixIn","init","$super","apply","arguments","instance","properties","propertyName","toString","clone","WordArray","words","sigBytes","length","encoder","Hex","stringify","concat","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","ceil","slice","random","nBytes","push","C_enc","enc","hexChars","bite","join","parse","hexStr","hexStrLength","parseInt","substr","Latin1","latin1Chars","String","fromCharCode","latin1Str","latin1StrLength","charCodeAt","Utf8","decodeURIComponent","escape","e","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","data","_process","doFlush","processedWords","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","max","_minBufferSize","nBytesReady","min","offset","_doProcessBlock","splice","C_algo","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","message","_createHmacHelper","HMAC","algo","Base64","EvpKDF","Cipher","C_mode","BlockCipherMode","CBC","Pkcs7","CipherParams","OpenSSLFormatter","SerializableCipher","OpenSSLKdf","PasswordBasedCipher","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","xformMode","_xformMode","_key","process","dataUpdate","keySize","ivSize","selectCipherStrategy","cipher","encrypt","decrypt","ciphertext","StreamCipher","iv","Encryptor","Decryptor","_cipher","_iv","xorBlock","block","_prevBlock","processBlock","encryptBlock","thisBlock","decryptBlock","pad","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","padding","unpad","BlockCipher","modeCreator","_mode","__creator","finalProcessedBlocks","cipherParams","formatter","format","OpenSSL","salt","openSSLStr","ciphertextWords","encryptor","cipherCfg","algorithm","_parse","kdf","execute","password","compute","derivedParams","utils","BN","minAssert","minUtils","assert","toArray","zero2","toHex","encode","getNAF","num","w","bits","naf","Array","bitLength","fill","ws","k","z","mod","andln","isOdd","isubn","iushrn","getJSF","k1","k2","jsf","m8","d1","d2","cmpn","u1","u2","m14","m24","cachedProperty","computer","parseBytes","bytes","intFromLE","default","hexBoundaries","hexToBytes","hexLE","hexFixBytes","padStart","test","bytesToHex","reverse","Uint8Array","from","match","map","pow","minPos","maxPos","minNeg","maxNeg","MAX_INTEGER","bytesToBin","bytesToNumber","bytesToString","reduce","u","a","numberIsValid","numberToBytes","log","numeral","nextValue","floor","set","WizData","f","v","h","y","binToBytes","stringToBytes","input","bin","hex","number","text","fromHex","fromBin","fromNumber","fromText","binFixBytes","inherits","isSurrogatePair","msg","htonl","word","zero8","isArray","res","replace","toHex32","endian","join32","start","end","len","split32","rotr32","b","rotl32","sum32","sum32_3","sum32_4","sum32_5","sum64","buf","pos","ah","al","bh","lo","hi","sum64_hi","bl","sum64_lo","sum64_4_hi","ch","cl","dh","dl","carry","sum64_4_lo","sum64_5_hi","eh","el","sum64_5_lo","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","val","ctor","superCtor","super_","TempCtor","constructor","base","isBN","negative","red","_init","Buffer","wordSize","parseHex4Bits","string","index","parseHexByte","lowerBound","parseBase","str","mul","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","j","off","strip","limbLen","limbPow","total","imuln","_iaddn","copy","dest","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","q","clz32","_countBits","_zeroBits","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","D","g","isEven","yp","xp","im","jm","gcd","_invmp","x1","x2","delta","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","_strip","output","outLen","prev","next","mod3","one","nOne","lpow","inv","wnd","current","currentLen","mont","MD5","iterations","derivedKey","derivedKeyWords","equal","flipbits","opHexToWord","opWordCodes","find","owc","opcodeToWord","opcode","opWordToHex","toHexString","byteArray","byte","currentScope","wizDataList","flow","EMOJI_REGEX","_map","base64Chars","triplet","charAt","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","indexOf","bits1","bits2","bitsCombined","parseLoop","T","_hash","M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","nBitsTotalL","hash","H_i","HmacMD5","BlockHash","pending","pendingTotal","outSize","hmacStrength","padLength","_delta8","_delta32","_update","digest","_pad","_digest","X32WordArray","C_x64","x64","Word","high","low","toX32","x64Words","x64WordsLength","x32Words","x64Word","wordsLength","BaseCurve","type","conf","zero","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","redN","_maxwellTrick","BasePoint","curve","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","I","step","nafW","repr","jpoint","mixedAdd","points","toP","_wnafMul","nafPoints","_getNAFPoints","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","toJ","ja","jb","decodePoint","pointFromX","encodeCompressed","_encode","compact","getX","getY","precompute","power","beta","_getBeta","_hasDoubles","dbl","writable","configurable","opcodesBitcoinSegwit","commonOpcodes","description","W","SHA1","HmacSHA1","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","pre","curves","PresetCurve","options","short","edwards","isInfinity","defineCurve","sha256","sha384","sha512","lambda","basis","common","sha","ripemd","hmac","sha1","sha224","ripemd160","VM_NETWORK","VM_NETWORK_VERSION","opcodesBitcoinTapscript","opcodesLiquidSegwit","toLEPadByte","padHex","compileData","compileJoin","hexes","wizData","RIPEMD160","SHA256","hash160","dataWithSha256Hashed","hash256","firstSHAHash","ecdsaVerify","sig","pubkey","secp256k1","ec","hashedMessage","publicKey","signature","startsWith","signatureStringLength","Number","rDataSize","rValue","sDataSize","sValue","rBn","sBn","verify","keyFromPublic","checkSig","wizData2","require","K","isPrime","sqrtN","factor","getFractionalBits","nPrime","gamma0x","gamma0","gamma1x","gamma1","maj","sigma0","t1","HmacSHA256","X64Word","X64WordArray","X64Word_create","SHA512","H0","H1","H2","H3","H4","H5","H6","H7","H0h","H0l","H1h","H1l","H2h","H2l","H3h","H3l","H4h","H4l","H5h","H5l","H6h","H6l","H7h","H7l","fh","fl","gh","gl","hh","hl","Wil","Wih","Wi","gamma0xh","gamma0xl","gamma0h","gamma0l","gamma1xh","gamma1xl","gamma1h","gamma1l","Wi7","Wi7h","Wi7l","Wi16","Wi16h","Wi16l","t1l","chh","chl","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Ki","Kih","Kil","t1h","t2l","HmacSHA512","elliptic","version","rand","eddsa","webpackPolyfill","deprecate","paths","children","arr","Rand","generate","_rand","getBytes","getByte","ch32","maj32","p32","ft_1","s0_256","s1_256","g0_256","g1_256","shaCommon","sha256_K","T1","T2","sha512_K","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","ScriptWiz","compileFinalInput","tapRoot","initialStackDataList","inputHexes","main","alt","altFlow","isStackFailed","vm","clearStackDataList","stackDataList","parseHex","parseInput","parseNumber","parseText","parseBin","parseOpcode","compile","inputHex","inputNumber","inputText","inputBin","inputOpCode","parseResult","currentScopeParse","currentScopeParseException","opCodes","parseResultCommit","errorMessage","removeLastSize","removeLastStackData","addDataArray","addData","Opcodes","wordData","wordCode","code","wordHex","codeData","codeWord","network","BTC","ver","SEGWIT","opcodesLiquidTapscript","opcodes","inputHexParam","inputNumberParam","inputTextParam","inputBinParam","inputOpCodeParam","emptyParseResultData","parseValueInputs","opWord","isNaN","opFunctions","ex","mainStackDataArray","mainStackDataArrayLength","currentOpCode","oc","flows","flowIf","flowNotIf","flowElse","flowEndIf","flowVerify","stacks","fromAltStack","twoDup","threeDup","twoOver","twoSwap","ifDup","depth","dup","nip","over","swap","twoRot","rot","stackIndex","willChangedStackDataArray","pop","pick","roll","tuck","splices","concatenate","substrLazy","bitwise","invert","arithmetics","add1","sub1","negate","not","notEqual0","lshift","rshift","boolAnd","boolOr","numEqual","numEqualVerify","numNotEqual","lessThan","graterThan","lessThanOrEqual","graterThanOrEqual","withIn","locktime","checkLockTimeVerify","checkSequenceVerify","numberValue","negateValue","absValue","isfalse","addedValue","subValue","mulValue","divValue","lShiftValue","rShiftValue","wizData3","currentNumber","minValue","maxValue","complement","fBinary","sBinary","fBinaryArray","sBinaryArray","resultBinary","expression","Function","ArrayBuffer","superInit","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Float32Array","Float64Array","buffer","byteOffset","typedArrayByteLength","swapEndian","Utf16","Utf16BE","utf16Chars","codePoint","utf16Str","utf16StrLength","Utf16LE","SHA224","HmacSHA224","SHA384","HmacSHA384","RHO_OFFSETS","PI_INDEXES","ROUND_CONSTANTS","newY","LFSR","roundConstantMsw","roundConstantLsw","bitPosition","SHA3","outputLength","state","_state","nBlockSizeLanes","M2i","M2i1","lane","tMsw","tLsw","Tx","Tx4","Tx1","Tx1Msw","Tx1Lsw","laneIndex","laneMsw","laneLsw","rhoOffset","TPiLane","T0","state0","TLane","Tx1Lane","Tx2Lane","roundConstant","blockSizeBits","outputLengthBytes","outputLengthLanes","hashWords","HmacSHA3","_zl","_zr","_sl","_sr","_hl","_hr","ar","br","cr","dr","er","hr","zr","sl","sr","f1","f2","f3","f4","f5","rotl","HmacRIPEMD160","PBKDF2","blockIndex","blockIndexWords","blockWords","blockWordsLength","intermediate","intermediateWords","CFB","generateKeystreamAndEncrypt","keystream","CTR","counter","_counter","CTRGladman","incWord","incCounter","OFB","_keystream","ECB","AnsiX923","lastBytePos","Ansix923","Iso10126","Iso97971","ZeroPadding","NoPadding","SBOX","INV_SBOX","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x4","x8","RCON","AES","_nRounds","_keyPriorReset","keyWords","ksRows","keySchedule","_keySchedule","ksRow","invKeySchedule","_invKeySchedule","invKsRow","_doCryptBlock","nRounds","s0","s1","s2","s3","t0","t2","t3","PC1","PC2","BIT_SHIFTS","SBOX_P","0","SBOX_MASK","DES","keyBits","keyBitPos","subKeys","_subKeys","nSubKey","subKey","bitShift","invSubKeys","_invSubKeys","_lBlock","_rBlock","exchangeLR","exchangeRL","lBlock","rBlock","TripleDES","key1","key2","key3","_des1","_des2","_des3","RC4","keySigBytes","S","_S","keyByteIndex","keyByte","_i","_j","generateKeystreamWord","keystreamWord","RC4Drop","drop","C_","G","Rabbit","X","_X","_C","_b","nextState","IV","IV_0","IV_1","i0","i2","i1","i3","gx","ga","gb","RabbitLegacy","ShortCurve","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","Point","isRed","inf","JPoint","zOne","betas","_getEndoRoots","lambdas","vec","_getEndoBasis","ntinv","prevR","aprxSqrt","y1","y2","len1","_endoSplit","v1","v2","c1","c2","p1","p2","q1","q2","ax","rhs","_endoWnafMulAdd","npoints","ncoeffs","fromJSON","endoMul","JSON","obj2point","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","zinv","zinv2","ay","pz2","z2","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","c8","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","xc","MontCurve","i4","a24","normalize","aa","bb","diffAdd","da","cb","jumlAdd","other","EdwardsCurve","twisted","mOneA","dd","oneC","_mulA","_mulC","lhs","pointFromY","_extDbl","nt","_projDbl","_extAdd","_projAdd","zi","sha1_K","Kh","E","Ah","Bh","Ch","Dh","Eh","rh","sh","Hmac","Hash","inner","outer","HmacDRBG","KeyPair","Signature","EC","nh","keyPair","keyFromPrivate","priv","fromPrivate","pub","fromPublic","genKeyPair","drbg","pers","persEnc","entropy","entropyEnc","nonce","ns2","_truncateToN","truncOnly","sign","bkey","getPrivate","ns1","iter","kp","kpX","recoveryParam","canonical","sinv","getPublic","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","predResist","minEntropy","_reseed","reseedInterval","V","nonceEnc","seed","_hmac","kmac","reseed","addEnc","temp","_importPrivate","privEnc","_importPublic","pubEnc","result","reason","derive","_importDER","Position","place","getLength","initial","octetLen","rmPadding","constructLength","octets","LN2","slen","toDER","backHalf","EDDSA","pointClass","encodingLength","secret","keyFromSecret","hashInt","messagePrefix","R","Rencoded","encodePoint","s_","pubBytes","makeSignature","SG","fromSecret","lastIx","normed","xIsOdd","encodeInt","decodeInt","isPoint","params","_secret","_pub","_pubBytes","privBytes","getSecret","_R","_Rencoded","_Sencoded","Sencoded","toBytes","toUpperCase","move","src","_move","for","modrn","allocUnsafe","allocate","_toArrayLikeLE","position","_toArrayLikeBE","isNegNum","lastStackData","newExpression","scope","newFlow","newAltFlow","emptyAltFlow","messageSize","wizData4","wizData5","wizData6","wizDataArray","newWizDataArray","currentItem","unshift","endsWith","formattedInput","tweakAdd","tweak","tweaked","publicKeyTweakAdd","tagHash","tag","hashedTag","treeHelper","script","scriptLength","scriptData","pubKey","finalTweaked","op1Hex","co","bech32","segwit_addr","scriptPubKey","errors","cond","isUint8Array","includes","isCompressed","toTypeString","getAssertedOutput","contextRandomize","privateKeyVerify","seckey","privateKeyNegate","privateKeyTweakAdd","privateKeyTweakMul","publicKeyVerify","compressed","publicKeyCreate","publicKeyConvert","publicKeyNegate","pubkeys","publicKeyCombine","publicKeyTweakMul","signatureNormalize","outputlen","signatureExport","signatureImport","msg32","noncefn","recid","ecdsaSign","ecdsaRecover","hashfn","xbuf","ybuf","ecdh","ecparams","loadPublicKey","first","loadCompressedPublicKey","subarray","x3","loadUncompressedPublicKey","savePublicKey","bn","pair","pairs","sigR","sigS","lenR","posR","lenS","posS","_noncefn","sigObj","sigr","sigs","scalar","convertbits","frombits","tobits","maxv","hrp","program","encodings","BECH32","BECH32M","addr","bech32m","dec","decode","CHARSET","GENERATOR","getEncodingConst","polymod","values","chk","top","hrpExpand","combined","createChecksum","bechString","has_lower","has_upper","toLowerCase","lastIndexOf","substring","verifyChecksum"],"mappings":"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ACV,SAAU,MACV,SAAU,EACV,SAAU,IACV,OAAS,SACT,QAAU,SACV,QAAU,EACV,QAAU,SACV,QAAU,SACV,QAAU,MACV,QAAU,MACV,QAAU,IACV,QAAU,EACV,QAAU,IACV,SAAU,SACV,SAAU,MACV,SAAU,MACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAW,SACX,SAAW,MACX,SAAW,MACX,SAAW,SACX,SAAW,IACX,SAAW,SACX,SAAW,SACX,SAAW,EACX,SAAW,SACX,SAAW,SACX,SAAW,EACX,SAAW,MACX,SAAW,SACX,SAAW,IACX,SAAW,MACX,SAAW,SACX,SAAW,SACX,SAAW,IACX,SAAW,SACX,SAAW,EACX,SAAW,MACX,SAAW,SACX,SAAW,IACX,SAAW,SACX,SAAW,MACX,SAAW,SACX,SAAW,MACX,SAAW,SACX,SAAW,SACX,SAAW,SACX,SAAW,EACX,SAAW,OAEf,CACIA,EAAK,WACL,MAAS,WACT,OAAS,QACT,OAAS,WACT,OAAS,EACT,OAAS,QACT,OAAS,WACT,OAAS,QACT,OAAS,WACT,OAAS,QACT,OAAS,GACT,OAAS,WACT,OAAS,WACT,OAAS,KACT,OAAS,KACT,OAAS,WACT,MAAQ,WACR,MAAS,GACT,OAAS,WACT,OAAS,WACT,OAAS,QACT,OAAS,WACT,OAAS,EACT,OAAS,WACT,OAAS,KACT,OAAS,WACT,OAAS,QACT,OAAS,KACT,OAAS,WACT,OAAS,QACT,OAAS,QACT,QAAS,WACT,QAAU,QACV,QAAU,QACV,QAAU,WACV,QAAU,EACV,QAAU,KACV,QAAU,WACV,QAAU,WACV,QAAU,WACV,QAAU,WACV,QAAU,WACV,QAAU,WACV,QAAU,QACV,QAAU,WACV,QAAU,QACV,QAAU,GACV,QAAU,KACV,QAAU,WACV,QAAU,WACV,QAAU,EACV,QAAU,QACV,QAAU,QACV,QAAU,WACV,QAAU,WACV,QAAU,GACV,QAAU,WACV,QAAU,KACV,QAAU,WACV,QAAU,WACV,QAAU,KACV,QAAU,WACV,QAAU,QACV,QAAU,SAEd,CACIA,EAAK,IACL,KAAQ,SACR,KAAQ,OACR,MAAQ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S,SAAgB7rB,GAEtC,OADAhC,KAAKw9C,MAAMx4C,OAAOhF,KAAKu9C,MAAM1vB,UACtB7tB,KAAKw9C,MAAM3vB,OAAO7rB,K,cC7C3BxF,EAAOD,QAAU,CACf0zB,QAAS,CACPG,KAAM,EACNK,OAAQ,CACN,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,kEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,sEAIN7lB,IAAK,CACHge,IAAK,EACL6H,OAAQ,CACN,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,iEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,wE,6BCrwBR,IAAIzmB,EAAK,EAAQ,GACbyzC,EAAW,EAAQ,IACnB1zC,EAAQ,EAAQ,GAChBypB,EAAS,EAAQ,IACjB2I,EAAO,EAAQ,IACfhyB,EAASJ,EAAMI,OAEfuzC,EAAU,EAAQ,IAClBC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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 37);\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./evpkdf\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            var block;\n\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            var modeCreator;\n\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var finalProcessedBlocks;\n\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            var wordArray;\n\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            var salt;\n\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","module.exports=function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=4)}([function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.hexBoundaries=t.hexToBytes=t.hexLE=t.hexFixBytes=void 0;var r=n(2);t.hexFixBytes=function(e){return e.length%2==0?e:e.padStart(2*Math.ceil(e.length/2),\"0\")};var o=function(e){return e.length%2==0&&!/[^a-fA-F0-9]/u.test(e)};t.hexLE=function(e){return r.bytesToHex(t.hexToBytes(e).reverse())};t.hexToBytes=function(e){return Uint8Array.from(function(e){if(!o(e))throw\"hexToHexBytes: invalid hex string\";var t=e.match(/.{1,2}/g);return null===t?[]:t.map((function(e){return e}))}(e).map((function(e){return function(e){if(!o(e))throw\"hexToByte: invalid hex string\";return parseInt(e,16)}(e)})))};t.hexBoundaries=function(e){var t=Math.pow(2,8*e-9),n=Math.pow(2,8*e-1);if(0<e&&e<5)return{minPos:t,maxPos:n-1,minNeg:1-n,maxNeg:-1*t}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.MAX_INTEGER=void 0,t.MAX_INTEGER=2147483647},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.bytesToBin=t.bytesToNumber=t.bytesToString=t.bytesToHex=void 0;var r=n(0),o=n(3);t.bytesToHex=function(e){return e.reduce((function(e,t){return e+function(e){if(!function(e){return 0<=e||e<=255}(e))throw\"byteToHex: invalid byte number\";return e.toString(16).padStart(2,\"0\")}(t)}),\"\")};t.bytesToString=function(e){for(var t=[],n=0,r=0;n<e.length;){var o=e[n++];if(o<128)t[r++]=String.fromCharCode(o);else if(o>191&&o<224){var i=e[n++];t[r++]=String.fromCharCode((31&o)<<6|63&i)}else if(o>239&&o<365){var u=((7&o)<<18|(63&(i=e[n++]))<<12|(63&(a=e[n++]))<<6|63&e[n++])-65536;t[r++]=String.fromCharCode(55296+(u>>10)),t[r++]=String.fromCharCode(56320+(1023&u))}else{i=e[n++];var a=e[n++];t[r++]=String.fromCharCode((15&o)<<12|(63&i)<<6|63&a)}}return t.join(\"\")};t.bytesToNumber=function(e){if(0==e.length)return 0;if(!(4<e.length)){var n=t.bytesToHex(e);if(o.numberIsValid(n,e.length)){var i=r.hexBoundaries(e.length);if(void 0!==i){var u=parseInt(r.hexLE(n),16);return i.minPos<=u&&u<=i.maxPos||0===u?u:Math.pow(2,8*e.length-1)-u}}}};t.bytesToBin=function(e){return e.reduce((function(e,t){return t.toString(2).padStart(8,\"0\")+e}),\"\")}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.numberIsValid=t.numberToBytes=void 0;var r=n(0),o=function(e,t){return Math.log(t)/Math.log(e)},i=function(e,t){var n=e%t;return{numeral:n,nextValue:(e-n)/t}};t.numberToBytes=function(e){var t,n=0===(t=e)?0:0<t?Math.ceil((o(2,t+1)+1)/8):t<0?Math.floor((o(2,-t)+1)/8+1):0;return function(e,t){var n=new Uint8Array(t);if(e.length>t){var r=Math.pow(2,8)-1;n.fill(r)}else n.set(e);return n}(function(e){for(var t=Math.pow(2,8),n=e,r=[];n>=t;){var o=i(n,t),u=o.numeral,a=o.nextValue;r.push(u),n=a}return n>0&&r.push(n),Uint8Array.from(r)}(e<0?Math.pow(2,8*n-1)-e:e),n)};t.numberIsValid=function(e,t){var n=parseInt(r.hexLE(e),16);return(1!==t||0!=n&&128!=n)&&((2!==t||!(1<=n&&n<=127||32768<=n&&n<=32895))&&((3!==t||!(1<=n&&n<=32767||8388608<=n&&n<=8421375))&&(4!==t||!(1<=n&&n<=8388607||2147483648<=n&&n<=2155872255))))}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.MAX_INTEGER=t.hexLE=void 0;var r=n(1);Object.defineProperty(t,\"MAX_INTEGER\",{enumerable:!0,get:function(){return r.MAX_INTEGER}});var o=n(0);Object.defineProperty(t,\"hexLE\",{enumerable:!0,get:function(){return o.hexLE}});var i=n(5);t.default=i.WizData},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.WizData=void 0;var r=n(1),o=n(6),i=n(2),u=n(0),a=n(3),f=n(7),s=function(){function e(e,t,n,s){var c=\"\",d=new Uint8Array([]),l=\"\",v=\"\",h=void 0,y=void 0;void 0!==e?(c=e,d=u.hexToBytes(e),l=i.bytesToBin(d),v=e,h=i.bytesToNumber(d)):void 0!==t?(c=t,d=o.binToBytes(t),l=t,v=i.bytesToHex(d),h=i.bytesToNumber(d)):void 0!==n?(c=n,d=a.numberToBytes(n),l=i.bytesToBin(d),v=i.bytesToHex(d),h=n):void 0!==s&&(c=s,d=f.stringToBytes(s),l=i.bytesToBin(d),v=i.bytesToHex(d),h=i.bytesToNumber(d),y=s),this.input=c,this.bytes=d,this.bin=l,this.hex=v,void 0!==h&&-r.MAX_INTEGER<=h&&h<=r.MAX_INTEGER&&(this.number=h),this.text=y}return e.fromHex=function(t){return new e(t,void 0,void 0,void 0)},e.fromBin=function(t){return new e(void 0,t,void 0,void 0)},e.fromNumber=function(t){return new e(void 0,void 0,t,void 0)},e.fromText=function(t){return new e(void 0,void 0,void 0,t)},e}();t.WizData=s},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.binToBytes=t.binFixBytes=void 0;t.binFixBytes=function(e){return e.length%8==0?e:e.padStart(8*Math.ceil(e.length/8),\"0\")};t.binToBytes=function(e){return Uint8Array.from(function(e){if(!function(e){return!/[^01]/u.test(e)&&e.length%8==0}(e))throw\"binToBinBytes: invalid bin string\";var t=e.match(/.{1,8}/g);return null===t?[]:t.map((function(e){return e}))}(e).reverse().map((function(e){return function(e){return parseInt(e,2)}(e)})))}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.stringToBytes=void 0;t.stringToBytes=function(e){for(var t=[],n=0,r=0;r<e.length;r++){var o=e.charCodeAt(r);o<128?t[n++]=o:o<2048?(t[n++]=o>>6|192,t[n++]=63&o|128):55296==(64512&o)&&r+1<e.length&&56320==(64512&e.charCodeAt(r+1))?(o=65536+((1023&o)<<10)+(1023&e.charCodeAt(r+=1)),t[n++]=o>>18|240,t[n++]=o>>12&63|128,t[n++]=o>>6&63|128,t[n++]=63&o|128):(t[n++]=o>>12|224,t[n++]=o>>6&63|128,t[n++]=63&o|128)}return new Uint8Array(t)}}]);\n//# sourceMappingURL=index.js.map","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            var block;\n\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","import { WizDataList } from \"../model\";\r\nimport { Opcode } from \"../opcodes/model/Opcode\";\r\n\r\nexport const flipbits = (str: string): string => {\r\n  return str\r\n    .split(\"\")\r\n    .map((b: any) => (1 - b).toString())\r\n    .join(\"\");\r\n};\r\n\r\nexport const opHexToWord = (hex: string, opWordCodes: Opcode[]): string => {\r\n  const word = opWordCodes.find((owc) => owc.hex === hex)?.word;\r\n  return word || \"\";\r\n};\r\n\r\nexport const opcodeToWord = (opcode: number, opWordCodes: Opcode[]): string => {\r\n  return opWordCodes.find((owc) => owc.opcode === opcode)?.word || \"\";\r\n};\r\n\r\nexport const opWordToHex = (word: string, opWordCodes: Opcode[]): string => {\r\n  const hex = opWordCodes.find((owc) => owc.word === word)?.hex.substr(2);\r\n  return hex || \"\";\r\n};\r\n\r\nexport const toHexString = (byteArray: Uint8Array) => {\r\n  return Array.from(byteArray, function (byte) {\r\n    return (\"0\" + (byte & 0xff).toString(16)).slice(-2);\r\n  }).join(\"\");\r\n};\r\n\r\n// supports all opcodes\r\nexport const currentScope = (wizDataList: WizDataList): boolean => wizDataList.flow[wizDataList.flow.length - 1];\r\nexport const EMOJI_REGEX = /([\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2694-\\u2697]|\\uD83E[\\uDD10-\\uDD5D])/g;\r\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone \"words\" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","import { Opcode } from \"./model/Opcode\";\r\nimport { commonOpcodes } from \"./common\";\r\n\r\nexport const opcodesBitcoinSegwit: Opcode[] = [\r\n  ...commonOpcodes,\r\n  { word: \"OP_EQUAL\", opcode: 135, hex: \"0x87\", description: \"Returns 1 if the inputs are exactly equal, 0 otherwise.\" },\r\n]; //\tx1 x2\tTrue / false\tReturns 1 if the inputs are exactly equal, 0 otherwise.];\r\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","export enum VM_NETWORK {\r\n  BTC = \"BTC\",\r\n  LIQUID = \"LIQUID\",\r\n}\r\n\r\nexport enum VM_NETWORK_VERSION {\r\n  SEGWIT = \"00\",\r\n  TAPSCRIPT = \"01\",\r\n}\r\n\r\nexport type VM = {\r\n  network: VM_NETWORK;\r\n  ver: VM_NETWORK_VERSION;\r\n};\r\n","import { Opcode } from \"./model/Opcode\";\r\n\r\nexport const commonOpcodes: Opcode[] = [\r\n  /*\r\n   * Constants\r\n   * * 0 - 96\r\n   */\r\n  {\r\n    word: \"OP_0\",\r\n    opcode: 0,\r\n    hex: \"0x00\",\r\n    output: 0,\r\n    description: \"(empty value)\tAn empty array of bytes is pushed onto the stack. (This is not a no-op: an item is added to the stack.)\",\r\n  }, // Nothing.\t(empty value)\tAn empty array of bytes is pushed onto the stack. (This is not a no-op: an item is added to the stack.)\r\n  {\r\n    word: \"OP_FALSE\",\r\n    opcode: 0,\r\n    hex: \"0x00\",\r\n    output: 0,\r\n    description: \"(empty value)\tAn empty array of bytes is pushed onto the stack. (This is not a no-op: an item is added to the stack.)\",\r\n  }, // Nothing.\t(empty value)\tAn empty array of bytes is pushed onto the stack. (This is not a no-op: an item is added to the stack.)\r\n  // { word: \"N/A\", opcode: 1 - 75, hex: \"0x01-0x4b\", output: 0 }, // (special)\tdata\tThe next opcode bytes is data to be pushed onto the stack\r\n  // { word: \"OP_PUSHDATA1\", opcode: 76, hex: \"0x4c\" }, //\t(special)\tdata\tThe next byte contains the number of bytes to be pushed onto the stack.\r\n  // { word: \"OP_PUSHDATA2\", opcode: 77, hex: \"0x4d\" }, //\t(special)\tdata\tThe next two bytes contain the number of bytes to be pushed onto the stack in little endian order.\r\n  // { word: \"OP_PUSHDATA4\", opcode: 78, hex: \"0x4e\" }, //\t(special)\tdata\tThe next four bytes contain the number of bytes to be pushed onto the stack in little endian order.\r\n  // { word: \"OP_1NEGATE\", opcode: 79, hex: \"0x4f\" }, //\tNothing.\t-1\tThe number -1 is pushed onto the stack.\r\n  { word: \"OP_1\", opcode: 81, hex: \"0x51\", output: 1, description: \"The number 1 is pushed onto the stack.\" }, // Nothing.\t1\tThe number 1 is pushed onto the stack.\r\n  { word: \"OP_TRUE\", opcode: 81, hex: \"0x51\", output: 1, description: \"The number 1 is pushed onto the stack.\" }, // Nothing.\t1\tThe number 1 is pushed onto the stack.\r\n  { word: \"OP_2\", opcode: 82, hex: \"0x52\", output: 2, description: \"The number 2 is pushed onto the stack.\" }, // Nothing.\t2\tThe number 2 is pushed onto the stack.\r\n  { word: \"OP_3\", opcode: 83, hex: \"0x53\", output: 3, description: \"The number 3 is pushed onto the stack.\" }, // Nothing.\t3\tThe number 3 is pushed onto the stack.\r\n  { word: \"OP_4\", opcode: 84, hex: \"0x54\", output: 4, description: \"The number 4 is pushed onto the stack.\" }, // Nothing.\t4\tThe number 4 is pushed onto the stack.\r\n  { word: \"OP_5\", opcode: 85, hex: \"0x55\", output: 5, description: \"The number 5 is pushed onto the stack.\" }, // Nothing.\t5\tThe number 5 is pushed onto the stack.\r\n  { word: \"OP_6\", opcode: 86, hex: \"0x56\", output: 6, description: \"The number 6 is pushed onto the stack.\" }, // Nothing.\t6\tThe number 6 is pushed onto the stack.\r\n  { word: \"OP_7\", opcode: 87, hex: \"0x57\", output: 7, description: \"The number 7 is pushed onto the stack.\" }, // Nothing.\t7\tThe number 7 is pushed onto the stack.\r\n  { word: \"OP_8\", opcode: 88, hex: \"0x58\", output: 8, description: \"The number 8 is pushed onto the stack.\" }, // Nothing.\t8\tThe number 8 is pushed onto the stack.\r\n  { word: \"OP_9\", opcode: 89, hex: \"0x59\", output: 9, description: \"The number 9 is pushed onto the stack.\" }, // Nothing.\t9\tThe number 9 is pushed onto the stack.\r\n  { word: \"OP_10\", opcode: 90, hex: \"0x5a\", output: 10, description: \"The number 10 is pushed onto the stack.\" }, // Nothing.\t10\tThe number 10 is pushed onto the stack.\r\n  { word: \"OP_11\", opcode: 91, hex: \"0x5b\", output: 11, description: \"The number 11 is pushed onto the stack.\" }, // Nothing.\t11\tThe number 11 is pushed onto the stack.\r\n  { word: \"OP_12\", opcode: 92, hex: \"0x5c\", output: 12, description: \"The number 12 is pushed onto the stack.\" }, // Nothing.\t12\tThe number 12 is pushed onto the stack.\r\n  { word: \"OP_13\", opcode: 93, hex: \"0x5d\", output: 13, description: \"The number 13 is pushed onto the stack.\" }, // Nothing.\t13\tThe number 13 is pushed onto the stack.\r\n  { word: \"OP_14\", opcode: 94, hex: \"0x5e\", output: 14, description: \"The number 14 is pushed onto the stack.\" }, // Nothing.\t14\tThe number 14 is pushed onto the stack.\r\n  { word: \"OP_15\", opcode: 95, hex: \"0x5f\", output: 15, description: \"The number 15 is pushed onto the stack.\" }, // Nothing.\t15\tThe number 15 is pushed onto the stack.\r\n  { word: \"OP_16\", opcode: 96, hex: \"0x60\", output: 16, description: \"The number 16 is pushed onto the stack.\" }, // Nothing.\t16\tThe number 16 is pushed onto the stack.\r\n\r\n  /*\r\n   * Flow control\r\n   * * 97 - 106\r\n   */\r\n  { word: \"OP_NOP\", opcode: 97, hex: \"0x61\", description: \"Nothing\tDoes nothing.\" }, //\tNothing\tNothing\tDoes nothing.\r\n  {\r\n    word: \"OP_IF\",\r\n    opcode: 99,\r\n    hex: \"0x63\",\r\n    description: \"if [statements] [else [statements]]* endif\tIf the top stack value is not False, the statements are executed. The top stack value is removed.\",\r\n  }, //\t<expression> if [statements] [else [statements]]* endif\tIf the top stack value is not False, the statements are executed. The top stack value is removed.\r\n  {\r\n    word: \"OP_NOTIF\",\r\n    opcode: 100,\r\n    hex: \"0x64\",\r\n    description: \"notif [statements] [else [statements]]* endif\tIf the top stack value is False, the statements are executed. The top stack value is removed.\",\r\n  }, //\t<expression> notif [statements] [else [statements]]* endif\tIf the top stack value is False, the statements are executed. The top stack value is removed.\r\n  {\r\n    word: \"OP_ELSE\",\r\n    opcode: 103,\r\n    hex: \"0x67\",\r\n    description:\r\n      \" if [statements] [else [statements]]* endif\tIf the preceding OP_IF or OP_NOTIF or OP_ELSE was not executed then these statements are and if the preceding OP_IF or OP_NOTIF or OP_ELSE was executed then these statements are not.\",\r\n  }, //\t<expression> if [statements] [else [statements]]* endif\tIf the preceding OP_IF or OP_NOTIF or OP_ELSE was not executed then these statements are and if the preceding OP_IF or OP_NOTIF or OP_ELSE was executed then these statements are not.\r\n  {\r\n    word: \"OP_ENDIF\",\r\n    opcode: 104,\r\n    hex: \"0x68\",\r\n    description:\r\n      \"if [statements] [else [statements]]* endif\tEnds an if/else block. All blocks must end, or the transaction is invalid. An OP_ENDIF without OP_IF earlier is also invalid.\",\r\n  }, //\t<expression> if [statements] [else [statements]]* endif\tEnds an if/else block. All blocks must end, or the transaction is invalid. An OP_ENDIF without OP_IF earlier is also invalid.\r\n  { word: \"OP_VERIFY\", opcode: 105, hex: \"0x69\", description: \"\tMarks transaction as invalid if top stack value is not true. The top stack value is removed.\" }, //\tTrue / false\tNothing / fail\tMarks transaction as invalid if top stack value is not true. The top stack value is removed.\r\n  { word: \"OP_RETURN\", opcode: 106, hex: \"0x6a\" }, //\tNothing\tfail\tMarks transaction as invalid. Since bitcoin 0.9, a standard way of attaching extra data to transactions is to add a zero-value output with a scriptPubKey consisting of OP_RETURN followed by data. Such outputs are provably unspendable and specially discarded from storage in the UTXO set, reducing their cost to the network. Since 0.12, standard relay rules allow a single output with OP_RETURN, that contains any sequence of push statements (or OP_RESERVED[1]) after the OP_RETURN provided the total scriptPubKey length is at most 83 bytes.\r\n\r\n  /*\r\n   * Stack\r\n   * * 107 - 125\r\n   */\r\n  { word: \"OP_TOALTSTACK\", opcode: 107, hex: \"0x6b\", description: \"Puts the input onto the top of the alt stack. Removes it from the main stack.\" }, //\tx1\t(alt)x1\tPuts the input onto the top of the alt stack. Removes it from the main stack.\r\n  { word: \"OP_FROMALTSTACK\", opcode: 108, hex: \"0x6c\", description: \"Puts the input onto the top of the main stack. Removes it from the alt stack.\" }, //\t(alt)x1\tx1\tPuts the input onto the top of the main stack. Removes it from the alt stack.\r\n  { word: \"OP_2DROP\", opcode: 109, hex: \"0x6d\", description: \"Nothing\tRemoves the top two stack items.\" }, //\tx1 x2\tNothing\tRemoves the top two stack items.\r\n  { word: \"OP_2DUP\", opcode: 110, hex: \"0x6e\", description: \"Duplicates the top two stack items\" }, //\tx1 x2\tx1 x2 x1 x2\tDuplicates the top two stack items.\r\n  { word: \"OP_3DUP\", opcode: 111, hex: \"0x6f\", description: \"Duplicates the top three stack items.\" }, //\tx1 x2 x3\tx1 x2 x3 x1 x2 x3\tDuplicates the top three stack items.\r\n  { word: \"OP_2OVER\", opcode: 112, hex: \"0x70\", description: \"Copies the pair of items two spaces back in the stack to the front.\" }, //\tx1 x2 x3 x4\tx1 x2 x3 x4 x1 x2\tCopies the pair of items two spaces back in the stack to the front.\r\n  { word: \"OP_2ROT\", opcode: 113, hex: \"0x71\", description: \"The fifth and sixth items back are moved to the top of the stack.\" }, //\tx1 x2 x3 x4 x5 x6\tx3 x4 x5 x6 x1 x2\tThe fifth and sixth items back are moved to the top of the stack.\r\n  { word: \"OP_2SWAP\", opcode: 114, hex: \"0x72\", description: \"Swaps the top two pairs of stack.\" }, //\tx1 x2 x3 x4\tx3 x4 x1 x2\tSwaps the top two pairs of stack.\r\n  { word: \"OP_IFDUP\", opcode: 115, hex: \"0x73\", description: \"If the top stack value is not 0, duplicate it.\" }, //\tx\tx / x x\tIf the top stack value is not 0, duplicate it.\r\n  { word: \"OP_DEPTH\", opcode: 116, hex: \"0x74\", description: \"Puts the number of stack items onto the stack.\" }, //\tNothing\t<Stack size>\tPuts the number of stack items onto the stack.\r\n  { word: \"OP_DROP\", opcode: 117, hex: \"0x75\", description: \"Removes the top stack item.\" }, //\tx\tNothing\tRemoves the top stack item.\r\n  { word: \"OP_DUP\", opcode: 118, hex: \"0x76\", description: \"Duplicates the top stack item.\" }, //\tx\tx x\tDuplicates the top stack item.\r\n  { word: \"OP_NIP\", opcode: 119, hex: \"0x77\", description: \"Removes the second-to-top stack item.\" }, //\tx1 x2\tx2\tRemoves the second-to-top stack item.\r\n  { word: \"OP_OVER\", opcode: 120, hex: \"0x78\", description: \"Copies the second-to-top stack item to the top.\" }, //\tx1 x2\tx1 x2 x1\tCopies the second-to-top stack item to the top.\r\n  { word: \"OP_PICK\", opcode: 121, hex: \"0x79\", description: \"The item n back in the stack is copied to the top.\" }, //\txn ... x2 x1 x0 <n>\txn ... x2 x1 x0 xn\tThe item n back in the stack is copied to the top.\r\n  { word: \"OP_ROLL\", opcode: 122, hex: \"0x7a\", description: \"The item n back in the stack is moved to the top.\" }, //\txn ... x2 x1 x0 <n>\t... x2 x1 x0 xn\tThe item n back in the stack is moved to the top.\r\n  { word: \"OP_ROT\", opcode: 123, hex: \"0x7b\", description: \"The 3rd item down the stack is moved to the top.\" }, //\tx1 x2 x3\tx2 x3 x1\tThe 3rd item down the stack is moved to the top.\r\n  { word: \"OP_SWAP\", opcode: 124, hex: \"0x7c\", description: \"The top two items on the stack are swapped.\" }, //\tx1 x2\tx2 x1\tThe top two items on the stack are swapped.\r\n  { word: \"OP_TUCK\", opcode: 125, hex: \"0x7d\", description: \"The item at the top of the stack is copied and inserted before the second-to-top item.\" }, //\tx1 x2\tx2 x1 x2\tThe item at the top of the stack is copied and inserted before the second-to-top item.\r\n\r\n  /*\r\n   * Splice\r\n   * 126 - 130\r\n   */\r\n  { word: \"OP_SIZE\", opcode: 130, hex: \"0x82\", description: \"Pushes the string length of the top element of the stack (without popping it).\" }, //\tin\tin size\tPushes the string length of the top element of the stack (without popping it).\r\n\r\n  /*\r\n   * Bitwise logic\r\n   * 131 - 136\r\n   */\r\n  // { word: \"OP_EQUAL\", opcode: 135, hex: \"0x87\", description: \"Returns 1 if the inputs are exactly equal, 0 otherwise.\" }, //\tx1 x2\tTrue / false\tReturns 1 if the inputs are exactly equal, 0 otherwise.\r\n  { word: \"OP_EQUALVERIFY\", opcode: 136, hex: \"0x88\", description: \"Same as OP_EQUAL, but runs OP_VERIFY afterward.\" }, //\tx1 x2\tNothing / fail\tSame as OP_EQUAL, but runs OP_VERIFY afterward.\r\n\r\n  /*\r\n   * Arithmetic\r\n   * 139 - 165\r\n   */\r\n  { word: \"OP_1ADD\", opcode: 139, hex: \"0x8b\", description: \"1 is added to the input.\" }, //\tin\tout\t1 is added to the input.\r\n  { word: \"OP_1SUB\", opcode: 140, hex: \"0x8c\", description: \"1 is subtracted from the input.\" }, //\tin\tout\t1 is subtracted from the input.\r\n  // { word: \"OP_2MUL\", opcode: 141, hex: \"0x8d\" }, //\tin\tout\tThe input is multiplied by 2. disabled.\r\n  // { word: \"OP_2DIV\", opcode: 142, hex: \"0x8e\" }, //\tin\tout\tThe input is divided by 2. disabled.\r\n  { word: \"OP_NEGATE\", opcode: 143, hex: \"0x8f\", description: \"The sign of the input is flipped.\" }, //\tin\tout\tThe sign of the input is flipped.\r\n  { word: \"OP_ABS\", opcode: 144, hex: \"0x90\", description: \"The input is made positive.\" }, //\tin\tout\tThe input is made positive.\r\n  { word: \"OP_NOT\", opcode: 145, hex: \"0x91\", description: \"If the input is 0 or 1, it is flipped. Otherwise the output will be 0.\" }, //\tin\tout\tIf the input is 0 or 1, it is flipped. Otherwise the output will be 0.\r\n  { word: \"OP_0NOTEQUAL\", opcode: 146, hex: \"0x92\", description: \"Returns 0 if the input is 0. 1 otherwise.\" }, //\tin\tout\tReturns 0 if the input is 0. 1 otherwise.\r\n  { word: \"OP_ADD\", opcode: 147, hex: \"0x93\", description: \"a is added to b.\" }, //\ta b\tout\ta is added to b.\r\n  { word: \"OP_SUB\", opcode: 148, hex: \"0x94\", description: \"b is subtracted from a.\" }, //\ta b\tout\tb is subtracted from a.\r\n  // { word: \"OP_MUL\", opcode: 149, hex: \"0x95\" }, //\ta b\tout\ta is multiplied by b. disabled.\r\n  // { word: \"OP_DIV\", opcode: 150, hex: \"0x96\" }, //\ta b\tout\ta is divided by b. disabled.\r\n  // { word: \"OP_MOD\", opcode: 151, hex: \"0x97\" }, //\ta b\tout\tReturns the remainder after dividing a by b. disabled.\r\n  { word: \"OP_BOOLAND\", opcode: 154, hex: \"0x9a\", description: \"\tIf both a and b are not 0, the output is 1. Otherwise 0.\" }, //\ta b\tout\tIf both a and b are not 0, the output is 1. Otherwise 0.\r\n  { word: \"OP_BOOLOR\", opcode: 155, hex: \"0x9b\", description: \"If a or b is not 0, the output is 1. Otherwise 0.\" }, //\ta b\tout\tIf a or b is not 0, the output is 1. Otherwise 0.\r\n  { word: \"OP_NUMEQUAL\", opcode: 156, hex: \"0x9c\", description: \"Returns 1 if the numbers are equal, 0 otherwise.\" }, //\ta b\tout\tReturns 1 if the numbers are equal, 0 otherwise.\r\n  { word: \"OP_NUMEQUALVERIFY\", opcode: 157, hex: \"0x9d\", description: \"Same as OP_NUMEQUAL, but runs OP_VERIFY afterward.\" }, //\ta b\tNothing / fail\tSame as OP_NUMEQUAL, but runs OP_VERIFY afterward.\r\n  { word: \"OP_NUMNOTEQUAL\", opcode: 158, hex: \"0x9e\", description: \"Returns 1 if the numbers are not equal, 0 otherwise.\" }, //\ta b\tout\tReturns 1 if the numbers are not equal, 0 otherwise.\r\n  { word: \"OP_LESSTHAN\", opcode: 159, hex: \"0x9f\", description: \"Returns 1 if a is less than b, 0 otherwise.\" }, //\ta b\tout\tReturns 1 if a is less than b, 0 otherwise.\r\n  { word: \"OP_GREATERTHAN\", opcode: 160, hex: \"0xa0\", description: \"Returns 1 if a is greater than b, 0 otherwise.\" }, //\ta b\tout\tReturns 1 if a is greater than b, 0 otherwise.\r\n  { word: \"OP_LESSTHANOREQUAL\", opcode: 161, hex: \"0xa1\", description: \"Returns 1 if a is less than or equal to b, 0 otherwise.\" }, //\ta b\tout\tReturns 1 if a is less than or equal to b, 0 otherwise.\r\n  { word: \"OP_GREATERTHANOREQUAL\", opcode: 162, hex: \"0xa2\", description: \"\tReturns 1 if a is greater than or equal to b, 0 otherwise.\" }, //\ta b\tout\tReturns 1 if a is greater than or equal to b, 0 otherwise.\r\n  { word: \"OP_MIN\", opcode: 163, hex: \"0xa3\", description: \"Returns the smaller of a and b.\" }, //\ta b\tout\tReturns the smaller of a and b.\r\n  { word: \"OP_MAX\", opcode: 164, hex: \"0xa4\", description: \"Returns the larger of a and b.\" }, //\ta b\tout\tReturns the larger of a and b.\r\n  { word: \"OP_WITHIN\", opcode: 165, hex: \"0xa5\", description: \"Returns 1 if x is within the specified range (left-inclusive), 0 otherwise.\" }, //\tx min max\tout\tReturns 1 if x is within the specified range (left-inclusive), 0 otherwise.\r\n\r\n  /*\r\n   * Crypto\r\n   * 166 - 175\r\n   */\r\n  { word: \"OP_RIPEMD160\", opcode: 166, hex: \"0xa6\", description: \"The input is hashed using RIPEMD-160.\" }, //\tin\thash\tThe input is hashed using RIPEMD-160.\r\n  { word: \"OP_SHA1\", opcode: 167, hex: \"0xa7\", description: \"The input is hashed using SHA-1.\" }, //\tin\thash\tThe input is hashed using SHA-1.\r\n  { word: \"OP_SHA256\", opcode: 168, hex: \"0xa8\", description: \"The input is hashed using SHA-256.\" }, //\tin\thash\tThe input is hashed using SHA-256.\r\n  { word: \"OP_HASH160\", opcode: 169, hex: \"0xa9\", description: \"The input is hashed twice: first with SHA-256 and then with RIPEMD-160.\" }, //\tin\thash\tThe input is hashed twice: first with SHA-256 and then with RIPEMD-160.\r\n  { word: \"OP_HASH256\", opcode: 170, hex: \"0xaa\", description: \"The input is hashed two times with SHA-256.\" }, //\tin\thash\tThe input is hashed two times with SHA-256.\r\n  // { word: \"OP_CODESEPARATOR\", opcode: 171, hex: \"0xab\" }, //\tNothing\tNothing\tAll of the signature checking words will only match signatures to the data after the most recently-executed OP_CODESEPARATOR.\r\n  { word: \"OP_CHECKSIG\", opcode: 172, hex: \"0xac\" }, //\tsig pubkey\tTrue / false\tThe entire transaction's outputs, inputs, and script (from the most recently-executed OP_CODESEPARATOR to the end) are hashed. The signature used by OP_CHECKSIG must be a valid signature for this hash and public key. If it is, 1 is returned, 0 otherwise.\r\n  { word: \"OP_CHECKSIGVERIFY\", opcode: 173, hex: \"0xad\" }, //\tsig pubkey\tNothing / fail\tSame as OP_CHECKSIG, but OP_VERIFY is executed afterward.\r\n  // { word: \"OP_CHECKMULTISIG\", opcode: 174, hex: \"0xae\" }, //\tx sig1 sig2 ... <number of signatures> pub1 pub2 <number of public keys>\tTrue / False\tCompares the first signature against each public key until it finds an ECDSA match. Starting with the subsequent public key, it compares the second signature against each remaining public key until it finds an ECDSA match. The process is repeated until all signatures have been checked or not enough public keys remain to produce a successful result. All signatures need to match a public key. Because public keys are not checked again if they fail any signature comparison, signatures must be placed in the scriptSig using the same order as their corresponding public keys were placed in the scriptPubKey or redeemScript. If all signatures are valid, 1 is returned, 0 otherwise. Due to a bug, one extra unused value is removed from the stack.\r\n  // { word: \"OP_CHECKMULTISIGVERIFY\", opcode: 175, hex: \"0xaf\" }, //\tx sig1 sig2 ... <number of signatures> pub1 pub2 ... <number of public keys>\tNothing / fail\tSame as OP_CHECKMULTISIG, but OP_VERIFY is executed afterward.\r\n\r\n  /*\r\n   * Locktime\r\n   * 177 - 178\r\n   */\r\n  // (previously OP_NOP2)\r\n  { word: \"OP_CHECKLOCKTIMEVERIFY\", opcode: 177, hex: \"0xb1\" }, //\tx\tx / fail\tMarks transaction as invalid if the top stack item is greater than the transaction's nLockTime field, otherwise script evaluation continues as though an OP_NOP was executed. Transaction is also invalid if 1. the stack is empty; or 2. the top stack item is negative; or 3. the top stack item is greater than or equal to 500000000 while the transaction's nLockTime field is less than 500000000, or vice versa; or 4. the input's nSequence field is equal to 0xffffffff. The precise semantics are described in BIP 0065.\r\n  // (previously OP_NOP3)\r\n  { word: \"OP_CHECKSEQUENCEVERIFY\", opcode: 178, hex: \"0xb2\" }, //\tx\tx / fail\tMarks transaction as invalid if the relative lock time of the input (enforced by BIP 0068 with nSequence) is not equal to or longer than the value of the top stack item. The precise semantics are described in BIP 0112.\r\n\r\n  /*\r\n   * Reserved words\r\n   * 80, 98, 101, 102, 137, 138, 176, 179-185\r\n   */\r\n  // { word: \"OP_RESERVED\", opcode: 80, hex: \"0x50\" }, //\tTransaction is invalid unless occuring in an unexecuted OP_IF branch\r\n  // { word: \"OP_VER\", opcode: 98, hex: \"0x62\" }, //\tTransaction is invalid unless occuring in an unexecuted OP_IF branch\r\n  // { word: \"OP_VERIF\", opcode: 101, hex: \"0x65\" }, //\tTransaction is invalid even when occuring in an unexecuted OP_IF branch\r\n  // { word: \"OP_VERNOTIF\", opcode: 102, hex: \"0x66\" }, //\tTransaction is invalid even when occuring in an unexecuted OP_IF branch\r\n  // { word: \"OP_RESERVED1\", opcode: 137, hex: \"0x89\" }, //\tTransaction is invalid unless occuring in an unexecuted OP_IF branch\r\n  // { word: \"OP_RESERVED2\", opcode: 138, hex: \"0x8a\" }, //\tTransaction is invalid unless occuring in an unexecuted OP_IF branch\r\n  // { word: \"OP_NOP1\", opcode: 176, hex: \"0xb0\" }, //\tThe word is ignored. Does not mark transaction as invalid.\r\n  // { word: \"OP_NOP4\", opcode: 179, hex: \"0xb3\" }, //\tThe word is ignored. Does not mark transaction as invalid.\r\n  // { word: \"OP_NOP5\", opcode: 180, hex: \"0xb4\" }, //\tThe word is ignored. Does not mark transaction as invalid.\r\n  // { word: \"OP_NOP6\", opcode: 181, hex: \"0xb5\" }, //\tThe word is ignored. Does not mark transaction as invalid.\r\n  // { word: \"OP_NOP7\", opcode: 182, hex: \"0xb6\" }, //\tThe word is ignored. Does not mark transaction as invalid.\r\n  // { word: \"OP_NOP8\", opcode: 183, hex: \"0xb7\" }, //\tThe word is ignored. Does not mark transaction as invalid.\r\n  // { word: \"OP_NOP9\", opcode: 184, hex: \"0xb8\" }, //\tThe word is ignored. Does not mark transaction as invalid.\r\n  // { word: \"OP_NOP10\", opcode: 185, hex: \"0xb9\" }, //\tThe word is ignored. Does not mark transaction as invalid.\r\n\r\n  /*\r\n   * Pseudo-words\r\n   * 253 - 255\r\n   */\r\n  // { word: \"OP_PUBKEYHASH\", opcode: 253, hex: \"0xfd\" }, //\tRepresents a public key hashed with OP_HASH160.\r\n  // { word: \"OP_PUBKEY\", opcode: 254, hex: \"0xfe\" }, //\tRepresents a public key compatible with OP_CHECKSIG.\r\n  // { word: \"OP_INVALIDOPCODE\", opcode: 255, hex: \"0xff\" }, //\tMatches any opcode that is not yet assigned.\r\n];\r\n","import { Opcode } from \"./model/Opcode\";\r\nimport { opcodesBitcoinSegwit } from \"./BITCOIN_SEGWIT\";\r\n\r\nexport const opcodesBitcoinTapscript: Opcode[] = [...opcodesBitcoinSegwit];\r\n","import { Opcode } from \"./model/Opcode\";\r\nimport { opcodesBitcoinSegwit } from \"./BITCOIN_SEGWIT\";\r\n\r\nexport const opcodesLiquidSegwit: Opcode[] = [\r\n  ...opcodesBitcoinSegwit,\r\n\r\n  /*\r\n   * Constants\r\n   * * 0 - 96\r\n   */\r\n\r\n  /*\r\n   * Flow control\r\n   * * 97 - 106\r\n   */\r\n\r\n  /*\r\n   * Stack\r\n   * * 107 - 125\r\n   */\r\n\r\n  /*\r\n   * Splice\r\n   * 126 - 130\r\n   */\r\n  { word: \"OP_CAT\", opcode: 126, hex: \"0x7e\", description: \"Concatenates two strings.\" }, //\tx1 x2\tout\tConcatenates two strings. disabled.\r\n  { word: \"OP_SUBSTR\", opcode: 127, hex: \"0x7f\", description: \"Returns a section of a string.\" }, //\tin begin size\tout\tReturns a section of a string. disabled.\r\n  { word: \"OP_LEFT\", opcode: 128, hex: \"0x80\", description: \"Keeps only characters left of the specified point in a string.\" }, //\tin size\tout\tKeeps only characters left of the specified point in a string. disabled.\r\n  { word: \"OP_RIGHT\", opcode: 129, hex: \"0x81\", description: \"Keeps only characters right of the specified point in a string\" }, //\tin size\tout\tKeeps only characters right of the specified point in a string. disabled.\r\n\r\n  /*\r\n   * Bitwise logic\r\n   * 131 - 136\r\n   */\r\n  { word: \"OP_INVERT\", opcode: 131, hex: \"0x83\", description: \"Flips all of the bits in the input.\" }, //\tin\tout\tFlips all of the bits in the input. disabled.\r\n  { word: \"OP_AND\", opcode: 132, hex: \"0x84\", description: \"Boolean and between each bit in the inputs.\" }, //\tx1 x2\tout\tBoolean and between each bit in the inputs. disabled.\r\n  { word: \"OP_OR\", opcode: 133, hex: \"0x85\", description: \"Boolean or between each bit in the inputs.\" }, //\tx1 x2\tout\tBoolean or between each bit in the inputs. disabled.\r\n  { word: \"OP_XOR\", opcode: 134, hex: \"0x86\", description: \"Boolean exclusive or between each bit in the inputs.\" }, //\tx1 x2\tout\tBoolean exclusive or between each bit in the inputs. disabled.\r\n\r\n  /*\r\n   * Arithmetic\r\n   * 139 - 165\r\n   */\r\n  { word: \"OP_LSHIFT\", opcode: 152, hex: \"0x98\", description: \"Shifts a left b bits, preserving sign.\" }, //\ta b\tout\tShifts a left b bits, preserving sign. disabled.\r\n  { word: \"OP_RSHIFT\", opcode: 153, hex: \"0x99\", description: \"Shifts a right b bits, preserving sign.\" }, //\ta b\tout\tShifts a right b bits, preserving sign. disabled.\r\n\r\n  /*\r\n   * Crypto\r\n   * 166 - 175\r\n   */\r\n\r\n  /*\r\n   * Locktime\r\n   * 177 - 178\r\n   */\r\n\r\n  /*\r\n   * Reserved words\r\n   * 80, 98, 101, 102, 137, 138, 176, 179-185\r\n   */\r\n\r\n  /*\r\n   * Liquid words\r\n   * 193, 194, 195\r\n   */\r\n  {\r\n    word: \"OP_CHECKSIGFROMSTACK\",\r\n    opcode: 193,\r\n    hex: \"0xc1\",\r\n    description:\r\n      \"Pop the top 3 items from the stack. Treat the top as a public key, the second as a message, and the third as a signature. If the signature is valid, push a Script Number 1, otherwise push a Script Number 0.\",\r\n  },\r\n  {\r\n    word: \"OP_CHECKSIGFROMSTACKVERIFY\",\r\n    opcode: 194,\r\n    hex: \"0xc2\",\r\n    description:\r\n      \"Pop the top 3 items from the stack. Treat the top as a public key, the second as a message, and the third as a signature. If the signature is valid, push a Script Number 1, otherwise push a Script Number 0.\",\r\n  },\r\n  { word: \"OP_SUBSTR_LAZY\", opcode: 195, hex: \"0xc3\", description: \"Returns a section of a string.\" }, //\tliquid network feature.\r\n\r\n  /*\r\n   * Pseudo-words\r\n   * 253 - 255\r\n   */\r\n];\r\n","import { hexLE } from \"@script-wiz/wiz-data\";\r\n\r\nconst toLEPadByte = (number: number) => {\r\n  const hex = number.toString(16);\r\n  const padHex = hex.length % 2 === 0 ? hex : \"0\" + hex;\r\n  return hexLE(padHex);\r\n};\r\n\r\nexport const compileData = (hex: string): string => {\r\n  const byteLength = hex.length / 2;\r\n\r\n  // 0byte\r\n  if (byteLength === 0) {\r\n    return \"00\";\r\n  }\r\n\r\n  // 1 byte\r\n  else if (byteLength === 1) {\r\n    const n = parseInt(hex, 16);\r\n    if (0 < n && n < 17) {\r\n      return (n + 80).toString(16);\r\n    } else {\r\n      return \"01\" + hex;\r\n    }\r\n  }\r\n\r\n  // 1 < byte <= 75\r\n  else if (1 < byteLength && byteLength <= 75) {\r\n    return toLEPadByte(byteLength) + hex;\r\n  }\r\n\r\n  // 76 < byte <= 255\r\n  else if (76 < byteLength && byteLength <= 255) {\r\n    return \"4c\" + toLEPadByte(byteLength) + hex;\r\n  }\r\n\r\n  // 256 < byte <= 520\r\n  else if (256 < byteLength && byteLength <= 520) {\r\n    return \"4d\" + toLEPadByte(byteLength) + hex;\r\n  }\r\n\r\n  // 520 < byte\r\n  else {\r\n    throw \"compileAll: Push exceeds the push size limit of 520 bytes.\";\r\n  }\r\n};\r\n\r\nexport const compileJoin = (hexes: string[]): string => \"0x\" + hexes.join(\"\");\r\n","import CryptoJS from \"crypto-js\";\r\nimport elliptic from \"elliptic\";\r\nimport BN from \"bn.js\";\r\nimport WizData from \"@script-wiz/wiz-data\";\r\n\r\nexport const ripemd160 = (wizData: WizData): CryptoJS.lib.WordArray => {\r\n  return CryptoJS.RIPEMD160(CryptoJS.enc.Hex.parse(wizData.hex));\r\n};\r\n\r\nexport const sha1 = (wizData: WizData): CryptoJS.lib.WordArray => {\r\n  return CryptoJS.SHA1(CryptoJS.enc.Hex.parse(wizData.hex));\r\n};\r\n\r\nexport const sha256 = (wizData: WizData): CryptoJS.lib.WordArray => {\r\n  return CryptoJS.SHA256(CryptoJS.enc.Hex.parse(wizData.hex));\r\n};\r\n\r\nexport const hash160 = (wizData: WizData): CryptoJS.lib.WordArray => {\r\n  const dataWithSha256Hashed = CryptoJS.SHA256(CryptoJS.enc.Hex.parse(wizData.hex));\r\n  const dataWithRipemd160Hashed = CryptoJS.RIPEMD160(dataWithSha256Hashed);\r\n  return dataWithRipemd160Hashed;\r\n};\r\n\r\nexport const hash256 = (wizData: WizData): CryptoJS.lib.WordArray => {\r\n  const firstSHAHash = CryptoJS.SHA256(CryptoJS.enc.Hex.parse(wizData.hex));\r\n  const secondSHAHash = CryptoJS.SHA256(firstSHAHash);\r\n\r\n  return secondSHAHash;\r\n};\r\n\r\nexport const ecdsaVerify = (sig: WizData, msg: WizData, pubkey: WizData): WizData => {\r\n  const secp256k1 = new elliptic.ec(\"secp256k1\");\r\n  const hashedMessage = sha256(msg).toString();\r\n  const publicKey = pubkey.hex;\r\n  const signature = sig.hex;\r\n\r\n  if (publicKey.length !== 66) throw \"ECDSA Verify error : invalid public key length\";\r\n\r\n  if (!signature.startsWith(\"30\")) throw \"ECDSA Verify error : signature must start with 0x30\";\r\n\r\n  const rAndSDataSize = Number(\"0x\" + signature.substr(2, 2));\r\n\r\n  const signatureStringLength = rAndSDataSize * 2 + 4;\r\n\r\n  if (signature.length !== signatureStringLength) throw \"ECDSA Verify error : signature length invalid\";\r\n\r\n  const rDataSize = Number(\"0x\" + signature.substr(6, 2));\r\n\r\n  const rValue = signature.substr(8, rDataSize * 2);\r\n\r\n  const sDataSize = Number(\"0x\" + signature.substr(10 + rDataSize * 2, 2));\r\n\r\n  const sValue = signature.substr(10 + rDataSize * 2 + 2, sDataSize * 2);\r\n\r\n  const rBn = new BN(rValue, \"hex\");\r\n  const sBn = new BN(sValue, \"hex\");\r\n\r\n  try {\r\n    return WizData.fromNumber(secp256k1.verify(hashedMessage, { r: rBn, s: sBn }, secp256k1.keyFromPublic(publicKey, \"hex\")) ? 1 : 0);\r\n  } catch {\r\n    throw \"ECDSA Verify error : something went wrong\";\r\n  }\r\n};\r\n\r\nexport const checkSig = (wizData: WizData, wizData2: WizData): WizData => {\r\n  // stackData 1 = signature\r\n  // stackData 2 = pubkey\r\n  const signature = wizData.hex;\r\n  const publicKey = wizData2.hex;\r\n\r\n  if (publicKey.length !== 68) return WizData.fromNumber(0);\r\n\r\n  if (!signature.startsWith(\"0x30\")) return WizData.fromNumber(0);\r\n\r\n  const rAndSDataSize = Number(\"0x\" + signature.substr(4, 2));\r\n\r\n  const signatureStringLength = rAndSDataSize * 2 + 6;\r\n\r\n  if (signature.length !== signatureStringLength) return WizData.fromNumber(0);\r\n\r\n  return WizData.fromNumber(1);\r\n};\r\n\r\n// const ECDSA = (messageHash: string, publicKey: string): string => {\r\n//   const EC = elliptic.ec;\r\n\r\n//   // Create and initialize EC context\r\n//   // (better do it once and reuse it)\r\n//   const ec = new EC(\"secp256k1\");\r\n\r\n//   // Generate keys\r\n//   const key = ec.genKeyPair();\r\n\r\n//   // Sign the message's hash (input must be an array, or a hex-string)\r\n//   const signature = key.sign(messageHash);\r\n\r\n//   // Export DER encoded signature in Array\r\n//   const derSign = signature.toDER();\r\n\r\n//   return derSign;\r\n// };\r\n","module.exports = require(\"crypto\");",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                var Wil;\n\t                var Wih;\n\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    Wil = gamma0l + Wi7l;\n\t                    Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + gamma1l;\n\t                    Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + Wi16l;\n\t                    Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","import { WizDataList } from \"./model\";\r\nimport { VM, VM_NETWORK, VM_NETWORK_VERSION } from \"./opcodes/model/VM\";\r\nimport { ScriptWiz } from \"./scriptWiz\";\r\nimport { compileFinalInput } from \"./scriptWiz/compileFinalInput\";\r\nimport { tapRoot } from \"./taproot\";\r\n\r\n// TO-DO compilefinalinput will remove\r\nexport { compileFinalInput, ScriptWiz, WizDataList, VM, VM_NETWORK, VM_NETWORK_VERSION, tapRoot };\r\n","import { ParseResult, WizDataList } from \"../model\";\r\nimport { Opcodes } from \"../opcodes\";\r\nimport { VM } from \"../opcodes/model/VM\";\r\nimport { currentScope } from \"../utils\";\r\nimport { compileJoin } from \"./compileAll\";\r\nimport { parse } from \"./parse\";\r\n\r\nconst initialStackDataList: WizDataList = { inputHexes: [], main: [], alt: [], flow: [true], altFlow: [], isStackFailed: false };\r\n\r\nexport class ScriptWiz {\r\n  vm: VM;\r\n  opCodes: Opcodes;\r\n\r\n  stackDataList: WizDataList;\r\n\r\n  constructor(vm: VM) {\r\n    this.vm = vm;\r\n    this.opCodes = new Opcodes(vm);\r\n    this.stackDataList = initialStackDataList;\r\n  }\r\n\r\n  clearStackDataList = () => {\r\n    this.stackDataList = initialStackDataList;\r\n  };\r\n\r\n  parseHex = (input: string): void => this.parseInput(input);\r\n\r\n  parseNumber = (input: number): void => this.parseInput(undefined, input);\r\n\r\n  parseText = (input: string): void => this.parseInput(undefined, undefined, input);\r\n\r\n  parseBin = (input: string): void => this.parseInput(undefined, undefined, undefined, input);\r\n\r\n  parseOpcode = (input: string): void => this.parseInput(undefined, undefined, undefined, undefined, input);\r\n\r\n  //\r\n\r\n  compile = () => compileJoin(this.stackDataList.inputHexes);\r\n\r\n  private parseInput = (inputHex?: string, inputNumber?: number, inputText?: string, inputBin?: string, inputOpCode?: string): void => {\r\n    const currentScopeParse: boolean = currentScope(this.stackDataList);\r\n    let currentScopeParseException: boolean = false;\r\n    if (inputOpCode !== undefined) currentScopeParseException = inputOpCode === \"OP_IF\" || inputOpCode === \"OP_NOTIF\" || inputOpCode === \"OP_ELSE\" || inputOpCode === \"OP_ENDIF\";\r\n\r\n    let parseResult: ParseResult;\r\n\r\n    parseResult = parse(this.opCodes.data, this.stackDataList, currentScopeParse, currentScopeParseException, inputHex, inputNumber, inputText, inputBin, inputOpCode);\r\n\r\n    this.parseResultCommit(parseResult);\r\n  };\r\n\r\n  private parseResultCommit = (parseResult: ParseResult) => {\r\n    // add input hexes\r\n    this.stackDataList = { ...this.stackDataList, inputHexes: [...this.stackDataList.inputHexes, parseResult.inputHex], errorMessage: parseResult.errorMessage };\r\n\r\n    // return failed after add input hex\r\n    if (this.stackDataList.isStackFailed) {\r\n      this.stackDataList = { ...this.stackDataList, errorMessage: \"Failed stack list can't parse input.\" };\r\n      return;\r\n    }\r\n\r\n    // remove item(s) from main stack\r\n    if (parseResult.main.removeLastSize > 0) {\r\n      this.stackDataList = { ...this.stackDataList, main: this.stackDataList.main.slice(0, this.stackDataList.main.length - parseResult.main.removeLastSize) };\r\n    }\r\n\r\n    // remove last item from alternate stack\r\n    if (parseResult.alt.removeLastStackData) {\r\n      this.stackDataList = { ...this.stackDataList, alt: this.stackDataList.alt.slice(0, this.stackDataList.alt.length - 1) };\r\n    }\r\n\r\n    // add item array to main stack\r\n    this.stackDataList = { ...this.stackDataList, main: this.stackDataList.main.concat(parseResult.main.addDataArray) };\r\n\r\n    // add item to alternate stack\r\n    if (parseResult.alt.addData) this.stackDataList = { ...this.stackDataList, alt: [...this.stackDataList.alt, parseResult.alt.addData] };\r\n\r\n    // update flow\r\n    if (parseResult.flow) this.stackDataList = { ...this.stackDataList, flow: parseResult.flow };\r\n\r\n    // update alt flow\r\n    if (parseResult.altFlow) this.stackDataList = { ...this.stackDataList, altFlow: parseResult.altFlow };\r\n\r\n    // stack failed\r\n    if (parseResult.isStackFailed) {\r\n      this.stackDataList = { ...this.stackDataList, isStackFailed: parseResult.isStackFailed, errorMessage: \"Stack failed an OP_VERIFY operation.\" };\r\n    }\r\n  };\r\n}\r\n","import { VM, VM_NETWORK, VM_NETWORK_VERSION } from \"./model/VM\";\r\nimport { Opcode } from \"./model/Opcode\";\r\nimport { opcodesBitcoinSegwit } from \"./BITCOIN_SEGWIT\";\r\nimport { opcodesBitcoinTapscript } from \"./BITCOIN_TAPSCRIPT\";\r\nimport { opcodesLiquidSegwit } from \"./LIQUID_SEGWIT\";\r\nimport { opcodesLiquidTapscript } from \"./LIQUID_TAPSCRIPT\";\r\n\r\nconst opcodes = (vm: VM): Opcode[] => {\r\n  if (vm.network === VM_NETWORK.BTC) {\r\n    if (vm.ver === VM_NETWORK_VERSION.SEGWIT) return opcodesBitcoinSegwit;\r\n    // else if(vm.ver === VM_NETWORK_VERSION.TAPSCRIPT)\r\n    return opcodesBitcoinTapscript;\r\n  }\r\n  // else {\r\n  // if (vm.network === VM_NETWORK.LIQUID) {\r\n  if (vm.ver === VM_NETWORK_VERSION.SEGWIT) return opcodesLiquidSegwit;\r\n  // else if(vm.ver === VM_NETWORK_VERSION.TAPSCRIPT)\r\n  return opcodesLiquidTapscript;\r\n  // }\r\n  // }\r\n};\r\n\r\nexport class Opcodes {\r\n  vm: VM;\r\n  data: Opcode[];\r\n\r\n  constructor(vm: VM) {\r\n    this.vm = vm;\r\n    this.data = opcodes(vm);\r\n  }\r\n\r\n  wordData = (word: string): Opcode | undefined => this.data.find((d) => d.word === word);\r\n  wordCode = (word: string): number => {\r\n    const code = this.wordData(word)?.opcode;\r\n    return code === undefined ? -1 : code;\r\n  };\r\n  wordHex = (word: string): string => this.wordData(word)?.hex || \"\";\r\n\r\n  codeData = (code: number): Opcode | undefined => this.data.find((d) => d.opcode === code);\r\n  codeWord = (code: number): string => this.codeData(code)?.word || \"\";\r\n}\r\n","import { Opcode } from \"./model/Opcode\";\r\nimport { opcodesBitcoinTapscript } from \"./BITCOIN_TAPSCRIPT\";\r\nimport { opcodesLiquidSegwit } from \"./LIQUID_SEGWIT\";\r\n\r\nexport const opcodesLiquidTapscript: Opcode[] = [...opcodesBitcoinTapscript, ...opcodesLiquidSegwit];\r\n","import WizData from \"@script-wiz/wiz-data\";\r\nimport { ParseResult, ParseResultData, WizDataList } from \"../model\";\r\nimport { Opcode } from \"../opcodes/model/Opcode\";\r\nimport { opcodeToWord, opHexToWord, opWordToHex } from \"../utils\";\r\nimport { compileData } from \"./compileAll\";\r\nimport { opFunctions } from \"./opFunctions\";\r\n\r\nexport const parse = (\r\n  opWordCodes: Opcode[],\r\n  stackDataList: WizDataList,\r\n  currentScopeParse: boolean,\r\n  currentScopeParseException: boolean,\r\n  inputHexParam?: string,\r\n  inputNumberParam?: number,\r\n  inputTextParam?: string,\r\n  inputBinParam?: string,\r\n  inputOpCodeParam?: string\r\n): ParseResult => {\r\n  let emptyParseResultData: ParseResultData = {\r\n    main: { addDataArray: [], removeLastSize: 0 },\r\n    alt: { removeLastStackData: false },\r\n  };\r\n\r\n  let inputHex: string = \"\";\r\n\r\n  try {\r\n    // Values\r\n    if (inputOpCodeParam === undefined) {\r\n      const wizData: WizData = parseValueInputs(inputHexParam, inputNumberParam, inputTextParam, inputBinParam);\r\n      inputHex = compileData(wizData.hex);\r\n\r\n      if (currentScopeParse) return { inputHex, main: { addDataArray: [wizData], removeLastSize: 0 }, alt: { removeLastStackData: false } };\r\n      else return { ...emptyParseResultData, inputHex };\r\n    }\r\n\r\n    // OP Functions\r\n    let opWord = \"\";\r\n    if (inputOpCodeParam.startsWith(\"OP_\")) {\r\n      opWord = inputOpCodeParam;\r\n      inputHex = opWordToHex(opWord, opWordCodes);\r\n    } else if (inputOpCodeParam.startsWith(\"0x\")) {\r\n      opWord = opHexToWord(inputOpCodeParam, opWordCodes);\r\n    } else if (isNaN(inputOpCodeParam as any)) {\r\n      return { inputHex, errorMessage: \"Invalid OP code, OP word or OP hex\", main: { addDataArray: [], removeLastSize: 0 }, alt: { removeLastStackData: false } };\r\n    } else {\r\n      opWord = opcodeToWord(Number(inputOpCodeParam), opWordCodes);\r\n    }\r\n\r\n    if (opWord === undefined || opWord === \"\") throw \"Unknown OP code\";\r\n\r\n    if (currentScopeParse || currentScopeParseException) emptyParseResultData = opFunctions(opWord, stackDataList, opWordCodes);\r\n    return { ...emptyParseResultData, inputHex };\r\n  } catch (ex) {\r\n    return { inputHex, errorMessage: ex, main: { addDataArray: [], removeLastSize: 0 }, alt: { removeLastStackData: false } };\r\n  }\r\n};\r\n\r\nexport const parseValueInputs = (inputHexParam?: string, inputNumberParam?: number, inputTextParam?: string, inputBinParam?: string): WizData => {\r\n  // a9f4 (0xa9f4)\r\n  // 8283284 (8283284)\r\n  // \"hello\" (\"hello\")\r\n  // 011101 (0b011101)\r\n\r\n  // Hex\r\n  if (inputHexParam !== undefined) return WizData.fromHex(inputHexParam);\r\n\r\n  // Number\r\n  if (inputNumberParam !== undefined) return WizData.fromNumber(inputNumberParam);\r\n\r\n  // Text\r\n  if (inputTextParam !== undefined) return WizData.fromText(inputTextParam);\r\n\r\n  // Bin\r\n  if (inputBinParam !== undefined) return WizData.fromBin(inputBinParam);\r\n\r\n  throw \"parseValueInputs Error: it is not a valid input value!\";\r\n};\r\n","import WizData from \"@script-wiz/wiz-data\";\r\nimport * as arithmetics from \"../core/arithmetics\";\r\nimport * as bitwise from \"../core/bitwise\";\r\nimport * as crypto from \"../core/crypto\";\r\nimport * as flow from \"../core/flow\";\r\nimport * as locktime from \"../core/locktime\";\r\nimport * as splices from \"../core/splices\";\r\nimport * as stacks from \"../core/stacks\";\r\nimport { ParseResultData, WizDataList } from \"../model\";\r\nimport { Opcode } from \"../opcodes/model/Opcode\";\r\nimport { currentScope } from \"../utils\";\r\n\r\nexport const opFunctions = (word: string, stackDataList: WizDataList, opCodes: Opcode[]): ParseResultData => {\r\n  const mainStackDataArray: WizData[] = stackDataList.main;\r\n  const mainStackDataArrayLength = mainStackDataArray.length;\r\n\r\n  /*\r\n   * Constants\r\n   * * 0 - 96\r\n   */\r\n  if (\r\n    word === \"OP_0\" ||\r\n    word === \"OP_FALSE\" ||\r\n    word === \"OP_1\" ||\r\n    word === \"OP_TRUE\" ||\r\n    word === \"OP_2\" ||\r\n    word === \"OP_3\" ||\r\n    word === \"OP_4\" ||\r\n    word === \"OP_5\" ||\r\n    word === \"OP_6\" ||\r\n    word === \"OP_7\" ||\r\n    word === \"OP_8\" ||\r\n    word === \"OP_9\" ||\r\n    word === \"OP_10\" ||\r\n    word === \"OP_11\" ||\r\n    word === \"OP_12\" ||\r\n    word === \"OP_13\" ||\r\n    word === \"OP_14\" ||\r\n    word === \"OP_15\" ||\r\n    word === \"OP_16\"\r\n  ) {\r\n    const currentOpCode = opCodes.find((oc) => oc.word === word);\r\n    const addDataArray: WizData[] = [WizData.fromNumber(currentOpCode?.output || 0)];\r\n\r\n    const removeLastSize: number = 0;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  /*\r\n   * Flow control\r\n   * * 97 - 106\r\n   */\r\n  if (word === \"OP_NOP\") {\r\n    const removeLastSize: number = 0;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray: [], removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_IF\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_IF Error: stack data array must include min 1 data!\";\r\n\r\n    const flows = flow.flowIf(stackDataList);\r\n    const removeLastSize: number = currentScope(stackDataList) ? 1 : 0;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return {\r\n      main: { addDataArray: [], removeLastSize },\r\n      alt,\r\n      flow: flows.flow,\r\n      altFlow: flows.altFlow,\r\n    };\r\n  }\r\n\r\n  if (word === \"OP_NOTIF\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_NOTIF Error: stack data array must include min 1 data!\";\r\n\r\n    const flows = flow.flowNotIf(stackDataList);\r\n    const removeLastSize: number = currentScope(stackDataList) ? 1 : 0;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray: [], removeLastSize }, alt, flow: flows.flow, altFlow: flows.altFlow };\r\n  }\r\n\r\n  if (word === \"OP_ELSE\") {\r\n    if (stackDataList.flow.length === 1) throw \"OP_ELSE Error: Encountered an OP_ELSE outside of an OP_IF ... OP_ENDIF block.!\";\r\n\r\n    const flows = flow.flowElse(stackDataList);\r\n    const removeLastSize: number = 0;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray: [], removeLastSize }, alt, flow: flows.flow, altFlow: flows.altFlow };\r\n  }\r\n\r\n  if (word === \"OP_ENDIF\") {\r\n    if (stackDataList.flow.length === 1) throw \"OP_ENDIF Error: Encountered an OP_ENDIF which is not following a matching OP_IF.!\";\r\n\r\n    const flows = flow.flowEndIf(stackDataList);\r\n    const removeLastSize: number = 0;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return {\r\n      main: { addDataArray: [], removeLastSize },\r\n      alt,\r\n      flow: flows.flow,\r\n      altFlow: flows.altFlow,\r\n    };\r\n  }\r\n\r\n  if (word === \"OP_VERIFY\") {\r\n    if (mainStackDataArray.length < 1) throw \"OP_VERIFY Error:  stack data array must include min 1 data!!\";\r\n\r\n    const isVerify = flow.flowVerify(mainStackDataArray[mainStackDataArray.length - 1]);\r\n\r\n    if (isVerify) {\r\n      const addDataArray: WizData[] = [];\r\n      const removeLastSize: number = 1;\r\n      const alt = { removeLastStackData: false };\r\n\r\n      return { main: { addDataArray, removeLastSize }, alt };\r\n    } else {\r\n      return { main: { addDataArray: [], removeLastSize: 0 }, alt: { removeLastStackData: false }, isStackFailed: true };\r\n    }\r\n  }\r\n\r\n  if (word === \"OP_RETURN\") throw \"Program called on OP_RETURN operation\";\r\n\r\n  /*\r\n   * Stack\r\n   * * 107 - 125\r\n   */\r\n  if (word === \"OP_TOALTSTACK\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_TOALTSTACK Error: stack data array must include min 1 data!\";\r\n\r\n    const addDataArray: WizData[] = [];\r\n\r\n    const removeLastSize: number = 1;\r\n    const alt = { addData: mainStackDataArray[mainStackDataArrayLength - 1], removeLastStackData: false };\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_FROMALTSTACK\") {\r\n    const altStackDataArrayLength = stackDataList.alt.length;\r\n    if (altStackDataArrayLength < 1) throw \"OP_FROMALTSTACK Error: tried to read from an empty alternate stack.\";\r\n\r\n    const addDataArray: WizData[] = [stacks.fromAltStack(stackDataList.alt[stackDataList.alt.length - 1])];\r\n\r\n    const removeLastSize: number = 0;\r\n    const alt = { removeLastStackData: true };\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_2DROP\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_2DROP Error: stack data array must include min 2 data!\";\r\n    const addDataArray: WizData[] = [];\r\n    const removeLastSize: number = 2;\r\n\r\n    const alt = { removeLastStackData: false };\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_2DUP\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_2DUP Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = stacks.twoDup(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]);\r\n    const removeLastSize: number = 0;\r\n    const alt = { removeLastStackData: false };\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_3DUP\") {\r\n    if (mainStackDataArrayLength < 3) throw \"OP_3DUP Error: stack data array must include min 3 data!\";\r\n\r\n    const addDataArray: WizData[] = stacks.threeDup(\r\n      mainStackDataArray[mainStackDataArrayLength - 3],\r\n      mainStackDataArray[mainStackDataArrayLength - 2],\r\n      mainStackDataArray[mainStackDataArrayLength - 1]\r\n    );\r\n\r\n    const removeLastSize: number = 0;\r\n    const alt = { removeLastStackData: false };\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_2OVER\") {\r\n    if (mainStackDataArrayLength < 4) throw \"OP_2OVER Error: stack data array must include min 4 data!\";\r\n    const addDataArray: WizData[] = stacks.twoOver(mainStackDataArray[mainStackDataArrayLength - 4], mainStackDataArray[mainStackDataArrayLength - 3]);\r\n    const removeLastSize: number = 0;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_2SWAP\") {\r\n    if (mainStackDataArrayLength < 4) throw \"OP_2SWAP Error: stack data array must include min 4 data!\";\r\n\r\n    const addDataArray: WizData[] = stacks.twoSwap(\r\n      mainStackDataArray[mainStackDataArrayLength - 1],\r\n      mainStackDataArray[mainStackDataArrayLength - 2],\r\n      mainStackDataArray[mainStackDataArrayLength - 3],\r\n      mainStackDataArray[mainStackDataArrayLength - 4]\r\n    );\r\n    const removeLastSize: number = 4;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_IFDUP\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_IFDUP Error: stack data array must include min 1 data!\";\r\n\r\n    let addDataArray: WizData[] = [];\r\n    const currentData = stacks.ifDup(mainStackDataArray[mainStackDataArrayLength - 1]);\r\n\r\n    if (currentData !== {}) addDataArray = [stacks.ifDup(mainStackDataArray[mainStackDataArrayLength - 1]) as WizData];\r\n\r\n    const removeLastSize: number = 0;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_DEPTH\") {\r\n    const addDataArray: WizData[] = [stacks.depth(mainStackDataArrayLength)];\r\n    const removeLastSize: number = 0;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_DROP\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_DROP Error: stack data array must include min 1 data!\";\r\n\r\n    const addDataArray: WizData[] = [];\r\n    const removeLastSize: number = 1;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_DUP\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_DUP Error: stack data array must include min 1 data!\";\r\n    const addDataArray: WizData[] = [stacks.dup(mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 0;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_NIP\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_NIP Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [stacks.nip(mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_OVER\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_OVER Error: stack data array must include min 2 data!\";\r\n    const addDataArray: WizData[] = [stacks.over(mainStackDataArray[mainStackDataArrayLength - 2])];\r\n    const removeLastSize: number = 0;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_SWAP\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_SWAP Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = stacks.swap(mainStackDataArray[mainStackDataArrayLength - 1], mainStackDataArray[mainStackDataArrayLength - 2]);\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_2ROT\") {\r\n    if (mainStackDataArrayLength < 6) throw \"OP_2ROT Error: stack data array must include min 6 data!\";\r\n\r\n    const addDataArray: WizData[] = stacks.twoRot(\r\n      mainStackDataArray[mainStackDataArrayLength - 6],\r\n      mainStackDataArray[mainStackDataArrayLength - 5],\r\n      mainStackDataArray[mainStackDataArrayLength - 4],\r\n      mainStackDataArray[mainStackDataArrayLength - 3],\r\n      mainStackDataArray[mainStackDataArrayLength - 2],\r\n      mainStackDataArray[mainStackDataArrayLength - 1]\r\n    );\r\n\r\n    const removeLastSize: number = 6;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_ROT\") {\r\n    if (mainStackDataArrayLength < 3) throw \"OP_ROT Error: stack data array must include min 3 data!\";\r\n\r\n    const addDataArray: WizData[] = stacks.rot(\r\n      mainStackDataArray[mainStackDataArrayLength - 3],\r\n      mainStackDataArray[mainStackDataArrayLength - 2],\r\n      mainStackDataArray[mainStackDataArrayLength - 1]\r\n    );\r\n\r\n    const removeLastSize: number = 3;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_PICK\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_PICK Error: stack data array must include min 2 data!\";\r\n\r\n    let stackIndex: number | undefined = mainStackDataArray[mainStackDataArrayLength - 1].number;\r\n\r\n    let willChangedStackDataArray: WizData[] = [...mainStackDataArray];\r\n    willChangedStackDataArray.pop();\r\n\r\n    if (stackIndex !== undefined) {\r\n      if (stackIndex >= willChangedStackDataArray.length) throw \"OP_PICK Error: stack index cant be equal and greater than stack array length\";\r\n    } else {\r\n      throw \"OP_PICK Error: stack index must be a number\";\r\n    }\r\n\r\n    const addDataArray: WizData[] = stacks.pick(willChangedStackDataArray, stackIndex);\r\n\r\n    const removeLastSize: number = mainStackDataArray.length;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_ROLL\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_ROLL Error: stack data array must include min 2 data!\";\r\n\r\n    let stackIndex: number | undefined = mainStackDataArray[mainStackDataArrayLength - 1].number;\r\n    let willChangedStackDataArray: WizData[] = [...mainStackDataArray];\r\n    willChangedStackDataArray.pop();\r\n\r\n    if (stackIndex !== undefined) {\r\n      if (stackIndex >= willChangedStackDataArray.length) throw \"OP_ROLL Error: stack index cant be equal and greater than stack array length\";\r\n    } else {\r\n      throw \"OP_ROLL Error: stack index must be a number\";\r\n    }\r\n\r\n    const addDataArray: WizData[] = stacks.roll(willChangedStackDataArray, stackIndex);\r\n\r\n    const removeLastSize: number = mainStackDataArray.length;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_TUCK\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_TUCK Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = stacks.tuck(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]);\r\n\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  /*\r\n   * Splice\r\n   * 126 - 130\r\n   */\r\n  if (word === \"OP_CAT\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_CAT Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [splices.concatenate(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_SUBSTR\") {\r\n    if (mainStackDataArrayLength < 3) throw \"OP_SUBSTR Error: stack data array must include min 3 data!\";\r\n\r\n    const addDataArray: WizData[] = [\r\n      splices.substr(mainStackDataArray[mainStackDataArrayLength - 3], mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]),\r\n    ];\r\n    const removeLastSize: number = 3;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_RIGHT\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_RIGHT Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [splices.right(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_LEFT\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_LEFT Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [splices.left(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_SIZE\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_SIZE Error: stack data array must include min 1 data!\";\r\n    const addDataArray: WizData[] = [splices.size(mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 0;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_SUBSTR_LAZY\") {\r\n    if (mainStackDataArrayLength < 3) throw \"OP_SUBSTR_LAZY Error: stack data array must include min 3 data!\";\r\n\r\n    const addDataArray: WizData[] = [\r\n      splices.substrLazy(mainStackDataArray[mainStackDataArrayLength - 3], mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]),\r\n    ];\r\n    const removeLastSize: number = 3;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  /*\r\n   * Bitwise logic\r\n   * 131 - 136\r\n   */\r\n\r\n  if (word === \"OP_INVERT\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_INVERT Error: stack data array must include min 1 data!\";\r\n\r\n    const addDataArray: WizData[] = [bitwise.invert(mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 0;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_AND\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_AND Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [bitwise.and(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_OR\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_OR Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [bitwise.or(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_XOR\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_XOR Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [bitwise.xor(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_EQUAL\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_EQUAL Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [bitwise.equal(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_EQUALVERIFY\") {\r\n    if (mainStackDataArray.length < 2) throw \"OP_EQUALVERIFY Error:  stack data array must include min 2 data!!\";\r\n\r\n    const isVerify = bitwise.equal(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]).number === 1;\r\n\r\n    if (isVerify) {\r\n      const addDataArray: WizData[] = [];\r\n      const removeLastSize: number = 2;\r\n      const alt = { removeLastStackData: false };\r\n\r\n      return { main: { addDataArray, removeLastSize }, alt };\r\n    } else {\r\n      return {\r\n        main: { addDataArray: [], removeLastSize: 0 },\r\n        alt: { removeLastStackData: false },\r\n        isStackFailed: true,\r\n      };\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Arithmetic\r\n   * 139 - 165\r\n   */\r\n  if (word === \"OP_1ADD\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_1ADD Error: stack data array must include min 1 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.add1(mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 1;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_1SUB\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_1SUB Error: stack data array must include min 1 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.sub1(mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 1;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_NEGATE\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_NEGATE Error: stack data array must include min 1 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.negate(mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 1;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_ABS\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_ABS Error: stack data array must include min 1 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.abs(mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 1;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_NOT\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_NOT Error: stack data array must include min 1 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.not(mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 1;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_0NOTEQUAL\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_0NOTEQUAL Error: stack data array must include min 1 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.notEqual0(mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 1;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_ADD\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_ADD Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.add(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_SUB\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_SUB Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.sub(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_MUL\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_MUL Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.mul(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_DIV\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_DIV Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.div(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_LSHIFT\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_LSHIFT Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.lshift(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_RSHIFT\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_RSHIFT Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.rshift(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_BOOLAND\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_BOOLAND Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.boolAnd(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_BOOLOR\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_BOOLOR Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.boolOr(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_NUMEQUAL\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_NUMEQUAL Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.numEqual(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_NUMEQUALVERIFY\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_NUMEQUALVERIFY Error: stack data array must include min 2 data!\";\r\n\r\n    const isVerifed: boolean = arithmetics.numEqualVerify(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]).number === 1;\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return {\r\n      main: { addDataArray: [], removeLastSize },\r\n      alt,\r\n      isStackFailed: !isVerifed,\r\n    };\r\n  }\r\n\r\n  if (word === \"OP_NUMNOTEQUAL\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_NUMNOTEQUAL Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.numNotEqual(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_LESSTHAN\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_LESSTHAN Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.lessThan(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_GREATERTHAN\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_GREATERTHAN Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.graterThan(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_LESSTHANOREQUAL\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_LESSTHANOREQUAL Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.lessThanOrEqual(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_GREATERTHANOREQUAL\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_GREATERTHANOREQUAL Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.graterThanOrEqual(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_MIN\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_MIN Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.min(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_MAX\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_MAX Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [arithmetics.max(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_WITHIN\") {\r\n    if (mainStackDataArrayLength < 3) throw \"OP_WITHIN Error: stack data array must include min 3 data!\";\r\n\r\n    const addDataArray: WizData[] = [\r\n      arithmetics.withIn(\r\n        mainStackDataArray[mainStackDataArrayLength - 3], // x\r\n        mainStackDataArray[mainStackDataArrayLength - 2], // min\r\n        mainStackDataArray[mainStackDataArrayLength - 1] // max\r\n      ),\r\n    ];\r\n\r\n    const removeLastSize: number = 3;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  /*\r\n   * Crypto\r\n   * 166 - 175\r\n   */\r\n  if (word === \"OP_SHA1\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_SHA1 Error: stack data array must include min 1 data!\";\r\n\r\n    const addDataArray: WizData[] = [WizData.fromHex(crypto.sha1(mainStackDataArray[mainStackDataArrayLength - 1]).toString())];\r\n    const removeLastSize: number = 1;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_SHA256\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_SHA256 Error: stack data array must include min 1 data!\";\r\n\r\n    const addDataArray: WizData[] = [WizData.fromHex(crypto.sha256(mainStackDataArray[mainStackDataArrayLength - 1]).toString())];\r\n    const removeLastSize: number = 1;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_RIPEMD160\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_RIPEMD160 Error: stack data array must include min 1 data!\";\r\n\r\n    const addDataArray: WizData[] = [WizData.fromHex(crypto.ripemd160(mainStackDataArray[mainStackDataArrayLength - 1]).toString())];\r\n    const removeLastSize: number = 1;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_HASH160\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_HASH160 Error: stack data array must include min 1 data!\";\r\n\r\n    const addDataArray: WizData[] = [WizData.fromHex(crypto.hash160(mainStackDataArray[mainStackDataArrayLength - 1]).toString())];\r\n    const removeLastSize: number = 1;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_HASH256\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_HASH256 Error: stack data array must include min 1 data!\";\r\n\r\n    const addDataArray: WizData[] = [WizData.fromHex(crypto.hash256(mainStackDataArray[mainStackDataArrayLength - 1]).toString())];\r\n    const removeLastSize: number = 1;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_CHECKSIG\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_CHECKSIG Error: stack data array must include min 2 data!\";\r\n\r\n    const addDataArray: WizData[] = [crypto.checkSig(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1])];\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_CHECKSIGVERIFY\") {\r\n    if (mainStackDataArrayLength < 2) throw \"OP_CHECKSIGVERIFY Error: stack data array must include min 2 data!\";\r\n\r\n    let isStackFailed: boolean = false;\r\n\r\n    const checkSigResult: WizData = crypto.checkSig(mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]);\r\n    const removeLastSize: number = 2;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    if (checkSigResult.number === 0) isStackFailed = true;\r\n\r\n    return { main: { addDataArray: [], removeLastSize }, alt, isStackFailed };\r\n  }\r\n\r\n  if (word === \"OP_CHECKSIGFROMSTACK\") {\r\n    if (mainStackDataArrayLength < 3) throw \"OP_CHECKSIGFROMSTACK Error: stack data array must include min 3 data!\";\r\n\r\n    const addDataArray: WizData[] = [\r\n      crypto.ecdsaVerify(mainStackDataArray[mainStackDataArrayLength - 3], mainStackDataArray[mainStackDataArrayLength - 2], mainStackDataArray[mainStackDataArrayLength - 1]),\r\n    ];\r\n\r\n    const removeLastSize: number = 3;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt };\r\n  }\r\n\r\n  if (word === \"OP_CHECKSIGFROMSTACKVERIFY\") {\r\n    if (mainStackDataArrayLength < 3) throw \"OP_CHECKSIGFROMSTACKVERIFY Error: stack data array must include min 3 data!\";\r\n    let isStackFailed: boolean = false;\r\n\r\n    const verifyResult: WizData = crypto.ecdsaVerify(\r\n      mainStackDataArray[mainStackDataArrayLength - 3],\r\n      mainStackDataArray[mainStackDataArrayLength - 2],\r\n      mainStackDataArray[mainStackDataArrayLength - 1]\r\n    );\r\n\r\n    if (verifyResult.number === 0) isStackFailed = true;\r\n\r\n    const removeLastSize: number = 3;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray: [], removeLastSize }, alt, isStackFailed };\r\n  }\r\n\r\n  /*\r\n   * Locktime\r\n   * 177 - 178\r\n   */\r\n  if (word === \"OP_CHECKLOCKTIMEVERIFY\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_CHECKLOCKTIMEVERIFY Error: stack data array must include min 1 data!\";\r\n    let isStackFailed: boolean = false;\r\n\r\n    const addDataArray: WizData[] = [locktime.checkLockTimeVerify(mainStackDataArray[mainStackDataArrayLength - 1])];\r\n\r\n    const removeLastSize: number = 0;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt, isStackFailed };\r\n  }\r\n\r\n  if (word === \"OP_CHECKSEQUENCEVERIFY\") {\r\n    if (mainStackDataArrayLength < 1) throw \"OP_CHECKSEQUENCEVERIFY Error: stack data array must include min 1 data!\";\r\n    let isStackFailed: boolean = false;\r\n\r\n    const addDataArray: WizData[] = [locktime.checkSequenceVerify(mainStackDataArray[mainStackDataArrayLength - 1])];\r\n\r\n    const removeLastSize: number = 0;\r\n    const alt = { removeLastStackData: false };\r\n\r\n    return { main: { addDataArray, removeLastSize }, alt, isStackFailed };\r\n  }\r\n\r\n  /*\r\n   * Not implemented yet\r\n   */\r\n  throw \"Known OP word but not implemented yet!\";\r\n};\r\n","import WizData from \"@script-wiz/wiz-data\";\r\n\r\nexport const add1 = (wizData: WizData): WizData => {\r\n  if (wizData.number !== undefined) {\r\n    const numberValue: number = wizData.number + 1;\r\n    return WizData.fromNumber(numberValue);\r\n  }\r\n\r\n  throw \"Error: this operation requires 1 valid number wizData\";\r\n};\r\n\r\nexport const sub1 = (wizData: WizData): WizData => {\r\n  if (wizData.number !== undefined) {\r\n    const numberValue: number = wizData.number - 1;\r\n    return WizData.fromNumber(numberValue);\r\n  }\r\n\r\n  throw \"Error: this operation requires 1 valid number wizData\";\r\n};\r\n\r\nexport const negate = (wizData: WizData): WizData => {\r\n  if (wizData.number !== undefined) {\r\n    const negateValue: number = wizData.number * -1;\r\n    return WizData.fromNumber(negateValue);\r\n  }\r\n\r\n  throw \"Error: this operation requires 1 valid number wizData\";\r\n};\r\n\r\nexport const abs = (wizData: WizData): WizData => {\r\n  if (wizData.number !== undefined) {\r\n    const absValue: number = Math.abs(wizData.number);\r\n    return WizData.fromNumber(absValue);\r\n  }\r\n\r\n  throw \"Error: this operation requires 1 valid number wizData\";\r\n};\r\n\r\nexport const not = (wizData: WizData): WizData => {\r\n  if (wizData.number !== undefined) {\r\n    const isfalse: boolean = !wizData.number;\r\n\r\n    return WizData.fromNumber(isfalse ? 1 : 0);\r\n  }\r\n\r\n  throw \"Error: this operation requires 1 valid number wizData\";\r\n};\r\n\r\nexport const notEqual0 = (wizData: WizData): WizData => {\r\n  if (wizData.number !== undefined) {\r\n    const isfalse: boolean = !wizData.number;\r\n\r\n    return WizData.fromNumber(isfalse ? 0 : 1);\r\n  }\r\n\r\n  throw \"Error: this operation requires 1 valid number wizData\";\r\n};\r\n\r\nexport const add = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\r\n    const addedValue: number = wizData.number + wizData2.number;\r\n    return WizData.fromNumber(addedValue);\r\n  }\r\n\r\n  throw \"Error: this operation requires 2 valid number wizData\";\r\n};\r\n\r\nexport const sub = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\r\n    const subValue: number = wizData.number - wizData2.number;\r\n    return WizData.fromNumber(subValue);\r\n  }\r\n\r\n  throw \"Error: this operation requires 2 valid number wizData\";\r\n};\r\n\r\nexport const mul = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\r\n    const mulValue: number = wizData.number * wizData2.number;\r\n    return WizData.fromNumber(mulValue);\r\n  }\r\n\r\n  throw \"Error: this operation requires 2 valid number wizData\";\r\n};\r\n\r\nexport const div = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\r\n    if (wizData2.number === 0) throw \"Error: dividing can't be eqaul 0.\";\r\n\r\n    let divValue: number = wizData.number / wizData2.number;\r\n\r\n    divValue = divValue > 0 ? Math.floor(divValue) : Math.ceil(divValue);\r\n    return WizData.fromNumber(divValue);\r\n  }\r\n\r\n  throw \"Error: this operation requires 2 valid number wizData\";\r\n};\r\n\r\nexport const lshift = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\r\n    const lShiftValue: number = wizData.number << wizData2.number;\r\n    return WizData.fromNumber(lShiftValue);\r\n  }\r\n\r\n  throw \"Error: this operation requires 2 valid number wizData\";\r\n};\r\n\r\nexport const rshift = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\r\n    const rShiftValue: number = wizData.number >> wizData2.number;\r\n    return WizData.fromNumber(rShiftValue);\r\n  }\r\n\r\n  throw \"Error: this operation requires 2 valid number wizData\";\r\n};\r\n\r\nexport const boolAnd = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\r\n    if (wizData.number === 0 || wizData2.number === 0) return WizData.fromNumber(0);\r\n    return WizData.fromNumber(1);\r\n  }\r\n\r\n  throw \"Error: this operation requires 2 valid number wizData\";\r\n};\r\n\r\nexport const boolOr = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\r\n    if (wizData.number === 0 && wizData2.number === 0) return WizData.fromNumber(0);\r\n    return WizData.fromNumber(1);\r\n  }\r\n\r\n  throw \"Error: this operation requires 2 valid number wizData\";\r\n};\r\n\r\nexport const numEqual = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\r\n    return WizData.fromNumber(wizData.number === wizData2.number ? 1 : 0);\r\n  }\r\n\r\n  throw \"Error: this operation requires 2 valid number wizData\";\r\n};\r\n\r\nexport const numEqualVerify = (wizData: WizData, wizData2: WizData): WizData => {\r\n  return numEqual(wizData, wizData2);\r\n};\r\n\r\nexport const numNotEqual = (wizData: WizData, wizData2: WizData): WizData => {\r\n  const equal = numEqual(wizData, wizData2).number === 1;\r\n  return WizData.fromNumber(equal ? 0 : 1);\r\n};\r\n\r\nexport const lessThan = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\r\n    return WizData.fromNumber(wizData.number < wizData2.number ? 1 : 0);\r\n  }\r\n\r\n  throw \"Error: this operation requires 2 valid number wizData\";\r\n};\r\n\r\nexport const graterThan = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\r\n    return WizData.fromNumber(wizData.number > wizData2.number ? 1 : 0);\r\n  }\r\n\r\n  throw \"Error: this operation requires 2 valid number wizData\";\r\n};\r\n\r\nexport const lessThanOrEqual = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\r\n    return WizData.fromNumber(wizData.number <= wizData2.number ? 1 : 0);\r\n  }\r\n\r\n  throw \"Error: this operation requires 2 valid number wizData\";\r\n};\r\n\r\nexport const graterThanOrEqual = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\r\n    return WizData.fromNumber(wizData.number >= wizData2.number ? 1 : 0);\r\n  }\r\n\r\n  throw \"Error: this operation requires 2 valid number wizData\";\r\n};\r\n\r\nexport const min = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\r\n    if (wizData.number >= wizData2.number) return wizData2;\r\n\r\n    if (wizData2.number > wizData.number) return wizData;\r\n  }\r\n\r\n  throw \"Error: this operation requires 2 valid number wizData\";\r\n};\r\n\r\nexport const max = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData.number !== undefined && wizData2.number !== undefined) {\r\n    if (wizData.number >= wizData2.number) return wizData;\r\n\r\n    if (wizData2.number > wizData.number) return wizData2;\r\n  }\r\n\r\n  throw \"Error: this operation requires 2 valid number wizData\";\r\n};\r\n\r\nexport const withIn = (wizData: WizData, wizData2: WizData, wizData3: WizData): WizData => {\r\n  const currentNumber = wizData.number;\r\n  const minValue = wizData2.number;\r\n  const maxValue = wizData3.number;\r\n\r\n  if (currentNumber !== undefined && minValue !== undefined && maxValue !== undefined) {\r\n    if (currentNumber >= minValue && currentNumber <= maxValue) return WizData.fromNumber(1);\r\n\r\n    return WizData.fromNumber(0);\r\n  }\r\n\r\n  throw \"Error: this operation requires 3 valid number wizData\";\r\n};\r\n","import WizData from \"@script-wiz/wiz-data\";\r\nimport { flipbits } from \"../utils\";\r\n\r\nexport const invert = (wizData: WizData): WizData => {\r\n  const complement = flipbits(wizData.bin);\r\n\r\n  return WizData.fromBin(complement);\r\n};\r\n\r\nexport const and = (wizData: WizData, wizData2: WizData): WizData => {\r\n  const fBinary = wizData.bin;\r\n  const sBinary = wizData2.bin;\r\n\r\n  if (fBinary.length === sBinary.length) {\r\n    const fBinaryArray = fBinary.split(\"\").map((x) => +x);\r\n    const sBinaryArray = sBinary.split(\"\").map((x) => +x);\r\n    let resultBinary: string = \"\";\r\n\r\n    for (let i in fBinaryArray) {\r\n      resultBinary += fBinaryArray[i] & sBinaryArray[i];\r\n    }\r\n\r\n    return WizData.fromBin(resultBinary);\r\n  }\r\n\r\n  // stack bump\r\n  throw \"Bitwise operation on operands of different lengths.\";\r\n};\r\n\r\nexport const or = (wizData: WizData, wizData2: WizData): WizData => {\r\n  const fBinary = wizData.bin;\r\n  const sBinary = wizData2.bin;\r\n\r\n  if (fBinary.length === sBinary.length) {\r\n    const fBinaryArray = fBinary.split(\"\").map((x) => +x);\r\n    const sBinaryArray = sBinary.split(\"\").map((x) => +x);\r\n    let resultBinary: string = \"\";\r\n\r\n    for (let i in fBinaryArray) {\r\n      resultBinary += fBinaryArray[i] | sBinaryArray[i];\r\n    }\r\n\r\n    return WizData.fromBin(resultBinary);\r\n  }\r\n\r\n  // stack bump\r\n  throw \"Bitwise operation on operands of different lengths.\";\r\n};\r\n\r\nexport const xor = (wizData: WizData, wizData2: WizData): WizData => {\r\n  const fBinary = wizData.bin;\r\n  const sBinary = wizData2.bin;\r\n\r\n  if (fBinary.length === sBinary.length) {\r\n    const fBinaryArray = fBinary.split(\"\").map((x) => +x);\r\n    const sBinaryArray = sBinary.split(\"\").map((x) => +x);\r\n    let resultBinary: string = \"\";\r\n\r\n    for (let i in fBinaryArray) {\r\n      resultBinary += fBinaryArray[i] ^ sBinaryArray[i];\r\n    }\r\n\r\n    return WizData.fromBin(resultBinary);\r\n  }\r\n\r\n  // stack bump\r\n  throw \"Bitwise operation on operands of different lengths.\";\r\n};\r\n\r\nexport const equal = (wizData: WizData, wizData2: WizData): WizData => {\r\n  const expression = wizData.hex === wizData2.hex && wizData.bin === wizData2.bin;\r\n  return WizData.fromNumber(expression ? 1 : 0);\r\n};\r\n",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./lib-typedarrays\"), require(\"./enc-utf16\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./sha1\"), require(\"./sha256\"), require(\"./sha224\"), require(\"./sha512\"), require(\"./sha384\"), require(\"./sha3\"), require(\"./ripemd160\"), require(\"./hmac\"), require(\"./pbkdf2\"), require(\"./evpkdf\"), require(\"./cipher-core\"), require(\"./mode-cfb\"), require(\"./mode-ctr\"), require(\"./mode-ctr-gladman\"), require(\"./mode-ofb\"), require(\"./mode-ecb\"), require(\"./pad-ansix923\"), require(\"./pad-iso10126\"), require(\"./pad-iso97971\"), require(\"./pad-zeropadding\"), require(\"./pad-nopadding\"), require(\"./format-hex\"), require(\"./aes\"), require(\"./tripledes\"), require(\"./rc4\"), require(\"./rabbit\"), require(\"./rabbit-legacy\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    var tMsw;\n\t                    var tLsw;\n\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by Cédric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA1 = C_algo.SHA1;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA1\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA1,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        var keystream;\n\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        for (var i = data.sigBytes - 1; i >= 0; i--) {\n\t            if (((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t                data.sigBytes = i + 1;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            var t;\n\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            // Make sure the key length is valid (64, 128 or >= 192 bit)\n\t            if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {\n\t                throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');\n\t            }\n\n\t            // Extend the key according to the keying options defined in 3DES standard\n\t            var key1 = keyWords.slice(0, 2);\n\t            var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);\n\t            var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(key1));\n\t            this._des2 = DES.createEncryptor(WordArray.create(key2));\n\t            this._des3 = DES.createEncryptor(WordArray.create(key3));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","import WizData from \"@script-wiz/wiz-data\";\r\nimport { WizDataList } from \"../model\";\r\nimport { currentScope } from \"../utils\";\r\n\r\nexport const flowIf = (wizDataList: WizDataList): { flow: boolean[]; altFlow: boolean[] } => {\r\n  const lastStackData = wizDataList.main[wizDataList.main.length - 1];\r\n\r\n  const newExpression: boolean = lastStackData.hex === \"0x\" ? false : !!Number(lastStackData.hex);\r\n\r\n  const scope = currentScope(wizDataList);\r\n  const newFlow = scope ? [...wizDataList.flow, newExpression] : wizDataList.flow;\r\n  const newAltFlow = scope ? wizDataList.altFlow : [...wizDataList.altFlow, true];\r\n\r\n  return { flow: newFlow, altFlow: newAltFlow };\r\n};\r\n\r\nexport const flowNotIf = (wizDataList: WizDataList): { flow: boolean[]; altFlow: boolean[] } => {\r\n  const lastStackData = wizDataList.main[wizDataList.main.length - 1];\r\n  const newExpression: boolean = lastStackData.hex === \"0x\" ? true : !Number(lastStackData.hex);\r\n\r\n  const scope = currentScope(wizDataList);\r\n  const newFlow = scope ? [...wizDataList.flow, newExpression] : wizDataList.flow;\r\n  const newAltFlow = scope ? wizDataList.altFlow : [...wizDataList.altFlow, true];\r\n\r\n  return { flow: newFlow, altFlow: newAltFlow };\r\n};\r\n\r\nexport const flowElse = (wizDataList: WizDataList): { flow: boolean[]; altFlow: boolean[] } => {\r\n  const emptyAltFlow = wizDataList.altFlow.length === 0;\r\n\r\n  if (emptyAltFlow) {\r\n    let newFlow = [...wizDataList.flow];\r\n    newFlow.pop();\r\n    newFlow = [...newFlow, !currentScope(wizDataList)];\r\n\r\n    return { flow: newFlow, altFlow: wizDataList.altFlow };\r\n  } else {\r\n    const newAltFlow = [...wizDataList.altFlow];\r\n    const reversedAltExpression = false; // !stackDataList.altFlow[stackDataList.altFlow.length - 1];\r\n    newAltFlow.pop();\r\n    newAltFlow.push(reversedAltExpression);\r\n\r\n    return { flow: wizDataList.flow, altFlow: newAltFlow };\r\n  }\r\n};\r\n\r\nexport const flowEndIf = (wizDataList: WizDataList): { flow: boolean[]; altFlow: boolean[] } => {\r\n  const emptyAltFlow = wizDataList.altFlow.length === 0;\r\n  const newFlow = [...wizDataList.flow];\r\n  const newAltFlow = [...wizDataList.altFlow];\r\n\r\n  if (emptyAltFlow) {\r\n    return { flow: newFlow.splice(0, newFlow.length - 1), altFlow: newAltFlow };\r\n  } else {\r\n    return { flow: newFlow, altFlow: newAltFlow.splice(0, newAltFlow.length - 1) };\r\n  }\r\n};\r\n\r\nexport const flowVerify = (wizData: WizData): boolean => {\r\n  return wizData.hex === \"0x\" ? false : !!Number(wizData.hex);\r\n};\r\n","import WizData from \"@script-wiz/wiz-data\";\r\n\r\nexport const checkLockTimeVerify = (wizData: WizData): WizData => {\r\n  if (wizData.number !== undefined) {\r\n    return WizData.fromNumber(1);\r\n  }\r\n\r\n  throw \"Error: Invalid input: this operation requires a valid Script Number\";\r\n};\r\n\r\nexport const checkSequenceVerify = (wizData: WizData): WizData => {\r\n  if (wizData.number !== undefined) {\r\n    return WizData.fromNumber(1);\r\n  }\r\n\r\n  throw \"Error: Invalid input: this operation requires a valid Script Number\";\r\n};\r\n","import WizData from \"@script-wiz/wiz-data\";\r\n\r\nexport const concatenate = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData.hex === \"\" && wizData2.hex === \"\") return WizData.fromNumber(0);\r\n\r\n  return WizData.fromHex(wizData.hex + wizData2.hex);\r\n};\r\n\r\nexport const substr = (wizData: WizData, wizData2: WizData, wizData3: WizData): WizData => {\r\n  const message = wizData.hex;\r\n  const index = wizData2.number;\r\n  const size = wizData3.number;\r\n\r\n  if (index !== undefined && size !== undefined) {\r\n    const result = message.substr(index * 2, size * 2);\r\n\r\n    return WizData.fromHex(result);\r\n  }\r\n\r\n  throw \"Index and size must be number!\";\r\n};\r\n\r\nexport const right = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData2.number !== undefined) {\r\n    const message = wizData.hex;\r\n    const size = wizData2.number * 2;\r\n\r\n    if (size < 0) throw \"Error: Size can't be negative integer!\";\r\n    if (message.length < size) throw \"Error: Size can't higher than data length!\";\r\n    if (size === 0) return WizData.fromNumber(0);\r\n\r\n    const result = message.slice(size * -1);\r\n\r\n    return WizData.fromHex(result);\r\n  }\r\n\r\n  throw \"Size must be number!\";\r\n};\r\n\r\nexport const left = (wizData: WizData, wizData2: WizData): WizData => {\r\n  if (wizData2.number !== undefined) {\r\n    const message = wizData.hex;\r\n    const size = wizData2.number * 2;\r\n\r\n    if (size < 0) throw \"Error: Size can't be negative integer.!\";\r\n    if (message.length < size) throw \"Error: Size can't higher than data length!\";\r\n    if (size === 0) WizData.fromNumber(0);\r\n\r\n    const result = message.substr(0, size);\r\n\r\n    return WizData.fromHex(result);\r\n  }\r\n\r\n  throw \"Error: Size must be number!\";\r\n};\r\n\r\nexport const size = (wizData: WizData): WizData => {\r\n  const numberValue = wizData.hex.length / 2;\r\n  return WizData.fromNumber(numberValue);\r\n};\r\n\r\nexport const substrLazy = (wizData: WizData, wizData2: WizData, wizData3: WizData): WizData => {\r\n  if (wizData2.number !== undefined && wizData3.number !== undefined) {\r\n    const message = wizData.hex;\r\n    let index = wizData2.number * 2;\r\n    let length = wizData3.number * 2;\r\n\r\n    const messageSize = message.length;\r\n\r\n    if (index < 0) index = 0;\r\n\r\n    if (length < 0) length = 0;\r\n\r\n    if (index >= messageSize) WizData.fromNumber(0);\r\n\r\n    if (index + length > messageSize) {\r\n      length = messageSize - index;\r\n    }\r\n\r\n    const result = message.substr(index, length);\r\n\r\n    return WizData.fromHex(result);\r\n  }\r\n\r\n  throw \"Error: Index and size must be number!\";\r\n};\r\n","import WizData from \"@script-wiz/wiz-data\";\r\n\r\nexport const fromAltStack = (wizData: WizData): WizData => wizData;\r\n\r\nexport const twoDup = (wizData: WizData, wizData2: WizData): WizData[] => [wizData, wizData2];\r\n\r\nexport const threeDup = (wizData: WizData, wizData2: WizData, wizData3: WizData): WizData[] => [wizData, wizData2, wizData3];\r\n\r\nexport const twoOver = (wizData: WizData, wizData2: WizData): WizData[] => [wizData, wizData2];\r\n\r\nexport const rot = (wizData: WizData, wizData2: WizData, wizData3: WizData): WizData[] => [wizData2, wizData3, wizData];\r\n\r\nexport const twoRot = (wizData: WizData, wizData2: WizData, wizData3: WizData, wizData4: WizData, wizData5: WizData, wizData6: WizData): WizData[] => [\r\n  wizData3,\r\n  wizData4,\r\n  wizData5,\r\n  wizData6,\r\n  wizData,\r\n  wizData2,\r\n];\r\n\r\nexport const twoSwap = (wizData: WizData, wizData2: WizData, wizData3: WizData, wizData4: WizData): WizData[] => [wizData2, wizData, wizData4, wizData3];\r\n\r\nexport const depth = (length: number): WizData => WizData.fromNumber(length);\r\n\r\nexport const dup = (wizData: WizData): WizData => wizData;\r\n\r\nexport const ifDup = (wizData: WizData): WizData | {} => {\r\n  if (wizData.number !== undefined && wizData.number === 0) {\r\n    return {};\r\n  }\r\n\r\n  return wizData;\r\n};\r\n\r\nexport const nip = (wizData: WizData): WizData => wizData;\r\n\r\nexport const over = (wizData: WizData): WizData => wizData;\r\n\r\nexport const pick = (wizDataArray: WizData[], stackIndex: number): WizData[] => [...wizDataArray, wizDataArray.reverse()[stackIndex]];\r\n\r\nexport const roll = (wizDataArray: WizData[], stackIndex: number): WizData[] => {\r\n  const newWizDataArray: WizData[] = [...wizDataArray].reverse();\r\n  const currentItem: WizData = newWizDataArray[stackIndex];\r\n\r\n  newWizDataArray.splice(stackIndex, 1);\r\n  newWizDataArray.unshift(currentItem);\r\n\r\n  return newWizDataArray.reverse();\r\n};\r\n\r\nexport const swap = (wizData: WizData, wizData2: WizData): WizData[] => [wizData, wizData2];\r\n\r\nexport const tuck = (wizData: WizData, wizData2: WizData): WizData[] => [wizData2, wizData, wizData2];\r\n","import WizData from \"@script-wiz/wiz-data\";\r\n\r\nexport const compileFinalInput = (input: string): WizData => {\r\n  // HEX DATA INPUT\r\n  if (input.startsWith(\"0x\")) {\r\n    return WizData.fromHex(input);\r\n  }\r\n\r\n  if ((input.startsWith('\"') && input.endsWith('\"')) || (input.startsWith(\"'\") && input.endsWith(\"'\"))) {\r\n    const formattedInput = input.substr(1, input.length - 2);\r\n    return WizData.fromText(formattedInput);\r\n  }\r\n\r\n  // NUMBER INPUT\r\n  if (!isNaN(input as any)) {\r\n    return WizData.fromNumber(Number(input));\r\n  }\r\n\r\n  throw \"Compile Final Input Error: it is not a valid final input string!\";\r\n};\r\n","import WizData from \"@script-wiz/wiz-data\";\r\nimport { sha256 } from \"../core/crypto\";\r\nimport { toHexString } from \"../utils\";\r\nimport * as secp256k1 from \"secp256k1\";\r\nimport { commonOpcodes } from \"../opcodes/common\";\r\nimport { Taproot } from \"./model\";\r\nimport * as segwit_addr from \"../bech32/segwit_addr\";\r\n\r\nexport const tweakAdd = (pubkey: Uint8Array, tweak: Uint8Array): WizData => {\r\n  const tweaked = secp256k1.publicKeyTweakAdd(pubkey, tweak);\r\n  return WizData.fromHex(toHexString(tweaked));\r\n};\r\n\r\nexport const tagHash = (tag: string, data: WizData) => {\r\n  let hashedTag = sha256(WizData.fromText(tag)).toString();\r\n\r\n  hashedTag = hashedTag.concat(hashedTag);\r\n\r\n  hashedTag = hashedTag.concat(toHexString(data.bytes));\r\n\r\n  return sha256(WizData.fromHex(hashedTag)).toString();\r\n};\r\n\r\nexport const treeHelper = (script: WizData, version: string) => {\r\n  const scriptLength = WizData.fromNumber(script.hex.length / 2).hex;\r\n\r\n  const scriptData = version + scriptLength + script.hex;\r\n\r\n  const h = tagHash(\"TapLeaf\", WizData.fromHex(scriptData));\r\n\r\n  return { data: version + scriptLength + script.hex, h };\r\n};\r\n\r\n// export const getVersionTaggedPubKey = (pubkey: WizData): WizData => {\r\n//   const logic = pubkey.bytes[0] & 1;\r\n\r\n//   console.log(\"logic\", logic);\r\n//   if (logic === 1) {\r\n//     return WizData.fromHex(\"00\");\r\n//   }\r\n\r\n//   return WizData.fromNumber(1);\r\n// };\r\n\r\nexport const tapRoot = (pubKey: WizData, script: WizData, version: string = \"c0\"): Taproot => {\r\n  const { h } = treeHelper(script, version);\r\n\r\n  const tweak = tagHash(\"TapTweak\", WizData.fromHex(pubKey.hex + h));\r\n\r\n  const tweaked = tweakAdd(pubKey.bytes, WizData.fromHex(tweak).bytes);\r\n\r\n  const finalTweaked = tweaked.hex.substr(2);\r\n\r\n  const op1Hex = commonOpcodes.find((co) => co.word === \"OP_1\")?.hex.substr(2);\r\n\r\n  const bech32 = segwit_addr.encode(\"bc\", 1, WizData.fromHex(finalTweaked).bytes) || \"\";\r\n\r\n  return { scriptPubKey: WizData.fromHex(op1Hex + WizData.fromNumber(finalTweaked.length / 2).hex + finalTweaked), tweak: tweaked, bech32 };\r\n};\r\n","module.exports = require('./lib')(require('./lib/elliptic'))\n","const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n","// Copyright (c) 2017, 2021 Pieter Wuille\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport * as bech32 from \"./bech32\";\r\n\r\nfunction convertbits(data: any, frombits: any, tobits: any, pad: any) {\r\n  var acc = 0;\r\n  var bits = 0;\r\n  var ret = [];\r\n  var maxv = (1 << tobits) - 1;\r\n  for (var p = 0; p < data.length; ++p) {\r\n    var value = data[p];\r\n    if (value < 0 || value >> frombits !== 0) {\r\n      return null;\r\n    }\r\n    acc = (acc << frombits) | value;\r\n    bits += frombits;\r\n    while (bits >= tobits) {\r\n      bits -= tobits;\r\n      ret.push((acc >> bits) & maxv);\r\n    }\r\n  }\r\n  if (pad) {\r\n    if (bits > 0) {\r\n      ret.push((acc << (tobits - bits)) & maxv);\r\n    }\r\n  } else if (bits >= frombits || (acc << (tobits - bits)) & maxv) {\r\n    return null;\r\n  }\r\n  return ret;\r\n}\r\n\r\nfunction decode(hrp: string, addr: string) {\r\n  var bech32m = false;\r\n  var dec = bech32.decode(addr, bech32.encodings.BECH32);\r\n  if (dec === null) {\r\n    dec = bech32.decode(addr, bech32.encodings.BECH32M);\r\n    bech32m = true;\r\n  }\r\n  if (dec === null || dec.hrp !== hrp || dec.data.length < 1 || dec.data[0] > 16) {\r\n    return null;\r\n  }\r\n  var res = convertbits(dec.data.slice(1), 5, 8, false);\r\n  if (res === null || res.length < 2 || res.length > 40) {\r\n    return null;\r\n  }\r\n  if (dec.data[0] === 0 && res.length !== 20 && res.length !== 32) {\r\n    return null;\r\n  }\r\n  if (dec.data[0] === 0 && bech32m) {\r\n    return null;\r\n  }\r\n  if (dec.data[0] !== 0 && !bech32m) {\r\n    return null;\r\n  }\r\n  return { version: dec.data[0], program: res };\r\n}\r\n\r\nexport function encode(hrp: string, version: number, program: any) {\r\n  var enc = bech32.encodings.BECH32;\r\n  if (version > 0) {\r\n    enc = bech32.encodings.BECH32M;\r\n  }\r\n  var ret = bech32.encode(hrp, [version].concat(convertbits(program, 8, 5, true) as any), enc);\r\n  if (decode(hrp, ret) === null) {\r\n    return null;\r\n  }\r\n  return ret;\r\n}\r\n","// Copyright (c) 2017, 2021 Pieter Wuille\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nconst CHARSET = \"qpzry9x8gf2tvdw0s3jn54khce6mua7l\";\r\nconst GENERATOR = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\r\n\r\nexport const encodings = {\r\n  BECH32: \"bech32\",\r\n  BECH32M: \"bech32m\",\r\n};\r\n\r\nfunction getEncodingConst(enc: string) {\r\n  if (enc == encodings.BECH32) {\r\n    return 1;\r\n  } else if (enc == encodings.BECH32M) {\r\n    return 0x2bc830a3;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction polymod(values: string | any[]) {\r\n  var chk = 1;\r\n  for (var p = 0; p < values.length; ++p) {\r\n    var top = chk >> 25;\r\n    chk = ((chk & 0x1ffffff) << 5) ^ values[p];\r\n    for (var i = 0; i < 5; ++i) {\r\n      if ((top >> i) & 1) {\r\n        chk ^= GENERATOR[i];\r\n      }\r\n    }\r\n  }\r\n  return chk;\r\n}\r\n\r\nfunction hrpExpand(hrp: string) {\r\n  var ret = [];\r\n  var p;\r\n  for (p = 0; p < hrp.length; ++p) {\r\n    ret.push(hrp.charCodeAt(p) >> 5);\r\n  }\r\n  ret.push(0);\r\n  for (p = 0; p < hrp.length; ++p) {\r\n    ret.push(hrp.charCodeAt(p) & 31);\r\n  }\r\n  return ret;\r\n}\r\n\r\nfunction verifyChecksum(hrp: any, data: any, enc: string) {\r\n  return polymod(hrpExpand(hrp).concat(data)) === getEncodingConst(enc);\r\n}\r\n\r\nfunction createChecksum(hrp: any, data: any, enc: string) {\r\n  var values = hrpExpand(hrp).concat(data).concat([0, 0, 0, 0, 0, 0]);\r\n  var mod = polymod(values) ^ (getEncodingConst(enc) || 0);\r\n  var ret = [];\r\n  for (var p = 0; p < 6; ++p) {\r\n    ret.push((mod >> (5 * (5 - p))) & 31);\r\n  }\r\n  return ret;\r\n}\r\n\r\nexport function encode(hrp: string, data: any[], enc: any) {\r\n  var combined = data.concat(createChecksum(hrp, data, enc));\r\n  var ret = hrp + \"1\";\r\n  for (var p = 0; p < combined.length; ++p) {\r\n    ret += CHARSET.charAt(combined[p]);\r\n  }\r\n  return ret;\r\n}\r\n\r\nexport function decode(bechString: string, enc: any) {\r\n  var p;\r\n  var has_lower = false;\r\n  var has_upper = false;\r\n  for (p = 0; p < bechString.length; ++p) {\r\n    if (bechString.charCodeAt(p) < 33 || bechString.charCodeAt(p) > 126) {\r\n      return null;\r\n    }\r\n    if (bechString.charCodeAt(p) >= 97 && bechString.charCodeAt(p) <= 122) {\r\n      has_lower = true;\r\n    }\r\n    if (bechString.charCodeAt(p) >= 65 && bechString.charCodeAt(p) <= 90) {\r\n      has_upper = true;\r\n    }\r\n  }\r\n  if (has_lower && has_upper) {\r\n    return null;\r\n  }\r\n  bechString = bechString.toLowerCase();\r\n  var pos = bechString.lastIndexOf(\"1\");\r\n  if (pos < 1 || pos + 7 > bechString.length || bechString.length > 90) {\r\n    return null;\r\n  }\r\n  var hrp = bechString.substring(0, pos);\r\n  var data = [];\r\n  for (p = pos + 1; p < bechString.length; ++p) {\r\n    var d = CHARSET.indexOf(bechString.charAt(p));\r\n    if (d === -1) {\r\n      return null;\r\n    }\r\n    data.push(d);\r\n  }\r\n  if (!verifyChecksum(hrp, data, enc)) {\r\n    return null;\r\n  }\r\n  return { hrp: hrp, data: data.slice(0, data.length - 6) };\r\n}\r\n"],"sourceRoot":""}